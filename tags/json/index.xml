<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>json on 洞香春</title>
    <link>https://wdd.js.org/tags/json/</link>
    <description>Recent content in json on 洞香春</description>
    <image>
      <url>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 09 Feb 2018 13:27:15 +0800</lastBuildDate><atom:link href="https://wdd.js.org/tags/json/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>你不知道的JSON.stringify()妙用</title>
      <link>https://wdd.js.org/posts/2018/json-stringify-powerful/</link>
      <pubDate>Fri, 09 Feb 2018 13:27:15 +0800</pubDate>
      
      <guid>https://wdd.js.org/posts/2018/json-stringify-powerful/</guid>
      <description>1. 语法 JSON.stringify(value[, replacer[, space]]) 一般用法：
var user = {name: &amp;#39;andy&amp;#39;, isDead: false, age: 11, addr: &amp;#39;shanghai&amp;#39;}; JSON.stringify(user); &amp;#34;{&amp;#34;name&amp;#34;:&amp;#34;andy&amp;#34;,&amp;#34;isDead&amp;#34;:false,&amp;#34;age&amp;#34;:11,&amp;#34;addr&amp;#34;:&amp;#34;shanghai&amp;#34;}&amp;#34; 2. 扩展用法 2.1. replacer replacer可以是函数或者是数组。
功能1: 改变属性值 将isDead属性的值翻译成0或1，0对应false,1对应true
var user = {name: &amp;#39;andy&amp;#39;, isDead: false, age: 11, addr: &amp;#39;shanghai&amp;#39;}; JSON.stringify(user, function(key, value){ if(key === &amp;#39;isDead&amp;#39;){ return value === true ? 1 : 0; } return value; }); &amp;#34;{&amp;#34;name&amp;#34;:&amp;#34;andy&amp;#34;,&amp;#34;isDead&amp;#34;:0,&amp;#34;age&amp;#34;:11,&amp;#34;addr&amp;#34;:&amp;#34;shanghai&amp;#34;}&amp;#34; 功能2：删除某个属性 将isDead属性删除，如果replacer的返回值是undefined,那么该属性会被删除。
var user = {name: &amp;#39;andy&amp;#39;, isDead: false, age: 11, addr: &amp;#39;shanghai&amp;#39;}; JSON.</description>
    </item>
    
  </channel>
</rss>
