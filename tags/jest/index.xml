<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>jest on 洞香春</title>
    <link>https://wdd.js.org/tags/jest/</link>
    <description>Recent content in jest on 洞香春</description>
    <image>
      <url>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 16 Jul 2018 20:58:21 +0000</lastBuildDate><atom:link href="https://wdd.js.org/tags/jest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>jest jenkins搭建自动化测试CI教程</title>
      <link>https://wdd.js.org/posts/2018/yarn-jenkins-ci-tutorial/</link>
      <pubDate>Mon, 16 Jul 2018 20:58:21 +0000</pubDate>
      
      <guid>https://wdd.js.org/posts/2018/yarn-jenkins-ci-tutorial/</guid>
      <description>关于jest和jenkins集成，我走了一些弯路。之前一直用jenkins打包nodejs镜像。想做nodejs自动化接口测试时，我也按照打包镜像的套路走，感觉走到死胡同。网上搜jest jenkins integration, 感觉很多答案都不靠谱。终于自己走通了一遍。
1. 安装jenkins nodejs插件 地址：https://plugins.jenkins.io/nodejs
注意该插件要求jenkins版本不低于1.651.3 1.1. 安装方法 方法1：在jenkins插件管理，可选插件中搜索并安装 方法2：如果搜索不到nodejs, 可以在该插件的介绍页面选择latest.hpi, 下载这个文件，然后再插件管理》高级标签页面选择上传刚才的hpi文件。
1.2. 插件初始化设置 在全局工具管理页面，路径为/configureTools/,
点击Nodejs 安装这一栏，新增别名 选择Nodejs版本，建议不要最新版，最好和本地开发环境一样的版本即可 输入一些全局安装包，例如: yarn 最后别忘记点击保存 2. 创建一个任务 输入一个名称 选择FreeStyle风格 点击确定 3. 任务配置 3.1. 源码管理 源码管理当然选择私有部署的git仓库了 3.2. 触发器构建 记住方框里面的地址，这个地址需要填入到gilab响应仓库的settings&amp;gt;integrations&amp;gt;URL, 然后选择add webhook, 这边git一旦push, jenkins那边就会自动构建测试任务了。 【下图： 私有gitlab仓库集成设置】
3.3. 构建环境选择nodejs 3.4. 构建 选择执行shell 在命令中输入如下代码 注意：第一次构建可能会很慢，因为要安装nodejs, npm, yarn之类的软件
echo $PATH // 输出 path pwd // 输入当前目录 node --version // 输出node版本 yarn --version // 输出yarn版本 yarn --registry=https://registry.</description>
    </item>
    
  </channel>
</rss>
