<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Stompjs on 洞香春</title>
    <link>https://wdd.js.org/tags/stompjs/</link>
    <description>Recent content in Stompjs on 洞香春</description>
    <image>
      <title>洞香春</title>
      <url>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.143.1</generator>
    <language>en</language>
    <lastBuildDate>Tue, 20 Mar 2018 22:09:34 +0800</lastBuildDate>
    <atom:link href="https://wdd.js.org/tags/stompjs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在实践中我遇到stompjs, websocket和nginx的问题与总结</title>
      <link>https://wdd.js.org/posts/2018/03/stomp-over-websocket/</link>
      <pubDate>Tue, 20 Mar 2018 22:09:34 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/stomp-over-websocket/</guid>
      <description>&lt;h1 id=&#34;1-aws-ec2-不支持websocket&#34;&gt;1. AWS EC2 不支持WebSocket&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.menubar.io/websockets-aws-elasticbeanstalk-ec2/&#34;&gt;直达解决方案 英文版&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单说一下思路：WebSocket底层基于TCP协议的，如果你的服务器基于HTTP协议暴露80端口，那WebSocket肯定无法连接。&lt;code&gt;你只要将HTTP协议修改成TCP协议就可以了。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180320223231_T2gHyb_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后是安全组的配置：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180320223255_pGGCWF_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;同样如果使用了NGINX作为反向代理，那么NGINX也需要做配置的。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// https://gist.githubusercontent.com/unshift/324be6a8dc9e880d4d670de0dc97a8ce/raw/29507ed6b3c9394ecd7842f9d3228827cffd1c58/elasticbeanstalk_websockets

files:
    &amp;#34;/etc/nginx/conf.d/01_websockets.conf&amp;#34; :
        mode: &amp;#34;000644&amp;#34;
        owner: root
        group: root
        content : |
            upstream nodejs {
                server 127.0.0.1:8081;
                keepalive 256;
            }

            server {
                listen 8080;

                location / {
                    proxy_pass  http://nodejs;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection &amp;#34;upgrade&amp;#34;;
                    proxy_http_version 1.1;
                    proxy_set_header        Host            $host;
                    proxy_set_header        X-Real-IP       $remote_addr;
                    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                }
            }

    &amp;#34;/opt/elasticbeanstalk/hooks/appdeploy/enact/41_remove_eb_nginx_confg.sh&amp;#34;:
        mode: &amp;#34;000755&amp;#34;
        owner: root
        group: root
        content : |
            mv /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf.old
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-nginx做反向代理是需要注意的问题&#34;&gt;2. NGINX做反向代理是需要注意的问题&lt;/h1&gt;
&lt;p&gt;如果排除所有问题后，那剩下的问题可以考虑出在反向代理上，一下有几点是可以考虑的。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
