<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>文档 on 洞香春</title>
    <link>https://wdd.js.org/tags/%E6%96%87%E6%A1%A3/</link>
    <description>Recent content in 文档 on 洞香春</description>
    <image>
      <title>洞香春</title>
      <url>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.143.1</generator>
    <language>en</language>
    <lastBuildDate>Fri, 09 Feb 2018 12:52:57 +0800</lastBuildDate>
    <atom:link href="https://wdd.js.org/tags/%E6%96%87%E6%A1%A3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何写好技术文档?</title>
      <link>https://wdd.js.org/posts/2018/02/how-to-write-a-technical-document/</link>
      <pubDate>Fri, 09 Feb 2018 12:52:57 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/how-to-write-a-technical-document/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文来自于公司内部的一个分享。
在文档方面，对内的一些接口文档主要是用swagger来写的。虽然可以在线测试，比较方便。但是也存在着一些更新不及时，swgger文档无法导出成文件的问题。
在对外提供的文档方面：我主要负责做一个浏览器端的一个js sdk。文档还算可以&lt;a href=&#34;https://github.com/wangduanduan/wellclient&#34;&gt;github地址&lt;/a&gt;，所以想把一些写文档的心得分享给大家。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;1-衡量好文档的唯一标准是什么&#34;&gt;1. 衡量好文档的唯一标准是什么？&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209125351_QEkv8l_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;Martin(Bob大叔)曾在《代码整洁之道》一书打趣地说：当你的代码在做 Code Review 时，审查者要是愤怒地吼道：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;“What the fuck is this shit?”
“Dude, What the fuck！”
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;等言辞激烈的词语时，那说明你写的代码是 Bad Code，如果审查者只是漫不经心的吐出几个&lt;/p&gt;
&lt;p&gt;&lt;code&gt;“What the fuck?”，&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209125409_sQvHfi_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;那说明你写的是 Good Code。衡量代码质量的唯一标准就&lt;code&gt;是每分钟骂出“WTF” 的频率&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;衡量文档的标准也是如此。&lt;/p&gt;
&lt;h1 id=&#34;2-好文档的特点&#34;&gt;2. 好文档的特点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;简洁&lt;/code&gt;：一句话可以说完的事情，就不要分两句话来说。并不是文档越厚越好，太厚的文档大多没人看。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;准确&lt;/code&gt;: 字段类型，默认值，备注，是否必填等属性说明。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;逻辑性&lt;/code&gt;: 文档如何划分？ 利于查看。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;demo胜千言&lt;/code&gt;: 好的demo胜过各种字段说明，可以复制下来直接使用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;读者心&lt;/code&gt;: 从读者的角度考虑, 方法尽量简洁。可以传递一个参数搞定的事情，绝对不要让用户去传两个参数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;及时更新&lt;/code&gt;: 不更新的文档比bug更严重。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;向后兼容&lt;/code&gt;: 不要随意废弃已有的接口或者某个字段，除非你考虑到这样做的后果。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;建立文档词汇表&lt;/code&gt;：每个概念只有一个名字，不要随意起名字，名不正则言不顺。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;格式统一&lt;/code&gt;：例如时间格式。我曾见过2017-09-12 09:32:23, 或2017.09.12 09:32:23或2017.09.12 09:32:23。变量名user_name, userName。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;使用专业词语&lt;/code&gt;：不要过于口语化&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-总结-写出好文档要有以下四点&#34;&gt;3. 总结: 写出好文档要有以下四点&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;逻辑性&lt;/code&gt;：便于查找&lt;/li&gt;
&lt;li&gt;&lt;code&gt;专业性&lt;/code&gt;: 值得信赖，质量保证&lt;/li&gt;
&lt;li&gt;&lt;code&gt;责任心&lt;/code&gt;：及时更新，准确性，向后兼容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;读者心&lt;/code&gt;：你了解的东西，别人可能并不清楚。从读者的角度去考虑，他们需要什么，而不是一味去强调你能提供什么。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;4-写文档的工具&#34;&gt;4. 写文档的工具&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;markdown: 方便快捷，可以导出各种格式的文件&lt;/li&gt;
&lt;li&gt;swagger: 功能强大，需要部署，不方便传递文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5-markdown-工具推荐&#34;&gt;5. markdown 工具推荐&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://leanote.com/&#34;&gt;蚂蚁笔记&lt;/a&gt; 这是我正使用的。
&lt;ul&gt;
&lt;li&gt;全平台（mac windows ios）有客户端，和浏览器端&lt;/li&gt;
&lt;li&gt;笔记可以直接公布为博客&lt;/li&gt;
&lt;li&gt;支持独立域名&lt;/li&gt;
&lt;li&gt;标签很好用&lt;/li&gt;
&lt;li&gt;支持思维导图&lt;/li&gt;
&lt;li&gt;支持历史记录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zybuluo.com/mdeditor#411452&#34;&gt;cmd-markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;有道云笔记&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6-文档之外&#34;&gt;6. 文档之外&lt;/h1&gt;
&lt;p&gt;公司有个同事，我曾问他使用什么搜索一些技术文档，他说用百度。作为一个翻墙老司机，我惊诧的问他：你为什么不用谷歌去搜索。他说他不会翻墙。我只能呵呵一笑。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
