<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>linux on 洞香春</title>
    <link>https://wdd.js.org/tags/linux/</link>
    <description>Recent content in linux on 洞香春</description>
    <image>
      <url>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 11 Dec 2022 14:12:08 +0800</lastBuildDate><atom:link href="https://wdd.js.org/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows更新之后 Linux报错 Error 0x80040154</title>
      <link>https://wdd.js.org/posts/2022/12/wsl-error-0x80040154-after-windows-update/</link>
      <pubDate>Sun, 11 Dec 2022 14:12:08 +0800</pubDate>
      
      <guid>https://wdd.js.org/posts/2022/12/wsl-error-0x80040154-after-windows-update/</guid>
      <description>最近我更新了Windows, 之后我的Windows Linux子系统Ubuntu打开就报错了
报错截图如下：
在网上搜了一边之后，很多教程都是说要打开Windows的子系统的功能。 但是由于我已经使用Linux子系统已经很长时间了，我觉得应该和这个设置无关。
而且我检查了一下，我的这个设置本来就是打开的。
然后我在Powershell里输入 wsl， 这个命令都直接报错了。
PS C:\WINDOWS\system32&amp;gt; wsl --install 没有注册类 Error code: Wsl/0x80040154 然后我到wsl的github上搜索类似的问题，查到有很多类似的描述，都是升级之后遇到的问题，我试了好几个方式，都没用。
但是最后这个有用了！
https://github.com/microsoft/WSL/issues/9064
解决的方案就是：
卸载已经安装过的Windows SubSystem For Linux Preview 然后再Windows应用商店重新安装这个应用 Windows的升级之后，可能Windows Linux子系统组建也更新了某些了内容。
所以需要重装。
这里不得不吐槽一下WSL, 这个工具仅仅是个玩具。随着windows更新，这个工具随时都会崩溃，最好不要太依赖它。</description>
    </item>
    
    <item>
      <title>Linux 日志系统简述</title>
      <link>https://wdd.js.org/posts/2022/10/linux-journal/</link>
      <pubDate>Wed, 26 Oct 2022 08:44:12 +0800</pubDate>
      
      <guid>https://wdd.js.org/posts/2022/10/linux-journal/</guid>
      <description>1. 序言 日志文件包含系统的运行信息，包括内核、服务、应用程序等的日志。日志在分析系统故障、排查应用问题等方面，有着至关重要的作用。
2. 哪些进程负责管理日志？ 默认情况下，系统上有两个守护进程服务管理日志。journald和rsyslogd。
journald是systemd的一个组件，journald的负责收集日志，日志可以来自
Syslog日志 内核日志 初始化内存日志 启动日志 所有服务写到标准输出和标准错误的日志 journal收集并整理收到的日志，使其易于被使用。
有以下几点需要注意
默认情况下，journal的日志是不会持久化的。 journal的日志是二进制的格式，并不能使用文本查看工具，例如cat, 或者vim去分析。journal的日志需要用journalctl命令去读取。 journald会把日志写到一个socket中，rsyslog可以通过这个socket来获取日志，然后去写文件。
3. 日志文件文件位置 日志文件位置 /var/log/ 目录 4. 日志配置文件位置 /etc/rsyslog.conf rsyslogd配置文件 /etc/logrotate.conf 日志回滚的相关配置 /etc/systemd/journald.conf journald的配置文件 5. rsyslog.conf 5.1. 模块加载 注意 imjournal就是用来负责访问journal中的日志 imuxsock 提供本地日志输入支持，例如使用logger命令输入日志 $ModLoad imuxsock # provides support for local system logging (e.g. via logger command) $ModLoad imjournal # provides access to the systemd journal 5.2. 过滤 5.2.1. 优先级过滤 **模式：FACILITY.**PRIORITY
设备(FACILITY): kern (0), user (1), mail (2), daemon (3), auth (4), syslog (5), lpr (6), news (7), cron (8), authpriv (9), ftp (10), and local0 through local7 (16 - 23).</description>
    </item>
    
  </channel>
</rss>
