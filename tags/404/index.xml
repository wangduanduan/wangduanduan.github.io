<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>404 on 洞香春</title>
    <link>https://wdd.js.org/tags/404/</link>
    <description>Recent content in 404 on 洞香春</description>
    <image>
      <title>洞香春</title>
      <url>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.143.1</generator>
    <language>en</language>
    <lastBuildDate>Thu, 09 Nov 2023 20:49:44 +0800</lastBuildDate>
    <atom:link href="https://wdd.js.org/tags/404/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vite React Route URL含有.时，路径无法正常匹配</title>
      <link>https://wdd.js.org/posts/2023/vite-react-route-url-dot-404/</link>
      <pubDate>Thu, 09 Nov 2023 20:49:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/vite-react-route-url-dot-404/</guid>
      <description>&lt;p&gt;今天遇到一个奇怪的问题，react-router的路径匹配无法正常工作，反而向vite的dev server发送了GET请求，这个请求报错404。页面直接无法访问。&lt;/p&gt;
&lt;p&gt;按理说这种前端路由的框架应该不需要向后段发送请求的。&lt;/p&gt;
&lt;p&gt;后来我怀疑是不是代理的问题，但是只是部分页面无法访问，所以排出这个选项。&lt;/p&gt;
&lt;p&gt;随后我的系统又收到一条测试数据，这条测试数据却能够正常跳转。&lt;/p&gt;
&lt;p&gt;我仔细的对别了两个不同的url，发现有问题的那个url包含了一个英文字符&lt;code&gt;.&lt;/code&gt;,  所以我怀疑是react-router的路径匹配有问题。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/call/2023-11-09/nlLBs32pp.2oXhnY6xzmYBCnjhYUkc7Z
/call/2023-11-09/fYqZKTGHBFVCz4iC5irulFc83giH9bsa	
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我的第一反应是react-router对于动态的路径，是有字符要求的。翻阅官方文档后，没有发现类似的描述。&lt;/p&gt;
&lt;p&gt;然后我在react-router的issue列表上查找有没有人提出类似的问题，发现了 &lt;a href=&#34;https://github.com/remix-run/react-router/issues/8389&#34;&gt;[Bug]: paths with dynamic parameters do not work correctly when there is a dot in the url&lt;/a&gt;,&lt;/p&gt;
&lt;p&gt;紧接着有人分析，说这个问题并不是react-router上的，而是出在vite上。 vite的项目上也有对应的issue反应这个问题。&lt;/p&gt;
&lt;h1 id=&#34;解决方案&#34;&gt;解决方案&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;方案1: 升级vite 到5.x， 由于当前稳定的还是4.x的vite, 所以这个方案改动太大，放弃&lt;/li&gt;
&lt;li&gt;方案2: 在匹配路径最后加上&lt;code&gt;/&lt;/code&gt;, 也就是原本的&lt;code&gt;/a.b&lt;/code&gt;要改成&lt;code&gt;/a.b/&lt;/code&gt;, 我试了这个方案，是有效的。&lt;/li&gt;
&lt;li&gt;方案3: 使用这个专门用来解决这个问题的插件， &lt;a href=&#34;https://github.com/ivesia/vite-plugin-rewrite-all&#34;&gt;https://github.com/ivesia/vite-plugin-rewrite-all&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;深入分析&#34;&gt;深入分析&lt;/h1&gt;
&lt;p&gt;路径带有点，一般可能认为是一个静态资源，例如&lt;code&gt;a.js, b.css&lt;/code&gt;之类的，所以vite会把符合这个模式的路径直接向后段发送请求，去获取静态资源，而不是去匹配一个组件。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/remix-run/react-router/issues/8389&#34;&gt;https://github.com/remix-run/react-router/issues/8389&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite/issues/2415&#34;&gt;https://github.com/vitejs/vite/issues/2415&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite/issues/11282&#34;&gt;https://github.com/vitejs/vite/issues/11282&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite/issues/2628&#34;&gt;https://github.com/vitejs/vite/issues/2628&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite/pull/2191/files&#34;&gt;https://github.com/vitejs/vite/pull/2191/files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bripkens/connect-history-api-fallback&#34;&gt;https://github.com/bripkens/connect-history-api-fallback&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
