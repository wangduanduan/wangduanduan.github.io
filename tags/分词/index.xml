<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>分词 on 洞香春</title>
    <link>https://wdd.js.org/tags/%E5%88%86%E8%AF%8D/</link>
    <description>Recent content in 分词 on 洞香春</description>
    <image>
      <url>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 08 Feb 2018 09:23:37 +0000</lastBuildDate><atom:link href="https://wdd.js.org/tags/%E5%88%86%E8%AF%8D/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>前端小白的python实战 报纸分词排序</title>
      <link>https://wdd.js.org/posts/2018/python-paper-word-split/</link>
      <pubDate>Thu, 08 Feb 2018 09:23:37 +0000</pubDate>
      
      <guid>https://wdd.js.org/posts/2018/python-paper-word-split/</guid>
      <description>先看效果：
1. 环境 win7 64位 python 3.5 2. 目标 抓取一篇报纸，并提取出关键字，然后按照出现次数排序，用echarts在页面上显示出来。
3. 工具选择 因为之前对nodejs的相关工具比较熟悉，在用python的时候，也想有类似的工具。所以就做了一个对比的表格。
功能 nodejs版 python版 http工具 request requests 中文分词工具 node-segment, nodejieba(一直没有安装成功过) jieba(分词准确度比node-segment好) DOM解析工具 cheeio pyquery(这两个工具都是有类似jQuery那种选择DOM的接口，很方便) 函数编程工具 underscore.js underscore.py(underscore来处理集合比较方便) 服务器 express flask 4. 开始的噩梦：中文乱码 感觉每个学python的人都遇到过中文乱码的问题。我也不例外。
首先要抓取网页，但是网页在控制台输出的时候，中文总是乱码。搞了好久，搞得我差点要放弃python。最终找到解决方法。 解决python3 UnicodeEncodeError: &amp;lsquo;gbk&amp;rsquo; codec can&amp;rsquo;t encode character &amp;lsquo;\xXX&amp;rsquo; in position XX
过程很艰辛，但是从中也学到很多知识。
import io import sys sys.stdout = io.TextIOWrapper(sys.stoodout.buffer,encoding=&amp;#39;gb18030&amp;#39;) 5. 函数式编程： 顺享丝滑 #filename word_rank.py import requests import io import re import sys import jieba as _jieba # 中文分词比较优秀的一个库 from pyquery import PyQuery as pq #类似于jquery、cheerio的库 from underscore import _ # underscore.</description>
    </item>
    
  </channel>
</rss>
