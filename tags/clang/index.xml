<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Clang on 洞香春</title>
    <link>https://wdd.js.org/tags/clang/</link>
    <description>Recent content in Clang on 洞香春</description>
    <image>
      <title>洞香春</title>
      <url>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.143.1</generator>
    <language>en</language>
    <lastBuildDate>Sat, 28 May 2022 12:35:26 +0800</lastBuildDate>
    <atom:link href="https://wdd.js.org/tags/clang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C和gdb调试</title>
      <link>https://wdd.js.org/posts/2022/05/c-and-gdb/</link>
      <pubDate>Sat, 28 May 2022 12:35:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/05/c-and-gdb/</guid>
      <description>&lt;h1 id=&#34;开启coredump&#34;&gt;开启coredump&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#如果该命令的返回值是0，则表示不开启coredump
ulimit -c

# 开启coredump
ulimit -c unlimited
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;准备c文件&#34;&gt;准备c文件&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;


void crash() {
    char * p = NULL;
    *p = 0;
}

int main(){
    printf(&amp;#34;hello world 1&amp;#34;);
    int phone [4];
    phone[232] = 12;
    crash();
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;编译执行&#34;&gt;编译执行&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gcc -g  hello.c -o hello
./hello
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后程序崩溃，产生core文件。&lt;/p&gt;
&lt;h1 id=&#34;gdb分析&#34;&gt;gdb分析&lt;/h1&gt;
&lt;p&gt;gdb 启动的二进制文件 core文件&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gdb ./hello ./core
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后输入： bt full 可以查看到更详细的信息&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  c-sandbox gdb ./hello ./core
GNU gdb (Raspbian 7.12-6) 7.12.0.20161007-git
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type &amp;#34;show copying&amp;#34;
and &amp;#34;show warranty&amp;#34; for details.
This GDB was configured as &amp;#34;arm-linux-gnueabihf&amp;#34;.
Type &amp;#34;show configuration&amp;#34; for configuration details.
For bug reporting instructions, please see:
&amp;lt;http://www.gnu.org/software/gdb/bugs/&amp;gt;.
Find the GDB manual and other documentation resources online at:
&amp;lt;http://www.gnu.org/software/gdb/documentation/&amp;gt;.
For help, type &amp;#34;help&amp;#34;.
Type &amp;#34;apropos word&amp;#34; to search for commands related to &amp;#34;word&amp;#34;...
Reading symbols from ./hello...done.
[New LWP 25571]
Core was generated by `./hello&amp;#39;.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0001045c in crash () at hello.c:6
6           *p = 0;
(gdb) bt full
#0  0x0001045c in crash () at hello.c:6
        p = 0x0
#1  0x00010490 in main () at hello.c:13
        phone = {66328, 0, 0, 0}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
