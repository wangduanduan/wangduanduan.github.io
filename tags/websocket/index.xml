<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>WebSocket on 洞香春</title>
    <link>https://wdd.js.org/tags/websocket/</link>
    <description>Recent content in WebSocket on 洞香春</description>
    <image>
      <title>洞香春</title>
      <url>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.143.1</generator>
    <language>en</language>
    <lastBuildDate>Thu, 29 Mar 2018 20:35:38 +0800</lastBuildDate>
    <atom:link href="https://wdd.js.org/tags/websocket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WebSocket断开原因分析</title>
      <link>https://wdd.js.org/posts/2018/03/websocket-close-reasons/</link>
      <pubDate>Thu, 29 Mar 2018 20:35:38 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/websocket-close-reasons/</guid>
      <description>&lt;h1 id=&#34;1-把错误打印出来&#34;&gt;1. 把错误打印出来&lt;/h1&gt;
&lt;p&gt;WebSocket断开的原因有很多，最好在WebSocket断开时，将错误打印出来。&lt;/p&gt;
&lt;p&gt;在线demo地址：https://wdd.js.org/websocket-demos/&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180425112232_cxPVAD_Jietu20180425-112142.jpeg&#34;&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ws.onerror = function (e) {
  console.log(&amp;#39;WebSocket发生错误: &amp;#39; + e.code)
  console.log(e)
}
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;如果你想自己玩玩WebSocket, 但是你又不想自己部署一个WebSocket服务器，你可以使用&lt;code&gt;ws = new WebSocket(&#39;wss://echo.websocket.org/&#39;)&lt;/code&gt;, 你向echo.websocket.org发送消息，它会回复你同样的消息。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;2-重要信息错误状态码&#34;&gt;2. 重要信息错误状态码&lt;/h1&gt;
&lt;p&gt;WebSocket断开时，会触发&lt;code&gt;CloseEvent&lt;/code&gt;, CloseEvent会在连接关闭时发送给使用 WebSockets 的客户端. 它在 WebSocket 对象的 onclose 事件监听器中使用。CloseEvent的code字段表示了WebSocket断开的原因。可以从该字段中分析断开的原因。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180329204553_TjCFdu_Jietu20180329-204536.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-关闭状态码表&#34;&gt;3. 关闭状态码表&lt;/h1&gt;
&lt;p&gt;一般来说&lt;code&gt;1006&lt;/code&gt;的错误码出现的情况比较常见，该错误码一般出现在断网时。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;状态码&lt;/th&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;0–999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;保留段, 未使用.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1000&lt;/td&gt;
          &lt;td&gt;CLOSE_NORMAL&lt;/td&gt;
          &lt;td&gt;正常关闭; 无论为何目的而创建, 该链接都已成功完成任务.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1001&lt;/td&gt;
          &lt;td&gt;CLOSE_GOING_AWAY&lt;/td&gt;
          &lt;td&gt;终端离开, 可能因为服务端错误, 也可能因为浏览器正从打开连接的页面跳转离开.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1002&lt;/td&gt;
          &lt;td&gt;CLOSE_PROTOCOL_ERROR&lt;/td&gt;
          &lt;td&gt;由于协议错误而中断连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1003&lt;/td&gt;
          &lt;td&gt;CLOSE_UNSUPPORTED&lt;/td&gt;
          &lt;td&gt;由于接收到不允许的数据类型而断开连接 (如仅接收文本数据的终端接收到了二进制数据).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1004&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;保留&lt;/code&gt;. 其意义可能会在未来定义.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1005&lt;/td&gt;
          &lt;td&gt;CLOSE_NO_STATUS&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;保留&lt;/code&gt;.  表示没有收到预期的状态码.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;1006&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;CLOSE_ABNORMAL&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;保留&lt;/code&gt;. 用于期望收到状态码时连接非正常关闭 (也就是说, 没有发送关闭帧).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1007&lt;/td&gt;
          &lt;td&gt;Unsupported Data&lt;/td&gt;
          &lt;td&gt;由于收到了格式不符的数据而断开连接 (如文本消息中包含了非 UTF-8 数据).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1008&lt;/td&gt;
          &lt;td&gt;Policy Violation&lt;/td&gt;
          &lt;td&gt;由于收到不符合约定的数据而断开连接. 这是一个通用状态码, 用于不适合使用 1003 和 1009 状态码的场景.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1009&lt;/td&gt;
          &lt;td&gt;CLOSE_TOO_LARGE&lt;/td&gt;
          &lt;td&gt;由于收到过大的数据帧而断开连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1010&lt;/td&gt;
          &lt;td&gt;Missing Extension&lt;/td&gt;
          &lt;td&gt;客户端期望服务器商定一个或多个拓展, 但服务器没有处理, 因此客户端断开连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1011&lt;/td&gt;
          &lt;td&gt;Internal Error&lt;/td&gt;
          &lt;td&gt;客户端由于遇到没有预料的情况阻止其完成请求, 因此服务端断开连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1012&lt;/td&gt;
          &lt;td&gt;Service Restart&lt;/td&gt;
          &lt;td&gt;服务器由于重启而断开连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1013&lt;/td&gt;
          &lt;td&gt;Try Again Later&lt;/td&gt;
          &lt;td&gt;服务器由于临时原因断开连接, 如服务器过载因此断开一部分客户端连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1014&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;由 WebSocket标准保留以便未来使用.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1015&lt;/td&gt;
          &lt;td&gt;TLS Handshake&lt;/td&gt;
          &lt;td&gt;保留. 表示连接由于无法完成 TLS 握手而关闭 (例如无法验证服务器证书).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1016–1999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;由 WebSocket标准保留以便未来使用.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2000–2999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;由 WebSocket拓展保留使用.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3000–3999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;可以由库或框架使用.? 不应由应用使用. 可以在 IANA 注册, 先到先得.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4000–4999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;可以由应用使用.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;4-其他注意事项&#34;&gt;4. 其他注意事项&lt;/h1&gt;
&lt;p&gt;如果你的服务所在的域是HTTPS的，那么使用的WebSocket协议也必须是&lt;code&gt;wss&lt;/code&gt;, 而不能是&lt;code&gt;ws&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>在实践中我遇到stompjs, websocket和nginx的问题与总结</title>
      <link>https://wdd.js.org/posts/2018/03/stomp-over-websocket/</link>
      <pubDate>Tue, 20 Mar 2018 22:09:34 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/stomp-over-websocket/</guid>
      <description>&lt;h1 id=&#34;1-aws-ec2-不支持websocket&#34;&gt;1. AWS EC2 不支持WebSocket&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.menubar.io/websockets-aws-elasticbeanstalk-ec2/&#34;&gt;直达解决方案 英文版&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单说一下思路：WebSocket底层基于TCP协议的，如果你的服务器基于HTTP协议暴露80端口，那WebSocket肯定无法连接。&lt;code&gt;你只要将HTTP协议修改成TCP协议就可以了。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180320223231_T2gHyb_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后是安全组的配置：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180320223255_pGGCWF_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;同样如果使用了NGINX作为反向代理，那么NGINX也需要做配置的。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// https://gist.githubusercontent.com/unshift/324be6a8dc9e880d4d670de0dc97a8ce/raw/29507ed6b3c9394ecd7842f9d3228827cffd1c58/elasticbeanstalk_websockets

files:
    &amp;#34;/etc/nginx/conf.d/01_websockets.conf&amp;#34; :
        mode: &amp;#34;000644&amp;#34;
        owner: root
        group: root
        content : |
            upstream nodejs {
                server 127.0.0.1:8081;
                keepalive 256;
            }

            server {
                listen 8080;

                location / {
                    proxy_pass  http://nodejs;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection &amp;#34;upgrade&amp;#34;;
                    proxy_http_version 1.1;
                    proxy_set_header        Host            $host;
                    proxy_set_header        X-Real-IP       $remote_addr;
                    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                }
            }

    &amp;#34;/opt/elasticbeanstalk/hooks/appdeploy/enact/41_remove_eb_nginx_confg.sh&amp;#34;:
        mode: &amp;#34;000755&amp;#34;
        owner: root
        group: root
        content : |
            mv /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf.old
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-nginx做反向代理是需要注意的问题&#34;&gt;2. NGINX做反向代理是需要注意的问题&lt;/h1&gt;
&lt;p&gt;如果排除所有问题后，那剩下的问题可以考虑出在反向代理上，一下有几点是可以考虑的。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
