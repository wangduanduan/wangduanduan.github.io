<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>shell on 洞香春</title>
    <link>https://wdd.js.org/tags/shell/</link>
    <description>Recent content in shell on 洞香春</description>
    <image>
      <url>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 28 May 2022 12:39:50 +0800</lastBuildDate><atom:link href="https://wdd.js.org/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shell 教程技巧</title>
      <link>https://wdd.js.org/posts/2022/shell-101/</link>
      <pubDate>Sat, 28 May 2022 12:39:50 +0800</pubDate>
      
      <guid>https://wdd.js.org/posts/2022/shell-101/</guid>
      <description>复制文本到剪贴板 sudo apt install xclip vim ~/.zshrc
alias copy=&amp;#39;xclip -selection clipboard&amp;#39; 这样我们就可以用copy命令来考本文件内容到系统剪贴板了。
copy aaa.txt 判断工作区是否clean if [ -z &amp;#34;$(git status --porcelain)&amp;#34; ]; then # Working directory clean else # Uncommitted changes fi </description>
    </item>
    
    <item>
      <title>linux常用命令使用场景总结</title>
      <link>https://wdd.js.org/posts/2018/linux-common-cmds/</link>
      <pubDate>Wed, 31 Jan 2018 09:58:33 +0000</pubDate>
      
      <guid>https://wdd.js.org/posts/2018/linux-common-cmds/</guid>
      <description>1. lsof: 根据端口号查监听的进程号 参考
使用模型：lsof -i :port
已知某服务占用8088端口，请查出使用该端口的进程号
lsof -i :8088 lsof（list open files）是一个查看当前系统文件的工具。在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。如传输控制协议 (TCP) 和用户数据报协议 (UDP) 套接字等，系统在后台都为该应用程序分配了一个文件描述符，该文件描述符提供了大量关于这个应用程序本身的信息。lsof命令详情
2. grep: 搜索神器 参考： GNU Grep 3.0
--color:高亮显示匹配到的字符串 -v：显示不能被pattern匹配到的 -i：忽略字符大小写 -o：仅显示匹配到的字符串 -q：静默模式，不输出任何信息 -A#：after，匹配到的后#行 -B#：before，匹配到的前#行 -C#：context，匹配到的前后各#行 -E：使用ERE，支持使用扩展的正则表达式 －c：只输出匹配行的计数。 －I：不区分大 小写(只适用于单字符)。 －h：查询多文件时不显示文件名。 －l：查询多文件时只输出包含匹配字符的文件名。 －n：显示匹配行及 行号。 - m: 匹配多少个关键词之后就停止搜索 －s：不显示不存在或无匹配文本的错误信息。 －v：显示不包含匹配文本的所有行。 2.1. 普通：搜索trace.log 中含有ERROR字段的日志 grep ERROR trace.log 2.2. 输出文件：可以将日志输出文件中 grep ERROR trace.log &amp;gt; error.log
2.3. 反向：搜索不包含ERROR字段的日志 grep -v ERROR trace.log
2.4. 向前：搜索包含ERROR,并且显示ERROR前10行的日志 grep -B 10 ERROR trace.</description>
    </item>
    
  </channel>
</rss>
