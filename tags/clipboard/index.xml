<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Clipboard on 洞香春</title>
    <link>https://wdd.js.org/tags/clipboard/</link>
    <description>Recent content in Clipboard on 洞香春</description>
    <image>
      <title>洞香春</title>
      <url>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.143.1</generator>
    <language>en</language>
    <lastBuildDate>Wed, 14 Mar 2018 14:19:12 +0800</lastBuildDate>
    <atom:link href="https://wdd.js.org/tags/clipboard/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>前端剪贴板复制功能实现原理</title>
      <link>https://wdd.js.org/posts/2018/03/clipboard-copy-tutorial/</link>
      <pubDate>Wed, 14 Mar 2018 14:19:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/clipboard-copy-tutorial/</guid>
      <description>&lt;h1 id=&#34;1-兼容情况&#34;&gt;1. 兼容情况&lt;/h1&gt;
&lt;p&gt;如果想浏览器支持粘贴功能，那么浏览器必须支持，&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand&#34;&gt;document.execCommand(&amp;lsquo;copy&amp;rsquo;)&lt;/a&gt;方法，也可以根据&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Document/queryCommandSupported&#34;&gt;document.queryCommandEnabled(&amp;lsquo;copy&amp;rsquo;)&lt;/a&gt;，返回的true或者false判断浏览器是否支持copy命令。&lt;/p&gt;
&lt;p&gt;从下表可以看出，主流的浏览器都支持execCommand命令&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180314142213_IhrFsz_Jietu20180314-141253.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-复制的原理&#34;&gt;2. 复制的原理&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;查询元素&lt;/li&gt;
&lt;li&gt;选中元素&lt;/li&gt;
&lt;li&gt;执行复制命令&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;3-代码展示&#34;&gt;3. 代码展示&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// html
&amp;lt;input id=&amp;#34;username&amp;#34; value=&amp;#34;123456&amp;#34;&amp;gt;

// 查询元素
var username = document.getElementById(‘username’)

// 选中元素
username.select()

// 执行复制
document.execCommand(&amp;#39;copy&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;注意: 以上代码只是简单示意，在实践过程中还有几个要判断的情况&lt;/p&gt;&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;首要要去检测浏览器execCommand能力检测&lt;/li&gt;
&lt;li&gt;选取元素时，有可能选取元素为空，要考虑这种情况的处理&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;4-第三方方案&#34;&gt;4. 第三方方案&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://clipboardjs.com/&#34;&gt;clipboard.js&lt;/a&gt;是一个比较方便的剪贴板库，功能蛮多的。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;!-- Target --&amp;gt;
&amp;lt;textarea id=&amp;#34;bar&amp;#34;&amp;gt;Mussum ipsum cacilds...&amp;lt;/textarea&amp;gt;

&amp;lt;!-- Trigger --&amp;gt;
&amp;lt;button class=&amp;#34;btn&amp;#34; data-clipboard-action=&amp;#34;cut&amp;#34; data-clipboard-target=&amp;#34;#bar&amp;#34;&amp;gt;
    Cut to clipboard
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;官方给的代码里有上面的一个示例，如果你用了这个示例，但是不起作用，那你估计是没有初始化ClipboardJS示例的。&lt;/p&gt;
&lt;p&gt;注意：下面的函数必须要主动调用，这样才能给响应的DOM元素注册事件。 ClipboardJS源代码压缩后大约有3kb，虽然很小了，但是如果你不需要它的这么多功能的话，其实你自己写几行代码就可以搞定复制功能。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;new ClipboardJS(&amp;#39;.btn&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
