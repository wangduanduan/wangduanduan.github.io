<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on 洞香春</title>
    <link>https://wdd.js.org/posts/</link>
    <description>Recent content in Posts on 洞香春</description>
    <image>
      <title>洞香春</title>
      <url>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wdd.js.org/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.143.1</generator>
    <language>en</language>
    <lastBuildDate>Thu, 03 Jul 2025 22:26:35 +0800</lastBuildDate>
    <atom:link href="https://wdd.js.org/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RTPEngine STUN包处理流程</title>
      <link>https://wdd.js.org/posts/2025/rtpengine-stun-flow/</link>
      <pubDate>Thu, 03 Jul 2025 22:26:35 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/rtpengine-stun-flow/</guid>
      <description>&lt;h1 id=&#34;stun-请求处理&#34;&gt;STUN 请求处理&lt;/h1&gt;
&lt;pre class=&#34;mermaid&#34;&gt;flowchart TD

__wildcard_endpoint_map--&amp;gt;__assign_stream_fds
monologue_offer_answer--&amp;gt;__assign_stream_fds
monologue_publish--&amp;gt;__assign_stream_fds
monologue_subscribe_request1--&amp;gt;__assign_stream_fds
call_make_transform_media--&amp;gt;__assign_stream_fds

__wildcard_endpoint_map --&amp;gt;__get_endpoint_map
monologue_offer_answer --&amp;gt;__get_endpoint_map
monologue_publish --&amp;gt;__get_endpoint_map
monologue_subscribe_request1 --&amp;gt;__get_endpoint_map
call_make_transform_media --&amp;gt;__get_endpoint_map

__assign_stream_fds --&amp;gt; stream_fd_new
__get_endpoint_map --&amp;gt; stream_fd_new

stream_fd_new --&amp;gt; stream_fd_recv

stream_fd_new--&amp;gt;stream_fd_readable
stream_fd_readable--&amp;gt;__stream_fd_readable
stream_fd_recv--&amp;gt;
__stream_fd_readable--&amp;gt;
stream_packet--&amp;gt;
media_demux_protocols --&amp;gt; 
stun --&amp;gt; __stun_request --&amp;gt; ice_request
&lt;/pre&gt;
&lt;p&gt;从SDP Offer之后，stream_fd_new 函数里做了几个事件订阅， 当对应的的媒体端口收到包之后，这个包可能是好几种协议，例如RTP, DTLS, STUN等。&lt;/p&gt;
&lt;p&gt;在media_demux_protocols() 中决定了这个包是以上包的哪一种， 如果是STUN包，则进入stun()中处理。&lt;/p&gt;
&lt;p&gt;STUN包也分为请求和响应，当消息是响应时，进入ice_request().&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ice_request&lt;/span&gt;(stream_fd &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;sfd, &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;endpoint_t&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;src,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; stun_attrs &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;attrs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; packet_stream &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;ps &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sfd&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;stream;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; call_media &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;media &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ps&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;media;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; ice_agent &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;ag;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;err;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; ice_candidate &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;cand;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; ice_candidate_pair &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pair;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; ret;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#3c3d38&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;ilogs&lt;/span&gt;(ice, LOG_DEBUG, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Received ICE/STUN request from %s on %s&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#3c3d38&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;endpoint_print_buf&lt;/span&gt;(src),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#3c3d38&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;endpoint_print_buf&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;sfd&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;socket.local));
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre class=&#34;mermaid&#34;&gt;flowchart TD
ice_update--&amp;gt;__do_ice_checks
ice_agents_timer_run--&amp;gt;__do_ice_checks

__do_ice_checks --&amp;gt; __do_ice_check
&lt;/pre&gt;</description>
    </item>
    <item>
      <title>DTLS协商失败导致无声问题</title>
      <link>https://wdd.js.org/posts/2025/dtls-negotiation-failed-no-audio/</link>
      <pubDate>Tue, 24 Jun 2025 21:06:11 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/dtls-negotiation-failed-no-audio/</guid>
      <description>&lt;h1 id=&#34;1-简介&#34;&gt;1. 简介&lt;/h1&gt;
&lt;p&gt;DTLS（Datagram Transport Layer Security，数据报传输层安全协议）是一种为基于数据报的应用（如UDP）提供安全通信的协议。它是TLS（传输层安全协议）的扩展，专门设计用于不可靠的传输协议（如UDP），以实现数据加密、身份认证和消息完整性保护。DTLS常用于VoIP、视频会议、WebRTC等实时通信场景。&lt;/p&gt;
&lt;p&gt;DTLS在WebRTC音视频中是强制必须使用的，否则媒体协商阶段就会失败。&lt;/p&gt;
&lt;p&gt;使用DTLS后，就算中间人从网络中抓包，抓到了RTP流，在播放RTP流时，里面也全是噪声，无法播放的。&lt;/p&gt;
&lt;p&gt;今天要讲的是就是DTLS协商失败导致电话即使接通，也无声的问题。&lt;/p&gt;
&lt;h1 id=&#34;2-网络结构说明&#34;&gt;2. 网络结构说明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;UAS: sip server, OpenSIPS + RTPEngine组成&lt;/li&gt;
&lt;li&gt;UAC: WebRTC 分机&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F1. UAS ----&amp;gt; UAC: INVITE &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;SDP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F2. UAS &amp;lt;---- UAC: &lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F3. UAS &amp;lt;---- UAC: &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; Ok &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;SDP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F4. UAS ----&amp;gt; UAC: ACK
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从SIP信令上看，被叫应答后，UAS和UAC之间的双向媒体流应该建立起来，但是实际上却无声。&lt;/p&gt;
&lt;h1 id=&#34;3-icestundtls&#34;&gt;3. ICE/STUN/DTLS&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ICE&lt;/strong&gt;: WebRTC中的ICE（Interactive Connectivity Establishment，交互式连接建立）是一种网络协议，用于帮助WebRTC客户端在不同网络环境下建立点对点（P2P）连接。ICE的主要作用是解决NAT穿透和防火墙问题，使两个终端能够找到最佳的通信路径。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;STUN&lt;/strong&gt;: WebRTC中的STUN（Session Traversal Utilities for NAT，NAT会话穿越实用工具）是一种网络协议，主要用于帮助客户端发现自己的公网IP地址和端口。由于很多设备处于NAT（网络地址转换）或防火墙之后，直接通信会遇到障碍，STUN可以让客户端知道外部网络如何访问自己&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在分机应答后，并在WebRTC发送本地媒体流前，还需要两个步骤协商完成UAC才会发送语音流&lt;/p&gt;
&lt;h2 id=&#34;31-stun协商&#34;&gt;3.1 STUN协商&lt;/h2&gt;
&lt;p&gt;UAC收到来自UAS的SDP, 里面一般有如下内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;audio &lt;span style=&#34;color:#ae81ff&#34;&gt;54322&lt;/span&gt; UDP/TLS/RTP/SAVPF &lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ice-ufrag:abcd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ice-pwd:1234567890abcdef
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ice-options:trickle
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fingerprint:sha-256 12:34:56:78:90:AB:CD:EF:12:34:56:78:90:AB:CD:EF:12:34:56:78:90:AB:CD:EF:12:34:56:78:90:AB:CD:EF
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;setup:actpass
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;candidate:1 &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; udp &lt;span style=&#34;color:#ae81ff&#34;&gt;2130706431&lt;/span&gt; 1.2.3.4 &lt;span style=&#34;color:#ae81ff&#34;&gt;54322&lt;/span&gt; typ host
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;STUN是一个请求响应模型的协议。UAC将会向&lt;code&gt;a=candidate&lt;/code&gt;里的1.2.3.4:54322 发送UDP消息&lt;/p&gt;</description>
    </item>
    <item>
      <title>RTPEngine mr13版本, 特殊的fmtp参数会导致某些语音编码被移除</title>
      <link>https://wdd.js.org/posts/2025/rtpengine-fmtp-g711-remove-codec/</link>
      <pubDate>Wed, 18 Jun 2025 20:04:52 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/rtpengine-fmtp-g711-remove-codec/</guid>
      <description>&lt;h1 id=&#34;场景说明&#34;&gt;场景说明&lt;/h1&gt;
&lt;p&gt;如下图所示&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Offer阶段，F1, F2 步骤里PCMU编码有个fmtp参数&lt;code&gt;abc=no&lt;/code&gt;, 这个参数可能只对呼叫发起方有意义，对被叫方来说，只会被忽略。&lt;/li&gt;
&lt;li&gt;Answer阶段, 例如被叫是个FreeSWITCH, 它不认识abc=no, 就直接忽略，然后应答编码是PCMU。但是rtpengine认为不带abc=no的参数，就认为这个PCMU的编码是不可能被选中的，然后就直接删掉了PCMU编码， 只保留了一个101编码&lt;/li&gt;
&lt;li&gt;由于主叫收到101的编码，而没有语音的编码，所以主叫收到200 Ok后立马就发送了BYE&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// F1: send offer to rtpegnine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;audio &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt; RTP/AVP &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:0 PCMU/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:0 abc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:8 PCMA/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:8 abc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:101 telephone-event/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:101 0-15
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// F2: receive offer from rtpengine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;audio PORT RTP/AVP &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;IN IP4 203.0.113.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:0 PCMU/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:0 abc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:8 PCMA/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:8 abc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:101 telephone-event/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:101 0-15
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// F3: send answer to rtepngine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;audio &lt;span style=&#34;color:#ae81ff&#34;&gt;2002&lt;/span&gt; RTP/AVP &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:0 PCMU/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:101 telephone-event/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:101 0-15
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// F4: expect receive answer from rtpengine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;audio PORT RTP/AVP &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;IN IP4 203.0.113.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:0 PCMU/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rtpmap:101 telephone-event/8000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fmtp:101 0-15
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;问题原因&#34;&gt;问题原因&lt;/h1&gt;
&lt;p&gt;刚开始我以为是， &lt;a href=&#34;https://github.com/sipwise/rtpengine/commit/9c00f30&#34;&gt;https://github.com/sipwise/rtpengine/commit/9c00f30&lt;/a&gt; 这次commit引起的问题，我尝试注释代码，然后进行测试，发现可以解决问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>离谱的通话无声问题排查记录</title>
      <link>https://wdd.js.org/posts/2025/no-sound-during-a-call/</link>
      <pubDate>Wed, 07 May 2025 22:45:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/no-sound-during-a-call/</guid>
      <description>&lt;h1 id=&#34;简化网络模型&#34;&gt;简化网络模型&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;A 硬件话机&lt;/li&gt;
&lt;li&gt;S SIP 服务器/媒体服务器&lt;/li&gt;
&lt;li&gt;B 客户手机&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;A &amp;lt;-SIP/RTP&amp;gt; S &amp;lt;-SIP/RTP&amp;gt; B
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;问题说明&#34;&gt;问题说明&lt;/h1&gt;
&lt;p&gt;通话接通后，双方听不到对方的声音。&lt;/p&gt;
&lt;h1 id=&#34;呼叫流程&#34;&gt;呼叫流程&lt;/h1&gt;
&lt;p&gt;S 发起呼叫，A 接听后，bridge B&lt;/p&gt;
&lt;h1 id=&#34;排查思路&#34;&gt;排查思路&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;检查S在INVITE A时，SDP里携带的c=行，是否是S的公网IP。检查后无问题&lt;/li&gt;
&lt;li&gt;在A上抓包，发现有 S-&amp;gt;A的RTP包，也有 A-&amp;gt;S 的 RTP 包。&lt;/li&gt;
&lt;li&gt;将第二步的抓包文件拿到wireshark中分析。发现S-&amp;gt;A方向的包是正常的，能播放出声音；A-&amp;gt;S方向虽然有RTP包，但是看波形是一条直线，非常奇怪。&lt;/li&gt;
&lt;li&gt;S-&amp;gt;A方向的RTP包，在wireshark中能播放出声音，理论上A应该能听到B的声音的。但是用户反馈听不到。&lt;/li&gt;
&lt;li&gt;咨询用户，用户是如何接听电话的。用户反馈是通过话机手柄接听的电话&lt;/li&gt;
&lt;li&gt;让后让客户使用免提的方式拨打接听电话，发现可以听到声音。&lt;/li&gt;
&lt;li&gt;让客户拍照话机手柄插入话机的接口，发现手柄插入的接头插入了耳麦的接口。&lt;/li&gt;
&lt;li&gt;让客户将手柄插入正确的手柄接口，问题解决。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;延伸思考&#34;&gt;延伸思考&lt;/h1&gt;
&lt;p&gt;这次问题排查，让我想起了之前看过的思科的&lt;a href=&#34;https://www.cisco.com/c/zh_cn/support/docs/voice/voice-quality/211299-Troubleshoot-Voice-Quality-Issues.pdf&#34;&gt;排除语音质量问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这篇文章把语音质量问题分为三类：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;网络相关(包括网关(GW)和PSTN问题)&lt;/li&gt;
&lt;li&gt;电话型号/固件相关&lt;/li&gt;
&lt;li&gt;设备(例如头戴式耳机)相关&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在步骤上：&lt;/p&gt;
&lt;p&gt;步骤1.隔离语音质量问题的第一步是找出确切的用户体验并与他们交谈（无论是面对面还是通过电话），以获得对语音质量问题的准确描述。如果有大量用户报告问题，请与他们的样本（可能是5-10个）交谈，以获得对症状的准确描述。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但是实际情况下，我们有时候迫于形势，往往只从一两个客户那里获得只言片语的信息，然后就开始排查了。客户的只言片语如果带有误导性，那么排查的方向就错了。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;步骤2.记录物理位置(例如站点A，2楼)、用户名（用户的电话）、目录号码(DN)、电话型号（例如8865）、电话固件(例如11.5.1)和遇到语音质量问题的电话的IP地址。创建一个按物理位置排序的电子表格。在开始排除故障时创建此电子表格需要30分钟（或更短时间），可节省数小时甚至数天的故障排除时间。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;记录信息很重要，但是实际操作中，往往因为时间紧迫，而没有记录这些信息。或者这些信息记录在头脑中，但是排查到最后才发现，自己忘记了某些信息。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;步骤3.创建电子表格后，查看电话列表，了解电话有哪些共同之处，以及它们与没有语音质量问题的其他电话有何不同。之后，您可以意识到所有有问题的电话都位于同一栋大楼和同一楼层，您可以意识到有问题的电话连接到最近升级的交换机，或者您可以看到所有有问题的电话都位于特定固件上。&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;
&lt;p&gt;搞VoIP这么久，碰到过很多疑难杂症。排查思路往往都是从软件或者网络策略层面去排查。 很少考虑到终端的固件和硬件设备上。&lt;/p&gt;
&lt;p&gt;但是这次排查通话无声的问题，让我印象深刻的是，排查到最后才发现是硬件问题。&lt;/p&gt;
&lt;p&gt;从声音的输出输出上，有不同的设备，例如有线耳机、蓝牙耳机、话机手柄、免提等。&lt;/p&gt;
&lt;p&gt;排查这类问题，需要多方面考量。需要挖掘客户的实际使用场景，才能定位到真正的问题。&lt;/p&gt;
&lt;h1 id=&#34;反思&#34;&gt;反思&lt;/h1&gt;
&lt;p&gt;客户的硬件话机，有两个接口。 手柄的接口和耳麦的接口是共用一套接口的。虽然接口上标注的很清楚，但是客户在接线的时候，没有注意到这点。&lt;/p&gt;
&lt;p&gt;这要怎么避免呢？ 骂客户是傻逼吗？&lt;/p&gt;
&lt;p&gt;是不是在设计接口的时候，就应该使用不同形状的接口。 比如手柄接口是圆形，耳麦接口是方形。 这样就能避免这种问题了。&lt;/p&gt;
&lt;p&gt;或者说，接口是通用的。无论是手柄还是耳麦，插上都能用呢。&lt;/p&gt;
&lt;p&gt;还有一种方案，就是只保留一个接口，手柄和耳麦共用一套接口。两者是互斥关系。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DNS域名解析对MicroSIP注册的影响分析</title>
      <link>https://wdd.js.org/posts/2025/dns-and-microsip-register/</link>
      <pubDate>Wed, 30 Apr 2025 17:36:58 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/dns-and-microsip-register/</guid>
      <description>&lt;h1 id=&#34;microsip-dns域名解析影响分析&#34;&gt;microSIP DNS域名解析影响分析&lt;/h1&gt;
&lt;p&gt;MicroSIP是一款流行的windows VoIP客户端，它允许用户通过互联网进行语音和视频通话。在使用MicroSIP时，DNS域名解析是确保正确连接到服务器的重要步骤之一。&lt;/p&gt;
&lt;p&gt;DNS域名解析是将人类可读的域名（如www.example.com）转换为机器可读的IP地址的过程。这个过程通常由用户的网络服务提供商(ISP)或本地计算机上的DNS缓存完成。&lt;/p&gt;
&lt;p&gt;域名解析可以将一个域名解析为多个IP地址，例如：[ip1, ip2, ip3], 但是每次解析返回的顺序往往是不确定的，这取决于DNS服务器的配置和负载均衡策略。&lt;/p&gt;
&lt;p&gt;例如第一次解析的结果可能是[ip1, ip2, ip3]，而第二次解析的结果可能是[ip2, ip3, ip1]。&lt;/p&gt;
&lt;p&gt;MicroSIP客户端在注册时，会尝试连接到这些IP地址中的第一个。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当分机使用TCP方式注册时，如果其第一个IP地址无法连接，它会继续尝试下一个IP地址，直到成功或所有IP地址都失败为止&lt;/li&gt;
&lt;li&gt;如果分机使用UDP方式注册，它只会用第一个IP地址尝试注册，如果失败，还是继续尝试第一个IP。 这种行为似乎有点傻，为什么一直要尝试第一个IP地址，而不是尝试下一个呢？ MicroSIP底层用了pjsip库，而pjsip只有在用tcp/tls注册时， 才会自动尝试下一个IP。pjsip官网也给出了具体的解决方案，就是应用层主动调用 pjsua_acc_modify() 函数，手动修改账号配置，然后重新注册。 但是microSIP并没有这么做，而是直接用一个固定的IP地址去尝试注册。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Our DNS SRV failover support is only limited to TCP (or TLS) connect failure, which in this case pjsip will automatically retries the next server.
&lt;a href=&#34;https://docs.pjsip.org/en/latest/specific-guides/sip/dns_failover.html&#34;&gt;https://docs.pjsip.org/en/latest/specific-guides/sip/dns_failover.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;所以，总体上说。在使用域名注册的情况下，当前的注册和上一次的注册可能发往不同的SIP服务器。&lt;/p&gt;
&lt;p&gt;考虑如下场景：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# t1 dns解析结果 ip1, ip2, ip3
REGISTER sip:ip1:5060 SIP/2.0
200 Ok

# t2 dns解析结果 ip3, ip1, ip2
REGISTER sip:ip3:5060 SIP/2.0
200 ok
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一般分机都在内网环境，出口的公网IP是不变的，但是t1和t2的注册由于目标IP不同，所以出口的NAT映射的端口也是不同的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hot Reload OpenSIPS vs Kamailio</title>
      <link>https://wdd.js.org/posts/2025/hot-reload-opensips-vs-kamailio/</link>
      <pubDate>Sat, 29 Mar 2025 13:49:38 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/hot-reload-opensips-vs-kamailio/</guid>
      <description>&lt;p&gt;用过nginx的都知道，改了nginx的配置文件，只需要执行&lt;code&gt;nginx -s reload&lt;/code&gt;就可以让改动生效，而不用重启整个服务。&lt;/p&gt;
&lt;p&gt;在kamailio和opensips中，也有类似的热重载功能。&lt;/p&gt;
&lt;p&gt;在kamailio中，如果要热重载配置文件，只需要执行&lt;code&gt;kamcmd app_jsdt.reload&lt;/code&gt;即可。
在opensips中，如果要热重载配置文件，只需要执行&lt;code&gt;opensips-cli -x mi reload_routes&lt;/code&gt;即可。&lt;/p&gt;
&lt;p&gt;理想很丰满，现实很骨感。&lt;/p&gt;
&lt;p&gt;如果要只是修改路由模块，两者都可以做热重载。 如果要动态的新增一些模块，那就必须要重启。&lt;/p&gt;
&lt;h1 id=&#34;kamailio的实现方案&#34;&gt;Kamailio的实现方案&lt;/h1&gt;
&lt;p&gt;必须要用KEMI框架： cfg + [lua|js|python|ruby]&lt;/p&gt;
&lt;p&gt;用这个框架，你写的路由脚本将包括两个部分&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;核心模块，全局配置，模块加载，模块配置，事件路由这部分内容还是写在cfg文件中。&lt;/li&gt;
&lt;li&gt;请求路由、响应路由、分支路由、失败路由等这部分内容可以用lua、js、 python等来写。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在热重载的时候，实际上只有外部脚本会被重新加载，而核心模块是不会被重新加载的。&lt;/p&gt;
&lt;p&gt;因为部分路由用其他脚本编写，必然涉及到性能比较。官方给出的结论是，在同等条件下，lua的性能是最好的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kamailio.org/wikidocs/devel/config-engines/#interpreters-performances&#34;&gt;https://www.kamailio.org/wikidocs/devel/config-engines/#interpreters-performances&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;但是实际生产环境如何，还不好说。&lt;/p&gt;
&lt;p&gt;另外一点，就是并不是所有模块都实现了KEMI框架的接口，可能存在风险。&lt;/p&gt;
&lt;h1 id=&#34;opensips的实现方案&#34;&gt;OpenSIPS的实现方案&lt;/h1&gt;
&lt;p&gt;OpenSIPS在3.0版本首次引入了热重载路由脚本的能力，脚本还是cfg，没有引入其他语言。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.opensips.org/Documentation/Interface-CoreMI-3-0#toc8&#34;&gt;https://www.opensips.org/Documentation/Interface-CoreMI-3-0#toc8&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;结论&#34;&gt;结论&lt;/h1&gt;
&lt;p&gt;总体而言，目的是相同的，都是为了热重载路由。&lt;/p&gt;
&lt;p&gt;kamailio的方案看似灵活，实则复杂。如果cfg本身就能做热重载，那么就没必要引入其他语言。&lt;/p&gt;
&lt;p&gt;我更倾向使用OpenSIPS的方案&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.opensips.org/2019/04/04/no-downtime-for-opensips-3-0-restarts/&#34;&gt;https://blog.opensips.org/2019/04/04/no-downtime-for-opensips-3-0-restarts/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>HEP 协议学习笔记</title>
      <link>https://wdd.js.org/posts/2025/hep-protocol/</link>
      <pubDate>Sun, 02 Feb 2025 15:12:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/hep-protocol/</guid>
      <description>&lt;h1 id=&#34;hep简介&#34;&gt;HEP简介&lt;/h1&gt;
&lt;p&gt;HEP协议目前叫做EEP(Extensible Encapsulation Protocol), 那之前的缩写HEP的H，我只能推测为homer。&lt;/p&gt;
&lt;p&gt;这个协议的主要功能是对VoIP连路上的数据包，例如SIP进行封装，方便后续分析SIP信令图。&lt;/p&gt;
&lt;p&gt;目前这个协议已经升级到V3版本，在这个pdf&lt;a href=&#34;https://github.com/sipcapture/HEP/blob/master/docs/HEP3_Network_Protocol_Specification_REV_36.pdf&#34;&gt;HEP3_Network_Protocol_Specification_REV_36&lt;/a&gt;中有详细的介绍。&lt;/p&gt;
&lt;p&gt;今天我们主要看这个协议的V3版本的协议是如何实现的。&lt;/p&gt;
&lt;h1 id=&#34;包头&#34;&gt;包头&lt;/h1&gt;
&lt;pre class=&#34;mermaid&#34;&gt;packet-beta
title HEP Packet
0-3: &amp;#34;版本号&amp;#34;
4-5: &amp;#34;总长度&amp;#34;
6-15: &amp;#34;数据段(变长)&amp;#34;
&lt;/pre&gt;
&lt;p&gt;HEPv3的包头是6个字节，主要分为三个部分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;版本号：固定4个字节长度，是HEP3&lt;/li&gt;
&lt;li&gt;总长度：固定2个字节长度，是包的总长度，这个总长度包括了包头的六个字节。所以HEP包的大小范围一般是6-65535之间。&lt;/li&gt;
&lt;li&gt;数据段：数据段的长度不固定&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注意事项：假如从传输层读到1000个字节的数据，在解析前6个字节是，发现总长度(total length)的子段是1200，那就说明本次读到的数据还不是一个完整的&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;数据段解析&#34;&gt;数据段解析&lt;/h1&gt;
&lt;p&gt;数据段由固定6字节长度的头部和变长的payload部分。&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;packet-beta
title HEP Packet
0-1: &amp;#34;vendor ID&amp;#34;
2-3: &amp;#34;type ID&amp;#34;
4-5: &amp;#34;length&amp;#34;
6-15: &amp;#34;payload&amp;#34;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;vendor ID: 固定2字节长度, 其实意义不大，&lt;/li&gt;
&lt;li&gt;type ID: 固定2字节长度，这个子段很重要，决定了payload的类型。可以理解为是一个对象的key, 然后把payload理解为value&lt;/li&gt;
&lt;li&gt;length: 固定2字节长度，范围是0-65535，这个字段是也是整个数据段的长度，也就是包括了6个字节的段头&lt;/li&gt;
&lt;li&gt;payload: 长度是length的长度-6，表示数据长度&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;hep协议有个type ID的映射表&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;chunk type ID&lt;/th&gt;
          &lt;th&gt;类型&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;0x0001&lt;/td&gt;
          &lt;td&gt;uint8&lt;/td&gt;
          &lt;td&gt;IP类型，0x02=IPv4, 0x0a=IPv6&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0x0002&lt;/td&gt;
          &lt;td&gt;uint8&lt;/td&gt;
          &lt;td&gt;协议类型 0x06=TCP, 0x11=UDP， 可以参考&lt;a href=&#34;https://zh.wikipedia.org/wiki/IP%E5%8D%8F%E8%AE%AE%E5%8F%B7%E5%88%97%E8%A1%A8&#34;&gt;IP协议号列表&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其他的字段还有很多，可以参考&lt;a href=&#34;https://github.com/sipcapture/HEP/blob/master/docs/HEP3_Network_Protocol_Specification_REV_36.pdf&#34;&gt;HEP3_Network_Protocol_Specification_REV_36&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>写日记的正经人 - 季羡林</title>
      <link>https://wdd.js.org/posts/2025/jixianlin-book/</link>
      <pubDate>Tue, 21 Jan 2025 21:57:06 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2025/jixianlin-book/</guid>
      <description>&lt;p&gt;在电影《邪不压正》中，关于写日记的经典对白是&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;正经人谁写日记啊？&amp;#34;
&amp;#34;是啊&amp;#34;
&amp;#34;你写日记吗？&amp;#34;
&amp;#34;我不写。你写日记吗？&amp;#34;
&amp;#34;谁能把心里话写日记里？&amp;#34;
&amp;#34;写出来的那能叫心里话？&amp;#34;
&amp;#34;下贱！&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;给我灌输一种感觉写日记的人往往是虚伪的。&lt;/p&gt;
&lt;p&gt;然而，最近我看了季羡林先生两本书《牛棚杂忆》和《留得十年》，我不得不对季先生佩服的五体投地，眼角朦胧，鼻头发酸。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我在德国十年的日记，一天不缺，恐怕有一两百万字。&amp;ndash;《留德十年》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;做一件小事，坚持10年。 这是什么样动机，是因为毅力吗？&lt;/p&gt;
&lt;p&gt;如果说做一件事让自己感觉很难，不想做，但是做了很长时间，可以称之为毅力。&lt;/p&gt;
&lt;p&gt;我觉得除了毅力，更多的一种喜欢，一种习惯。一种把思想自然流露指尖，落笔成文的自然天性。&lt;/p&gt;
&lt;p&gt;我不记得以前上学时，有没有度过季先生的。然而季先生的大名，还是略有耳闻的。&lt;/p&gt;
&lt;p&gt;但是除了季先生的大名的，其他的事情，几乎不了解。&lt;/p&gt;
&lt;p&gt;看了两本书书后，我不禁对季先生生有有一种心驰神往。&lt;/p&gt;
&lt;p&gt;我不知道季先生原来是清朝末年的人。经历过清末、民国、二战、解放、文化大革命&amp;hellip;&lt;/p&gt;
&lt;p&gt;我不知道季先生原来去德国留过学，而且是是坐火车去的。 德国哥廷根的风景描写，让我脑海里呈现一种宫崎骏动画般画面。&lt;/p&gt;
&lt;p&gt;我不知道原来季先生在德国还经历过二战。&lt;/p&gt;
&lt;p&gt;我不知道季先生原来还在文化大革命中，数次被打倒。&lt;/p&gt;
&lt;p&gt;季先生的文风朴实，感情自然流露。你能从他的文字中看到一个普通人懦弱与勇气、迷茫与坚持、欲望和克制。&lt;/p&gt;
&lt;p&gt;我喜欢季先生的文风，也喜欢季先生的为人。&lt;/p&gt;
&lt;p&gt;我觉得，归根结底，我喜欢真实，厌恶粉饰。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2024年的最后三天 - 甲流来袭</title>
      <link>https://wdd.js.org/posts/2024/the-edn-day/</link>
      <pubDate>Tue, 31 Dec 2024 21:06:09 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2024/the-edn-day/</guid>
      <description>&lt;h1 id=&#34;28号---抗体&#34;&gt;28号 - 抗体&lt;/h1&gt;
&lt;p&gt;28号晚上，我觉得嗓子有点刺痛。因为前两周发过一次烧，我觉得这次嗓子痛应该不会是发烧的前奏了，毕竟身体是有抗体的。&lt;/p&gt;
&lt;p&gt;我高估了之前产生的抗体。&lt;/p&gt;
&lt;h1 id=&#34;29号---梦&#34;&gt;29号 - 梦&lt;/h1&gt;
&lt;p&gt;从29号上午开始，身体就好像在温水煮青蛙，最高到达惊人的峰值40度。&lt;/p&gt;
&lt;p&gt;为了控制体温，我先洗个热水澡，吃了布洛芬，躺在床上，拿了一块冰袋，裹在卫生纸里，搁在脑门上。身体挺直，裹着两层厚被。&lt;/p&gt;
&lt;p&gt;长夜慢慢，睡睡醒醒。&lt;/p&gt;
&lt;p&gt;我梦见自己变成了一棵树，脚上好像长出了根须，缓慢的往地下生长。穿过泥土，与蚯蚓擦肩而过。穿过岩石，被石油染黑。然而到达的却是一块冰山，冰冷坚硬。&lt;/p&gt;
&lt;p&gt;手上长出了树干，像天空伸展，摊开自己的枝叶，还没等我享受片刻温暖，太阳仿佛飞速向我飞来，炙热的阳光让我瞬间枯黄，灰飞烟灭。&lt;/p&gt;
&lt;p&gt;长夜慢慢，我不敢辗转反侧。我头上还顶着一块冰。&lt;/p&gt;
&lt;h1 id=&#34;30号---发热门诊&#34;&gt;30号 - 发热门诊&lt;/h1&gt;
&lt;p&gt;终于熬到早上，再测试一遍体温，38度。&lt;/p&gt;
&lt;p&gt;算了，还是去医院吧。&lt;/p&gt;
&lt;p&gt;穿戴整齐，刚下楼，迎面吹来一阵冷风。我有种无法压抑的，想要咳嗽的冲动，但是我必须忍住，我知道这咳嗽必然“感天动地&amp;quot;。&lt;/p&gt;
&lt;p&gt;风继续吹，我忍不住咳了出来，那感觉，仿佛有人伸手把我的气管从我的嘴巴里扯了出来。&lt;/p&gt;
&lt;p&gt;到了医院，发热门诊是单独一层的小房子，和气派的十几层的门诊大楼相比，简直像个保安室。&lt;/p&gt;
&lt;p&gt;发热门诊虽小，但也五脏俱全。&lt;/p&gt;
&lt;p&gt;进门先做鼻拭子，量体温，挂号。 再做血液分析，然后就排队等叫号。医生看了报告，说我是甲流，开了两盒药，一盒抗病毒，一盒用来退烧。&lt;/p&gt;
&lt;p&gt;从医院出来，已经中午。我走进医院旁边的永X大王，准备随便吃点。&lt;/p&gt;
&lt;p&gt;我挑了一个座位，扫码下单，点了馄炖、蒸蛋、豆浆、银耳莲子羹。&lt;/p&gt;
&lt;p&gt;等餐期间， 我发现对面有个中年人大叔，穿这黑色的宽大的羽绒服，胡子拉碴、头发稀少， 他时不时的巡视着其他的人。&lt;/p&gt;
&lt;p&gt;没过过久，我等到自己的餐。&lt;/p&gt;
&lt;p&gt;馄炖上撒了淡黄的鸡蛋丝和黑色海苔碎，鸡蛋丝吃起来像绳子，海苔碎味同嚼蜡。混度汤非常浑浊，像是用了一天的澡堂池子水。馄炖我就吃了一个，就放弃了。&lt;/p&gt;
&lt;p&gt;蒸蛋应该是预制菜，放在黑色塑料小杯中，应该是微波炉加热的。我吃了一口，味道奇怪。&lt;/p&gt;
&lt;p&gt;豆浆没什么好说的，毕竟也味道也没有下降空间了。&lt;/p&gt;
&lt;p&gt;银耳莲子羹还不错，我都个喝完了。&lt;/p&gt;
&lt;p&gt;吃饱喝足，顺便我把医生给我开的药也吃了，我起身离开，刚走到餐桌不到2米， 就瞥见那个大叔匆匆走向我的餐桌。&lt;/p&gt;
&lt;h1 id=&#34;急诊室&#34;&gt;急诊室&lt;/h1&gt;
&lt;p&gt;我吃完饭，回到家，每隔一个小时测一次体温，体温很稳定，稳定在38度左右。&lt;/p&gt;
&lt;p&gt;一直到晚上，我的体温还是没怎么下降。&lt;/p&gt;
&lt;p&gt;老婆给我打电话，说让我赶紧去急诊，去输液，光吃药效果不好，高烧不退会要人命的。 但是我觉得没必要，因为尽然发热门诊的医生都没有让我输液，说明我不需要输液，或者说输液也没有多大作用。&lt;/p&gt;
&lt;p&gt;老婆说：&amp;ldquo;你想让我中年丧夫吗？&amp;rdquo;&lt;/p&gt;
&lt;p&gt;我无话可说，只能默默穿上衣服，带上口罩，去了早上那家医院的急诊。&lt;/p&gt;
&lt;p&gt;晚上9点急诊室人来人往，络绎不绝，仿佛是白天的门诊。 我挂上号，接着又等了将近1个小时，终于等到我了。&lt;/p&gt;
&lt;p&gt;给我看病的是位女医生。&lt;/p&gt;
&lt;p&gt;”医生，我在你们医院发生门诊早上就看过了，诊断是甲流，药也吃了，到现在还是38度，还是给我输液吧。“，我说&lt;/p&gt;
&lt;p&gt;”甲流不是一天两天能好的，至少要发热三天，而且输液效果也不大“，医生说&lt;/p&gt;
&lt;p&gt;“那我也烧了两天了，再烧下去人要烧没了。你给我开个输液的吧”&lt;/p&gt;
&lt;p&gt;“好的吧，那我就给你开一次输液，你看看效果”&lt;/p&gt;
&lt;p&gt;一顿拉扯，我终于能输液了。其实输的也不是什么特殊的东西，就是一带左氧和一袋维C。&lt;/p&gt;
&lt;p&gt;输完液，已经晚上11点50，叫了车，回到家里。感觉嘴巴好苦，还好家里有甜的冰糖心苹果。&lt;/p&gt;
&lt;p&gt;我啃完第一个苹果，每一口都是苦味。接着我再啃一个苹果，每一口都还是苦味。 如果不是因为发烧，我简直立即想去吃点火锅底料漱漱口。&lt;/p&gt;
&lt;h1 id=&#34;归梦&#34;&gt;归梦&lt;/h1&gt;
&lt;p&gt;睡觉前，我又量了一次体温。体温恢复到37度，看起来正常正常了。&lt;/p&gt;
&lt;p&gt;我不知道这是吃药起的效果还是输液的效果。&lt;/p&gt;
&lt;p&gt;但是两盒药的价格是270，其中一盒西药50，另一盒重要220。&lt;/p&gt;
&lt;p&gt;输液呢，一袋左氧+维C，总共也不过才30。&lt;/p&gt;
&lt;p&gt;让我想起了电影《大腕》的名言&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;image-20241231231011072&#34; loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2024/the-edn-day/atta/image-20241231231011072.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;image-20241231231118484&#34; loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2024/the-edn-day/atta/image-20241231231118484.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;31号&#34;&gt;31号&lt;/h1&gt;
&lt;p&gt;这是24年的最后一天，美丽的烟花在天空中绽放璀璨的光芒。&lt;/p&gt;
&lt;p&gt;有些人觉得烟花美丽，有些人只觉得吵。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DDOS学习笔记</title>
      <link>https://wdd.js.org/posts/2024/ddos/</link>
      <pubDate>Tue, 17 Dec 2024 21:10:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2024/ddos/</guid>
      <description>&lt;h1 id=&#34;攻击分类&#34;&gt;攻击分类&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;网络层&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ICMP Flood攻击&lt;/strong&gt;: ICMP（Internet Control Message Protocol，因特网控制报文协议）是TCP/IP协议族的一个子协议，用于在IP主机、路由器之间传递控制消息。ICMP协议本身特点决定了它非常容易被用于攻击网络上的路由器和主机。当攻击者向目标网络发送大量的ICMP数据包时，目标主机会耗费大量的CPU资源去处理和响应，直至耗尽设备资源，无法为合法用户提供正常服务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ARP Flood攻击&lt;/strong&gt;: ARP（Address Resolution Protocol，地址解析协议）是用来将IP地址解析为MAC地址的协议。ARP协议主要以广播的方式发送ARP请求。同网段内的主机都可以收到广播请求，这为攻击者提供了可乘之机。攻击者通过发送大量的ARP请求，使有限的网络资源被无用的广播信息所占用，造成网络拥堵。其次，因为ARP协议没有安全认证机制，所以只要主机接收到ARP应答包，都会缓存在ARP表中，这为ARP欺骗提供了可能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IP分片攻击&lt;/strong&gt;: IP协议在传输数据包时，会将数据报文分为若干分片进行传输，并在目标系统中进行重组。IP分片是网络环境中经常发生的事件，但是，如果数据被人为恶意分片就会产生DDoS攻击。攻击者将经过恶意分段的数据包发送至目标网络，导致目标网络耗费大量资源进行重组，直至资源枯竭。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;传输层攻击&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SYN Flood攻击&lt;/strong&gt;: SYN Flood是互联网最原始、最经典的DDoS攻击之一，主要利用了TCP协议的三次握手机制。攻击者通常利用工具或控制僵尸主机向服务器发送海量的变源IP地址或变源端口的SYN报文，服务器响应报文后产生大量的半连接，直至系统资源被耗尽，服务器无法提供正常的服务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ACK Flood攻击&lt;/strong&gt;: 攻击者通过僵尸网络向目标服务器发送大量的ACK报文，报文带有超大载荷，会引起链路拥塞。或向目标服务器发送极高速率的变源变端口请求，导致转发设备异常，从而引起网络瘫痪。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UDP Flood攻击&lt;/strong&gt;: UDP Flood攻击常用于大带宽DDoS攻击。攻击者使用包含无状态UDP协议的IP数据包充塞目标主机的端口，受害主机会寻找与UDP数据包相关的应用程序。如果没有找到，就向发送者回发一条“目标不可达”消息。一旦目标主机被攻击流量淹没，系统就会失去响应，从而造成合法用户无法正常访问的现象。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;应用层攻击&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DNS Flood攻击&lt;/strong&gt;: 攻击者通过操纵大量傀儡机器，对目标网络发起海量域名查询请求，以中断该域的DNS解析。这种攻击将会破坏网站、API或Web应用程序响应合法流量的能力，让合法用户无法查找到用于调用特定资源的地址，导致业务暂时中断或停止。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP Flood攻击&lt;/strong&gt;: HTTP GET 攻击：攻击者操控多台设备向目标服务器发送对图像、文件或其他资产请求，当目标服务器被传入请求和响应所淹没时，来自正常流量源的业务请求也将被拒绝。
HTTP POST 攻击：与发送 POST 请求所需的处理能力和带宽相比，处理表单数据和运行必要数据库命令的过程相对密集。这种攻击利用相对资源消耗的差异，直接向目标服务器发送大量POST请求，直至目标服务器容量饱和并拒绝服务为止。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CC攻击&lt;/strong&gt;: CC攻击常用于攻击提供网页访问服务的服务器。攻击者通过代理服务器向目标服务器发送大量貌似合法的请求，使CPU长时间处于高负荷运行状态，永远都有处理不完的连接。攻击会导致正常访问被中止，最终宕机崩溃。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SIP注册 Flood攻击&lt;/strong&gt;: 攻击者发送大量的SIP注册请求到SIP服务端，SIP服务器需要查询数据库，拖慢正常的数据库查询，也回占用大量的资源来维护注册的事务。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;faq&#34;&gt;FAQ&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;防火墙能否拦截DDOS攻击？
&lt;ul&gt;
&lt;li&gt;拦截不了，防火墙就好比饭店的保安，保安再多，但是饭店门口道路交通堵塞了，饭店的营业额下降，再多的保安也无能为力&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在遭受DDOS攻击后，用什么手段防御？
&lt;ol&gt;
&lt;li&gt;购买硬件设备：除了比较贵之外，对于使用云服务器的服务也无能为力&lt;/li&gt;
&lt;li&gt;更换公网IP：对于使用云服务器来说，更换云服务器的公网IP看起来比较简单方便。但是也有麻烦的地方，比如自己的服务可能要涉及到配置改变和服务重启，和自己相关的第三方，也可能要修改IP的访问地址&lt;/li&gt;
&lt;li&gt;使用云服务厂商提供的DDOS服务&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;如何感知到自己的服务正在遭受DDOS攻击？
&lt;ol&gt;
&lt;li&gt;异常大的流量波动&lt;/li&gt;
&lt;li&gt;正常用户大量离线&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://info.support.huawei.com/info-finder/encyclopedia/zh/DDoS%E6%94%BB%E5%87%BB.html&#34;&gt;https://info.support.huawei.com/info-finder/encyclopedia/zh/DDoS%E6%94%BB%E5%87%BB.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/zh-cn/security/business/security-101/what-is-a-ddos-attack&#34;&gt;https://www.microsoft.com/zh-cn/security/business/security-101/what-is-a-ddos-attack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>你不怕暴露自己的无知吗？</title>
      <link>https://wdd.js.org/posts/2024/121701/</link>
      <pubDate>Sat, 07 Dec 2024 14:17:28 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2024/121701/</guid>
      <description>&lt;h1 id=&#34;公开自己的错误&#34;&gt;公开自己的错误&lt;/h1&gt;
&lt;p&gt;我在写博客时，有时候脑海里总会蹦出一个小人，面露鄙夷的脸色对我说：你写这么多没啥技术含量的垃圾，公开在网上，难道不怕暴露自己的无知吗？&lt;/p&gt;
&lt;p&gt;说实话，我是有这样的担忧。&lt;/p&gt;
&lt;p&gt;因为我是有自知之明的，我知道自己估计也是黄老师那种&amp;quot;样样通，样样松&amp;quot;的人。 写的东西也都是一些表面的东西，甚至有错误的可能。这并不是自谦。&lt;/p&gt;
&lt;p&gt;我一直无法找到反击脑海里小人的理由。&lt;/p&gt;
&lt;p&gt;今天，我在读一本书的时候，学到了一个概念，这个概念叫做坎宁安定律。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在互联网上获得正确答案的最好方法并不是提出问题，而是发布错误的答案&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;也许我的答案是错误的，但是它并没有被隐藏我脑海的某个角落，二是被公开在了网上。&lt;/p&gt;
&lt;p&gt;即使我的小破站再小，必然也会有几个阅读量吧，或许能有读者对错误的答案提出自己的异议。&lt;/p&gt;
&lt;h1 id=&#34;学习金字塔理论&#34;&gt;学习金字塔理论&lt;/h1&gt;
&lt;p&gt;如果仅仅是通过阅读学习，学习内容的平均存留率只有5%。&lt;/p&gt;
&lt;p&gt;如果把学习内容公开，这其中就暗示了你可能需要把自己学到的内容教授给他人这一心理。&lt;/p&gt;
&lt;p&gt;那么在记录笔记的时候，就会想办法把问题讲解的让别人更清楚，从而加深了自己的学习知识吸收。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2024/121701/atta/2024-12-22-13-17-38.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/%E5%AD%A6%E4%B9%A0%E9%87%91%E5%AD%97%E5%A1%94/9515094&#34;&gt;https://baike.baidu.com/item/%E5%AD%A6%E4%B9%A0%E9%87%91%E5%AD%97%E5%A1%94/9515094&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>第二份工作的辞职总结</title>
      <link>https://wdd.js.org/posts/2024/leave-the-second-job/</link>
      <pubDate>Tue, 10 Sep 2024 21:08:51 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2024/leave-the-second-job/</guid>
      <description>&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;
&lt;p&gt;第二份工作快到一年了，我最近申请离职了。&lt;/p&gt;
&lt;p&gt;同事问我离职原因，我说被领导骂了，感觉自尊受辱，索性不干了。&lt;/p&gt;
&lt;p&gt;实际上被领导骂只是压死骆驼的最后一根稻草，我也不是那种会心血来潮说干就不干的。&lt;/p&gt;
&lt;p&gt;这份工作，我做了不到一年，大部分的时间我是做的不开心的。&lt;/p&gt;
&lt;p&gt;所以离职是一直在心里酝酿。&lt;/p&gt;
&lt;p&gt;为什么会工作不开心？&lt;/p&gt;
&lt;p&gt;主要原因有以下四点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;行业前景暗淡&lt;/strong&gt;：S公司处在行业的中游，上游受到运营商管控，下游在客户层面话语权也不大。这是一个资源限制型的行业，行业的命脉就在运营商，可能运营商有个风吹草动，整个行业就要翻江倒海。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自研能力薄弱&lt;/strong&gt;：S公司大部分业务都是购买的第三方的软件，各种变更都受到制约，添加一个小功能都要付费升级。自研能力弱的一个原因可能就是前些年赚钱太容易了，投资研发哪有赚快钱来的舒服呢。同时也是这个原因，多个第三方软件之间也造成了数据割裂，运行维护困难。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;家族企业制约&lt;/strong&gt;：S公司大部分人员都是老板的亲朋好友，家族式企业的优点是内聚力强，但是包容性弱。之前也有一些大厂进来的员工，没多久就辞职了。 我曾经也跟老板沟通过，似乎老板也有心做些变革。但是变革哪有那么容易，要变革不早都变了，还要等到现在？&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;短期主义&lt;/strong&gt;：似乎S公司没有什么具体的愿景，唯一感觉到的愿景就是赚快钱。一旦发现投入的回报太少，就立即切换目标。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;企业关怀差&lt;/strong&gt;：说实在，我没有感觉到多少员工关怀。在S公司的工作和在地主家做短工也没啥区别，老板想什么都要管，但是即管不了那么多，又管的不好。所以给人的感觉就是东一棒槌，西一榔头，看起来很卖力，实际上并没有什么产出。几乎每个月都有人离职，对员工都吝啬，不考虑员工的自尊，员工怎么可能对公司有归属感。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;工作压力大&lt;/strong&gt;：受限于资源收紧、产品优势小，老板想提高营业额的方法是提高员工的服务水平。说实在，这真是杯水车薪。不想着从底层系统的解决问题，只想着通过给员工压力、通过加班来解决问题，只会造成工作压力大、人员流失大。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以，我的离职，实际上也是考虑再三的一个选择。&lt;/p&gt;
&lt;p&gt;当然，我在S公司也不是什么收获都没有。&lt;/p&gt;
&lt;h1 id=&#34;收获总结&#34;&gt;收获总结&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;深入了解了行业的运行原理、客户、资源、政策等信息&lt;/li&gt;
&lt;li&gt;对于数据分析方面有了较大的进步，毕竟我做了40+个数据报表来分析运行数据&lt;/li&gt;
&lt;li&gt;深入学习了python, 主要用来做数据分析。数据分析方面的协议栈主要有pandas、duckdb、doris(MySQL)、grafana来组成&lt;/li&gt;
&lt;li&gt;深入学习了python的GUI开发，主要用到的框架是wxPython，开发的两个工具分别给到运维人员和客服去使用，来提高运行效率&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Windows安装Tesserocr</title>
      <link>https://wdd.js.org/posts/2024/windows-install-tesserocr/</link>
      <pubDate>Wed, 24 Apr 2024 08:34:07 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2024/windows-install-tesserocr/</guid>
      <description>&lt;h1 id=&#34;安装tesserocr-windows_build&#34;&gt;安装tesserocr-windows_build&lt;/h1&gt;
&lt;p&gt;到&lt;a href=&#34;tesserocr-windows_build&#34;&gt;tesserocr-windows_build release&lt;/a&gt;页面下载对应的whl文件&lt;/p&gt;
&lt;p&gt;如下载 tesserocr-2.6.2-cp312-cp312-win_amd64.whl， 下载之后用pip安装&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pip install tesserocr-2.6.2-cp312-cp312-win_amd64.whl
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;安装ocr-windows-exe程序&#34;&gt;安装ocr windows exe程序&lt;/h1&gt;
&lt;p&gt;在这个页面，有对应的exe程序，https://digi.bib.uni-mannheim.de/tesseract/&lt;/p&gt;
&lt;p&gt;例如下载这个exe文件 &lt;a href=&#34;https://digi.bib.uni-mannheim.de/tesseract/tesseract-ocr-w64-setup-v5.3.0.20221214.exe&#34;&gt;https://digi.bib.uni-mannheim.de/tesseract/tesseract-ocr-w64-setup-v5.3.0.20221214.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载完成之后点击安装，一般我们不需要修改他的安装位置，默认的安装位置是C:\Program Files\Tesseract-OCR&lt;/p&gt;
&lt;p&gt;我们将C:\Program Files\Tesseract-OCR\tessdata下的所有文件，复制到C:\Program Files\Tesseract-OCR\目录下&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/simonflueckiger/tesserocr-windows_build/releases&#34;&gt;https://github.com/simonflueckiger/tesserocr-windows_build/releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://digi.bib.uni-mannheim.de/tesseract/&#34;&gt;https://digi.bib.uni-mannheim.de/tesseract/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tesseract-ocr.github.io/tessdoc/Downloads.html&#34;&gt;https://tesseract-ocr.github.io/tessdoc/Downloads.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/Yuyh131/article/details/103880585&#34;&gt;https://blog.csdn.net/Yuyh131/article/details/103880585&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>使用Excel理解prometheus的变化率相关函数</title>
      <link>https://wdd.js.org/posts/2024/learn-prom-with-excel/</link>
      <pubDate>Sat, 16 Mar 2024 08:38:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2024/learn-prom-with-excel/</guid>
      <description>&lt;h1 id=&#34;counter类型的变化率-rate-irate-increase&#34;&gt;counter类型的变化率 rate, irate, increase&lt;/h1&gt;
&lt;p&gt;counter类型一般是只增不减的累积值，例如系统累计的http请求数量, 累计的话单数量。&lt;/p&gt;
&lt;p&gt;counter类型的指标变化率一般使用三个函数来计算，rate, irate, increase&lt;/p&gt;
&lt;p&gt;指标每隔15s采样一次数据, A列是采集的指标值，B列是对应的采集时间。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;demo_api_request_duration_seconds_count&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;instance&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;demo-service-0:10000&amp;#34;&lt;/span&gt;,path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/api/bar&amp;#34;&lt;/span&gt;,status&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;200&amp;#34;&lt;/span&gt;,method&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}[&lt;/span&gt;1m&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;序号&lt;/th&gt;
          &lt;th&gt;A&lt;/th&gt;
          &lt;th&gt;B&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;294401976&lt;/td&gt;
          &lt;td&gt;1710549816.105&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;294402185&lt;/td&gt;
          &lt;td&gt;1710549831.105&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;294402393&lt;/td&gt;
          &lt;td&gt;1710549846.105&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;294402599&lt;/td&gt;
          &lt;td&gt;1710549861.105&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;rate是计算每秒的变化率,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rate 计算方案 (A4-A1) / (B4-B1)， 这里选择了首尾两个值的差值，除以时长秒&lt;/li&gt;
&lt;li&gt;irate 计算方案 (A4-A3) / (B4-B3) , 这里只选择里最后两个点的差值，除以时长秒&lt;/li&gt;
&lt;li&gt;increase 计算方式 (A4-A1) / (B4-B1) * 60,  这里的60是1m,  其实increase就是rate() * windows_seconds的语法糖&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;guage&#34;&gt;guage&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;296164749 @1710648381.105
296165055 @1710648396.105
296165364 @1710648411.105
296165668 @1710648426.105
296165978 @1710648441.105
296166186 @1710648456.105
296166505 @1710648471.105
296166826 @1710648486.105
296167151 @1710648501.105
296167478 @1710648516.105
296167810 @1710648531.105
296168139 @1710648546.105
296168472 @1710648561.105
296168764 @1710648576.105
296169026 @1710648591.105
296169363 @1710648606.105
296169709 @1710648621.105
296170059 @1710648636.105
296170410 @1710648651.105
296170759 @1710648666.107
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>什么时候应该使用ts范型?</title>
      <link>https://wdd.js.org/posts/2023/when-to-use-ts-generics/</link>
      <pubDate>Thu, 28 Dec 2023 20:21:11 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/when-to-use-ts-generics/</guid>
      <description>&lt;p&gt;我知道ts支持范型，但是因为几乎用不到，所以对于范型对我来说往往蒙上一层神秘色彩。&lt;/p&gt;
&lt;p&gt;最近我才真正的体会到范型的真正威力。&lt;/p&gt;
&lt;p&gt;下面就介绍我的使用场景。&lt;/p&gt;
&lt;p&gt;在和后端接口交互的时候， 后端接口返回的数据都是如下的类型。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;XData&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;success&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;total&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt;[]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里我把result定义为any类型，因为它的具体类型是由接口确定的。 比如查话单的接口是话单的结构类型，查订单的接口返回的是订单的类型。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CDR&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;creatAt&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Order&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在不用范型的时候，我们要么定义如下两个interface&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;XDataCDR&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;success&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;total&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;CDR&lt;/span&gt;[]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;XDataOrder&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;success&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;total&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;Order&lt;/span&gt;[]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在使用axios的时候，对于响应体的data, 可以使用如下的方式声明data&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getCDR&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;XDataCDR&lt;/span&gt;&amp;gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/api/xxx&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是，如果我们稍微修改一下XData的类型声明，加上范型。 就不需要用到XDataCDR和XDataOrder两个接口。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;XData&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;T&lt;/span&gt;&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;success&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;total&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;[]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getCDR&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;axios&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;XData&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;CDR&lt;/span&gt;&amp;gt;&amp;gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/api/xxx&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;只需要用到&lt;code&gt;XData&amp;lt;CDR&amp;gt;&lt;/code&gt;就可以构造出新的类型。&lt;/p&gt;
&lt;p&gt;从上面可以看出范型实际上不是约束具体的值的，而是用来对类型进行约束。使用范型，可以减少大量重复的代码。&lt;/p&gt;
&lt;p&gt;范型一般用于关键词之后，例如interface名之后，函数名之后。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;X&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;T&lt;/span&gt;&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;say&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;T&lt;/span&gt;&amp;gt;() &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;T&lt;/span&gt;[] {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所以，有些功能，直到真正用到，才能真正理解。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用bun加速开发环境的ts编写</title>
      <link>https://wdd.js.org/posts/2023/typescript-with-bun/</link>
      <pubDate>Sat, 23 Dec 2023 15:04:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/typescript-with-bun/</guid>
      <description>&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;最近我在开发一个demo程序，为了加速开发，我觉得直接用js要比用typescript更快，而且这只是一个demo程序，杀鸡焉用牛刀。&lt;/p&gt;
&lt;p&gt;而且一旦我要用typescript开发，避免不了要各种配置，例如typescript, ts-node, nodemon之类的，很是繁琐。而且ts也必须要经过编译后才能运行。&lt;/p&gt;
&lt;p&gt;然而，直到遇到一个bug,  我排查了半天，才发现是一个对象的属性写错了。本身这个对象是没有这个属性的，js没有任何错误提示。我只能一步一步缩小代码的范围，最终才定位到是属性拼写的错误。&lt;/p&gt;
&lt;p&gt;这个拼写的错误，应该是vscode的智能补全，给出的提示词，我直接回车确认了。&lt;/p&gt;
&lt;p&gt;这件事给我一个教训：&lt;strong&gt;以后所有代码都要用ts去编写。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;直接用js去编写虽然看起来写的快，但是代码调试太痛苦了。 这种拼写错误，ts的智能提示会直接告诉你错误的地方，但是如果去排查js文件，花费的时间是无法估量的。&lt;/p&gt;
&lt;p&gt;但是我又不太想去配置各种ts的执行环境，就想起来之前曾经用的&lt;a href=&#34;https://bun.sh/&#34;&gt;bun&lt;/a&gt;这个ts执行工具。&lt;/p&gt;
&lt;p&gt;虽然bun这个工具才刚刚发布1.0版本，但是在开发环境使用也是足够了。&lt;/p&gt;
&lt;p&gt;我的设想是在开发环境用bun, 在生产环境用nodejs执行bun编译后的js代码。&lt;/p&gt;
&lt;p&gt;这个demo程序用bun去运行的时候，没发现任何兼容问题。 这也让我有了继续研究下去的信心。&lt;/p&gt;
&lt;h1 id=&#34;bun的开发环境&#34;&gt;bun的开发环境&lt;/h1&gt;
&lt;p&gt;我之前看过deno, 但是看多deno的官方文档后，发现并不符合我的胃口。 但是bun的文档写的很好。&lt;/p&gt;
&lt;p&gt;任何工具的第一步都是安装，但是bun似乎在windows上执行并不太好，所以我是用windows的linux子系统，或者在mac上安装的bun。&lt;/p&gt;
&lt;p&gt;具体的安装步骤可以参考，https://bun.sh/docs/installation&lt;/p&gt;
&lt;h1 id=&#34;项目初始化&#34;&gt;项目初始化&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bun init

bun init helps you get started with a minimal project and tries to
guess sensible defaults. Press ^C anytime to quit.

package name (quickstart):
entry point (index.ts):

Done! A package.json file was saved in the current directory.
 + index.ts
 + .gitignore
 + tsconfig.json (for editor auto-complete)
 + README.md

To get started, run:
  bun run index.ts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用bun运行index.ts&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法 - 入侵脑细胞</title>
      <link>https://wdd.js.org/posts/2023/the-cell/</link>
      <pubDate>Tue, 21 Nov 2023 20:35:02 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/the-cell/</guid>
      <description>&lt;p&gt;我以前看过一部电影，叫做&lt;a href=&#34;https://movie.douban.com/subject/1293171/&#34;&gt;《入侵脑细胞》&lt;/a&gt;，这部电影提供一种可能性。类似的电影还有《盗梦空间》，都是将一种思想植入别人的思想中。&lt;/p&gt;
&lt;p&gt;这两部电影虽然提供了可能性，但是却无法提供实际可操作的方案。&lt;/p&gt;
&lt;p&gt;最近在阅读的一本书也于此有关，叫做&lt;a href=&#34;https://book.douban.com/subject/35264809/&#34;&gt;《对不起，我操控了你的大脑》&lt;/a&gt;，是一个叫做剑桥分析、曾轰动世界的公司，利用基于大数据、算法、人工智能、心理学来做思想植入的。常见的领域如操纵大选，并且提供成功的案例。&lt;/p&gt;
&lt;p&gt;但是作为普通人，大规模的思想植入似乎里我们还是比较遥远。&lt;/p&gt;
&lt;p&gt;但是真的那么遥远吗？&lt;/p&gt;
&lt;p&gt;昨天我爸来看我，之前他总是抱怨手机流量不够用。我给他换了每个月180G的流量卡，才过没两三天，他说已经用了20多G了。按照这个速度，180G的流量也不够用一个月。&lt;/p&gt;
&lt;p&gt;我问：“你怎么会用那么多流量！，你用手机看视频的吗？”&lt;/p&gt;
&lt;p&gt;爸说：“我经常刷抖音，刷好久，刷的眼疼”&lt;/p&gt;
&lt;p&gt;我说：“你还是少刷点手机吧”，虽然这只是苍白无力的 一句关心。&lt;/p&gt;
&lt;p&gt;我爸生于70年代，没怎么读过书，小学文凭。现在年近五十，经常带着鸭舌帽，依然遮不住后脑勺斑白的头发。虽然他经常用手机，但是很多东西依然搞不明白，需要找身边的年轻人来帮忙设置手机。&lt;/p&gt;
&lt;p&gt;一个50多岁的人，人生过了大半。面对现在飞速发展的社会，很多东西都已经无法适应。对于他自己来说，也基本上无法改变自己。从第七次人口普查的数据中可以看出，在2020年60+的人口已经占比接近14亿人口的20%了，随着时间的推移，这个占比只会增大。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2023/the-cell/atta/2023-11-22-21-27-50.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;对于我爸这类的人，即使刷的眼睛疼，也无法控制自己，还是一直不停的刷。&lt;/p&gt;
&lt;p&gt;由此可见，像这种大公司，制作的超级App有多可怕。能够一直持续的让大脑保持短期兴奋。这种超级App，背后都是心理学家、计算机学家、数据科学家等。 这些专家对待普通大众，就像哥伦布对待印第安人。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为我发现他们没有什么信仰，也没有任何崇拜的形象，人们又都很温和，他们无邪得不知道什么是邪恶，从不侵害别人，也不懂得偷窃，没有打斗，特别的温顺  《哥伦布日记》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;或许几十年以后，大部分人的大脑已经退化，也不需要有思考能里。只需要机械的按照刺激-&amp;gt;反应去行动。&lt;/p&gt;
&lt;p&gt;这种进化是一种潮流，绝大多数人都难以幸免。作为一个独立思考的人，我只能尽量避免被影响，远离社交网络。&lt;/p&gt;</description>
    </item>
    <item>
      <title>解决 VsCode pwsh终端环境变量不生效问题</title>
      <link>https://wdd.js.org/posts/2023/vscode-pwsh-env-not-work/</link>
      <pubDate>Thu, 16 Nov 2023 08:08:39 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/vscode-pwsh-env-not-work/</guid>
      <description>&lt;p&gt;我在系统的环境变量设置里，用户和系统中，都加入了&lt;code&gt;ELECTRON_MIRROR=https://npmmirror.com/mirrors/electron/&lt;/code&gt;这个环境变量。&lt;/p&gt;
&lt;p&gt;单独打开windows Terminal应用，使用 &lt;code&gt;env | grep ELE&lt;/code&gt; 是能搜到我设置的环境变量的。但是在vscode中，这个环境变量不存在。&lt;/p&gt;
&lt;p&gt;我尝试了以下几个方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重启电脑，无效&lt;/li&gt;
&lt;li&gt;配置&lt;code&gt;&amp;quot;terminal.integrated.persistentSessionReviveProcess&amp;quot;: &amp;quot;never&amp;quot;&lt;/code&gt;, 然后重启电脑，无效&lt;/li&gt;
&lt;li&gt;在终端直接执行&lt;code&gt;code .&lt;/code&gt;, 在终端打开vscode, 依然无效&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此，我想起了之前配置的pwsh的配置文件。 可以使用&lt;code&gt;code $PROFILE&lt;/code&gt;, 打开pwsh的配置文件。&lt;/p&gt;
&lt;p&gt;然后再配置文件中设置环境变量， 之后重启vscode, 环境变量就正常能读取到了。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 文件名 Microsoft.PowerShell_profile.ps1
$env:ELECTRON_MIRROR=&amp;#34;https://npmmirror.com/mirrors/electron/&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/266858097&#34;&gt;https://www.zhihu.com/question/266858097&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Vite React Route URL含有.时，路径无法正常匹配</title>
      <link>https://wdd.js.org/posts/2023/vite-react-route-url-dot-404/</link>
      <pubDate>Thu, 09 Nov 2023 20:49:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/vite-react-route-url-dot-404/</guid>
      <description>&lt;p&gt;今天遇到一个奇怪的问题，react-router的路径匹配无法正常工作，反而向vite的dev server发送了GET请求，这个请求报错404。页面直接无法访问。&lt;/p&gt;
&lt;p&gt;按理说这种前端路由的框架应该不需要向后段发送请求的。&lt;/p&gt;
&lt;p&gt;后来我怀疑是不是代理的问题，但是只是部分页面无法访问，所以排出这个选项。&lt;/p&gt;
&lt;p&gt;随后我的系统又收到一条测试数据，这条测试数据却能够正常跳转。&lt;/p&gt;
&lt;p&gt;我仔细的对别了两个不同的url，发现有问题的那个url包含了一个英文字符&lt;code&gt;.&lt;/code&gt;,  所以我怀疑是react-router的路径匹配有问题。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/call/2023-11-09/nlLBs32pp.2oXhnY6xzmYBCnjhYUkc7Z
/call/2023-11-09/fYqZKTGHBFVCz4iC5irulFc83giH9bsa	
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我的第一反应是react-router对于动态的路径，是有字符要求的。翻阅官方文档后，没有发现类似的描述。&lt;/p&gt;
&lt;p&gt;然后我在react-router的issue列表上查找有没有人提出类似的问题，发现了 &lt;a href=&#34;https://github.com/remix-run/react-router/issues/8389&#34;&gt;[Bug]: paths with dynamic parameters do not work correctly when there is a dot in the url&lt;/a&gt;,&lt;/p&gt;
&lt;p&gt;紧接着有人分析，说这个问题并不是react-router上的，而是出在vite上。 vite的项目上也有对应的issue反应这个问题。&lt;/p&gt;
&lt;h1 id=&#34;解决方案&#34;&gt;解决方案&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;方案1: 升级vite 到5.x， 由于当前稳定的还是4.x的vite, 所以这个方案改动太大，放弃&lt;/li&gt;
&lt;li&gt;方案2: 在匹配路径最后加上&lt;code&gt;/&lt;/code&gt;, 也就是原本的&lt;code&gt;/a.b&lt;/code&gt;要改成&lt;code&gt;/a.b/&lt;/code&gt;, 我试了这个方案，是有效的。&lt;/li&gt;
&lt;li&gt;方案3: 使用这个专门用来解决这个问题的插件， &lt;a href=&#34;https://github.com/ivesia/vite-plugin-rewrite-all&#34;&gt;https://github.com/ivesia/vite-plugin-rewrite-all&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;深入分析&#34;&gt;深入分析&lt;/h1&gt;
&lt;p&gt;路径带有点，一般可能认为是一个静态资源，例如&lt;code&gt;a.js, b.css&lt;/code&gt;之类的，所以vite会把符合这个模式的路径直接向后段发送请求，去获取静态资源，而不是去匹配一个组件。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/remix-run/react-router/issues/8389&#34;&gt;https://github.com/remix-run/react-router/issues/8389&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite/issues/2415&#34;&gt;https://github.com/vitejs/vite/issues/2415&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite/issues/11282&#34;&gt;https://github.com/vitejs/vite/issues/11282&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite/issues/2628&#34;&gt;https://github.com/vitejs/vite/issues/2628&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vitejs/vite/pull/2191/files&#34;&gt;https://github.com/vitejs/vite/pull/2191/files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bripkens/connect-history-api-fallback&#34;&gt;https://github.com/bripkens/connect-history-api-fallback&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>如何选择，汉王Clear7与文石Leaf3</title>
      <link>https://wdd.js.org/posts/2023/hanvon-clear7-vs-book-leaf3/</link>
      <pubDate>Mon, 06 Nov 2023 09:30:34 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/hanvon-clear7-vs-book-leaf3/</guid>
      <description>&lt;h1 id=&#34;购买选择&#34;&gt;购买选择&lt;/h1&gt;
&lt;p&gt;我的kindle pw4已经用了快三年了，机器性能有些不足，电池也有些不够用了。正逢双十一之际，我觉得可以买一个开放系统的电纸书来用用。&lt;/p&gt;
&lt;p&gt;买开放系统的另一个原因是自从亚马逊退出中国后，我用微信读书比较多，也买了微信读书的会员。&lt;/p&gt;
&lt;p&gt;开放系统基本上都是基于安卓系统定制的，可以选择的厂商比较多。&lt;/p&gt;
&lt;p&gt;最终筛选下来，我选择了汉王clear7和文石leaf3， 我下单了两个，觉得先体验一下，然后在退一个。&lt;/p&gt;
&lt;p&gt;然而用了不到两天之后，我还是决定把两个机器都给退了，继续用我的kindle pw4。&lt;/p&gt;
&lt;h1 id=&#34;选择因素&#34;&gt;选择因素&lt;/h1&gt;
&lt;p&gt;就我个人而言，电子书最为重要的选择因素有以下三点。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;显示效果&lt;/strong&gt;: 说实在的，现在的电子书基本上都是carta1200、300ppi、冷暖光。基本上从显示效果上来说，各大厂家都是半斤八两。就我自己体验而言，我并没有发现汉王的显示效果和文石leaf3有何不同。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;握持手感&lt;/strong&gt;: 外观影响握持手感，外观一般分为两类，一类是就是平板设计，像kindle paperwhite系列。另一类就是书脊式设计，握持更舒适，像kindle os3, 汉王clear7之类的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;简洁系统&lt;/strong&gt;: 电子书并不是手机，不需要太多的功能，功能太多反而成为累赘&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;稳定性&lt;/strong&gt;: 点子产品难免被摔、或者淋水，对于这些意外情况，如果产品非常脆弱，那么很大可能会损失大笔的金额。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;续航&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;文石的缺点&#34;&gt;文石的缺点&lt;/h1&gt;
&lt;p&gt;文石和汉王的两款产品，拿到手开机不到一小时，我就决定先退了文石。&lt;/p&gt;
&lt;p&gt;原因有以下几点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;显示效果文石和汉王差不多，没啥突出亮点&lt;/li&gt;
&lt;li&gt;握持手感文石肯定比不过汉王的书脊式设计, 并且汉王更轻&lt;/li&gt;
&lt;li&gt;文石的系统太复杂，设置太多，甚至还有个iphone类似的小白点设计，小白点点击之后展开很多图标，每个图标我都不知道做什么的&lt;/li&gt;
&lt;li&gt;掉电速度，文石的电量肉眼可见的在不断减少&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;汉王的缺点&#34;&gt;汉王的缺点&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;微信读书功能阉割, 这不是汉王的问题，而是微信读书自身的问题。例如书架页面，书籍只有一个排序的顺序，就是按照最近阅读的排序。而无法像ios或者安卓app一样能够按照阅读进度排序，另外也没有阅读时长分析的功能。 另外我也注意到，微信读书电纸书版，扫码登录的有效期是24小时，我不知道这是不是意味着24小时之后我又要重新扫码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;触感光滑，汉王的背板的触感让人感觉非常光滑，感觉稍不注意就会滑下去的样子。完全没有kindle pw4那种拿在手机，就粘在手上的感觉。所以我觉得，买汉王，就必须要买一个保护套，但是官方卖的保护套也太贵了吧，居然要110多块，这点有点像割韭菜。什么保护套能卖那么贵，都快赶上十分之一的电纸书的价格了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;词典缺陷，汉王的词典也是我要吐槽的功能之一，只能把单词的原型加入到单词本，单词来个复数或者过去分词，就不能加入单词本了。kindle的生词本，所有单词，无论什么形式都能加入单词本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;掉电速度, 从昨晚五点多开机，到今天早上，基本上没到一天，电池已经掉电接近40%了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自动关机, 为了省电，汉王在2小时不使用后，会自动关机。然而这个开机时间就有点久，你可设想一下，每天早上，你想看书的时候，你都要等几十秒的开机时间，那你能受得了吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按钮反馈，松松垮垮, 触感没有一致性体验&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;结论&#34;&gt;结论&lt;/h1&gt;
&lt;p&gt;目前而言，国产的电纸书系统，除了开放的系统之外，其他各个方面还是存在与kindle有较大的差距。&lt;/p&gt;
&lt;p&gt;当然，如果你从未使用过kindle系列的产品，国产的电纸书还是值得买的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>没有免费的Obsidian</title>
      <link>https://wdd.js.org/posts/2023/no-free-obsidian/</link>
      <pubDate>Wed, 25 Oct 2023 16:39:10 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/no-free-obsidian/</guid>
      <description>&lt;p&gt;我看过很多介绍obsidian的文章，除了外观漂亮，功能强大，最为着重前调的就是个人用户免费了。&lt;/p&gt;
&lt;p&gt;对于个人用户，真的免费吗？ 还是说人家并不是免费，只是我们在白嫖罢了。&lt;/p&gt;
&lt;p&gt;我们看看官网关于商业付费的详细解释：&lt;/p&gt;
&lt;p&gt;Obsidian 对于个人是免费的。但是，对于那些拥有两名及以上员工的公司或组织，以商业目的使用 Obsidian 的话，则需要购买商用许可证。所谓商业目的，指的是任何与工作相关的活动，比如记录会议内容、项目笔记，或是创建组织 Wiki 等。与这些活动相关的笔记记录、文档管理、知识管理等都可以视为以商用目的使用 Obsidian。 &amp;ndash;参考商用许可证&lt;/p&gt;
&lt;p&gt;所以，大部分人，包括我都是听话一半，只看前面，不看后面的但是。&lt;/p&gt;
&lt;p&gt;对于大部分上班族来说，如果你再用obsidian，我不太相信你从来没有在obsidian里记录一些工作内容。&lt;/p&gt;
&lt;p&gt;对我个人来说，虽然我的有几百条笔记和工作无关。但是也免不了有一些是和工作有关的的。比如对于某个线上问题的分析，比如记录了一些工作账号信息等等。&lt;/p&gt;
&lt;p&gt;在关于商业付费的例子上，官方还举出了贴心的给出了栗子。&lt;/p&gt;
&lt;p&gt;问题5：我使用 Obsidian 储存所有的知识，无论是个人的还是工作/专业相关的（因为太难区分），我需要购买商用许可证吗？&lt;/p&gt;
&lt;p&gt;回答：如果你的笔记中有内容直接与公司项目相关，并且该公司拥有两名及以上员工，那么你需要购买商用许可证。&lt;/p&gt;
&lt;p&gt;综上所述，即使是个人使用，免费的条件也是极为苛刻的。&lt;/p&gt;
&lt;p&gt;你的笔记不能包含任何商业目的的信息
你可以包含商业目的的信息，但前提是你的公司只有你一个人
假如你是个用Obisian的上班族，我觉得极大的可能你并不符合免费用户的条件。&lt;/p&gt;
&lt;p&gt;或者有一天，当你大学毕业了，进入工作环境，你如果还继续用之前的仓库，那你也不再符合免费用户的条件。&lt;/p&gt;
&lt;p&gt;所以说，不要再逢人就说Obsidian是免费的了。&lt;/p&gt;
&lt;p&gt;Obsidian并不免费，只是我们大部分人都在白嫖罢了。&lt;/p&gt;
&lt;p&gt;我也并不是不愿意花钱，如果要付钱的话，我更想买typeora。&lt;/p&gt;
&lt;p&gt;因为typeora是买断机制，一次性付费89元，终身包用，免费升级，最多可以再三台设备上使用&lt;/p&gt;
&lt;p&gt;Obsidian是订阅机制，每年商业使用要50美元，也就是将近400人民币。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MacBook icloud 同步卡死， 请尝试重启电脑</title>
      <link>https://wdd.js.org/posts/2023/macbook-icloud-sync-stuck/</link>
      <pubDate>Sun, 20 Aug 2023 13:07:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/macbook-icloud-sync-stuck/</guid>
      <description>&lt;h1 id=&#34;环境说明&#34;&gt;环境说明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;MacBook Pro M2&lt;/li&gt;
&lt;li&gt;系统版本 13.4.1&lt;/li&gt;
&lt;li&gt;网络环境为wifi&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;操作步骤&#34;&gt;操作步骤&lt;/h1&gt;
&lt;p&gt;我往icloud的文件夹下，粘贴几个文件夹，文件的内容挺多的，然后finder上显示icloud的状态就一直是处于同步中了。&lt;/p&gt;
&lt;p&gt;等了好久，同步的过程似乎卡住了。&lt;/p&gt;
&lt;p&gt;网上看了一些解决方案，似乎都没啥作用。&lt;/p&gt;
&lt;p&gt;我想起来以前的同样的一次卡顿同步的解决方案：重启电脑&lt;/p&gt;
&lt;p&gt;于是，我重启了一次电脑，再次开机，打开finder, icloud文件状态非常快同步完了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>安装NodeJS, N命令似乎卡住了</title>
      <link>https://wdd.js.org/posts/2023/n-stucked/</link>
      <pubDate>Sun, 09 Jul 2023 14:20:45 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/n-stucked/</guid>
      <description>&lt;p&gt;我一般会紧跟着NodeJS官网的最新版，来更新本地的NodeJS版本。&lt;/p&gt;
&lt;p&gt;我的系统是ubuntu 20.4, 我用&lt;a href=&#34;https://github.com/tj/n&#34;&gt;tj/n&lt;/a&gt;这个工具来更新Node。&lt;/p&gt;
&lt;p&gt;但是这一次，这个命令似乎卡住了。&lt;/p&gt;
&lt;p&gt;我排查后发现，是n这个命令在访问https://nodejs.org/dist/index.tab这个地址时，卡住了。&lt;/p&gt;
&lt;p&gt;请求超时，因为默认没有设置超时时长，所以等待了很久才显示超时的报错，表现象上看起来就是卡住了。&lt;/p&gt;
&lt;p&gt;首先我用dig命令查了nodejs.org的dns解析，我发现是正常解析的。&lt;/p&gt;
&lt;p&gt;然后我又用curl对nodejs官网做了一个测试，发现也是请求超时。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -i -m &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; https://nodejs.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl: &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;28&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Failed to connect to nodejs.org port &lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt; after &lt;span style=&#34;color:#ae81ff&#34;&gt;3854&lt;/span&gt; ms: 连接超时
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样问题就清楚了，然后我就想起来npmirrror上应该有nodejs的镜像。 在查看n这个工具的文档时，我也发现，它是支持设置mirror的。&lt;/p&gt;
&lt;p&gt;其中给的例子用的就是淘宝NPM&lt;/p&gt;
&lt;p&gt;就是设置了一个环境变量。然后执行&lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;export N_NODE_MIRROR=https://npmmirror.com/mirrors/node
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是，我发现在命令行里用echo可以打印N_NODE_MIRROR这个变量的值，但是在安装脚本里，还是无法获取设置的这个mirror。&lt;/p&gt;
&lt;p&gt;我想或许和我在执行&lt;code&gt;sudo n lts&lt;/code&gt;时的sudo有关，这个.zshrc在sudo这种管理员模式下是不生效的。普通用户的环境变量也不会继承到sudo执行的环境变量里&lt;/p&gt;
&lt;p&gt;最后，我用&lt;code&gt;sudo -E n lts&lt;/code&gt;, 成功的从npmmirror上更新了nodejs的版本。&lt;/p&gt;
&lt;p&gt;关于curl超时的这个问题，我也给n仓库提出了pull request, &lt;a href=&#34;https://github.com/tj/n/pull/771&#34;&gt;https://github.com/tj/n/pull/771&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>JS运行时构建独立二进制程序比较</title>
      <link>https://wdd.js.org/posts/2023/js-runtime-build-executable/</link>
      <pubDate>Thu, 01 Jun 2023 13:48:00 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/js-runtime-build-executable/</guid>
      <description>&lt;p&gt;很早以前，要运行js，则必须安装nodejs，且没什么办法可以把js直接构建成一个可执行的文件。&lt;/p&gt;
&lt;p&gt;后来出现一个&lt;a href=&#34;https://www.npmjs.com/package/pkg&#34;&gt;pkg&lt;/a&gt;的npm包，可以用来将js打包成可执行的文件。&lt;/p&gt;
&lt;p&gt;我好像用过这个包，但是似乎中间出过一些问题。&lt;/p&gt;
&lt;p&gt;现在是2023年，前端有了新的气象。&lt;/p&gt;
&lt;p&gt;除了nodejs外，还有其他的后来新秀，如&lt;a href=&#34;https://deno.com/&#34;&gt;deno&lt;/a&gt;， 还有最近表火的&lt;a href=&#34;https://bun.sh/&#34;&gt;bun&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另外nodejs本身也开始支持打包独立二进制文件了，但是需要最新的20.x版本，而且我看了它的使用介绍文档，&lt;a href=&#34;https://nodejs.org/api/single-executable-applications.html&#34;&gt;single-executable-applications&lt;/a&gt;, 看起来是有有点复杂，光一个构建就写了七八步。&lt;/p&gt;
&lt;p&gt;所以今天只比较一些deno和bun的构建出的文件大小。&lt;/p&gt;
&lt;p&gt;准备的js文件内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// app.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello world&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;deno构建指令: &lt;code&gt;deno compile --output h1 app.js&lt;/code&gt;,  构建产物为h1
bun构建指令: &lt;code&gt;bun build ./app.js --compile --outfile h2&lt;/code&gt;, 构建产物为h2&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-rw-r--r--@ 1 wangduanduan  staff    26B Jun  1 13:34 app.js
-rwxrwxrwx@ 1 wangduanduan  staff    78M Jun  1 13:59 h1
-rwxrwxrwx@ 1 wangduanduan  staff    45M Jun  1 14:01 h2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;源代码为26b字节&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;deno构建相比于源码的倍数: 3152838&lt;/li&gt;
&lt;li&gt;bun构建相比于源码的翻倍: 1804415&lt;/li&gt;
&lt;li&gt;deno构建的可执行文件相比bun翻倍：1.7&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bun.sh/docs/bundler/executables&#34;&gt;https://bun.sh/docs/bundler/executables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://deno.com/manual@v1.34.1/tools/compiler&#34;&gt;https://deno.com/manual@v1.34.1/tools/compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/api/single-executable-applications.html&#34;&gt;https://nodejs.org/api/single-executable-applications.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>VScode激活Tab更容易区分</title>
      <link>https://wdd.js.org/posts/2023/vscode-highlight-tab/</link>
      <pubDate>Tue, 18 Apr 2023 13:43:07 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/vscode-highlight-tab/</guid>
      <description>&lt;p&gt;默认情况下VScode的tab栏，当前的颜色会更深一点。如下图所示，第三个就是激活的。&lt;/p&gt;
&lt;p&gt;但是实际上并没有太高的区分度，特别是当显示屏有点反光的时候。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2023/vscode-highlight-tab/2023-04-18-13-45-18.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我想应该不止一个人有这个问题吧&lt;/p&gt;
&lt;p&gt;看了github上，有个人反馈了这个问题，https://github.com/Microsoft/vscode/issues/24586&lt;/p&gt;
&lt;p&gt;后面有人回复了&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;workbench.colorCustomizations&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tab.activeBorder&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#ff0000&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tab.unfocusedActiveBorder&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#000000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面就是用来配置Tab边界的颜色的。&lt;/p&gt;
&lt;p&gt;看下效果，当前激活的Tab下有明显的红线，是不是更容易区分了呢&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2023/vscode-highlight-tab/2023-04-18-13-51-17.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>行位结束符引起的问题</title>
      <link>https://wdd.js.org/posts/2023/tips-about-cr-lf/</link>
      <pubDate>Mon, 16 Jan 2023 15:03:03 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2023/tips-about-cr-lf/</guid>
      <description>&lt;h1 id=&#34;crlf&#34;&gt;CRLF&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;二进制&lt;/th&gt;
          &lt;th&gt;十进制&lt;/th&gt;
          &lt;th&gt;十六进制&lt;/th&gt;
          &lt;th&gt;八进制&lt;/th&gt;
          &lt;th&gt;字符/缩写&lt;/th&gt;
          &lt;th&gt;解释&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;00001010&lt;/td&gt;
          &lt;td&gt;10&lt;/td&gt;
          &lt;td&gt;0A&lt;/td&gt;
          &lt;td&gt;012&lt;/td&gt;
          &lt;td&gt;LF/NL(Line Feed/New Line)&lt;/td&gt;
          &lt;td&gt;换行键&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;00001101&lt;/td&gt;
          &lt;td&gt;13&lt;/td&gt;
          &lt;td&gt;0D&lt;/td&gt;
          &lt;td&gt;085&lt;/td&gt;
          &lt;td&gt;CR (Carriage Return)&lt;/td&gt;
          &lt;td&gt;回车键&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;CR代表回车符，LF代表换行符。&lt;/p&gt;
&lt;p&gt;这两个符号本身都是不可见的。&lt;/p&gt;
&lt;p&gt;如果打印出来&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CR 会显示 &lt;code&gt;\r&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;LF 会显示 &lt;code&gt;\n&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;不同系统的行结束符&#34;&gt;不同系统的行结束符&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Linux系统和Mac换行符是 &lt;code&gt;\n&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Windows系统的换行符是 &lt;code&gt;\r\n&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;如何区分文件的换行符&#34;&gt;如何区分文件的换行符？&lt;/h1&gt;
&lt;p&gt;可以使用od命令&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;od -bc index.md
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;假如文件的原始内容如下&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- 1
- 2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意012是八进制的数，十进制对应的数字是10，也就是换行符。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;0000000 055 040 061 012 055 040 062
          -       1  \n   -       2
0000007
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果用vscode打开文件，也能看到对应的文件格式，如LF。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2023/tips-about-cr-lf/2023-01-16-15-56-34.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;换行符的的差异会导致哪些问题&#34;&gt;换行符的的差异会导致哪些问题？&lt;/h1&gt;
&lt;h2 id=&#34;shell脚本问题&#34;&gt;shell脚本问题&lt;/h2&gt;
&lt;p&gt;如果bash脚本里包含CRLF,  可能导致脚本无法解析等各种异常问题。&lt;/p&gt;
&lt;p&gt;例如下面的报错，docker启动shell脚本可能是在windows下编写的。所以脚本无法&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;standard_init_linux.go:211: exec user process caused &amp;#34;no such file or directory&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;如何把windows文件类型转为unix&#34;&gt;如何把windows文件类型转为unix?&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 可以把windows文件类型转为unix

dos2unix file
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果是vscode，也可以点击对应的文件格式按钮。&lt;/p&gt;</description>
    </item>
    <item>
      <title>NUC11 安装 Deepin 20.2.4</title>
      <link>https://wdd.js.org/posts/2022/12/nuc11-deepin-20-2/</link>
      <pubDate>Sat, 17 Dec 2022 13:28:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/12/nuc11-deepin-20-2/</guid>
      <description>&lt;h1 id=&#34;硬件&#34;&gt;硬件&lt;/h1&gt;
&lt;p&gt;内存：金士顿 16*2；869元
固态硬盘： 三星980 1TB; 799元
主机：NUC11 PAHI7; 4核心八线程；3399元
累计5000多一点, 是最新版Macbook pro M1prod的三分之一&lt;/p&gt;
&lt;h1 id=&#34;启动盘制作&#34;&gt;启动盘制作&lt;/h1&gt;
&lt;p&gt;ventoy：试了几次，无法开机，遂放弃
rufus：能够正常使用；注意分区类型要选择GPT。最新款的一些电脑都是支持uefi的，所以选择GPT分区，一定没问题。&lt;/p&gt;
&lt;h1 id=&#34;u盘启动&#34;&gt;U盘启动&lt;/h1&gt;
&lt;p&gt;开机后按F2, 里面有一个是设置BIOS优先级，可以设置优先U盘启动&lt;/p&gt;
&lt;h1 id=&#34;磁盘分区&#34;&gt;磁盘分区&lt;/h1&gt;
&lt;p&gt;因为之前设置了默认的整个磁盘分区，根目录只有15G, 太小了，所以我选择手动分区
先设置一个efi分区，就用默认的300M就可以，默认弹窗出来，是不需要设置挂在目录的
设置根分区 /, 我分了300G
设置/home分区，剩下的磁盘都分给他
我没有设置swap分区，因为我觉得32G内存够大，不需要swap&lt;/p&gt;
&lt;h1 id=&#34;其他&#34;&gt;其他&lt;/h1&gt;
&lt;p&gt;后续的配置非常简单，基本点点按钮就能搞定&lt;/p&gt;
&lt;h1 id=&#34;体验&#34;&gt;体验&lt;/h1&gt;
&lt;p&gt;总体来说，安装软件是最舒服的一件事。不需要像安装manjaro那样，到处找安装常用应用的教程。只需要打开应用商店，点击下载就可以了。
整个安装过程，我觉得磁盘分区是最难的部分。其他都是非常方便的。
感觉深度的界面很漂亮，值得体验&lt;/p&gt;
&lt;h1 id=&#34;问题&#34;&gt;问题&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;NUC自带的麦克风无法外放声音，插有线耳机也不行，只有蓝牙耳机能用&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Wireshark 使用技巧</title>
      <link>https://wdd.js.org/posts/2022/12/wireshark-101/</link>
      <pubDate>Sun, 11 Dec 2022 14:33:04 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/12/wireshark-101/</guid>
      <description>&lt;h1 id=&#34;0-前提条件&#34;&gt;0. 前提条件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;wireshark 4.0.2&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1-时间显示&#34;&gt;1. 时间显示&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wireshark-101/2022-12-11-15-54-39.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;wireshark的默认时间显示是抓包的相对时间， 如果我们时间按照年月日时分秒显示，就需要进行如下设置:&lt;/p&gt;
&lt;p&gt;视图-&amp;gt;时间显示格式-&amp;gt;选择具体的时间格式&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wireshark-101/2022-12-11-15-59-57.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-udp解码为rtp&#34;&gt;2. UDP解码为RTP&lt;/h1&gt;
&lt;h2 id=&#34;方案1&#34;&gt;方案1&lt;/h2&gt;
&lt;p&gt;在一个包UDP包上点击右键，出现如下弹框，选择&lt;strong&gt;Decode As&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wireshark-101/2022-12-11-16-03-18.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;再当前值上选择RTP
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wireshark-101/2022-12-11-16-04-59.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;方案2&#34;&gt;方案2&lt;/h2&gt;
&lt;p&gt;方案1有一个缺点，只能过滤单一端口的UDP包，将其解码为RTP。&lt;/p&gt;
&lt;p&gt;假如有很多的UDP包，并且端口都不一样，如果想把这些包都解码为RTP,  则需要如下设置。&lt;/p&gt;
&lt;p&gt;选择分析-&amp;gt;启用的协议&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wireshark-101/2022-12-11-16-07-47.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在搜索框中输入RTP, 然后启用RTP的&lt;strong&gt;rtp_udp&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wireshark-101/2022-12-11-16-08-46.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows更新之后 Linux报错 Error 0x80040154</title>
      <link>https://wdd.js.org/posts/2022/12/wsl-error-0x80040154-after-windows-update/</link>
      <pubDate>Sun, 11 Dec 2022 14:12:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/12/wsl-error-0x80040154-after-windows-update/</guid>
      <description>&lt;p&gt;最近我更新了Windows, 之后我的Windows Linux子系统Ubuntu打开就报错了&lt;/p&gt;
&lt;p&gt;报错截图如下：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wsl-error-0x80040154-after-windows-update/2022-12-11-14-15-00.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在网上搜了一边之后，很多教程都是说要打开Windows的子系统的功能。 但是由于我已经使用Linux子系统已经很长时间了，我觉得应该和这个设置无关。&lt;/p&gt;
&lt;p&gt;而且我检查了一下，我的这个设置本来就是打开的。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wsl-error-0x80040154-after-windows-update/2022-12-11-14-18-02.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我在Powershell里输入 wsl， 这个命令都直接报错了。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PS C:\WINDOWS\system32&amp;gt; wsl --install
没有注册类
Error code: Wsl/0x80040154
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后我到wsl的github上搜索类似的问题，查到有很多类似的描述，都是升级之后遇到的问题，我试了好几个方式，都没用。&lt;/p&gt;
&lt;p&gt;但是最后这个有用了！&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/WSL/issues/9064&#34;&gt;https://github.com/microsoft/WSL/issues/9064&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wsl-error-0x80040154-after-windows-update/2022-12-11-14-24-09.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;解决的方案就是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;卸载已经安装过的&lt;strong&gt;Windows SubSystem For Linux Preview&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;然后再Windows应用商店重新安装这个应用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/wsl-error-0x80040154-after-windows-update/2022-12-11-14-27-43.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Windows的升级之后，可能Windows Linux子系统组建也更新了某些了内容。&lt;/p&gt;
&lt;p&gt;所以需要重装。&lt;/p&gt;
&lt;p&gt;这里不得不吐槽一下WSL, 这个工具仅仅是个玩具。随着windows更新，这个工具随时都会崩溃，最好不要太依赖它。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Edge浏览器双击标签栏 关闭标签页</title>
      <link>https://wdd.js.org/posts/2022/12/double-click-close-tab/</link>
      <pubDate>Wed, 07 Dec 2022 09:17:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/12/double-click-close-tab/</guid>
      <description>&lt;p&gt;在设置里搜索&lt;strong&gt;双击&lt;/strong&gt;，如果有使用双击关闭浏览器选项卡， 则开启。&lt;/p&gt;
&lt;p&gt;对于用鼠标关闭标签页来说，的确可以提高极大的效率。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/double-click-close-tab/2022-12-07-09-32-38.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么我不再使用语雀</title>
      <link>https://wdd.js.org/posts/2022/12/why-i-dont-not-use-yuque-any-more/</link>
      <pubDate>Tue, 06 Dec 2022 21:10:38 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/12/why-i-dont-not-use-yuque-any-more/</guid>
      <description>&lt;p&gt;我在2019年的六月份时候，开始使用语雀。&lt;/p&gt;
&lt;p&gt;一路走来，我见证了语雀的功能越来越多，但是于此同时，我也越来越讨厌语雀。&lt;/p&gt;
&lt;p&gt;2022年12月初，我基本上把语雀上的所有内容都迁移到我的hugo博客上。&lt;/p&gt;
&lt;p&gt;我的博客很乱，也很多。我写了一个脚本，一个一个知识库的搬迁，总体速度还算快，唯一不便的就是图片需要一个一个复制粘贴。&lt;/p&gt;
&lt;p&gt;有些图片是用语雀的绘图语言例如plantuml编写的，就只能截图保存了。&lt;/p&gt;
&lt;p&gt;总之，我也是蛮累的。&lt;/p&gt;
&lt;p&gt;简单列一下我不喜欢语雀的几个原因:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;性能差，首页渲染慢&lt;/strong&gt;，常常要等很久，首页才能打开&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;产品定位混乱，随意更改用户数据&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;我记得有时候我把知识库升级成了空间，过了一段时间，不知道为什么空间由变成了知识库。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数字花园这个概念真的很烂&lt;/strong&gt;。我好好的个人主页，某一天打开，大变样，换了个名字，叫做数字花园。甚至没有给用户一个选择保留老版本的个人主页的权利。&lt;strong&gt;太不尊重用户了&lt;/strong&gt;！！ 就好像你下班回家，看见房门被人撬开，你打开房门，看见有人在你的客厅种满大蒜，然后还兴高采烈的告诉你，看，这是您的数字菜园！多好，以后不用买蒜了。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;会员的流量计费规则&lt;/strong&gt;， 或许现在的计费规则已经变了，我也没有再充会员，但是再以前。即使是会员，也是按流量计费的。什么叫按流量计费，假如你的一篇博客里上传了一张1mb的图片，即使你后来把这个图片删了，这1mb的流量还是会存在。而且流量是一直往上涨的，还不像运营商，每月一号给你清零一次的机会。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>西安之旅 不仅有羊肉泡馍 也有长恨歌</title>
      <link>https://wdd.js.org/posts/2022/12/xian-travel/</link>
      <pubDate>Fri, 02 Dec 2022 20:38:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/12/xian-travel/</guid>
      <description>&lt;p&gt;一年过半以后，偶然打开微信公众号，看到草稿箱里的篇文章。我才回想起去年带女友去西安的那个遥远的夏天。&lt;/p&gt;
&lt;p&gt;如今女友已经变成老婆，这篇文章我才想起来发表。&lt;/p&gt;
&lt;h1 id=&#34;day-1-钟楼-鼓楼-回民街&#34;&gt;day 1 钟楼 鼓楼 回民街&lt;/h1&gt;
&lt;p&gt;那是六月末的时候，和女友一起坐火车去了趟西安。&lt;/p&gt;
&lt;p&gt;为什么要去西安呢？据吃货女友说，西安有非常多的好吃的。所以人生是必须要去一趟的。&lt;/p&gt;
&lt;p&gt;清晨，我们从南京南站出发坐动车，一路向西，坐了5个多小时，到达西安北站。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-41-29.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;路上我带了一个1500ml的水瓶，以及1500ml的酸奶。&lt;/p&gt;
&lt;p&gt;女友吐槽说，还好没做飞机，不然我就像宝强一样，要在机场干完一大瓶酸奶了。&lt;/p&gt;
&lt;p&gt;下了动车，立即前往钟楼订的宾馆，放置行李。&lt;/p&gt;
&lt;p&gt;西安钟楼位于西安市中心，是中国现存钟楼中形制最大、保存最完整的一座。建于明太祖洪武十七年，初建于今广济街口，与鼓楼相对，明神宗万历十年整体迁移于今址。&lt;/p&gt;
&lt;p&gt;沿着钟楼附近，我们逛了一圈回民街。&lt;/p&gt;
&lt;p&gt;回民街是西安著名的美食文化街区，是西安小吃街区。&lt;/p&gt;
&lt;p&gt;西安回民街作为西安风情的代表之一，是回民街区多条街道的统称，由北广济街、北院门、西羊市、大皮院、化觉巷、洒金桥等数条街道组成，在钟鼓楼后。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-42-22.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;钟楼&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-42-36.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-42-46.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;day-2-大唐芙蓉城-大唐不夜城-大雁塔&#34;&gt;day 2 大唐芙蓉城 大唐不夜城 大雁塔&lt;/h1&gt;
&lt;p&gt;大唐芙蓉城是一座仿唐建筑，里面有许多景点，或许我们不应该早上来，因为上午太热了。&lt;/p&gt;
&lt;p&gt;唯一庆幸的是，我们带了一个很大的水杯，而且芙蓉城里提供免费的开水，所以我们才没有被渴死。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-43-17.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;大唐芙蓉城 西游师徒四人 雕塑&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-44-29.png&#34;&gt;
傍晚的 大唐不夜城&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-44-43.png&#34;&gt;
夜幕降临的 大唐不夜城&lt;/p&gt;
&lt;p&gt;遗憾之一：大雁塔没有去看，因为当时正在维修，周围全是脚手架。
遗憾之二：没有到陕西历史博物馆看看，因为没有早点预约&lt;/p&gt;
&lt;p&gt;女友埋怨我说我不早点做攻略，害得这么多景点去不了。&lt;/p&gt;
&lt;p&gt;我说我是做了攻略的，还记在备忘录里面呢。&lt;/p&gt;
&lt;p&gt;女友打开我的备忘录一看，笑出眼泪说：你做的啥狗屁攻略，就这几个字！男人果然靠不住！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-45-24.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我说: 这你就不懂了吧，啥都写清楚，一个一个点打卡多没意思。&lt;/p&gt;
&lt;h1 id=&#34;day3-华清宫-兵马俑-长恨歌&#34;&gt;day3 华清宫 兵马俑 长恨歌&lt;/h1&gt;
&lt;p&gt;由于西安攻略做的太过肤浅，所以第二天晚上决定直接跟团。在网上买了两张华清宫兵马俑和长恨歌的一日游。&lt;/p&gt;
&lt;p&gt;说实在的，华清宫没啥意思，都是洗澡池子。&lt;/p&gt;
&lt;p&gt;蒋介石洗过澡的池子，杨贵妃的洗澡池子，唐明皇的洗澡池子，大臣们的洗澡池子。&lt;/p&gt;
&lt;p&gt;逛完之后，下午我们坐着旅游大巴，前往兵马俑。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-46-08.png&#34;&gt;
一号坑&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-46-18.png&#34;&gt;
一号坑&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-46-33.png&#34;&gt;
一号坑&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-46-45.png&#34;&gt;
一号坑&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/xian-travel/2022-12-02-20-47-01.png&#34;&gt;
一号坑&lt;/p&gt;
&lt;p&gt;兵马俑有三个坑。&lt;/p&gt;
&lt;p&gt;一号坑最大，兵马俑也是最多的。然而当时游客比肩接踵，加上天气炎热，大家都在里面像蒸桑拿一样。&lt;/p&gt;
&lt;p&gt;出了一号坑，我心里想：这么大个坑，这么热为啥不装空调，难道是因为要保护文物吗？&lt;/p&gt;
&lt;p&gt;后来据博物馆的讲解员介绍：不装空调是因为审核手续复杂，可能要要个几十年手续才能完成。像二号坑和三号坑都已经装好空调了。&lt;/p&gt;
&lt;p&gt;二号坑真的是个坑，没有兵马俑，仅仅是个大坑。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MRCPv2 协议学习</title>
      <link>https://wdd.js.org/posts/2022/12/mrcp-notes/</link>
      <pubDate>Thu, 01 Dec 2022 10:08:38 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/12/mrcp-notes/</guid>
      <description>&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;MRCPv2 是&lt;code&gt;Media Resource Control Protocol Version 2&lt;/code&gt;的缩写&lt;/li&gt;
&lt;li&gt;MRCP 允许客户端去操作服务端的媒体资源处理&lt;/li&gt;
&lt;li&gt;MRCP 的常见功能如下
&lt;ul&gt;
&lt;li&gt;文本转语音&lt;/li&gt;
&lt;li&gt;语音识别&lt;/li&gt;
&lt;li&gt;说话人识别&lt;/li&gt;
&lt;li&gt;语音认证&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MRCP 并不是一个独立的协议，而是依赖于其他的协议，如 SIP/SDP&lt;/li&gt;
&lt;li&gt;MRCPv2 RFC 发表于 2012 年&lt;/li&gt;
&lt;li&gt;MRCPv2 主要由思科,Nuance,Speechworks 开发&lt;/li&gt;
&lt;li&gt;MRCPv2 是基于 MRCPv1 开发的&lt;/li&gt;
&lt;li&gt;MRCPv2 不兼容 MRCPv1&lt;/li&gt;
&lt;li&gt;MRCPv2 在传输层使用 TCP 或者 TLS&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;定义&#34;&gt;定义&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;媒体资源： An entity on the speech processing server that can be controlled through MRCPv2.&lt;/li&gt;
&lt;li&gt;MRCP 服务器： Aggregate of one or more &amp;ldquo;Media Resource&amp;rdquo; entities on a server, exposed through MRCPv2. Often, &amp;lsquo;server&amp;rsquo; in this document refers to an MRCP server.&lt;/li&gt;
&lt;li&gt;MRCP 客户端: An entity controlling one or more Media Resources through MRCPv2 (&amp;ldquo;Client&amp;rdquo; for short).&lt;/li&gt;
&lt;li&gt;DTMF: Dual-Tone Multi-Frequency; a method of transmitting key presses in-band, either as actual tones (Q.23 [Q.23]) or as named tone events (RFC 4733 [RFC4733]).&lt;/li&gt;
&lt;li&gt;Endpointing: The process of automatically detecting the beginning and end of speech in an audio stream. This is critical both for speech recognition and for automated recording as one would find in voice mail systems.&lt;/li&gt;
&lt;li&gt;Hotword Mode: A mode of speech recognition where a stream of utterances is evaluated for match against a small set of command words. This is generally employed either to trigger some action or to control the subsequent grammar to be used for further recognition.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;架构&#34;&gt;架构&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;客户端使用SIP/SDP建立MRCP控制通道&lt;/li&gt;
&lt;li&gt;SIP使用SDP的offer/answer模型来描述MRCP通道的参数&lt;/li&gt;
&lt;li&gt;服务端在answer SDP中提供唯一的通道ID和服务端TCP端口号&lt;/li&gt;
&lt;li&gt;客户端可以开启一个新的TCP链接，多个MRCP通道也可以共享一个TCP链接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/12/mrcp-notes/2022-12-01-11-49-00.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deepin安装man命令</title>
      <link>https://wdd.js.org/posts/2022/11/deepin-install-man/</link>
      <pubDate>Thu, 03 Nov 2022 11:55:51 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/11/deepin-install-man/</guid>
      <description>&lt;p&gt;想查资料，发现 deepin 居然没有 man 这个命令。&lt;/p&gt;
&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install man-db
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;使用介绍&#34;&gt;使用介绍&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/11/deepin-install-man/2022-11-03-12-00-16.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux 日志系统简述</title>
      <link>https://wdd.js.org/posts/2022/10/linux-journal/</link>
      <pubDate>Wed, 26 Oct 2022 08:44:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/10/linux-journal/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/linux-journal/2022-10-26-08-45-41.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-序言&#34;&gt;1. 序言&lt;/h1&gt;
&lt;p&gt;日志文件包含系统的运行信息，包括内核、服务、应用程序等的日志。日志在分析系统故障、排查应用问题等方面，有着至关重要的作用。&lt;/p&gt;
&lt;h1 id=&#34;2-哪些进程负责管理日志&#34;&gt;2. 哪些进程负责管理日志？&lt;/h1&gt;
&lt;p&gt;默认情况下，系统上有两个守护进程服务管理日志。journald和rsyslogd。&lt;/p&gt;
&lt;p&gt;journald是systemd的一个组件，journald的负责收集日志，日志可以来自&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Syslog日志&lt;/li&gt;
&lt;li&gt;内核日志&lt;/li&gt;
&lt;li&gt;初始化内存日志&lt;/li&gt;
&lt;li&gt;启动日志&lt;/li&gt;
&lt;li&gt;所有服务写到标准输出和标准错误的日志&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;journal收集并整理收到的日志，使其易于被使用。&lt;/p&gt;
&lt;p&gt;有以下几点需要注意&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;默认情况下，journal的日志是不会持久化的。&lt;/li&gt;
&lt;li&gt;journal的日志是二进制的格式，并不能使用文本查看工具，例如cat, 或者vim去分析。journal的日志需要用journalctl命令去读取。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;journald会把日志写到一个socket中，rsyslog可以通过这个socket来获取日志，然后去写文件。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/linux-journal/2022-10-26-08-47-16.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-日志文件文件位置&#34;&gt;3. 日志文件文件位置&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;日志文件位置 /var/log/ 目录&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-日志配置文件位置&#34;&gt;4. 日志配置文件位置&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;/etc/rsyslog.conf  rsyslogd配置文件&lt;/li&gt;
&lt;li&gt;/etc/logrotate.conf  日志回滚的相关配置&lt;/li&gt;
&lt;li&gt;/etc/systemd/journald.conf  journald的配置文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5-rsyslogconf&#34;&gt;5. rsyslog.conf&lt;/h1&gt;
&lt;h2 id=&#34;51-模块加载&#34;&gt;5.1. 模块加载&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;注意 imjournal就是用来负责访问journal中的日志&lt;/li&gt;
&lt;li&gt;imuxsock 提供本地日志输入支持，例如使用logger命令输入日志&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ModLoad imuxsock &lt;span style=&#34;color:#75715e&#34;&gt;# provides support for local system logging (e.g. via logger command)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ModLoad imjournal &lt;span style=&#34;color:#75715e&#34;&gt;# provides access to the systemd journal&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;52-过滤&#34;&gt;5.2. 过滤&lt;/h2&gt;
&lt;h3 id=&#34;521-优先级过滤&#34;&gt;5.2.1. 优先级过滤&lt;/h3&gt;
&lt;p&gt;**模式：FACILITY.**&lt;strong&gt;PRIORITY&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设备(FACILITY): kern (0), user (1), mail (2), daemon (3), auth (4), syslog (5), lpr (6), news (7), cron (8), authpriv (9), ftp (10), and local0 through local7 (16 - 23).&lt;/li&gt;
&lt;li&gt;日志等级：debug (7), info (6), notice (5), warning (4), err (3), crit (2), alert (1), and emerg (0).&lt;/li&gt;
&lt;li&gt;正则
&lt;ul&gt;
&lt;li&gt;= 指定某个级别&lt;/li&gt;
&lt;li&gt;! 排除某个级别&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;匹配所有级别&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example: &lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu 使用过程中遇到的问题以及解决方案</title>
      <link>https://wdd.js.org/posts/2022/10/ubuntu-tips/</link>
      <pubDate>Tue, 25 Oct 2022 12:56:41 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/10/ubuntu-tips/</guid>
      <description>&lt;h1 id=&#34;1-ubuntu-wine-微信中文乱码&#34;&gt;1. ubuntu wine 微信中文乱码&lt;/h1&gt;
&lt;p&gt;修改文件
/opt/deepinwine/tools/run.sh
/opt/deepinwine/tools/run_v2.sh
将WINE_CMD那行中加入LC_ALL=zh_CN.UTF-8&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WINE_CMD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LC_ALL=zh_CN.UTF-8 deepin-wine&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考
&lt;a href=&#34;https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu&#34;&gt;https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-ubuntu-2004-wine-微信-qq-截图时黑屏&#34;&gt;2. ubuntu 20.04 wine 微信 qq 截图时黑屏&lt;/h1&gt;
&lt;p&gt;之前截图都是好的的，不知道为什么，今天截图时，点击了微信的截图按钮后，屏幕除了状态栏，都变成黑色的了。&lt;/p&gt;
&lt;p&gt;各种搜索引擎搜了一遍，没有发现解决方案。&lt;/p&gt;
&lt;p&gt;最后决定思考最近对系统做了什么变更，最近我好像给系统安装了新的主题，然后在登录时，选择了新的主题，而没有选择默认的ubuntu主题。&lt;/p&gt;
&lt;p&gt;在登录界面的右下角，有个按钮，点击之后，可以选择主题。&lt;/p&gt;
&lt;p&gt;最近我都是选择其他的主题，没有选择默认的ubuntu主题，然后我就注销之后，重新在登录时选择默认的ubuntu主题后，再次打开微信截图，功能恢复正常。&lt;/p&gt;
&lt;p&gt;所以说，既然选择ubuntu了，就没必要搞些花里胡哨的东西。ubuntu默认的主题挺好看的，而且支持自带主题的设置，就没必要再折腾了。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/ubuntu-tips/2022-10-25-12-59-20.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-open-ubuntu-2004-锁屏后-解锁屏幕非常慢&#34;&gt;3. [open] ubuntu 20.04 锁屏后 解锁屏幕非常慢&lt;/h1&gt;
&lt;p&gt;super + l可以用来锁屏，锁屏之后屏幕变成黑屏。&lt;/p&gt;
&lt;p&gt;黑屏之后，如果需要唤醒屏幕，可以随便在键盘上按键，去唤醒屏幕。但是这个唤醒的过程感觉很慢，基本上要随便按键接近十几秒，屏幕才能被点亮，网上搜了下，但是没有找到原因。&lt;/p&gt;
&lt;p&gt;但是有个解决办法，就是在黑屏状态下，不要随便输入，而要输入正确的密码，然后按回车键， 这样会快很多。&lt;/p&gt;
&lt;p&gt;也就是说，系统运行正常，可能是显示器的问题。&lt;/p&gt;
&lt;h1 id=&#34;4-ubuntu-2004-xorg-高cpu-桌面卡死&#34;&gt;4. ubuntu 20.04 xorg 高cpu 桌面卡死&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl restart gdm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;5-ubuntu-状态栏显示网速&#34;&gt;5. ubuntu 状态栏显示网速&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo add-apt-repository ppa:fossfreedom/indicator-sysmonitor 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install indicator-sysmonitor
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在任务启动中选择System Monitor&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/ubuntu-tips/2022-10-25-13-01-01.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/ubuntu-tips/2022-10-25-13-01-06.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在配置中可以选择开机启动&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/ubuntu-tips/2022-10-25-13-01-17.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在高级中可以设置显示哪些列， 我只关系网速，所以只写了{net}&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/ubuntu-tips/2022-10-25-13-01-28.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;6-在命令行查看图片&#34;&gt;6. 在命令行查看图片&lt;/h1&gt;
&lt;p&gt;实际上终端并不能显示图片，而是调用了外部的程序取显示图片。&lt;/p&gt;</description>
    </item>
    <item>
      <title>树莓派初始化配置</title>
      <link>https://wdd.js.org/posts/2022/10/raspi-config/</link>
      <pubDate>Tue, 25 Oct 2022 12:12:05 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/10/raspi-config/</guid>
      <description>&lt;p&gt;我已经装过几次树莓派的系统了，记录一些使用心得。&lt;/p&gt;
&lt;h1 id=&#34;1-选择哪个版本&#34;&gt;1. 选择哪个版本&lt;/h1&gt;
&lt;p&gt;最好用无&lt;a href=&#34;https://downloads.raspberrypi.org/raspbian_lite_latest&#34;&gt;桌面版&lt;/a&gt;，无桌面版更加稳定。我之前用过几次桌面版，桌面版存在以下问题。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用偶尔感觉会卡&lt;/li&gt;
&lt;li&gt;经常使用一天之后，第二天要重启系统。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;2-关于初始设置&#34;&gt;2. 关于初始设置&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;默认的用户是 pi，默认的密码是raspberry&lt;/li&gt;
&lt;li&gt;登录成功之后，sudo passwd pi 来修改pi用户的密码&lt;/li&gt;
&lt;li&gt;登录之后，sudo passwd root 来设置root的用户密码&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;3-开启ssh-远程登录服务&#34;&gt;3. 开启ssh 远程登录服务&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;raspi-config
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/raspi-config/2022-10-25-12-12-50.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/raspi-config/2022-10-25-12-13-01.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-root用户ssh登录&#34;&gt;4. root用户ssh登录&lt;/h1&gt;
&lt;p&gt;默认树莓派是禁止使用root远程登录的，想要开启的话，需要编辑/etc/ssh/sshd_config文件，增加一行&lt;code&gt;PermitRootLogin yes&lt;/code&gt;, 然后重启ssh服务&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vi /etc/ssh/sshd_config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PermitRootLogin yes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl restart ssh //  chong
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;5-关于联网&#34;&gt;5. 关于联网&lt;/h1&gt;
&lt;p&gt;联网有两个方案&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用网线连接，简单方便，但是有条线子，总会把桌面搞得很乱&lt;/li&gt;
&lt;li&gt;使用wifi连接，简单方便&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用wifi连接，一种方式是编辑配置文件，这个比较麻烦。我建议使用树莓派提供的raspi-config命令来设置wifi。&lt;/p&gt;
&lt;p&gt;在命令行中输入：raspi-config, 可以看到如下界面&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;按下箭头，选择NetWork Options，按回车确认&lt;/li&gt;
&lt;li&gt;进入网络设置后，按下箭头，选择N2 Wi-fi&lt;/li&gt;
&lt;li&gt;然后就很简单了，输入wifi名称和wifi密码，最好你的wifi名称是英文的，出现中文会很尴尬的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/raspi-config/2022-10-25-12-13-27.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/10/raspi-config/2022-10-25-12-13-35.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;6-如何找到树莓派的ip地址&#34;&gt;6. 如何找到树莓派的IP地址&lt;/h1&gt;
&lt;p&gt;某些情况下，树莓派在断电重启之后会获得新的IP地址。在没有显示器的情况下，如果找到树莓派的IP呢？&lt;/p&gt;
&lt;p&gt;树莓派的MAC地址是：b8:27:eb:6c 开头&lt;/p&gt;
&lt;p&gt;所以你只需要输入: arp -a   就会打印网络中的主机以及MAC地址，找以b8:e7:eb:6c开头的，很可能就是树莓派。&lt;/p&gt;
&lt;h1 id=&#34;7-设置清华镜像源&#34;&gt;7. 设置清华镜像源&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/&#34;&gt;https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hugo Timezone没有设置， 导致页面无法渲染</title>
      <link>https://wdd.js.org/posts/2022/09/hugo-timezone/</link>
      <pubDate>Sat, 03 Sep 2022 10:20:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/09/hugo-timezone/</guid>
      <description>&lt;p&gt;写好了博客，但是没有在网页上渲染出来，岂不是很气人！&lt;/p&gt;
&lt;p&gt;我的archtypes/default.md配置如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: &amp;#34;{{ replace .Name &amp;#34;-&amp;#34; &amp;#34; &amp;#34; | title }}&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: &amp;#34;{{ now.Format &amp;#34;2006-01-02 15:04:05&amp;#34; }}&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;draft: false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当使用 &lt;code&gt;hugo new&lt;/code&gt; 创建一个文章的时候，有如下的头&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: &amp;#34;01: 学习建议&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: &amp;#34;2022-09-03 10:23:10&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;draft: false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hugo 默认采用的是 格林尼治平时 (GMT)，比北京时间 (UTC+8) 晚了 8 个小时，Hugo 在生成静态页面的时候，不会生成超过当前时间的文章。&lt;/p&gt;
&lt;p&gt;如果把北京时间当作格林尼治时间来计算，那么肯定还没有超过当前时间。&lt;/p&gt;
&lt;p&gt;所以我们要给站点设置时区。&lt;/p&gt;
&lt;p&gt;在config.yaml增加如下内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;timeZone&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Asia/Shanghai&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>读书笔记 - Packet Guide to VoIP</title>
      <link>https://wdd.js.org/posts/2022/07/vl3zhk/</link>
      <pubDate>Mon, 18 Jul 2022 20:05:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/vl3zhk/</guid>
      <description>&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;书名&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;Packet Guide to Voip over IP&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;作者&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Bruce Hartpence&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;状态&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;已读完&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Go under the hood of an operating Voice over IP network, and build your knowledge of protocol &amp;hellip;.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;读后感&#34;&gt;读后感&lt;/h2&gt;
&lt;h3 id=&#34;新技术出现的时机&#34;&gt;新技术出现的时机&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Pulling the trigger early might put you at risk of making the wrong decision in terms of
vendor or protocol. Adopting late might put you behind the competition or make you
rush to deploy a system that is not well understood by the local staff.&lt;/p&gt;</description>
    </item>
    <item>
      <title>中途多语言适配</title>
      <link>https://wdd.js.org/posts/2022/07/mv0hk1/</link>
      <pubDate>Tue, 12 Jul 2022 22:54:55 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/mv0hk1/</guid>
      <description>&lt;h1 id=&#34;1-前提说明&#34;&gt;1. 前提说明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;项目已经处于维护期&lt;/li&gt;
&lt;li&gt;项目一开始并没有考虑多语言，所以很多地方都是写死的中文&lt;/li&gt;
&lt;li&gt;现在要给这个项目添加多语言适配&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-工具选择&#34;&gt;2. 工具选择&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/i18n&#34;&gt;https://www.npmjs.com/package/i18n&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/vue-i18n&#34;&gt;https://www.npmjs.com/package/vue-i18n&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-难点&#34;&gt;3. 难点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;项目很大，中文可能存在于各种文件中，例如html, vue, js, typescript等等， 人工查找不现实&lt;/li&gt;
&lt;li&gt;所以首先第一步是要找出所有的中文语句&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-让文本飞&#34;&gt;4. 让文本飞&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;安装ripgrep &lt;code&gt;apt-get instal ripgrep&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;搜索所有包含中文的代码: &lt;code&gt;rg -e &#39;[\p{Han}]&#39; &amp;gt; han.all.md&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;给所有包含中文的代码，按照文件名，和出现的次数排序:  &lt;code&gt;cat han.all.md | awk -F: &#39;{print  $1}&#39; | uniq -c | sort -nr &amp;gt; stat.han.md&lt;/code&gt;  这一步主要是看看哪些文件包含的中文比较多&lt;/li&gt;
&lt;li&gt;按照中文的语句，排序并统计出现的次数: &lt;code&gt;cat han.all.md |rg -o -e &#39;([\p{Han}]+)&#39; | sort | uniq -c | sort -nr &amp;gt; word.han.md&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经过上面4步，基本上可以定位出哪些代码中包含中文，中文的语句有哪些。&lt;/p&gt;</description>
    </item>
    <item>
      <title>0 A.D. 一款开发了21年还未release的游戏</title>
      <link>https://wdd.js.org/posts/2022/07/gxog1n/</link>
      <pubDate>Tue, 12 Jul 2022 19:32:28 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/gxog1n/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/07/gxog1n/2022-10-29-19-55-32.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-我为什么会知道0-ad-这款游戏&#34;&gt;1. 我为什么会知道0 A.D. 这款游戏？&lt;/h1&gt;
&lt;p&gt;最近切换到windows开发，用了&lt;a href=&#34;https://scoop.sh/#/&#34;&gt;scoop&lt;/a&gt;这个包管理工具来安装软件，随便逛逛的时候，发现scoop还可以用来安装游戏，然后我就在里面看了一下，然后排名第一的是一个名叫 0 A.D.的游戏，然后我就安装，并试玩了一下。&lt;/p&gt;
&lt;h1 id=&#34;2-0-ad-这个名字是啥意思&#34;&gt;2. 0 A.D. 这个名字是啥意思？&lt;/h1&gt;
&lt;p&gt;基督教称耶稣诞生的那年为公元元年， A.D. 就是Anno Domini（A.D.）（拉丁）的缩写，对应的公元前就是而在耶稣诞生之前，称为B.C. Before Christ（B.C.）.&lt;/p&gt;
&lt;p&gt;我们现在的阳历，例如今年是2022年，这其实就是公元2022年。对应的公元元年，对中国来说，大致在西汉年间。&lt;/p&gt;
&lt;p&gt;所以 0 A.D. 其实的意思就是一个不存在的元年。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;“0 A.D.” is a time period that never actually existed:&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;3-0-ad-是什么类型的游戏&#34;&gt;3. 0 A.D. 是什么类型的游戏？&lt;/h1&gt;
&lt;p&gt;如果你玩过红警，0 A.D.的有点像红警。 官方的介绍0AD是一个基于历史的实时策略游戏。 &lt;!-- raw HTML omitted --&gt;如果你玩过部落冲突，0AD其实也有点类似部落冲突。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/07/gxog1n/2022-10-29-19-55-45.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/07/gxog1n/2022-10-29-19-55-52.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-0-ad--有什么特点&#34;&gt;4. 0 A.D.  有什么特点？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;跨平台， windows, mac, linux都可以玩&lt;/li&gt;
&lt;li&gt;免费&lt;/li&gt;
&lt;li&gt;历史悠久，项目开始于2001&lt;/li&gt;
&lt;li&gt;还处于开发阶段&lt;/li&gt;
&lt;li&gt;可玩性还不错&lt;/li&gt;
&lt;li&gt;基于真实历史，所以玩游戏的时候，也是能够学点历史的。里面有是14个文明。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5-有哪些玩法&#34;&gt;5. 有哪些玩法&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;单机和AI对战&lt;/li&gt;
&lt;li&gt;在线组队玩&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6-faq&#34;&gt;6. FAQ&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;如何设置中文界面
&lt;ul&gt;
&lt;li&gt;默认的游戏不带中文语言的，实际上它是有中文的语言包的，可以参考&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/%E5%85%AC%E5%85%83/17855&#34;&gt;https://baike.baidu.com/item/%E5%85%AC%E5%85%83/17855&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>请问nginx 能否根据 frag 片段 进行路径转发？</title>
      <link>https://wdd.js.org/posts/2022/07/gt6a84/</link>
      <pubDate>Sat, 09 Jul 2022 17:13:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/gt6a84/</guid>
      <description>&lt;h1 id=&#34;http-url的格式复习&#34;&gt;HTTP URL的格式复习&lt;/h1&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;://&lt;!-- raw HTML omitted --&gt;:&lt;!-- raw HTML omitted --&gt;@&lt;!-- raw HTML omitted --&gt;:&lt;!-- raw HTML omitted --&gt;/&lt;!-- raw HTML omitted --&gt;;&lt;!-- raw HTML omitted --&gt;?&lt;!-- raw HTML omitted --&gt;#frag&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scheme 协议，             常见的有http, https, file, ftp等&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;:&lt;!-- raw HTML omitted --&gt; 用户名和密码&lt;/li&gt;
&lt;li&gt;host  主机或者IP&lt;/li&gt;
&lt;li&gt;port  端口号&lt;/li&gt;
&lt;li&gt;path  路径&lt;/li&gt;
&lt;li&gt;params  参数 用的比较少&lt;/li&gt;
&lt;li&gt;query     查询参数&lt;/li&gt;
&lt;li&gt;frag         片段，资源的一部分，浏览器不会把这部分发给服务端&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;关于frag片段&#34;&gt;关于frag片段&lt;/h1&gt;
&lt;p&gt;浏览器加载一个网页，网页可能有很多章节的内容，frag片段可以告诉浏览器，应该将某个特定的点显示在浏览器中。&lt;/p&gt;
&lt;p&gt;例如 &lt;a href=&#34;https://github.com/wangduanduan/jsplumb-chinese-tutorial/blob/master/api/anchors.js#L18&#34;&gt;https://github.com/wangduanduan/jsplumb-chinese-tutorial/blob/master/api/anchors.js#L18&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里的#L8就是一个frag片段， 当浏览器打开这个页面的时，就会跳到对应的行&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/07/gt6a84/2022-10-29-19-53-53.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>windows 上的命令行体验</title>
      <link>https://wdd.js.org/posts/2022/07/crofgr/</link>
      <pubDate>Sat, 09 Jul 2022 12:43:14 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/crofgr/</guid>
      <description>&lt;p&gt;我已经有5年没有用过windows了，再次在windows上搞开发，发现了windows对于开发者来说，友好了不少。&lt;/p&gt;
&lt;p&gt;首先是windows terminal,  这个终端做的还不错。&lt;/p&gt;
&lt;p&gt;其次是一些常用的命令，比如说ssh, scp等，都已经默认附带了，不用再安装。&lt;/p&gt;
&lt;p&gt;还有包管理工具scoop,  命令行提示工具 oh-my-posh,  以及powershell 7 加载一起，基本可以迁移80%左右的linux上的开发环境。&lt;/p&gt;
&lt;p&gt;特别要说明一下scoop， 这个包管理工具，我安装了在linux上常用的一些软件。&lt;/p&gt;
&lt;p&gt;包括有以下的软件，而且软件的版本都还蛮新的。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;0ad           0.0.25b          games  
7zip          22.00            main  
curl          7.84.0_4         main  
curlie        1.6.9            main   
diff-so-fancy 1.4.3            main  
duf           0.8.1            main  
everything                            
gawk          5.1.1            main  
git           2.37.0.windows.1 main   
git-aliases   0.3.5            extras
git-chglog    0.15.1           main   
gzip          1.3.12           main  
hostctl       1.1.2            main  
hugo          0.101.0          main  
jq            1.6              main   
klogg         22.06.0.1289     extras 
make          4.3              main   
neofetch      7.1.0            main  
neovim        0.7.2            main  
netcat        1.12             main   
nodejs-lts    16.16.0          main   
ntop          0.3.4            main   
procs         0.12.3           main   
ripgrep       13.0.0           main  
sudo          0.2020.01.26     main   
tar           1.23             main  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;另外一个就是powershell 7了，贴下我的profile配置。&lt;/p&gt;</description>
    </item>
    <item>
      <title>powershell oh-my-posh 加载数据太慢</title>
      <link>https://wdd.js.org/posts/2022/07/igur01/</link>
      <pubDate>Sat, 09 Jul 2022 12:31:09 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/igur01/</guid>
      <description>&lt;p&gt;每次打开新的标签页，Powershell 都会输出下面的代码&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Loading personal and system profiles took 3566ms.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;时间不固定，有时1s到10s都可能有，时间不固定。 这个加载速度是非常慢的。&lt;/p&gt;
&lt;p&gt;然后我打开一个非oh-my-posh的窗口，输入&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;oh-my-posh debug
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;看到其中几行日志：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2022/07/09 12:20:23 error: HTTPRequest
Get &amp;#34;https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/v8.15.0/themes/default.omp.json&amp;#34;: context deadline exceeded
2022/07/09 12:20:23 HTTPRequest duration: 5.0072715s, args: https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/v8.15.0/themes/default.omp.json
2022/07/09 12:20:23 downloadConfig duration: 5.0072715s, args: https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/v8.15.0/themes/default.omp.json
2022/07/09 12:20:23 resolveConfigPath duration: 5.0072715s, args:
2022/07/09 12:20:23 Init duration: 5.0072715s, args:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;好家伙，原来每次启动，oh-my-posh还去github上下载了一个文件。&lt;/p&gt;
&lt;p&gt;因为下载文件而拖慢了整个启动过程。&lt;/p&gt;
&lt;p&gt;然后在github issue上倒找：&lt;a href=&#34;https://github.com/JanDeDobbeleer/oh-my-posh/issues/2251&#34;&gt;https://github.com/JanDeDobbeleer/oh-my-posh/issues/2251&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;oh-my-posh init pwsh &amp;ndash;config ~/default.omp.json&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;其中关键一点是启动oh-my-posh的时候，如果不用&amp;ndash;config配置默认的文件，oh-my-posh就回去下载默认的配置文件。&lt;/p&gt;
&lt;p&gt;所以问题就好解决了。&lt;/p&gt;
&lt;p&gt;首先下载&lt;a href=&#34;https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/v8.15.0/themes/default.omp.json&#34;&gt;https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/v8.15.0/themes/default.omp.json&lt;/a&gt; 这个文件，然后再保存到用户的家目录里面。&lt;/p&gt;
&lt;p&gt;然后打开terminal,  输入： code $profile&lt;/p&gt;
&lt;p&gt;前提是你的电脑上要装过vscode,  然后给默认的profile加上&amp;ndash;config参数，试了一下，问题解决。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;oh-my-posh init pwsh --config ~/default.omp.json | Invoke-Expression
Import-Module PSReadLine
New-Alias -Name ll -Value ls

if ($host.Name -eq &amp;#39;ConsoleHost&amp;#39;)
{
    Import-Module PSReadLine
    Set-PSReadLineOption -EditMode Emacs
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>windows11 安装 oh my posh</title>
      <link>https://wdd.js.org/posts/2022/07/ssgb9f/</link>
      <pubDate>Fri, 08 Jul 2022 13:30:15 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/ssgb9f/</guid>
      <description>&lt;h1 id=&#34;0-前提条件&#34;&gt;0. 前提条件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;系统是windows11&lt;/li&gt;
&lt;li&gt;已经安装过powershell 7&lt;/li&gt;
&lt;li&gt;安装过vscode编辑器&lt;/li&gt;
&lt;li&gt;默认情况下，所有命令均在powershell下执行的&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1-安装-oh-my-posh&#34;&gt;1. 安装 oh my posh&lt;/h1&gt;
&lt;h2 id=&#34;12-方式1-通过代理安装&#34;&gt;1.2 方式1： 通过代理安装&lt;/h2&gt;
&lt;p&gt;假如你有socks代理，那么可以用winget安装&lt;/p&gt;
&lt;p&gt;打开你的power shell 执行类似下面的命令，来配置代理&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$env:all_proxy=&amp;#34;socks5://127.0.0.1:1081&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果没有socks代理，最好不要用winget安装，因为速度太慢。&lt;!-- raw HTML omitted --&gt;然后执行：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;winget install JanDeDobbeleer.OhMyPosh -s winget
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;12-方式2-下载exe手工安装&#34;&gt;1.2 方式2： 下载exe，手工安装&lt;/h2&gt;
&lt;p&gt;再oh-my-posh的release界面 &lt;a href=&#34;https://github.com/JanDeDobbeleer/oh-my-posh/releases&#34;&gt;https://github.com/JanDeDobbeleer/oh-my-posh/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以看到很多版本的文件，windows选择install-amd64.exe,  下载完了之后手工点击执行来安装。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/JanDeDobbeleer/oh-my-posh/releases/download/v8.13.1/install-amd64.exe&#34;&gt;https://github.com/JanDeDobbeleer/oh-my-posh/releases/download/v8.13.1/install-amd64.exe&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-配置-oh-my-posh&#34;&gt;2. 配置 oh-my-posh&lt;/h1&gt;
&lt;p&gt;在powershell中执行下面的命令，vscode回打开对应的文件。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;code $PROFILE
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在文件中粘贴如下的内容：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;oh-my-posh init pwsh | Invoke-Expression
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;保存文件，然后再次打开windows termial, 输入下面的命令来reload profile&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;. $PROFILE
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后你可以看到终端出现了提示符，有可能有点卡，第一次是有点慢的。但是很多符号可能是乱码，因为是没有配置相关的字体。&lt;/p&gt;
&lt;h1 id=&#34;3-字体配置&#34;&gt;3. 字体配置&lt;/h1&gt;
&lt;h2 id=&#34;31-安装字体&#34;&gt;3.1 安装字体&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;下载文件 &lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip&#34;&gt;https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;解压文件&lt;/li&gt;
&lt;li&gt;打开设置，在个性化》字体中，将之前下载好的所有字体，拖动到下面的红框中，字体就会自动安装&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/07/ssgb9f/2022-10-29-20-34-37.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;32-windows-termial字体配置&#34;&gt;3.2 windows termial字体配置&lt;/h2&gt;
&lt;p&gt;用vscode打开对windows termial的配置json文件，在profiles.default.font中配置如下字体&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;font&amp;#34;:
{
      &amp;#34;face&amp;#34;: &amp;#34;MesloLGM NF&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/07/ssgb9f/2022-10-29-20-34-45.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于我在闲鱼卖二手这件事</title>
      <link>https://wdd.js.org/posts/2022/07/guv65u/</link>
      <pubDate>Thu, 07 Jul 2022 21:34:28 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/07/guv65u/</guid>
      <description>&lt;p&gt;自从我换了新款的惠普战X之后，我的老搭档，2017款的macbook pro， 已经在沙发上躺了很久了。&lt;/p&gt;
&lt;p&gt;我拍了拍它的脑袋，对它语重心长的说：  人不能闲着，闲着容易生病，笔记本也是如此。虽然你已经是5年前的mbp了， 但是廉颇老矣，尚能饭否？&lt;/p&gt;
&lt;p&gt;mbp面无表情，胡子邋遢，朝我瞥了一眼，像是嘲讽，又像是不满，一口气吸掉还剩一点的香烟，有气无力的说：我已经工作五年了，按照国家的法律规定，已经到了退休的年龄，是该享受享受了。&lt;/p&gt;
&lt;p&gt;我&lt;/p&gt;</description>
    </item>
    <item>
      <title>最后一篇blog， 是时候说再见了</title>
      <link>https://wdd.js.org/posts/2022/06/fk9rgk/</link>
      <pubDate>Thu, 30 Jun 2022 22:40:56 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/06/fk9rgk/</guid>
      <description>&lt;p&gt;我最早用过有道，我觉得有道很烂。&lt;/p&gt;
&lt;p&gt;后来我开始用印象笔记，我发现印象笔记更烂。不仅界面做的让人觉得侮辱眼睛，即使你开了会员也要看广告。 印象笔记会员被割了韭菜，充到了2026年，但是我最近一两年我基本没有用过印象笔记。&lt;/p&gt;
&lt;p&gt;后来我遇到了文档blog界的new school,  notion、语雀、飞书， 就完全抛弃了有道和印象笔记的old school。&lt;/p&gt;
&lt;p&gt;做任何事情，都需要动机。&lt;/p&gt;
&lt;p&gt;写公开博客也是如此。可能有以下原因&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提升个人影响力&lt;/li&gt;
&lt;li&gt;提高自己的表达能力&lt;/li&gt;
&lt;li&gt;知识积累和分享&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;公开博客需要三方角力，平台方、内容生产者、内容消费者(读者)。&lt;/p&gt;
&lt;p&gt;作为内容生产者，我们从选择一个平台是需要很多理由的。可能是UI界面的颜值，可能是一见钟情界面交互。&lt;/p&gt;
&lt;p&gt;就像男女的相亲，首先要被外貌吸引，才能有下文。&lt;/p&gt;
&lt;p&gt;然而除了那一见钟情的必然是短暂的，除此之外，我发现了另一个重要原因：&lt;strong&gt;迁移成本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我以前决定不用印象的时候，印象笔记上还有我将近一千多篇的笔记。虽说印象笔记有导出工具，但是只有当你用的时候，你才能体会导出工具是多坑爹。&lt;/p&gt;
&lt;p&gt;假如你一天决定不用这个平台了，你想把所有你产出的内容都迁移出来，你要花费多少成本呢？ 很多人都没有考虑过这件事情。&lt;/p&gt;
&lt;p&gt;就像温水煮青蛙，只有感觉到烫的时候，青蛙才会准备跳走，但是青蛙还能跳出去吗？ 可能他的腿都已经煮熟了吧？&lt;/p&gt;
&lt;p&gt;从另外一个方面来说，作为内容生产者，我们要花时间，花精力来写文章，还要花金钱来买平台的会员，然而平台对内容生产者来说，有什么回报呢？&lt;/p&gt;
&lt;p&gt;我们只不过是为他人做嫁衣罢了。就像旧时代的长工，只不过在一个大一点的地主家干活了吧。&lt;/p&gt;
&lt;p&gt;再见了，语雀。&lt;/p&gt;
&lt;p&gt;新的bolg地址:  &lt;a href=&#34;https://wdd.js.org/&#34;&gt;wdd.js.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我以前没得选，我现在想选择做个自由人&lt;/p&gt;</description>
    </item>
    <item>
      <title>vfs_cache_pressure和min_free_kbytes对cache的影响</title>
      <link>https://wdd.js.org/posts/2022/06/eafeid/</link>
      <pubDate>Wed, 29 Jun 2022 06:57:56 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/06/eafeid/</guid>
      <description>&lt;h1 id=&#34;环境&#34;&gt;环境&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;kernal Linux 5.15.48-1-MANJARO #1 SMP PREEMPT Thu Jun 16 12:33:56 UTC 2022 x86_64 GNU/Linux&lt;/li&gt;
&lt;li&gt;docker  20.10.16&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;初始内存&#34;&gt;初始内存&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;               total        used        free      shared  buff/cache   available
内存：       30Gi       1.9Gi        19Gi       2.0Mi       9.6Gi        28Gi
交换：         0B          0B          0B
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;初始配置&#34;&gt;初始配置&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sysctl -n vm.min_free_kbytes
67584
sysctl -n vm.vfs_cache_pressure
200
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;vfs_cache_pressure的对内存的影响&#34;&gt;vfs_cache_pressure的对内存的影响&lt;/h1&gt;
&lt;p&gt;vfs_cache_pressure设置为200， 理论系统倾向于回收内存&lt;/p&gt;</description>
    </item>
    <item>
      <title>manjaro 安装 packettracer</title>
      <link>https://wdd.js.org/posts/2022/06/manjaro-packettracer/</link>
      <pubDate>Wed, 15 Jun 2022 18:54:11 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/06/manjaro-packettracer/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 将会下载packettracer到当前目录下
yay -G packettracer
cd packettracer

# Download PacketTracer_731_amd64.deb to this folder
makepkg

sudo pacman -U packettracer-7.3.1-2-x86_64.pkg.tar.xz
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意，如果下载的packetraacer包不是PacketTracer_731_amd64.deb， 则需要修改PKGBUILD文件中的, souce对应的文件名。 例如我下载的packettracer是Cisco_Packet_Tracer_811_Ubuntu_64bit_cf200f5851.deb&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;source=(&amp;#39;local://Cisco_Packet_Tracer_811_Ubuntu_64bit_cf200f5851.deb&amp;#39;                                                                                                       
    &amp;#39;packettracer.sh&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意：最新版的packertracer打开后，必须登陆账号才能使用，有点坑。 花费点时间注册了账号后，才能用。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/06/manjaro-packettracer/2022-10-29-19-34-07.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.manjaro.org/t/how-to-get-cisco-packet-tracer-on-manjaro/25506/5&#34;&gt;https://forum.manjaro.org/t/how-to-get-cisco-packet-tracer-on-manjaro/25506/5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>mysql placeholder的错误使用方式</title>
      <link>https://wdd.js.org/posts/2022/06/vvdqw6/</link>
      <pubDate>Sat, 11 Jun 2022 23:51:34 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/06/vvdqw6/</guid>
      <description>&lt;div class=&#34;notice error&#34;&gt;
  &lt;div class=&#34;notice-title&#34;&gt;
    &lt;i class=&#34;fa fa-times-circle&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;Error
  &lt;/div&gt;
  &lt;div class=&#34;notice-content&#34;&gt;EXTRA *mysql.MySQLError=Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;lsquo;? (&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;然而我仔细看了看sql语句，没有看出来究竟哪里有sql报错。&lt;/p&gt;
&lt;p&gt;然而当我把作为placeholder的问号去掉，直接用表的名字，sql是可以直接执行的。我意识到这个可能是和placeholder有关。&lt;/p&gt;
&lt;p&gt;搜索了一下，看到一个链接 &lt;a href=&#34;https://github.com/go-sql-driver/mysql/issues/848&#34;&gt;https://github.com/go-sql-driver/mysql/issues/848&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Placeholder can&amp;rsquo;t be used for table name or column name. It&amp;rsquo;s MySQL spec. Not bug of this project.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;大意是说，placeholder是不能作为表名或者列名的。&lt;/p&gt;
&lt;p&gt;在mysql关于prepared文档介绍中，在允许使用prepared的语句里，没有看到create table可以用placeholder&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html&#34;&gt;https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;prepared语句的优点有以下几个&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优化查询速度&lt;/li&gt;
&lt;li&gt;防止sql注入&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是也有一些限制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不是所有语句都能用prepared语句。常见的用法应该是作为select where之后的条件，或者INSERT语句之后的值&lt;/li&gt;
&lt;li&gt;不支持一个sql中多条查询语句的形式&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Hugo博客常见问题以及解决方案</title>
      <link>https://wdd.js.org/posts/2022/05/hugo-blog-faq/</link>
      <pubDate>Sat, 28 May 2022 21:08:43 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/05/hugo-blog-faq/</guid>
      <description>&lt;h1 id=&#34;如何在markdown中插入图片&#34;&gt;如何在markdown中插入图片&lt;/h1&gt;
&lt;p&gt;在static 目录中创建 images 目录，然后把图片放到images目录中。&lt;/p&gt;
&lt;p&gt;在文章中引用的时候&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;![](/images/qianxun.jpeg#center)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/images/qianxun.jpeg#center&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;notice warning&#34;&gt;
  &lt;div class=&#34;notice-title&#34;&gt;
    &lt;i class=&#34;fa fa-exclamation-triangle&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;Warning
  &lt;/div&gt;
  &lt;div class=&#34;notice-content&#34;&gt;&lt;p&gt;我之前创建的文件夹的名字叫做 img, 本地可以正常显示，但是部署之后，就无法显示图片了。&lt;/p&gt;
&lt;p&gt;最后我把img改成images才能正常在网页上显示。&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>Shell 教程技巧</title>
      <link>https://wdd.js.org/posts/2022/05/shell-101/</link>
      <pubDate>Sat, 28 May 2022 12:39:50 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/05/shell-101/</guid>
      <description>&lt;h1 id=&#34;复制文本到剪贴板&#34;&gt;复制文本到剪贴板&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt install xclip
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;vim ~/.zshrc&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;alias copy=&amp;#39;xclip -selection clipboard&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样我们就可以用copy命令来考本文件内容到系统剪贴板了。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;copy aaa.txt
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;判断工作区是否clean&#34;&gt;判断工作区是否clean&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;git status --porcelain&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Working directory clean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Uncommitted changes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>C和gdb调试</title>
      <link>https://wdd.js.org/posts/2022/05/c-and-gdb/</link>
      <pubDate>Sat, 28 May 2022 12:35:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/05/c-and-gdb/</guid>
      <description>&lt;h1 id=&#34;开启coredump&#34;&gt;开启coredump&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#如果该命令的返回值是0，则表示不开启coredump
ulimit -c

# 开启coredump
ulimit -c unlimited
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;准备c文件&#34;&gt;准备c文件&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;


void crash() {
    char * p = NULL;
    *p = 0;
}

int main(){
    printf(&amp;#34;hello world 1&amp;#34;);
    int phone [4];
    phone[232] = 12;
    crash();
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;编译执行&#34;&gt;编译执行&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gcc -g  hello.c -o hello
./hello
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后程序崩溃，产生core文件。&lt;/p&gt;
&lt;h1 id=&#34;gdb分析&#34;&gt;gdb分析&lt;/h1&gt;
&lt;p&gt;gdb 启动的二进制文件 core文件&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gdb ./hello ./core
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后输入： bt full 可以查看到更详细的信息&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  c-sandbox gdb ./hello ./core
GNU gdb (Raspbian 7.12-6) 7.12.0.20161007-git
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type &amp;#34;show copying&amp;#34;
and &amp;#34;show warranty&amp;#34; for details.
This GDB was configured as &amp;#34;arm-linux-gnueabihf&amp;#34;.
Type &amp;#34;show configuration&amp;#34; for configuration details.
For bug reporting instructions, please see:
&amp;lt;http://www.gnu.org/software/gdb/bugs/&amp;gt;.
Find the GDB manual and other documentation resources online at:
&amp;lt;http://www.gnu.org/software/gdb/documentation/&amp;gt;.
For help, type &amp;#34;help&amp;#34;.
Type &amp;#34;apropos word&amp;#34; to search for commands related to &amp;#34;word&amp;#34;...
Reading symbols from ./hello...done.
[New LWP 25571]
Core was generated by `./hello&amp;#39;.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0001045c in crash () at hello.c:6
6           *p = 0;
(gdb) bt full
#0  0x0001045c in crash () at hello.c:6
        p = 0x0
#1  0x00010490 in main () at hello.c:13
        phone = {66328, 0, 0, 0}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Tmux 常见问题以及解决方案</title>
      <link>https://wdd.js.org/posts/2022/05/tmux-faq/</link>
      <pubDate>Sat, 28 May 2022 12:30:58 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/05/tmux-faq/</guid>
      <description>&lt;h1 id=&#34;oh-my-tmux-关闭第二键ctrl-a&#34;&gt;oh my tmux 关闭第二键ctrl-a&lt;/h1&gt;
&lt;p&gt;ctrl-a可以用来移动光标到行首的，不要作为tmux的第二键&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;set -gu prefix2
unbind C-a
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;tmux-reload-config&#34;&gt;Tmux reload config&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;:source-file ～/.tmux.conf
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;tmux-显示时间&#34;&gt;tmux 显示时间&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ctrl b + t
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;tmux从当前目录打开新的窗口&#34;&gt;tmux从当前目录打开新的窗口&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bind &amp;#39;&amp;#34;&amp;#39; split-window -c &amp;#34;#{pane_current_path}&amp;#34;
bind % split-window -h -c &amp;#34;#{pane_current_path}&amp;#34;
bind c new-window -c &amp;#34;#{pane_current_path}&amp;#34;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>hugo博客增加mermaid 绘图插件</title>
      <link>https://wdd.js.org/posts/2022/05/02-hugo-add-mermaid/</link>
      <pubDate>Fri, 27 May 2022 11:49:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/05/02-hugo-add-mermaid/</guid>
      <description>&lt;h1 id=&#34;step1&#34;&gt;step1&lt;/h1&gt;
&lt;p&gt;在layouts/baseof.html 的最后追加如下内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ if .Store.Get &amp;#34;hasMermaid&amp;#34; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;module&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mermaid&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.esm.min.mjs&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mermaid&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;initialize&lt;/span&gt;({ &lt;span style=&#34;color:#a6e22e&#34;&gt;startOnLoad&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; });
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;step2&#34;&gt;step2:&lt;/h1&gt;
&lt;p&gt;在layouts/_default/_markup/render-codeblock-mermaid.html&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;pre&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mermaid&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{- .Inner | htmlEscape | safeHTML }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;pre&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ .Page.Store.Set &amp;#34;hasMermaid&amp;#34; true }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;在blog中增加如下代码&#34;&gt;在blog中增加如下代码&lt;/h1&gt;
&lt;pre class=&#34;mermaid&#34;&gt;pie
    title French Words I Know
    &amp;#34;Merde&amp;#34; : 50
    &amp;#34;Oui&amp;#34; : 35
    &amp;#34;Alors&amp;#34; : 10
    &amp;#34;Non&amp;#34; : 5
&lt;/pre&gt;
&lt;pre class=&#34;mermaid&#34;&gt;sequenceDiagram
    title French Words I Know
    autonumber
    Alice-&amp;gt;&amp;gt;Bob: hello
    Bob--&amp;gt;&amp;gt;Alice: hi
    Alice-&amp;gt;Bob: talking
&lt;/pre&gt;</description>
    </item>
    <item>
      <title>klogg: 目前我最喜欢的日志查看工具</title>
      <link>https://wdd.js.org/posts/2022/04/cipwms/</link>
      <pubDate>Wed, 13 Apr 2022 19:41:53 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/04/cipwms/</guid>
      <description>&lt;h1 id=&#34;项目信息&#34;&gt;项目信息&lt;/h1&gt;
&lt;p&gt;github地址 &lt;a href=&#34;https://github.com/variar/klogg&#34;&gt;https://github.com/variar/klogg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/04/cipwms/2022-10-29-19-44-57.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-安装&#34;&gt;1. 安装&lt;/h1&gt;
&lt;p&gt;klogg是个跨平台软件，windows, mac, linux都可以安装。具体安装方式参考github项目地址&lt;/p&gt;
&lt;h1 id=&#34;2-界面布局&#34;&gt;2. 界面布局&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/04/cipwms/2022-10-29-19-45-05.png&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;文件信息栏&lt;/li&gt;
&lt;li&gt;日志栏&lt;/li&gt;
&lt;li&gt;过滤器设置栏&lt;/li&gt;
&lt;li&gt;过滤后的日志显示栏&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;3-文件加载&#34;&gt;3. 文件加载&lt;/h1&gt;
&lt;p&gt;klogg支持多种方式加载日志文件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将日志文件拖动到klogg中&lt;/li&gt;
&lt;li&gt;直接将常见的压缩包文件拖动到klogg中，klogger将会自动将其解压后展示&lt;/li&gt;
&lt;li&gt;支持从http url地址下载日志，然后查看&lt;/li&gt;
&lt;li&gt;支持从剪贴板复制日志，然后展示&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/04/cipwms/2022-10-29-19-45-13.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-过滤表达式&#34;&gt;4. 过滤表达式&lt;/h1&gt;
&lt;p&gt;因为klogg支持正则过滤，所以他的功能就非常强悍了。&lt;/p&gt;
&lt;p&gt;逻辑表达式&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;表达式&lt;/th&gt;
          &lt;th&gt;例子&lt;/th&gt;
          &lt;th&gt;备注&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;与  and&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;open&amp;rdquo; and &amp;ldquo;close&amp;rdquo;&lt;/td&gt;
          &lt;td&gt;包含open，并且包含close&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;或 or&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;open&amp;rdquo; or &amp;ldquo;close&amp;rdquo;&lt;/td&gt;
          &lt;td&gt;包含open, 或者 close&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;非 not&lt;/td&gt;
          &lt;td&gt;not(&amp;ldquo;open&amp;rdquo;)&lt;/td&gt;
          &lt;td&gt;不包含open&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;与或非同时支持复杂的运算，例如包含open 但是不包含close: &lt;code&gt;&amp;quot;open&amp;quot; and not(&amp;quot;close&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-快捷方式&#34;&gt;5. 快捷方式&lt;/h1&gt;
&lt;p&gt;klogg的快捷方式很多参考了vim, vim使用者非常高兴。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;键&lt;/th&gt;
          &lt;th&gt;动作&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;arrows&lt;/td&gt;
          &lt;td&gt;上下或者左右移动&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;[number] j/k&lt;/td&gt;
          &lt;td&gt;支持用j/k上下移动&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;h/l&lt;/td&gt;
          &lt;td&gt;支持用h/l左右移动&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;^ or $&lt;/td&gt;
          &lt;td&gt;滚动到某行的开始或者结尾&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;[number] g&lt;/td&gt;
          &lt;td&gt;跳到对应的行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;entered&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;G&lt;/td&gt;
          &lt;td&gt;跳到第一行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Shift+G&lt;/td&gt;
          &lt;td&gt;跳到最后一行&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Alt+G&lt;/td&gt;
          &lt;td&gt;显示跳到某一行的对话框&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;rsquo; or &amp;quot;&lt;/td&gt;
          &lt;td&gt;在当前屏幕快速搜索&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;(forward and backward)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;n or N&lt;/td&gt;
          &lt;td&gt;向前或者向后跳&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;* or .&lt;/td&gt;
          &lt;td&gt;search for the next occurrence of the currently selected text&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;/ or ,&lt;/td&gt;
          &lt;td&gt;search for the previous occurrence of the currently selected text&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;f&lt;/td&gt;
          &lt;td&gt;流的方式，类似 tail -f&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;m&lt;/td&gt;
          &lt;td&gt;标记某一行，标记后的行会自动加入过滤结果中&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;[ or ]&lt;/td&gt;
          &lt;td&gt;跳转到上一个或者下一标记点&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;+ or -&lt;/td&gt;
          &lt;td&gt;调整过滤窗口的尺寸&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;v&lt;/td&gt;
          &lt;td&gt;循环切换各种显示模式&lt;!-- raw HTML omitted --&gt;- Matches: 只显式匹配的内容&lt;!-- raw HTML omitted --&gt;- Marks: 只显式标记的内容&lt;!-- raw HTML omitted --&gt;- Marks and Matchs：显示匹配和标记的内容&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;(Marks and Matches -&amp;gt; Marks -&amp;gt; Matches)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;F5&lt;/td&gt;
          &lt;td&gt;重新加载文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Ctrl+S&lt;/td&gt;
          &lt;td&gt;Set focus to search string edit box&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Ctrl+Shift+O&lt;/td&gt;
          &lt;td&gt;打开对话框去选择其他文件&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/variar/klogg/blob/master/DOCUMENTATION.md&#34;&gt;https://github.com/variar/klogg/blob/master/DOCUMENTATION.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>macbook pro 使用1664天的感受</title>
      <link>https://wdd.js.org/posts/2022/04/er3vob/</link>
      <pubDate>Mon, 04 Apr 2022 21:29:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/04/er3vob/</guid>
      <description>&lt;p&gt;我之前写过一篇文章&lt;a href=&#34;https://www.yuque.com/wangdd/blog/kxpswu&#34;&gt;《macbook pro使用三年后的感受》&lt;/a&gt;，今天这篇文章是用4.5年的感受。&lt;/p&gt;
&lt;p&gt;再次梳理一下，中间遇到过的问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;蝴蝶键盘很早有有些问题了，最近疫情在家，键盘被用坏了，J键直接坏了。只能外接键盘来用&lt;/li&gt;
&lt;li&gt;屏幕下方出现淡红色的纹路，不太明显，基本不影响使用&lt;/li&gt;
&lt;li&gt;中间我自己给macbook换过一次电池，换电池之前只要不插电，macbook很容易就关机了&lt;/li&gt;
&lt;li&gt;风扇经常转，噪音有点吵，我已经觉得无所谓了&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;17年买这台电脑的时候，应该是9400左右。配置应该是最低配的 i5双核2.3Ghz, 8G内存，128硬盘的。&lt;/p&gt;
&lt;p&gt;有些人可能惊讶，128G的硬盘怎么能够用的。但是我的确够用，我的磁盘还有将近50G的剩余空间呢。&lt;/p&gt;
&lt;p&gt;我不是视频或者影音工作者，用的软件比较少。整个应用程序所占用的空间才4个多G。剩下的文稿可能大部分是代码。&lt;/p&gt;
&lt;p&gt;由于我我基本上都是远程用ssh连上nuc上开发，所以mac上的资料更少。&lt;/p&gt;
&lt;p&gt;但是macbook键盘坏了这个问题，是不能忍的。偶尔要移动办工的时候，不可能再带个外接键盘吧。&lt;/p&gt;
&lt;p&gt;是时候准备和陪伴我4.5年的电脑说再见了。&lt;/p&gt;
&lt;p&gt;本来想买14寸的macbook pro m1的，但是重量的增加以及很丑的刘海也是我不能忍的。&lt;/p&gt;
&lt;p&gt;所以我觉得我会买一台轻便点的windows笔记本，而且windows还有一个很吸引我的点，就是linux子系统。这个linux子系统，要比mac的系统更加linux。&lt;/p&gt;
&lt;p&gt;各位同学有没有推荐的windows的轻便笔记本呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>github clone加速</title>
      <link>https://wdd.js.org/posts/2022/03/sny4rb/</link>
      <pubDate>Tue, 29 Mar 2022 09:17:23 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/03/sny4rb/</guid>
      <description>&lt;p&gt;我有一个github仓库，&lt;a href=&#34;https://github.com/wangduanduan/opensips&#34;&gt;https://github.com/wangduanduan/opensips&lt;/a&gt;， 这个源码比较大，git clone 比较慢。&lt;/p&gt;
&lt;p&gt;我们使用&lt;a href=&#34;https://www.gitclone.com/&#34;&gt;https://www.gitclone.com/&lt;/a&gt;提供的加速服务。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 从github上clone&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/wangduanduan/opensips.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 从gitclone上clone&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 只需要在github前面加上gitclone.com/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 速度就非常快，达到1mb/s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://gitclone.com/github.com/wangduanduan/opensips.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是这时候git repo的仓库地址是 &lt;a href=&#34;https://gitclone.com/github.com/wangduanduan/opensips.git&#34;&gt;https://gitclone.com/github.com/wangduanduan/opensips.git&lt;/a&gt;，并不是真正的仓库地址，而且我更喜欢用的是ssh方式的远程地址，所以我们就需要修改一下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote set-url origin git@github.com:wangduanduan/opensips.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>[未完成] 浪潮之底系列 - tcpdump的故事</title>
      <link>https://wdd.js.org/posts/2022/03/tcpdump/</link>
      <pubDate>Sun, 27 Mar 2022 17:33:18 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/03/tcpdump/</guid>
      <description>&lt;p&gt;故事发生在1988年的美国。这一年互联网的始祖网络，阿帕网已经诞生了将近20年。而我们所熟知的linux将在三年后，也就是1991才出现。&lt;/p&gt;
&lt;p&gt;在1988年，这时候的互联网只有阿帕网。 然而这个网络并没有想象中的那么好用，他还存在很多问题，而且也经常崩溃。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/03/tcpdump/2022-10-29-20-30-11.png&#34;&gt;
解决阿帕网崩溃的这个问题，落到了LBL（Lawrence Berkeley National Laboratory&lt;!-- raw HTML omitted --&gt;实验室的肩上。&lt;/p&gt;
&lt;p&gt;这个实验室有四个牛人，他们同时也是tcpdump的发明人。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Van Jacobson&lt;/li&gt;
&lt;li&gt;Sally Floyd&lt;/li&gt;
&lt;li&gt;Vern Paxson&lt;/li&gt;
&lt;li&gt;Steve McCanne&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个实验室主要的研究方向是TCP拥塞控制、BSD包过滤、VoIP等方向。&lt;/p&gt;
&lt;p&gt;为了解决阿帕网经常崩溃的问题，就必须要有一个好用的抓包工具。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/03/tcpdump/2022-10-29-20-30-26.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;本着不重复造轮子的原则，这时候也已经又了一个叫做etherfind的工具，但是这个工具有以下的问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;包过滤的语法非常蹩脚&lt;/li&gt;
&lt;li&gt;协议编解码能力非常弱&lt;/li&gt;
&lt;li&gt;性能也非常弱&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总之一句话，他们认为etherfind不行。&lt;/p&gt;
&lt;p&gt;工欲善其事，必先利其器。所以他们就想创造一个新的工具。这个工具必须要有以下的特征&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;能够从协议栈底层过滤包&lt;/li&gt;
&lt;li&gt;把高级的过滤语法能够编译的底层的代码&lt;/li&gt;
&lt;li&gt;能够在驱动层进行过滤&lt;/li&gt;
&lt;li&gt;创建了一个内核模块叫做 Berkeley Packet Filter(BPF)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/03/tcpdump/2022-10-29-20-30-39.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/ARPAnet/3562284&#34;&gt;https://baike.baidu.com/item/ARPAnet/3562284&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>为什么我又开始使用Firefox浏览器</title>
      <link>https://wdd.js.org/posts/2020/02/yva0h1/</link>
      <pubDate>Fri, 25 Feb 2022 23:03:41 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/02/yva0h1/</guid>
      <description>&lt;p&gt;对于浏览器，我有以下几个需求&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;能在所有平台上运行，包括mac, windows, linux, ios, 安卓&lt;/li&gt;
&lt;li&gt;能够非常方便的同步浏览器之间的数据，例如书签之类的&lt;/li&gt;
&lt;li&gt;能够很方便的安装扩展程序，无需翻墙&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;按照这些条件，只有Firefox能否满足。&lt;/p&gt;
&lt;p&gt;当然安装使用Firefox的时候，也出现了几小插曲。&lt;/p&gt;
&lt;h1 id=&#34;macos&#34;&gt;macos&lt;/h1&gt;
&lt;p&gt;我在ios上登录Firefox上的账户，在MacOS的Firefox却无法登陆，查了才发现，原来FireFox的账号分为国内版和国际版，两者之间数据不通，所以在macos上，也要登陆国内版本，就是带有火狐通行证的登陆页面。&lt;/p&gt;
&lt;p&gt;需要在同步页面点击切换至本地服务。&lt;/p&gt;
&lt;h1 id=&#34;linuxmanjaro&#34;&gt;linux/manjaro&lt;/h1&gt;
&lt;p&gt;manjaro上安装的firefox居然没有切换本地服务这个选项，后来发现这个浏览器上没有附加组件管理器&lt;!-- raw HTML omitted --&gt;所以需要去 &lt;a href=&#34;http://mozilla.com.cn/moz-addon.html&#34;&gt;http://mozilla.com.cn/moz-addon.html&lt;/a&gt;， 安装好附加组件管理器，登陆的时候，应该就可以跳转到带有火狐通行证的登陆页面了。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>有意思的命令行工具</title>
      <link>https://wdd.js.org/posts/2022/02/</link>
      <pubDate>Fri, 25 Feb 2022 09:23:35 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/02/</guid>
      <description>&lt;h1 id=&#34;1-datamash&#34;&gt;1. datamash&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/datamash/&#34;&gt;https://www.gnu.org/software/datamash/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能够方便的计算数据的平均值，最大值，最小值等数据。&lt;/p&gt;
&lt;h1 id=&#34;2-textsql&#34;&gt;2. textsql&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dinedal/textql&#34;&gt;https://github.com/dinedal/textql&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能够方便的对csv文件做sql查询&lt;/p&gt;
&lt;h1 id=&#34;3-graph-cli&#34;&gt;3. graph-cli&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mcastorina/graph-cli&#34;&gt;https://github.com/mcastorina/graph-cli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能够直接读取csv文件，然后绘图。&lt;/p&gt;</description>
    </item>
    <item>
      <title>manjaro kde 之旅</title>
      <link>https://wdd.js.org/posts/2022/01/</link>
      <pubDate>Tue, 18 Jan 2022 09:39:05 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2022/01/</guid>
      <description>&lt;h1 id=&#34;1-安装vivaldi浏览器&#34;&gt;1. 安装vivaldi浏览器&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pamac install vivaldi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参考：&lt;a href=&#34;https://wiki.manjaro.org/index.php/Vivaldi_Browser&#34;&gt;https://wiki.manjaro.org/index.php/Vivaldi_Browser&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-关闭三次密码错误锁定&#34;&gt;2. 关闭三次密码错误锁定&lt;/h1&gt;
&lt;p&gt;修改/etc/security/faillock.conf， 将其中的deny取消注释，并改为0，然后注销。重新登录。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;deny = 0
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-禁用大写锁定键&#34;&gt;3. 禁用大写锁定键&lt;/h1&gt;
&lt;p&gt;在输入设备中，选择键盘-》高级》 Caps Lock行为， 选中Caps Lock被禁用， 然后应用。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2022/01/2022-10-29-20-06-37.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>开源免费的ssh终端工具</title>
      <link>https://wdd.js.org/posts/2021/12/</link>
      <pubDate>Wed, 22 Dec 2021 16:53:05 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/12/</guid>
      <description>&lt;h1 id=&#34;要求&#34;&gt;要求&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;[必须] 能够保存密码, 或者用私钥登录&lt;/li&gt;
&lt;li&gt;[必须] 能够支持ftp/sftp&lt;/li&gt;
&lt;li&gt;[必须] 开源免费&lt;/li&gt;
&lt;li&gt;[必须] 界面漂亮，支持中文字符&lt;/li&gt;
&lt;li&gt;[可选] 支持同步ssh配置&lt;/li&gt;
&lt;li&gt;[必须] 支持跨平台&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tabby&#34;&gt;Tabby&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;A terminal for a more modern age (formerly Terminus)
&lt;a href=&#34;https://github.com/Eugeny/tabby&#34;&gt;https://github.com/Eugeny/tabby&lt;/a&gt;
&lt;a href=&#34;https://tabby.sh/&#34;&gt;https://tabby.sh/&lt;/a&gt;
25.7k Star
基于electron, 主要开发语言typescript&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;electerm&#34;&gt;Electerm&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Terminal/ssh/sftp client(linux, mac, win)
&lt;a href=&#34;https://github.com/electerm/electerm&#34;&gt;https://github.com/electerm/electerm&lt;/a&gt;
&lt;a href=&#34;https://electerm.github.io/electerm/&#34;&gt;https://electerm.github.io/electerm/&lt;/a&gt;
4.8k star
基于electron, 主要开发语言javascript&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;windterm&#34;&gt;WindTerm&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;A Quicker and better SSH/Telnet/Serial/Shell/Sftp client for DevOps.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kingToolbox/WindTerm&#34;&gt;https://github.com/kingToolbox/WindTerm&lt;/a&gt;
2.6K star
主要开发语言: C&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>使用brew作为deepin的包管理工具</title>
      <link>https://wdd.js.org/posts/2021/11/</link>
      <pubDate>Thu, 18 Nov 2021 08:42:53 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/11/</guid>
      <description>&lt;p&gt;11月2号，我的主力开发工具macbook开始退役。&lt;/p&gt;
&lt;p&gt;我换了nuc11 i7,  安装了国产的deepin(深度)操作系统。总体体验蛮好的，只是apt-get的软件包里，太多都是很老的包。所以我想到以前用mac的包管理工具homebrew, 据说它不仅仅可以在mac上工作，主流的linux也是能够使用的。&lt;/p&gt;
&lt;p&gt;homebrew的介绍是：The Missing Package Manager for macOS (or Linux)。也就是说brew完全可以在linux上运行。&lt;/p&gt;
&lt;p&gt;安装方式也很简单：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/bin/bash -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的shell执行之后，brew就安装成功了。&lt;/p&gt;
&lt;p&gt;和mac不同的是，linux homebrew的安装包的可执行命令的目录是：/home/linuxbrew/.linuxbrew/bin, 所以需要把它加入到PATH中，安装的软件才能正确执行。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://brew.sh/&#34;&gt;https://brew.sh/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>印象笔记不太智能的智能替换</title>
      <link>https://wdd.js.org/posts/2021/10/</link>
      <pubDate>Sat, 02 Oct 2021 12:25:34 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/10/</guid>
      <description>&lt;h1 id=&#34;为什么是印象笔记&#34;&gt;为什么是印象笔记&lt;/h1&gt;
&lt;p&gt;作为一个笔记，或者说文本编辑器，一个最基本的要求，就是能按照用户的按键输入。而不是用户输入了A，然后在页面上看到了B。&lt;/p&gt;
&lt;p&gt;但是对于印象笔记来说，我已经遇到过好多次因为输入问题，几乎想要放弃印象笔记。但是就目前来讲，仍然没有好用的替代品。&lt;/p&gt;
&lt;p&gt;对于笔记软件来说，我有以下的几个最为基础的要求。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;必须跨平台。能够有桌面端App和IOS或者安卓的APP&lt;/li&gt;
&lt;li&gt;必须同步要快。&lt;/li&gt;
&lt;li&gt;必须要能有网页剪藏的插件&lt;/li&gt;
&lt;li&gt;必须要少折腾，用户体验好。我的目的是记录内容，而不是折腾各种同步或者网络配置。&lt;/li&gt;
&lt;li&gt;必须是付费的产品。免费的产品，是没有可持续发展潜力的。当然，付费需要在接受范围之内。&lt;/li&gt;
&lt;li&gt;必须足够稳定&lt;/li&gt;
&lt;li&gt;用户界面，体验必须足够好&lt;/li&gt;
&lt;li&gt;必须要离线使用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;就目前来说，能满足以上几个要求的，屈指可数。&lt;/p&gt;
&lt;p&gt;印象笔记虽然有恶心的广告推送(即使会员也有广告)，但是一般在非特殊的日子，广告不回一直存在的。&lt;/p&gt;
&lt;h1 id=&#34;印象笔记不太智能的替换&#34;&gt;印象笔记不太智能的替换&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;把英文单引号替换成中文单引号&lt;/li&gt;
&lt;li&gt;把两个&amp;ndash;天换成一个中文破折号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上两个问题，在粘贴代码的时候，是致命的问题。我本来粘贴的是两个&amp;ndash;，粘贴到印象笔记里居然变成一个中文破折号，那么后期在复制出来用的，必然出现问题。&lt;/p&gt;
&lt;p&gt;我问了官方的客服，官方的客户也不知道怎么解决。&lt;/p&gt;
&lt;p&gt;后来我自己在网上搜索，发现了解决问题的方法。&lt;/p&gt;
&lt;p&gt;以上所有的关于替换的问题，都是和编辑器的替换设置有关。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打开一个笔记，然后点击右键&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择替换，可以看到里面有智能引号，只能破折号，智能连接，文本替换，建议把这几个都取消勾选&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;还有一个可能性，就是在**编辑-&amp;gt;拼写和语法-&amp;gt;自动拼写纠正，**这个要关闭。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>简单实用的M4教程</title>
      <link>https://wdd.js.org/posts/2021/09/</link>
      <pubDate>Sat, 25 Sep 2021 12:22:19 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/09/</guid>
      <description>&lt;h1 id=&#34;文本处理的难点&#34;&gt;文本处理的难点&lt;/h1&gt;
&lt;p&gt;有一个文本文件，内容如下，摘抄其中两行内容如下，里面有两个配置db_addr, local_ip这两个配置，需要在不同环境要修改的。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;db_addr=1.2.3.4:3306
local_ip=192.168.2.4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是哪些地方要修改呢？为了提醒后续的维护者，我们给要修改的地方加个备注吧。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;db_addr=1.2.3.4:3306 # 这里要修改
local_ip=192.168.2.4 # 这里要修改
....
...
if len(a) = 1024 {  # 这里要修改1024
   ...
}
...
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;用sed替换&#34;&gt;用sed替换？&lt;/h1&gt;
&lt;p&gt;让别人一个一个地方去修改，也太麻烦了，有没有可能用脚本去处理呢？例如我们用DB_ADDR和LOCAL_IP这种字符串作为占位符，然后我们就可以用sed之类的命令去做替换了。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;db_addr=DB_ADDR
local_ip=LOCAL_IP
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sed -i &amp;#39;s/DB_ADDR/1.2.3.4:3306/g;s/LOCAL_IP/192.168.0.1/g&amp;#39; 1.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样做是有点方便了，但是也有以下几个问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果定义的占位符太多，sed会变得越来越长&lt;/li&gt;
&lt;li&gt;如果某些占位符里本身就含有/或者一些特殊含义的字符，就需要做特殊处理了&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;用m4吧专业的人做专业的事情&#34;&gt;用M4吧，专业的人做专业的事情&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;apt-get install m4
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;通过命令行定义宏&#34;&gt;通过命令行定义宏&lt;/h2&gt;
&lt;p&gt;1.m4&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;db_addr=DB_ADDR
local_ip=LOCAL_IP
....
...
if len(a) = MAX_LEN {
   ...
}
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;M4可以使用-D来定义宏和宏对应的值，默认输出到标准输出，我们可以用&amp;gt;将输出写到文件中&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;m4 -D DB_ADDR=1.2.3.4:3306 -D LOCAL_IP=192.168.2.2 -D MAX_LEN=2048 1.m4

db_addr=1.2.3.4:3306
local_ip=192.168.2.2
....
...
if 1 = 2048 {
   ...
}
...
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;用define语句定义宏&#34;&gt;用define语句定义宏&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;用define()语句来定义宏&lt;/li&gt;
&lt;li&gt;用`&amp;lsquo;来作为字符串引用，避免被展开&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;define(`DB_ADDR&amp;#39;, `1.2.3.4:3306&amp;#39;)
define(`LOCAL_IP&amp;#39;, `192.168.2.2&amp;#39;)
define(`MAX_LEN&amp;#39;, `2048&amp;#39;)

db_addr=DB_ADDR
local_ip=LOCAL_IP
....
...
if len(a) = MAX_LEN {
   ...
}
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行命令&lt;code&gt;m4 1.m4&lt;/code&gt;, 可以看到宏展开，但是有很多空行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用树莓派3b&#43;作为辅助开发体验</title>
      <link>https://wdd.js.org/posts/2021/08/mlg4mt/</link>
      <pubDate>Mon, 30 Aug 2021 21:18:15 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/08/mlg4mt/</guid>
      <description>&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;
&lt;p&gt;树莓派3B+的配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4核1G&lt;/li&gt;
&lt;li&gt;CPU ARMv7 Processor&lt;/li&gt;
&lt;li&gt;64G SD卡&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;常用软件&#34;&gt;常用软件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;neovim&lt;/li&gt;
&lt;li&gt;LXTerminal终端&lt;/li&gt;
&lt;li&gt;chrome浏览器&lt;/li&gt;
&lt;li&gt;谷歌拼音输入法&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;常用语言&#34;&gt;常用语言&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;golang&lt;/li&gt;
&lt;li&gt;c&lt;/li&gt;
&lt;li&gt;nodejs&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;外设&#34;&gt;外设&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;键盘鼠标： 雷柏 无线机械键盘加鼠标 150块左右&lt;/li&gt;
&lt;li&gt;屏幕：一块ipad大小外接屏幕，400块左右&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;常用工作&#34;&gt;常用工作&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Golang UDP Server开发， 总体还算流畅。前提时不要加载太多的neovim插件，特别象coc-vim, go-vim等插件，安装过后让你卡的绝望。每次当我绝望之时，我就关闭了图形界面，回到终端继续干活。但是即使使用纯文本方式登录，运行vim还是很卡。&lt;/li&gt;
&lt;li&gt;后来我在macbook pro上也用neovim开发，发现也是很卡。于是我就释然了，9千多的macbook都卡，300多的树莓派卡一点怎么了！&lt;/li&gt;
&lt;li&gt;但是卡顿还是非常影响心情的，于是我就大量精简vim的插件。&lt;/li&gt;
&lt;li&gt;我基本上就用两个插件，都是和状态栏有关的。其他十二个插件都给注释掉了&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;call plug#begin(&amp;#39;~/.vim/plugged&amp;#39;)

Plug &amp;#39;vim-airline/vim-airline&amp;#39;
Plug &amp;#39;vim-airline/vim-airline-themes&amp;#39;
Plug &amp;#39;jiangmiao/auto-pairs&amp;#39;
&amp;#34;Plug &amp;#39;yonchu/accelerated-smooth-scroll&amp;#39;
&amp;#34;Plug &amp;#39;preservim/tagbar&amp;#39;, { &amp;#39;for&amp;#39;: [&amp;#39;go&amp;#39;, &amp;#39;c&amp;#39;]}
&amp;#34;Plug &amp;#39;airblade/vim-gitgutter&amp;#39;
&amp;#34;Plug &amp;#39;fatih/vim-go&amp;#39;, { &amp;#39;do&amp;#39;: &amp;#39;:GoUpdateBinaries&amp;#39;, &amp;#39;for&amp;#39;: &amp;#39;go&amp;#39; }
&amp;#34;Plug &amp;#39;dense-analysis/ale&amp;#39;
&amp;#34;Plug &amp;#39;vim-scripts/matchit.zip&amp;#39;
&amp;#34;Plug &amp;#39;pangloss/vim-javascript&amp;#39;, {&amp;#39;for&amp;#39;:&amp;#39;javascript&amp;#39;}
&amp;#34;Plug &amp;#39;leafgarland/typescript-vim&amp;#39;
&amp;#34;Plug &amp;#39;neoclide/coc.nvim&amp;#39;, {&amp;#39;branch&amp;#39;: &amp;#39;release&amp;#39;}
&amp;#34;Plug &amp;#39;jremmen/vim-ripgrep&amp;#39;
&amp;#34;Plug &amp;#39;plasticboy/vim-markdown&amp;#39;
&amp;#34;Plug &amp;#39;mzlogin/vim-markdown-toc&amp;#39;
call plug#end()


filetype plugin indent on

filetype plugin on
filetype indent on
set guicursor=
set history=1000
let g:netrw_banner=0
let g:ale_linters = {
\   &amp;#39;javascript&amp;#39;: [&amp;#39;standard&amp;#39;],
\   &amp;#39;typescript&amp;#39;: [&amp;#39;tsserver&amp;#39;]
\}
let g:ale_fixers = {&amp;#39;javascript&amp;#39;: [&amp;#39;standard&amp;#39;]}
let g:ale_lint_on_save = 1
let g:ale_fix_on_save = 1
let g:ale_typescript_tsserver_executable=&amp;#39;tsserver&amp;#39;
let g:airline#extensions#tabline#enabled = 1
let g:ale_set_loclist = 0
let g:ale_set_quickfix = 1
let g:ale_open_list = 0
let g:vim_markdown_folding_disabled = 1
let g:vmt_cycle_list_item_markers = 1
let g:tagbar_sort = 0
&amp;#34; colorscheme codedark
&amp;#34; let g:airline_theme = &amp;#39;codedark&amp;#39;
&amp;#34;
&amp;#34; buffer
let mapleader = &amp;#34;,&amp;#34;
nnoremap &amp;lt;Leader&amp;gt;j :bp&amp;lt;CR&amp;gt;      &amp;#34; previous buffer
nnoremap &amp;lt;Leader&amp;gt;k :bn&amp;lt;CR&amp;gt;      &amp;#34; next buffer
nnoremap &amp;lt;Leader&amp;gt;n :bf&amp;lt;CR&amp;gt;      &amp;#34; previous buffer
nnoremap &amp;lt;Leader&amp;gt;m :bl&amp;lt;CR&amp;gt;      &amp;#34; next buffer
nnoremap &amp;lt;Leader&amp;gt;l :b#&amp;lt;CR&amp;gt;      &amp;#34; previous buffer
nnoremap &amp;lt;Leader&amp;gt;e :e&amp;lt;CR&amp;gt;      &amp;#34; open netrw
nnoremap &amp;lt;Leader&amp;gt;d :bd&amp;lt;CR&amp;gt;             &amp;#34; close buffer
nnoremap &amp;lt;Leader&amp;gt;g :!go fmt %&amp;lt;CR&amp;gt;             &amp;#34; go fmt current file
nnoremap &amp;lt;Leader&amp;gt;tm :%s/\s\+$//e&amp;lt;CR&amp;gt;             &amp;#34; trim space at endofline
nnoremap &amp;lt;Leader&amp;gt;a A
nnoremap &amp;lt;Leader&amp;gt;w :w&amp;lt;CR&amp;gt;
nnoremap &amp;lt;Leader&amp;gt;c :clo&amp;lt;CR&amp;gt;
nnoremap &amp;lt;Leader&amp;gt;/ :Rg&amp;lt;Space&amp;gt;
inoremap jj &amp;lt;ESC&amp;gt;
highlight CocErrorFloat ctermfg=White

let g:netrw_list_hide= &amp;#39;.*\.swp$&amp;#39;
let g:ctrlp_custom_ignore = {
  \ &amp;#39;dir&amp;#39;:  &amp;#39;\v[\/]\.?(git|hg|svn|node_modules)$&amp;#39;,
  \ &amp;#39;file&amp;#39;: &amp;#39;\v\.(exe|so|dll|min.js)$&amp;#39;,
  \ &amp;#39;link&amp;#39;: &amp;#39;some_bad_symbolic_links&amp;#39;,
  \ }

set autoread
&amp;#34; au CursorHold,CursorHoldI * :e
&amp;#34; au FocusGained,BufEnter * :e
set so=7
set ruler
set cmdheight=2

set hid
set backspace=eol,start,indent
set whichwrap+=&amp;lt;,&amp;gt;,h,l
set ignorecase
set smartcase
set hlsearch
set incsearch
set showmatch
set mat=2
syntax enable
set background=dark
set ffs=unix,dos,mac
&amp;#34;set ai &amp;#34;Auto indent
&amp;#34;set si &amp;#34;Smart indent
set wrap &amp;#34;Wrap lines
set cursorline
set tabstop=4
set shiftwidth=4
set expandtab
set background=dark
&amp;#34; colorscheme solarized
&amp;#34; let g:ackprg = &amp;#39;rg --vimgrep --type-not sql --smart-case&amp;#39;
map ; :
autocmd FileType javascript setlocal ts=2 sts=2 shiftwidth=2
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;但是没有go-vim写golang还是不太方便的，特别是保存的时候格式化，但是也有方案, 执行vim的Ex命令，&lt;code&gt;：!go fmt %&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;视频&#34;&gt;视频&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;看视频是非常危险的行为，有可能需要强制关机重启。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>树莓派3b&#43;踩坑记录</title>
      <link>https://wdd.js.org/posts/2021/08/uuvor0/</link>
      <pubDate>Sat, 14 Aug 2021 11:01:17 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/08/uuvor0/</guid>
      <description>&lt;h1 id=&#34;选择那个版本的系统&#34;&gt;选择那个版本的系统？&lt;/h1&gt;
&lt;p&gt;不要过高的估算树莓派的性能，最好不要选择那些具有漂亮界面的ubuntu或者manjaro, 因为当你使用这些带桌面的系统时，很大概率界面能让你卡的想把树莓派砸了。&lt;/p&gt;
&lt;p&gt;所以优先选择不带图形界面的lite版本的系统，如果确实需要的话，可以再安装lxde&lt;/p&gt;
&lt;h1 id=&#34;网线插了还是无法联网&#34;&gt;网线插了，还是无法联网&lt;/h1&gt;
&lt;p&gt;插了网线，网口上的绿灯也是在闪烁，但是eth0就是无法联网成功。真是气人。&lt;/p&gt;
&lt;p&gt;解决方案： 编辑 /etc/network/interfaces, 将里面的内容改写成下面的，然后重启树莓派。&lt;/p&gt;
&lt;p&gt;这个配置文件的涵义是：在启动时就使用eth0有线网卡，并且使用dhcp给这个网卡自动配置IP&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;auto eth0
iface eth0 inet dhcp
iface etho inet6 dhcp
source-directory /etc/network/interfaces.d
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;无桌面版本如何手工安装桌面&#34;&gt;无桌面版本，如何手工安装桌面&lt;/h1&gt;
&lt;p&gt;首先安装lxde&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt update
sudo apt install lxde -y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后通过raspi-config, 配置默认从桌面启动&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo rasip-config
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;选择系统配置, 按回车键进入&lt;!-- raw HTML omitted --&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/08/uuvor0/2022-10-29-20-42-28.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择Boot/Auto login， 按回车进入&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/08/uuvor0/2022-10-29-20-42-43.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择Desktop, 回车确认。保存之后，退出重启。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/08/uuvor0/2022-10-29-20-42-51.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;键盘无法输入&#34;&gt;键盘无法输入|&lt;/h1&gt;
&lt;p&gt;| 在linux中是管道的意思，然而我的键盘却无法输入。最终发现是键盘布局的原因。&lt;/p&gt;
&lt;p&gt;在图标上右键，选择配置&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/08/uuvor0/2022-10-29-20-43-00.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;注意这里是US, 这是正常的。如果是UK，就是英式布局，是有问题的，需要把UK的删除，重新增加一个US的。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/08/uuvor0/2022-10-29-20-43-09.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;如何安装最新版本的neovim&#34;&gt;如何安装最新版本的neovim?&lt;/h1&gt;
&lt;p&gt;树莓派使用apt安装的neovim， 版本太老了。很多插件使用上都会体验不好。所以建议安装最新版的neovim。&lt;/p&gt;</description>
    </item>
    <item>
      <title>js sdk 跨层穿透问题</title>
      <link>https://wdd.js.org/posts/2021/08/kbcih7/</link>
      <pubDate>Thu, 12 Aug 2021 13:46:39 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/08/kbcih7/</guid>
      <description>&lt;p&gt;关于js sdk的设计，这篇文档基本上详细介绍了很多的点，值得深入阅读一遍。&lt;a href=&#34;https://github.com/hueitan/javascript-sdk-design&#34;&gt;https://github.com/hueitan/javascript-sdk-design&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然而最近在重构某个js sdk时，也发现了一些问题，这个问题并不存在于上述文章中的。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/08/kbcih7/2022-10-29-20-04-22.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;js sdk在收到服务端的响应时，直接将server端返回的错误码给到用户。&lt;/p&gt;
&lt;p&gt;这里会有一个问题，这个响应码，实际上是js sdk和server之间的消息交流。并不是js sdk和用户之间的消息交流。&lt;/p&gt;
&lt;p&gt;如果我们将server端的响应直接返回给用户，则js sdk可以理解为是一个透明代理。用户将会和server端产生强耦合。如果server端有不兼容的变化，将会直接影响到用户的使用。&lt;/p&gt;
&lt;p&gt;所以较好的做法是js sdk将这个错误封装为另一个种表现形式，和server端分离出来。&lt;/p&gt;</description>
    </item>
    <item>
      <title>面向异常编程todo</title>
      <link>https://wdd.js.org/posts/2021/08/brh6mu/</link>
      <pubDate>Thu, 05 Aug 2021 08:58:30 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/08/brh6mu/</guid>
      <description>&lt;p&gt;程序可能大部分时间都是按照正常的逻辑运行，然而也有少数的概率，程序发生异常。&lt;/p&gt;
&lt;p&gt;优秀程序，不仅仅要考虑正常运行，还需要考虑两点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;如何处理异常&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如何在发生异常后，快速定位原因&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;正常的处理如果称为收益的话，异常的处理就是要能够及时止损。&lt;/p&gt;
&lt;p&gt;能稳定运行364天的程序，很可能因为一天的问题，就被客户抛弃。因为这一天的损失，就可能会超过之前收益的总和。&lt;/p&gt;
&lt;h1 id=&#34;异常应当如何处理&#34;&gt;异常应当如何处理&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;如果事情有变坏的可能，不管这种可能性有多小，它总会发生。《莫非定律》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;对于程序来说，避免变坏的方法只有一个，就是不要运行程序（纯粹废话😂）。&lt;/p&gt;
&lt;h2 id=&#34;1-及时崩溃&#34;&gt;1. 及时崩溃&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;conn&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;maxConnectTimes&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reconnectDelay&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentReconnectTimes&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;timeId&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;InitDb&lt;/span&gt; () {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;conn&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;connect&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;数据库&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;conn&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;connected&amp;#34;&lt;/span&gt;, ()=&amp;gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 将当前重连次数重制为0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  	&lt;span style=&#34;color:#a6e22e&#34;&gt;currentReconnectTimes&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;conn&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;ReconnectDb&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ReconnectDb&lt;/span&gt; () {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;conn&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Close&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// 如果重连次数大于最大重连次数，将不在重连
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;currentReconnecTimes&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;maxConnectTimes&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// 如果已经催在重连的任务，则先关闭
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;timeId&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	&lt;span style=&#34;color:#a6e22e&#34;&gt;cleanTimeout&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;timeId&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// 当前重连次数增加
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;currentReconnectTimes&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// 开始延迟重连
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;timeId&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setTimeout&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;InitDb&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;reconnectDelay&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-br-br-&#34;&gt;2. &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;
&lt;h1 id=&#34;如何快速定位问题&#34;&gt;如何快速定位问题&lt;/h1&gt;
&lt;p&gt;第一，代码的敬畏之心 &lt;!-- raw HTML omitted --&gt;第二，及时告警。日志，或者http请求 &lt;!-- raw HTML omitted --&gt;第三，编程时，就要考虑异常。例如程序依赖 MQ或者Mysql，当与之交互的链接断开后，应该怎样处理？ &lt;!-- raw HTML omitted --&gt;第四，多实例问题考虑 &lt;!-- raw HTML omitted --&gt;第五，检查清单&lt;/p&gt;</description>
    </item>
    <item>
      <title>监控pod重启并写日志文件</title>
      <link>https://wdd.js.org/posts/2021/07/giqfii/</link>
      <pubDate>Wed, 28 Jul 2021 21:21:33 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/07/giqfii/</guid>
      <description>&lt;p&gt;一般来说，监控pod状态重启和告警，可以使用普罗米修斯或者kubewatch。&lt;/p&gt;
&lt;p&gt;但是如果你只想将某个pod重启了，往某个日志文件中写一条记录，那么下面的方式将是非常简单的。&lt;/p&gt;
&lt;p&gt;实现的思路是使用kubectl 获取所有pod的状态信息，统计发生过重启的pod, 然后和之前的重启次数做对比，如果比之前记录的次数大，那么肯定是发生过重启了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;+%Y-%m-%d %H:%M:%S&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;log_file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/var/log/pod.restart.log&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;some-namespace&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo $now start pod restart monitor &amp;gt;&amp;gt; $log_file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# touch一下之前的记录文件，防止文件不存在&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch restart.old.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 生成本次的统计数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get pod -n $ns -o wide | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$4 &amp;gt; 0{print $1,$4}&amp;#39;&lt;/span&gt; | grep -v NAME &amp;gt; restart.now.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 按行读取本次统计数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 数据格式为：podname 重启次数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; read line
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;# pod name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo $line | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 重启次数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo $line | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 检查本次重启的pod名称是否在之前的记录中存在&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; grep $name restart.old.log; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 如果存在，则取出之前记录的重启次数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	t&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;grep $name restart.old.log | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 和本次记录的重启次数比较，如果本次的重启次数较大&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 则说明pod一定重启过&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $count -gt $t&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    	echo $now ERROR pod_restart $name &amp;gt;&amp;gt; $log_file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	&lt;span style=&#34;color:#75715e&#34;&gt;# 如果重启的pod不存在之前的记录中，也说明pod重启过&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	echo $now ERROR pod_restart $name &amp;gt;&amp;gt; $log_file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; &amp;lt; restart.now.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 删除老的记录文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -f restart.old.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 将新的记录文件重命名为老的记录文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv restart.now.log restart.old.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后可以将上面的脚本做成定时任务，每分钟执行一次。那么就可以将pod重启的信息写入文件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>udp cluster 多进程调度策略学习</title>
      <link>https://wdd.js.org/posts/2021/07/tniabf/</link>
      <pubDate>Wed, 21 Jul 2021 12:57:03 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/07/tniabf/</guid>
      <description>&lt;p&gt;本来我的目的是使用cluster模块的fork出多个进程，让各个进程都能处理udp消息的。但是最终测试发现，实际上仅有一个进程处理了绝大数消息，其他的进程，要么不处理消息，要么处理的非常少的消息。&lt;/p&gt;
&lt;p&gt;然而使用cluster来开启http服务的多进程，却能够达到多进程的负载。&lt;/p&gt;
&lt;h1 id=&#34;server端demo代码&#34;&gt;server端demo代码：&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;const&lt;/span&gt; cluster &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cluster&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;const&lt;/span&gt; numCPUs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;os&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.cpus&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;.length
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;logger&lt;/span&gt; } &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./logger&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;const&lt;/span&gt; dgram &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dgram&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;createHTTPServer,&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;createUDPServer&lt;/span&gt; } &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./app&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;const&lt;/span&gt; port &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8088&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(cluster.isMaster)&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0; i &amp;lt; numCPUs; i++&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cluster.fork&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cluster.on&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;exit&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;worker, code, signal&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logger.info&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;工作进程 &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;worker.process.pid&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; 已退出&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;const&lt;/span&gt; server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dgram.createSocket&lt;span style=&#34;color:#f92672&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;udp4&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    reuseAddr: true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  server.on&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logger.info&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;udp server error:&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;err.stack&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server.close&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  server.on&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;message&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;msg, rinfo&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logger.info&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;process.pid&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; udp server got: &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;msg&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; from &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;rinfo.address&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;rinfo.port&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  server.on&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;listening&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    const address &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; server.address&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logger.info&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;udp server listening &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;address.address&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;address.port&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  server.bind&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;port&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;日志库如下：&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用nginx为udp服务负载均衡</title>
      <link>https://wdd.js.org/posts/2021/07/tom7mv/</link>
      <pubDate>Sat, 17 Jul 2021 19:28:18 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/07/tom7mv/</guid>
      <description>&lt;h1 id=&#34;对nginx的最低版本要求是&#34;&gt;对nginx的最低版本要求是？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;1.9.13&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The ngx_stream_proxy_module module (1.9.0) allows proxying data streams over TCP, UDP (1.9.13), and UNIX-domain sockets.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;简单的配置是什么样&#34;&gt;简单的配置是什么样？&lt;/h1&gt;
&lt;p&gt;例如监听本地53的udp端口，然后转发到192.168.136.130和192.168.136.131的53端口&lt;/p&gt;
&lt;p&gt;注意事项&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;stream是顶层的配置，不能包含在http模块里面&lt;/li&gt;
&lt;li&gt;proxy_responses很重要，如果你的udp服务只接受udp消息，并不发送udp消息，那么务必将proxy_responses的值设置为0&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;stream&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;upstream&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;dns_upstreams&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;server 192.168.136.130&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;53;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        server 192.168.136.131:53;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        listen &lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt; udp;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        proxy_pass dns_upstreams;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        proxy_timeout 1s;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        proxy_responses 0;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        error_log logs/dns.log;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;| Syntax: | &lt;strong&gt;proxy_responses&lt;/strong&gt; &lt;em&gt;number&lt;/em&gt;;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Default:&lt;/td&gt;
          &lt;td&gt;—&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Context:&lt;/td&gt;
          &lt;td&gt;stream, server&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;|&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This directive appeared in version 1.9.13.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Sets the number of datagrams expected from the proxied server in response to a client datagram if the &lt;a href=&#34;http://nginx.org/en/docs/stream/ngx_stream_core_module.html#udp&#34;&gt;UDP&lt;/a&gt; protocol is used. The number serves as a hint for session termination. By default, the number of datagrams is not limited.
&lt;strong&gt;If zero value is specified, no response is expected&lt;/strong&gt;. However, if a response is received and the session is still not finished, the response will be handled.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7月书单</title>
      <link>https://wdd.js.org/posts/2021/07/ou9o92/</link>
      <pubDate>Thu, 08 Jul 2021 12:34:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/07/ou9o92/</guid>
      <description>&lt;h1 id=&#34;6月书单回顾&#34;&gt;6月书单回顾&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《鳗鱼的旅行》刚读到92%&lt;/li&gt;
&lt;li&gt;《Googler软件测试之道》100%&lt;/li&gt;
&lt;li&gt;《软件测试之道微软技术专家经验总结》24%&lt;/li&gt;
&lt;li&gt;《沉默的病人》100%&lt;/li&gt;
&lt;li&gt;《一个人的朝圣》9%&lt;/li&gt;
&lt;li&gt;《读懂发票》100%&lt;/li&gt;
&lt;li&gt;《108个训练让你成为手机摄影达人》100%&lt;/li&gt;
&lt;li&gt;《经济学通识课》5%&lt;/li&gt;
&lt;li&gt;《楚留香新传》100%&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;7月书单&#34;&gt;7月书单&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《鳗鱼的旅行》&lt;/li&gt;
&lt;li&gt;《软件测试之道微软技术专家经验总结》&lt;/li&gt;
&lt;li&gt;[KU]《一个人的朝圣》&lt;/li&gt;
&lt;li&gt;[KU]《经济学通识课》&lt;/li&gt;
&lt;li&gt;new 水浒传&lt;/li&gt;
&lt;li&gt;[KU] new 围城&lt;/li&gt;
&lt;li&gt;[KU] new 黄金时代&lt;/li&gt;
&lt;li&gt;new 长安十二时辰&lt;/li&gt;
&lt;li&gt;[KU] new 幻夜&lt;/li&gt;
&lt;li&gt;new 软件开发本质论&lt;/li&gt;
&lt;li&gt;[KU] new 苏东坡传&lt;/li&gt;
&lt;li&gt;[KU] new 诡计博物馆&lt;/li&gt;
&lt;li&gt;[KU] new 大师的盛宴 二十世纪最佳科幻小说&lt;/li&gt;
&lt;li&gt;[KU] new 活出生命的意义&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Google软件测试之道（异步图书） James Whittaker; Jason Arbon; Jeff Carollo</title>
      <link>https://wdd.js.org/posts/2021/07/yh8ulq/</link>
      <pubDate>Thu, 08 Jul 2021 09:03:07 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/07/yh8ulq/</guid>
      <description>&lt;p&gt;Google软件测试之道（异步图书）&lt;!-- raw HTML omitted --&gt;James Whittaker; Jason Arbon; Jeff Carollo&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;序&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 361&lt;!-- raw HTML omitted --&gt;从根本上说，如果测试人员想加入这个俱乐部，就必须具备良好的计算机科学基础和编程能力。变革&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 367&lt;!-- raw HTML omitted --&gt;招聘具备开发能力的测试人员很难，找到懂测试的开发人员就更难，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 368&lt;!-- raw HTML omitted --&gt;但是维持现状更要命，我只能往前走。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 388&lt;!-- raw HTML omitted --&gt;我们寻找的人要兼具开发人员的技能和测试人员的思维，他们必须会编程，能实现工具、平台和测试自动化。&lt;!-- raw HTML omitted --&gt;第1章 Google软件测试介绍&lt;!-- raw HTML omitted --&gt;标注(黄色) - 1.1 质量不等于测试 &amp;gt; 位置 573&lt;!-- raw HTML omitted --&gt;Google能用如此少的专职测试人员的原因，就是开发对质量的负责。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 1.1 质量不等于测试 &amp;gt; 位置 574&lt;!-- raw HTML omitted --&gt;如果某个产品出了问题，第一个跳出来的肯定是导致这个问题发生的开发人员，而不是遗漏这个 bug的测试人员。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 1.2.1 软件开发工程师（SWE） &amp;gt; 位置 593&lt;!-- raw HTML omitted --&gt;软件开发工程师（&lt;!-- raw HTML omitted --&gt;标注(黄色) - 1.2.2 软件测试开发工程师（SET） &amp;gt; 位置 600&lt;!-- raw HTML omitted --&gt;软件测试开发工程师（&lt;!-- raw HTML omitted --&gt;标注(黄色) - 1.2.3 测试工程师（TE） &amp;gt; 位置 612&lt;!-- raw HTML omitted --&gt;TE把用户放在第一位来思考。 TE组织整体质量实践，分析解释测试运行结果，&lt;!-- raw HTML omitted --&gt;第2章 软件测试开发工程师&lt;!-- raw HTML omitted --&gt;书签 - 位置 784&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 787&lt;!-- raw HTML omitted --&gt;Google的 SWE是功能开发人员； Google的 SET是测试开发人员； Google的 TE是用户开发人员。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.1.1 开发和测试流程 &amp;gt; 位置 864&lt;!-- raw HTML omitted --&gt;测试驱动开发”&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.1.3 项目的早期阶段 &amp;gt; 位置 908&lt;!-- raw HTML omitted --&gt;一个产品如果在概念上还没有完全确定成型时就去关心质量，这就是优先级混乱的表现。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.1.14 测试运行要求 &amp;gt; 位置 1398&lt;!-- raw HTML omitted --&gt;每个测试和其他测试之间都是独立的，使它们就能够以任意顺序来执行。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.1.14 测试运行要求 &amp;gt; 位置 1399&lt;!-- raw HTML omitted --&gt;测试不做任何数据持久化方面的工作。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.1.14 测试运行要求 &amp;gt; 位置 1400&lt;!-- raw HTML omitted --&gt;在这些测试用例离开测试环境的时候，要保证测试环境的状态与测试用例开始执行之前的状态是一样的。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.1.14 测试运行要求 &amp;gt; 位置 1404&lt;!-- raw HTML omitted --&gt;总之，“任意顺序”意味着可以并发执行用例。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.3 SET的招聘 &amp;gt; 位置 1650&lt;!-- raw HTML omitted --&gt;在一些棘手的编码问题或功能的正确性上浪费时间，不如考核他们是如何看待编码和质量的。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.3 SET的招聘 &amp;gt; 位置 1727&lt;!-- raw HTML omitted --&gt;测试不应是被要求了才去做的事情。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.3 SET的招聘 &amp;gt; 位置 1728&lt;!-- raw HTML omitted --&gt;程序的稳定性和韧性比功能正确要重要的多。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.4 与工具开发工程师Ted Mao的访谈 &amp;gt; 位置 1796&lt;!-- raw HTML omitted --&gt;要允许他们使用你无法预料的方式来使用你的工具。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.5 与Web Driver的创建者Simon Stewart的对话 &amp;gt; 位置 1845&lt;!-- raw HTML omitted --&gt;我使用了一个被称为 DDD（译注： defect-driven development）的流程，缺陷驱动开发。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 2.5 与Web Driver的创建者Simon Stewart的对话 &amp;gt; 位置 1859&lt;!-- raw HTML omitted --&gt;Chrome在使用 PyAuto，&lt;!-- raw HTML omitted --&gt;第3章 测试工程师&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.1 一种面向用户的测试角色 &amp;gt; 位置 1879&lt;!-- raw HTML omitted --&gt;我们说 TE是一种“用户开发者（ user-developer）”，这不是一个容易理解的概念。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.1 一种面向用户的测试角色 &amp;gt; 位置 1880&lt;!-- raw HTML omitted --&gt;对于编码的敬意是公司文化中相当重要的一点。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1903&lt;!-- raw HTML omitted --&gt;在研发的早期阶段，功能还在不断变化，最终功能列表和范畴还没有确定， TE通常没有太多的工作可做。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1904&lt;!-- raw HTML omitted --&gt;给一个项目配备多少测试人员，取决于项目风险和投资回报率。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1906&lt;!-- raw HTML omitted --&gt;我们需要在正确的时间，投入正确数量的 TE，并带来足够的价值。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1908&lt;!-- raw HTML omitted --&gt;当前软件的薄弱点在哪里？&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1909&lt;!-- raw HTML omitted --&gt;有没有安全、隐私、性能、可靠性、可用性、&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1910&lt;!-- raw HTML omitted --&gt;主要用户场景是否功能正常？&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1911&lt;!-- raw HTML omitted --&gt;当发生问题的时候，是否容易诊断问题所在？&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1914&lt;!-- raw HTML omitted --&gt;TE的根本使命是保护用户和业务的利益，使之不受到糟糕的设计、令人困惑的用户体验、&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1921&lt;!-- raw HTML omitted --&gt;TE擅长发现需求中的模糊之处，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1924&lt;!-- raw HTML omitted --&gt;TE通常是团队里最出名的人，因为他们需要与各种角色&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2 测试工程师的工作 &amp;gt; 位置 1938&lt;!-- raw HTML omitted --&gt;下面是我们关于 TE职责的一般性描述。测试计划和风险分析。评审需求、设计、代码和测试。探索式测试。用户场景。编写测试用例。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 1949&lt;!-- raw HTML omitted --&gt;如果软件深受人们喜爱，大家就会认为测试所作所为是理所应当的；如果软件很糟糕，人们可能就会质疑测试工作。&lt;!-- raw HTML omitted --&gt;笔记 - 3.2.1 测试计划 &amp;gt; 位置 1950&lt;!-- raw HTML omitted --&gt;测试背锅&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 1990&lt;!-- raw HTML omitted --&gt;读者可以用“ Google Test Analytics”关键词搜索到这个工具。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 1991&lt;!-- raw HTML omitted --&gt;避免散漫的文字，推荐使用简明的列表。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 1993&lt;!-- raw HTML omitted --&gt;不必推销。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 1995&lt;!-- raw HTML omitted --&gt;简洁。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 1996&lt;!-- raw HTML omitted --&gt;不要把不重要的、无法执行的东西放进测试&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 1998&lt;!-- raw HTML omitted --&gt;渐进式的描述（ Make it flow）。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2001&lt;!-- raw HTML omitted --&gt;最终结果应该是测试用例。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2009&lt;!-- raw HTML omitted --&gt;1. A代表特质（ Attribute）&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2010&lt;!-- raw HTML omitted --&gt;在开始测试计划或做 ACC分析的时候，必须先确定该产品对用户、对业务的意义。我们为什么要开发这个东西呢？它能带来什么核心价值？它又靠什么来吸引用户？记住，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2046&lt;!-- raw HTML omitted --&gt;2. C代表组件（ component）组件是系统的名词，在特质被识别之后确定。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2049&lt;!-- raw HTML omitted --&gt;组件是构成待建系统的模块，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2063&lt;!-- raw HTML omitted --&gt;3. C代表能力（ capability）能力是系统的动词，代表着系统在用户指令之下完成的动作。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2095&lt;!-- raw HTML omitted --&gt;能力最重要的一个特点是它的可测试性。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2098&lt;!-- raw HTML omitted --&gt;能力最重要的一个特点是它的可测试性。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2100&lt;!-- raw HTML omitted --&gt;一个能力可以描述任意数量的用例。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2130&lt;!-- raw HTML omitted --&gt;用一系列能力来描述用户故事，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.1 测试计划 &amp;gt; 位置 2142&lt;!-- raw HTML omitted --&gt;确定 Google +的特质、组件和能力。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2193&lt;!-- raw HTML omitted --&gt;风险无处不在——&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2202&lt;!-- raw HTML omitted --&gt;确定风险的过程称为风险分析。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2202&lt;!-- raw HTML omitted --&gt;1.风险分析&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2204&lt;!-- raw HTML omitted --&gt;这些事件发生的可能性有多大？一旦发生，对公司产生多大影响？一旦发生，对客户产生多大影响？产品具备什么缓解措施？&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2206&lt;!-- raw HTML omitted --&gt;这些缓解措施有多大可能会失败？处理这些失败的成本有哪些？恢复过程有多困难？事件是一次性问题，还是会再次发生？影响&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2209&lt;!-- raw HTML omitted --&gt;在 Google，我们确定了两个要素：失败频率（ frequency of failure）和影响（ impact）。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2214&lt;!-- raw HTML omitted --&gt;风险发生频率有 4个预定义值。罕见（&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2217&lt;!-- raw HTML omitted --&gt;少见（ seldom）：&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2221&lt;!-- raw HTML omitted --&gt;偶尔（ occasionally）：&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2225&lt;!-- raw HTML omitted --&gt;常见（ often）：&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2229&lt;!-- raw HTML omitted --&gt;测试人员确定每个能力的故障发生频率。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2230&lt;!-- raw HTML omitted --&gt;估计风险影响的方法大致相同，也是从几种偶数取值中选&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2231&lt;!-- raw HTML omitted --&gt;最小（ minimal）：用户甚至不会注意到的问题。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2234&lt;!-- raw HTML omitted --&gt;一些（ some）：可能会打扰到用户的问题。一旦发生，重试或恢复&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2237&lt;!-- raw HTML omitted --&gt;较大（ considerable）：故障导致&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2240&lt;!-- raw HTML omitted --&gt;最大（ maximal）：发生的故障会永久性的损害产品的声誉，并导致用户不再使用它。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2267&lt;!-- raw HTML omitted --&gt;风险不大可能彻底消除。驾驶有风险，但我们仍然会开车出行；旅游有风险，但我们并没有停止旅游。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2285&lt;!-- raw HTML omitted --&gt;在软件开发中，任何一种可以在 10分钟之内完成的事情都是微不足道的，或是本来就不值得做的。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2323&lt;!-- raw HTML omitted --&gt;风险分析是一个独立的领域，在许多其他行业里被严肃地对待。我们现在采用的是一个轻量级的版本，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2325&lt;!-- raw HTML omitted --&gt;风险管理方法），这可以作为进一步学习这一重要课题的起点。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.2 风险 &amp;gt; 位置 2328&lt;!-- raw HTML omitted --&gt;TE有责任理解所有的风险点，并使用他或她可以利用的任何手段予以缓解。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.5 TE的招聘 &amp;gt; 位置 2668&lt;!-- raw HTML omitted --&gt;他们只是在试图破坏软件，还是同时在验证它能正常工作？&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.2.5 TE的招聘 &amp;gt; 位置 2717&lt;!-- raw HTML omitted --&gt;我们需要的是愿意持续学习和成长的人。我们也需要那些带来新鲜思想和经验的人，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.3 与Google Docs测试工程师林赛·韦伯斯特（Lindsay Webster）的访谈 &amp;gt; 位置 3301&lt;!-- raw HTML omitted --&gt;对于一个新项目，我首先要站在用户的角度了解这个产品。有可能的话，我会作为一个用户，以自己的账户和个人数据去使用产品。我努力使自己经历完整的用户体验。一旦有自己的真实数据在里面，你对一个产品的期待会彻底改变。在具备了用户心态之后，我会做下面的一些事情。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.3 与Google Docs测试工程师林赛·韦伯斯特（Lindsay Webster）的访谈 &amp;gt; 位置 3362&lt;!-- raw HTML omitted --&gt;遗漏到客户的 bug是一项重要指标，我希望这个数字接近 0。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.3 与Google Docs测试工程师林赛·韦伯斯特（Lindsay Webster）的访谈 &amp;gt; 位置 3377&lt;!-- raw HTML omitted --&gt;或者用户场景无需编写、自动到位。 CRUD操作（译注： create、 read、 update、 delete）&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.3 与Google Docs测试工程师林赛·韦伯斯特（Lindsay Webster）的访谈 &amp;gt; 位置 3385&lt;!-- raw HTML omitted --&gt;团队在推出一个产品或新功能时难免感到提心吊胆，而我能带给他们镇定和信心，这使我感到自己是一种正面、有益的力量。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.4 与YouTube测试工程师安普·周（Apple Chow）的访谈 &amp;gt; 位置 3416&lt;!-- raw HTML omitted --&gt;而 Google的 SET必须写代码，这是他们的工作。这里也很难找到不会写代码的 TE。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.4 与YouTube测试工程师安普·周（Apple Chow）的访谈 &amp;gt; 位置 3426&lt;!-- raw HTML omitted --&gt;Google的测试与其他公司的相同之处呢？ Apple：在测试上难以自动化的软件，很难成为好的软件。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 3.4 与YouTube测试工程师安普·周（Apple Chow）的访谈 &amp;gt; 位置 3493&lt;!-- raw HTML omitted --&gt;不管是测试框架还是测试用例都以简单为要，随着项目的开展再迭代的设计。不要试图事先解决所有问题。要敢于扔掉过时的东西。&lt;!-- raw HTML omitted --&gt;第4章 测试工程经理&lt;!-- raw HTML omitted --&gt;标注(黄色) - 4.8 搜索和地理信息测试总监Shelton Mar的访谈 &amp;gt; 位置 3989&lt;!-- raw HTML omitted --&gt;把测试推向上游，让整个团队（开发 +测试）为交付的质量负责。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 4.8 搜索和地理信息测试总监Shelton Mar的访谈 &amp;gt; 位置 4025&lt;!-- raw HTML omitted --&gt;从那以后，我们把配置变更也纳入质量流程中，我们开发了一套自动化测试，每次数据和配置变更时都要执行。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 4.11 工程经理Brad Green访谈 &amp;gt; 位置 4219&lt;!-- raw HTML omitted --&gt;Google聘用的都是有极端自我驱动力的家伙。“&lt;!-- raw HTML omitted --&gt;标注(黄色) - 4.12 James Whittaker访谈 &amp;gt; 位置 4339&lt;!-- raw HTML omitted --&gt;先虚心学习，再在一线作出成绩，然后开始寻求创新的方法。&lt;!-- raw HTML omitted --&gt;第5章 Google软件测试改进&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 4398&lt;!-- raw HTML omitted --&gt;Google的测试流程可以非常简练地概括为：&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 4398&lt;!-- raw HTML omitted --&gt;让每个工程师都注重质量。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 4398&lt;!-- raw HTML omitted --&gt;只要大家诚实认真地这么做，质量就会提高。代码质量从一开始就能更好，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.1 Google流程中的致命缺陷 &amp;gt; 位置 4408&lt;!-- raw HTML omitted --&gt;可是测试并不能保证质量。质量是内建的，而不是外加的。因此，保证质量是开发者的任务，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.1 Google流程中的致命缺陷 &amp;gt; 位置 4409&lt;!-- raw HTML omitted --&gt;测试成了开发的拐杖。我们越不让开发考虑测试的问题，把测试变得越简单，开发就越来越不会去做测试。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.1 Google流程中的致命缺陷 &amp;gt; 位置 4415&lt;!-- raw HTML omitted --&gt;保证质量不但是别人的问题，它甚至还属于另一个部门。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.1 Google流程中的致命缺陷 &amp;gt; 位置 4416&lt;!-- raw HTML omitted --&gt;出问题的时候也很容易就把责任推卸给修前草坪的外包公司。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.1 Google流程中的致命缺陷 &amp;gt; 位置 4426&lt;!-- raw HTML omitted --&gt;第三个致命的缺陷，是测试人员往往崇拜测试产物（ test artifact）胜过软件本身。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.1 Google流程中的致命缺陷 &amp;gt; 位置 4430&lt;!-- raw HTML omitted --&gt;所有测试产物的价值，在于它们对代码的影响，进而通过产品来体现。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.2 SET的未来 &amp;gt; 位置 4447&lt;!-- raw HTML omitted --&gt;简单来说，我们认为 SET没有未来。 SET就是开发。就这么简单。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 5.2 SET的未来 &amp;gt; 位置 4450&lt;!-- raw HTML omitted --&gt;SET直接负责很多功能特性，如可测试性、可靠性、可调试性，&lt;/p&gt;</description>
    </item>
    <item>
      <title>沉默的病人（世界狂销300万册的烧脑神作！多少看似完美的夫妻，都在等待杀死对方的契机）</title>
      <link>https://wdd.js.org/posts/2021/07/rgx3g5/</link>
      <pubDate>Thu, 08 Jul 2021 08:58:49 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/07/rgx3g5/</guid>
      <description>&lt;p&gt;沉默的病人（世界狂销300万册的烧脑神作！多少看似完美的夫妻，都在等待杀死对方的契机）&lt;!-- raw HTML omitted --&gt;亚历克斯·麦克利兹&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;第二部分 PAPT TWO&lt;!-- raw HTML omitted --&gt;标注(黄色) - 9 &amp;gt; 位置 1294&lt;!-- raw HTML omitted --&gt;选择自己所爱的人就像选择心理治疗师，”鲁思说，“我们有必要问自己，这个人会不会对我忠诚，能不能听得进批评，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 9 &amp;gt; 位置 1295&lt;!-- raw HTML omitted --&gt;承认所犯的错误，而且做不到的事情决不承诺？”&lt;!-- raw HTML omitted --&gt;第三部分 PAPT THREE&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 2577&lt;!-- raw HTML omitted --&gt;虽然我生来不是个好人，有时我却偶然要做个好人。——威廉·莎士比亚《冬天的故事》[&lt;/p&gt;</description>
    </item>
    <item>
      <title>被讨厌的勇气：“自我启发之父”阿德勒的哲学课</title>
      <link>https://wdd.js.org/posts/2021/06/ineayu/</link>
      <pubDate>Wed, 16 Jun 2021 13:47:30 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/06/ineayu/</guid>
      <description>&lt;p&gt;引言&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 225&lt;!-- raw HTML omitted --&gt;人并不是住在客观的世界，而是住在自己营造的主观世界里。&lt;!-- raw HTML omitted --&gt;第一夜 我们的不幸是谁的错？&lt;!-- raw HTML omitted --&gt;标注(黄色) - 不为人知的心理学“第三巨头” &amp;gt; 位置 335&lt;!-- raw HTML omitted --&gt;但在世界上，阿德勒是与弗洛伊德、荣格并列的三大巨头之一。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 再怎么“找原因”，也没法改变一个人 &amp;gt; 位置 377&lt;!-- raw HTML omitted --&gt;如果所有人的“现在”都由“过去”所决定，那岂不是很奇怪吗？&lt;!-- raw HTML omitted --&gt;标注(黄色) - 再怎么“找原因”，也没法改变一个人 &amp;gt; 位置 384&lt;!-- raw HTML omitted --&gt;您是说与过去没有关系？哲人：是的，这就是阿德勒心理学的立场。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 再怎么“找原因”，也没法改变一个人 &amp;gt; 位置 389&lt;!-- raw HTML omitted --&gt;阿德勒心理学考虑的不是过去的“原因”，而是现在的“目的”。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 心理创伤并不存在 &amp;gt; 位置 417&lt;!-- raw HTML omitted --&gt;任何经历本身并不是成功或者失败的原因。我们并非因为自身经历中的刺激——所谓的心理创伤——而痛苦，事实上我们会从经历中发现符合自己目的的因素。决定我们自身的不是过去的经历，而是我们自己赋予经历的意义。”&lt;!-- raw HTML omitted --&gt;标注(黄色) - 心理创伤并不存在 &amp;gt; 位置 423&lt;!-- raw HTML omitted --&gt;人生不是由别人赋予的，而是由自己选择的，是自己选择自己如何生活。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 心理创伤并不存在 &amp;gt; 位置 443&lt;!-- raw HTML omitted --&gt;我们大家都是在为了某种“目的”而活着。这就是目的论。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 你的不幸，皆是自己“选择”的 &amp;gt; 位置 599&lt;!-- raw HTML omitted --&gt;而是因为你认为“不幸”对你自身而言是一种“善”。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 人们常常下定决心“不改变” &amp;gt; 位置 614&lt;!-- raw HTML omitted --&gt;某人如何看“世界”，又如何看“自己”，把这些“赋予意义的方式”汇集起来的概念就可以理解为生活方式。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 你的人生取决于“当下” &amp;gt; 位置 706&lt;!-- raw HTML omitted --&gt;无论之前的人生发生过什么，都对今后的人生如何度过没有影响。”决定自己人生的是活在“此时此刻”的你自己。&lt;!-- raw HTML omitted --&gt;第二夜 一切烦恼都来自人际关系&lt;!-- raw HTML omitted --&gt;标注(黄色) - 为什么讨厌自己？ &amp;gt; 位置 780&lt;!-- raw HTML omitted --&gt;阿德勒心理学把这叫作“鼓励”。青年：鼓励？&lt;!-- raw HTML omitted --&gt;书签 - 一切烦恼都是人际关系的烦恼 &amp;gt; 位置 834&lt;!-- raw HTML omitted --&gt;标注(黄色) - 自卑情结只是一种借口 &amp;gt; 位置 936&lt;!-- raw HTML omitted --&gt;自卑情结是指把自己的自卑感当作某种借口使用的状态。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 自卑情结只是一种借口 &amp;gt; 位置 943&lt;!-- raw HTML omitted --&gt;外部因果律”一词来进行说明。意思就是：将原本没有任何因果关系的事情解释成似乎有重大因果关系一样。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 人生不是与他人的比赛 &amp;gt; 位置 1044&lt;!-- raw HTML omitted --&gt;健全的自卑感不是来自与别人的比较，而是来自与“理想的自己”的比较。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 在意你长相的，只有你自己 &amp;gt; 位置 1071&lt;!-- raw HTML omitted --&gt;在意你长相的，只有你自己&lt;!-- raw HTML omitted --&gt;标注(黄色) - 人生的三大课题：交友课题、工作课题以及爱的课题 &amp;gt; 位置 1223&lt;!-- raw HTML omitted --&gt;交友课题、工作课题以及爱的课题&lt;!-- raw HTML omitted --&gt;标注(黄色) - 人生的三大课题：交友课题、工作课题以及爱的课题 &amp;gt; 位置 1224&lt;!-- raw HTML omitted --&gt;一切烦恼皆源于人际关系”&lt;!-- raw HTML omitted --&gt;标注(黄色) - 浪漫的红线和坚固的锁链 &amp;gt; 位置 1313&lt;!-- raw HTML omitted --&gt;当人能够感觉到“与这个人在一起可以无拘无束”的时候，才能够体会到爱。既没有自卑感也不必炫耀优越性，能够保持一种平静而自然的状态。真正的爱应该是这样的。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 浪漫的红线和坚固的锁链 &amp;gt; 位置 1315&lt;!-- raw HTML omitted --&gt;束缚是想要支配对方的表现，也是一种基于不信任感的想法。与一个不信任自己的人处在同一个空间里，那就根本不可能保持一种自然状态。&lt;!-- raw HTML omitted --&gt;标注(黄色) - “人生谎言”教我们学会逃避 &amp;gt; 位置 1333&lt;!-- raw HTML omitted --&gt;那并不是因为无法容忍 A的缺点才讨厌他，而是你先有“要讨厌 A”这个目的，之后才找出了符合这个目的的缺点。&lt;!-- raw HTML omitted --&gt;标注(黄色) - “人生谎言”教我们学会逃避 &amp;gt; 位置 1345&lt;!-- raw HTML omitted --&gt;人就是这么任性而自私的生物，一旦产生这种想法，无论怎样都能发现对方的缺点。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 阿德勒心理学是“勇气的心理学” &amp;gt; 位置 1373&lt;!-- raw HTML omitted --&gt;青年：也就是“不在于被给予了什么，而在于如何去使用被给予的东西”那句话吗？&lt;!-- raw HTML omitted --&gt;第三夜 让干涉你生活的人见鬼去&lt;!-- raw HTML omitted --&gt;标注(黄色) - 自由就是不再寻求认可？ &amp;gt; 位置 1405&lt;!-- raw HTML omitted --&gt;就是：“货币是被铸造的自由。”它是陀思妥耶夫斯基的小说中出现的一句话。“被铸造的自由”这种说法是何等的痛快啊！我认为这是一句非常精辟的话，它一语道破了货币的&lt;!-- raw HTML omitted --&gt;标注(黄色) - 自由就是不再寻求认可？ &amp;gt; 位置 1449&lt;!-- raw HTML omitted --&gt;阿德勒心理学否定寻求他人的认可。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 要不要活在别人的期待中？ &amp;gt; 位置 1479&lt;!-- raw HTML omitted --&gt;在犹太教教义中有这么一句话：“倘若自己都不为自己活出自己的人生，那还有谁会为自己而活呢？”你就活在自己的人生中。&lt;!-- raw HTML omitted --&gt;书签 - 要不要活在别人的期待中？ &amp;gt; 位置 1498&lt;!-- raw HTML omitted --&gt;标注(黄色) - 砍断“格尔迪奥斯绳结” &amp;gt; 位置 1689&lt;!-- raw HTML omitted --&gt;否定原因论、否定精神创伤、采取目的论；认为人的烦恼全都是关于人际关系的烦恼；此外，不寻求认可或者课题分离也全都是反常识的理论。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 自由就是被别人讨厌 &amp;gt; 位置 1764&lt;!-- raw HTML omitted --&gt;自由就是被别人讨厌”。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 自由就是被别人讨厌 &amp;gt; 位置 1785&lt;!-- raw HTML omitted --&gt;不畏惧被人讨厌而是勇往直前，不随波逐流而是激流勇进，这才是对人而言的自由。&lt;!-- raw HTML omitted --&gt;第五夜 认真的人生“活在当下”&lt;!-- raw HTML omitted --&gt;标注(黄色) - 对决“人生最大的谎言” &amp;gt; 位置 2910&lt;!-- raw HTML omitted --&gt;人生中最大的谎言就是不活在“此时此刻”。纠结过去、关注未来，把微弱而模糊的光打向人生整体，自认为看到了些什么。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 对决“人生最大的谎言” &amp;gt; 位置 2916&lt;!-- raw HTML omitted --&gt;因为过去和未来根本不存在，所以才要谈现在。起决定作用的既不是昨天也不是明天，而是“此时此刻”。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 人生的意义，由你自己决定 &amp;gt; 位置 2982&lt;!-- raw HTML omitted --&gt;必须有人开始。即使别人不合作，那也与你无关。我的意见就是这样。应该由你开始，不用去考虑别人是否合作。”&lt;!-- raw HTML omitted --&gt;后记&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 3011&lt;!-- raw HTML omitted --&gt;一切烦恼皆源于人际关系”“人可以随时改变并能够获得幸福”“问题不在于能力而在于勇气&lt;/p&gt;</description>
    </item>
    <item>
      <title>windows版本nc教程：在windows上做udp测试</title>
      <link>https://wdd.js.org/posts/2021/06/ex5n9h/</link>
      <pubDate>Wed, 16 Jun 2021 13:31:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/06/ex5n9h/</guid>
      <description>&lt;p&gt;有时候，客户端的udp包被中间的防火墙拦截了，在linux上可以很简单的用nc启动一个udp server&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;启动udp&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;监听8888端口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nc&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ulp&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;启动udp&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nc&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;u&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;127.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在linux上启动nc udp server很简单，但是在windows上，没办法安装nc啊？😭&lt;/p&gt;
&lt;h1 id=&#34;峰回路转&#34;&gt;峰回路转&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nmap.org/download.html&#34;&gt;https://nmap.org/download.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在查看了nc的官网之后，发现nc实际上也提供了windows的程序，有两种版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有GUI界面的，使用友好，安装包比较大 &lt;a href=&#34;https://nmap.org/dist/nmap-7.91-setup.exe&#34;&gt;https://nmap.org/dist/nmap-7.91-setup.exe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;仅仅在命令行下执行，刚好满足需求  &lt;a href=&#34;https://nmap.org/dist/nmap-7.91-win32.zip&#34;&gt;https://nmap.org/dist/nmap-7.91-win32.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看看带GUI界面的&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/06/ex5n9h/2022-10-29-19-47-29.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;附件&#34;&gt;附件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2021/zip/280451/1623822081147-3d08abd7-dd5b-44c5-a614-5efae58c131f.zip?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2021%2Fzip%2F280451%2F1623822081147-3d08abd7-dd5b-44c5-a614-5efae58c131f.zip%22%2C%22name%22%3A%22nmap-7.91-win32.zip%22%2C%22size%22%3A15303896%2C%22type%22%3A%22application%2Fzip%22%2C%22ext%22%3A%22zip%22%2C%22status%22%3A%22done%22%2C%22taskId%22%3A%22u9c45e4b6-d2b6-458f-8fc3-a8fc5dd3563%22%2C%22taskType%22%3A%22upload%22%2C%22id%22%3A%22uef5519c9%22%2C%22card%22%3A%22file%22%7D&#34;&gt;nmap-7.91-win32.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>macos 鼠标滚轮不灵敏</title>
      <link>https://wdd.js.org/posts/2021/06/ismran/</link>
      <pubDate>Wed, 16 Jun 2021 13:27:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/06/ismran/</guid>
      <description>&lt;h1 id=&#34;现象&#34;&gt;现象&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;有时候轻微滚动滚轮，页面不滚动，然后突然又发生了滚动&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;解决方案-mos&#34;&gt;解决方案 Mos&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Caldis/Mos&#34;&gt;https://github.com/Caldis/Mos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;一个用于在MacOS上平滑你的鼠标滚动效果的小工具, 让你的滚轮爽如触控板。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;特性&#34;&gt;特性&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;疯狂平滑你的鼠标滚动效果&lt;/li&gt;
&lt;li&gt;支持分离触控板/鼠标事件, 单独翻转鼠标滚动方向。&lt;/li&gt;
&lt;li&gt;滚动曲线的自定义调整。&lt;/li&gt;
&lt;li&gt;支持区分应用处理, 黑/白名单系统。&lt;/li&gt;
&lt;li&gt;用于监控滚动事件的图形化呈现窗口。&lt;/li&gt;
&lt;li&gt;基于 Swift4 构建&lt;/li&gt;
&lt;li&gt;免费&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/06/ismran/2022-10-29-20-03-32.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;附件&#34;&gt;附件&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2021/dmg/280451/1623822116414-4ccce626-c13b-4ca2-8a10-2a8507129796.dmg?_lake_card=%7B%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2021%2Fdmg%2F280451%2F1623822116414-4ccce626-c13b-4ca2-8a10-2a8507129796.dmg%22%2C%22name%22%3A%22Mos.Versions.3.3.2.dmg%22%2C%22size%22%3A8382156%2C%22type%22%3A%22%22%2C%22ext%22%3A%22dmg%22%2C%22status%22%3A%22done%22%2C%22taskId%22%3A%22ue30d0bab-2102-4a8d-9dfb-35e097e9e49%22%2C%22taskType%22%3A%22upload%22%2C%22id%22%3A%22ubff29e7c%22%2C%22card%22%3A%22file%22%7D&#34;&gt;Mos.Versions.3.3.2.dmg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>一日看尽长安花——听北大教授畅讲中国古代文学</title>
      <link>https://wdd.js.org/posts/2021/06/rml5uy/</link>
      <pubDate>Sun, 06 Jun 2021 21:30:05 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/06/rml5uy/</guid>
      <description>&lt;p&gt;第一讲　关关雎鸠在河洲　——先秦神话和诗歌&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 129&lt;!-- raw HTML omitted --&gt;女娲炼石补天处，石破天惊逗秋雨”，&lt;!-- raw HTML omitted --&gt;第二讲　百家争鸣写春秋　——先秦散文&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 306&lt;!-- raw HTML omitted --&gt;为川者决之使导，为民者宣之使言。”&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 466&lt;!-- raw HTML omitted --&gt;他就发愤努力，一定要做仓库里的老鼠。&lt;!-- raw HTML omitted --&gt;第三讲　大风起兮云飞扬　——汉朝的赋和散文&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 538&lt;!-- raw HTML omitted --&gt;有两个情况可以免死：一是拿出大量的金钱赎身；第二就是受宫刑。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 539&lt;!-- raw HTML omitted --&gt;叫《报任安书》：&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 557&lt;!-- raw HTML omitted --&gt;事情。《史记》写完之后，司马迁就不知所终了。&lt;!-- raw HTML omitted --&gt;第六讲　独念天地之悠悠　——隋与初唐文学&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1346&lt;!-- raw HTML omitted --&gt;王勃，他在初唐时代是一个非常有才华的少年，他 27岁就死了。真是“千古文章未尽才”。他写《滕王阁序》，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1359&lt;!-- raw HTML omitted --&gt;就是把你的遭遇拉到跟他相同的地步。譬如说，你考试得了 65分，不高兴，我就对你说：不要难过嘛，我不过只考 67分而已，咱们俩都差不多。&lt;!-- raw HTML omitted --&gt;第七讲　登高壮观天地间　——盛唐诗歌&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1406&lt;!-- raw HTML omitted --&gt;秦时明月汉时关，万里长征人未还。但使龙城飞将在，不教胡马度阴山。——王昌龄《出塞二首》（其一）&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1664&lt;!-- raw HTML omitted --&gt;桃花潭水深千尺，不及汪伦送我情。&lt;!-- raw HTML omitted --&gt;第八讲　乌衣巷口夕阳斜　——中唐诗歌&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1809&lt;!-- raw HTML omitted --&gt;座中泣下谁最多，江州司马青衫湿。”&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1892&lt;!-- raw HTML omitted --&gt;十年磨一剑，霜刃未曾试。&lt;!-- raw HTML omitted --&gt;第九讲　霜叶红于二月花　——晚唐诗歌&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1906&lt;!-- raw HTML omitted --&gt;停车坐爱枫林晚，霜叶红于二月花。&lt;!-- raw HTML omitted --&gt;第十讲　大江东去浪淘沙　——两宋金元文学&lt;!-- raw HTML omitted --&gt;书签 - 位置 2168&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 2509&lt;!-- raw HTML omitted --&gt;山盟虽在，锦书难托。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 2559&lt;!-- raw HTML omitted --&gt;劝君更尽一杯酒，西出阳关无故人”，&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 2560&lt;!-- raw HTML omitted --&gt;桃花潭水深千尺，不及汪伦送我情”，&lt;/p&gt;</description>
    </item>
    <item>
      <title>6月书单</title>
      <link>https://wdd.js.org/posts/2021/06/qpdnp4/</link>
      <pubDate>Wed, 02 Jun 2021 21:05:35 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/06/qpdnp4/</guid>
      <description>&lt;h1 id=&#34;5月书单回顾&#34;&gt;5月书单回顾&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《鲁滨逊漂流》记 读完 人在孤独的时候，适合读这本书&lt;/li&gt;
&lt;li&gt;《被讨厌的勇气》读到 69%， 很有幸读到这本书，6月继续&lt;/li&gt;
&lt;li&gt;《围城》读到21%，我好喜欢钱老的比喻句，总是那么别具一格，让人耳目一新&lt;/li&gt;
&lt;li&gt;《一日看尽长安花》读到81%， 我喜欢唐诗宋词，就像是喜欢牛奶一样，非常有营养，又让人回味无穷&lt;/li&gt;
&lt;li&gt;《牛津通识读本 数学》读完，如果我能早点读到这本书，我就很可能喜欢上数学。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6月书单&#34;&gt;6月书单&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《鳗鱼的旅行》刚读到20%&lt;/li&gt;
&lt;li&gt;《Googler软件测试之道》刚读到53%， 牛逼的公司，牛逼的测试&lt;/li&gt;
&lt;li&gt;《软件测试之道微软技术专家经验总结》10%&lt;/li&gt;
&lt;li&gt;《沉默的病人》1%&lt;/li&gt;
&lt;li&gt;《一个人的朝圣》0%&lt;/li&gt;
&lt;li&gt;《读懂发票》12%&lt;/li&gt;
&lt;li&gt;《108个训练让你成为手机摄影达人》&lt;/li&gt;
&lt;li&gt;《经济学通识课》&lt;/li&gt;
&lt;li&gt;《楚留香传奇》21%&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>1分钟将微信网页版转为桌面应用</title>
      <link>https://wdd.js.org/posts/2021/06/sxwh8v/</link>
      <pubDate>Tue, 01 Jun 2021 13:07:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/06/sxwh8v/</guid>
      <description>&lt;p&gt;在manjaro上我用的wine版本的微信，然而保存文件时，文件无法保存到manjaro中，而只能保存到wine里面的windows中。&lt;/p&gt;
&lt;p&gt;用wine还是很麻烦的，于是我就选择了网页版本的微信。&lt;/p&gt;
&lt;h1 id=&#34;前提&#34;&gt;前提&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;chrome浏览器&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;操作步骤&#34;&gt;操作步骤:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将微信网页版保存为书签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打开谷歌浏览器的 chrome://apps/ 这个页面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后将微信网页版本的的书签拖动到这个页面， 拖动结束后，如下图所示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在微信的图标上右键，勾选在窗口打开&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后点击创建快捷方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击创建快捷方式后，会弹出弹窗，显示chrome会在桌面和应用菜单中创建快捷方式，选择创建&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后你就可以在桌面上看到微信的图标，点击之后chrome会单独创建一个窗口，作为微信的主界面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用微信网页版本的好处是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;很方便的访问Linux上的文件&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;微信通知也正常了&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>5个接口压力测试工具</title>
      <link>https://wdd.js.org/posts/2021/05/fxv15g/</link>
      <pubDate>Mon, 31 May 2021 13:00:16 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/fxv15g/</guid>
      <description>&lt;h1 id=&#34;ab&#34;&gt;ab&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;C语言&lt;/li&gt;
&lt;li&gt;优点
&lt;ul&gt;
&lt;li&gt;安装简单&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺点
&lt;ul&gt;
&lt;li&gt;不支持指定测试时长&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# debian/ubuntu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install apache2-utils
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# centos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum -y install httpd-tools
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;wrk&#34;&gt;wrk&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wg/wrk&#34;&gt;https://github.com/wg/wrk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C语言&lt;/li&gt;
&lt;li&gt;优点
&lt;ul&gt;
&lt;li&gt;支持lua脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;wrk is a modern HTTP benchmarking tool capable of generating significant load when run on a single multi-core CPU. It combines a multithreaded design with scalable event notification systems such as epoll and kqueue.
An optional LuaJIT script can perform HTTP request generation, response processing, and custom reporting. Details are available in SCRIPTING and several examples are located in scripts/.&lt;/p&gt;</description>
    </item>
    <item>
      <title>又发现了一个宝藏linux发行版 manjaro</title>
      <link>https://wdd.js.org/posts/2021/05/cntrwh/</link>
      <pubDate>Sun, 30 May 2021 13:42:36 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/cntrwh/</guid>
      <description>&lt;h1 id=&#34;overview&#34;&gt;overview&lt;/h1&gt;
&lt;p&gt;我主要使用过4个操纵系统。windows,macos,ubuntu,manjaro，每个操作系统，我都有上年或者上月的使用体会。&lt;/p&gt;
&lt;p&gt;如果你是普通用户，无论工作还是学习，都不涉及到写代码的话。windows和mac是最好的选择，如果你是一名开发人员，那么macos,ubuntu和manjaro都是可以选择的。&lt;/p&gt;
&lt;p&gt;我是一个很容易接受操切换作系统改变的人，从每个系统上我都可以很顺畅的切换。但是并不是所有人都是如此，有些人即使用了一年多的mac，还是无法接受，最终又换回了windows。&lt;/p&gt;
&lt;h1 id=&#34;changelog&#34;&gt;changelog&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;大学到工作第一年，我一直用windows，满足各种需求&lt;/li&gt;
&lt;li&gt;工作第二年，我换了mac。因为我想轻便的笔记本，另外也想尝尝鲜。mac的屏幕、界面UI、触摸板都是值得称道的地方，键盘体验就不足人意了。&lt;/li&gt;
&lt;li&gt;从mac切换到ubuntu, macbook使用接近4年了。明显感觉到一些性能上的不足，刚好又发现一台空闲的台式机没人用，台式机性能不错，之前是做服务器的，CPU、内存、磁盘资源都比较丰富。然后我就在上面安装了ubuntu。系统的初始化软件安装有些折腾人，要安装中文输入法，常见的软件例如微信和QQ, 安装还是有些难度的。ubuntu刚开始使用还是比较流畅的，但是接下来遇到非常致命的问题，UI经常卡死。查下来发现和Xorg以及系统的显卡有关，网上搜了下，很多人遇到类似的问题，也尝试了一些解决方案，但是还是无法解决。索性我就关了ubuntu的图形界面，仅仅ssh远程开发。&lt;/li&gt;
&lt;li&gt;从ubuntu切换到macos, 恢复到之前的状态，感觉很好。但是看到macbook pro上接的扩展坞，以及被各种线缆高的乱糟糟的桌面，想尝试其他Linux发行版的想法又在心里悄悄发了芽，一路疯长。&lt;/li&gt;
&lt;li&gt;道除了ubuntu, 就没有其他选择了吗？调研一番，发现了manjaro这个发行版，用户评价很不错。然后我就试试看，结果发现安装各种软件比ubuntu方便多了，试用了几天，也是越来越喜欢。又发现了一个宝藏发行版。&lt;/li&gt;
&lt;li&gt;其实我一直对manjaro这个单词又很大的好奇，这个英文名是什么意思呢？词典上没有对这个英文词的介绍，只是说是一个linux发行版。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;manjaro-什么意思如何发音&#34;&gt;manjaro 什么意思？如何发音？&lt;/h1&gt;
&lt;p&gt;marjaro这个词来自kilimanjaro,  乞力马扎罗是非洲最高的高山，这座山是由于火山爆发所产生的，这个可能比较贴合marjaro的滚动发布的特点，也说明这个发行版是比较活跃的吧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Although the inspiration for the name originates from &lt;em&gt;Mount Kili&lt;strong&gt;manjaro&lt;/strong&gt;&lt;/em&gt;, it may be pronounced as &amp;lsquo;Man-jar-o&amp;rsquo; or as &amp;lsquo;Man-ha-ro&amp;rsquo;.   &lt;a href=&#34;https://wiki.manjaro.org/index.php/Manjaro_FAQ&#34;&gt;https://wiki.manjaro.org/index.php/Manjaro_FAQ&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;乞力马扎罗山&lt;/strong&gt;（斯瓦西里语：Kilimanjaro，意为“灿烂发光的山”）位于坦桑尼亚东北的乞力马扎罗区，临近肯尼亚边界，是非洲的最高山，常被称为“非洲屋脊”、“非洲之王”。其最高峰为基博峰（也称乌呼鲁峰），海拔5895米。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;manjaro发行版的特点&#34;&gt;manjaro发行版的特点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;图形化安装界面，非常方便&lt;/li&gt;
&lt;li&gt;自带图形界面&lt;/li&gt;
&lt;li&gt;自动硬件检测，图形化支持做的比ubuntu好太多&lt;/li&gt;
&lt;li&gt;滚动更新&lt;/li&gt;
&lt;li&gt;非常多的包，可以使用AUR来安装包&lt;/li&gt;
&lt;li&gt;相比与Arch, manjaro对新手非常友好&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://manjaro.org/terms-of-use/&#34;&gt;https://manjaro.org/terms-of-use/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Developed in Austria, France, and Germany, Manjaro provides all the benefits of the Arch operating system combined with a focus on &lt;em&gt;user-friendliness&lt;/em&gt; and &lt;em&gt;accessibility&lt;/em&gt;.   &lt;a href=&#34;https://wiki.manjaro.org/index.php/About_Manjaro&#34;&gt;https://wiki.manjaro.org/index.php/About_Manjaro&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>tavern</title>
      <link>https://wdd.js.org/posts/2021/05/xneq08/</link>
      <pubDate>Wed, 26 May 2021 15:46:03 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/xneq08/</guid>
      <description>&lt;h1 id=&#34;获取环境变量&#34;&gt;获取环境变量&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; Authorization: &amp;#34;Basic {tavern.env_vars.SECRET_CI_COMMIT_AUTH}&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;x-www-form-urlencoded&#34;&gt;x-www-form-urlencoded&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;request&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{test_host}/form_data&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;method&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;POST&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;data&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;id&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;abc123&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;按照name过滤运行测试--k&#34;&gt;按照name过滤运行测试 -k&lt;/h1&gt;
&lt;p&gt;This can then be selected with the -k flag to pytest - e.g. pass pytest-kfake to run all tests with ‘fake’ in the name.&lt;/p&gt;
&lt;p&gt;比如只运行名称包含fake的测试&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;py.test -k fake&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>大写锁定键映射为escape</title>
      <link>https://wdd.js.org/posts/2021/05/eafyk8/</link>
      <pubDate>Mon, 24 May 2021 20:25:34 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/eafyk8/</guid>
      <description>&lt;p&gt;大写锁定键一般都是非常鸡肋的功能。&lt;/p&gt;
&lt;h1 id=&#34;仅仅一次生效&#34;&gt;仅仅一次生效&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; setxkbmap -option caps:escape  大写锁定键改为esc
 
 setxkbmap -option ctrl:nocaps  大写锁定键改为ctrl
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;永久生效&#34;&gt;永久生效&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;/etc/X11/xorg.conf.d/90-custom-kbd.conf&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Section &amp;#34;InputClass&amp;#34;
    Identifier &amp;#34;keyboard defaults&amp;#34;
    MatchIsKeyboard &amp;#34;on&amp;#34;

    Option &amp;#34;XKbOptions&amp;#34; &amp;#34;caps:escape&amp;#34;
EndSection
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注销或者重启后生效&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://superuser.com/questions/566871/how-to-map-the-caps-lock-key-to-escape-key-in-arch-linux&#34;&gt;https://superuser.com/questions/566871/how-to-map-the-caps-lock-key-to-escape-key-in-arch-linux&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/X_keyboard_extension&#34;&gt;https://wiki.archlinux.org/title/X_keyboard_extension&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>牛津通识读本：数学（中文版）笔记</title>
      <link>https://wdd.js.org/posts/2021/05/wsoivr/</link>
      <pubDate>Mon, 24 May 2021 13:19:39 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/wsoivr/</guid>
      <description>&lt;p&gt;笔记本导出&lt;!-- raw HTML omitted --&gt;牛津通识读本：数学（中文版）&lt;!-- raw HTML omitted --&gt;蒂莫西·高尔斯&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;第二章 数与抽象&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 483&lt;!-- raw HTML omitted --&gt;重要的只是它们所遵循的规则。&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 486&lt;!-- raw HTML omitted --&gt;我们通过接受 i作出小小的投资，结果得到了许多倍的回报。&lt;/p&gt;</description>
    </item>
    <item>
      <title>鲁滨逊漂流记 笔记与读后感</title>
      <link>https://wdd.js.org/posts/2021/05/uvq06k/</link>
      <pubDate>Sun, 23 May 2021 21:13:51 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/uvq06k/</guid>
      <description>&lt;p&gt;第一章 人生的起点&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 44&lt;!-- raw HTML omitted --&gt;他对我说，只有那些穷到走投无路，或心怀大志的巨富，才会选择出海冒险，想让自己以非凡的事业扬名于世。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;走投无路的穷人剩下的只是作为动物的本能，怎么可能和心怀大志的巨富相提并论呢&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;标注(黄色) - 位置 194&lt;!-- raw HTML omitted --&gt;在去伦敦的路上，以及到了伦敦以后，我内心一直剧烈挣扎，我到底该选什么样的人生道路，我该回家还是该航海？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我相信，每个人都有面对人生道路的艰难抉择的时候。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;第三章 荒岛遇难&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 621&lt;!-- raw HTML omitted --&gt;“因为突来的欣喜，如同突来的悲伤，都令人难以承受。”&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;悲伤与快乐都是来自比较。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;第六章 生病以及良心有愧&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1193&lt;!-- raw HTML omitted --&gt;大麦刚刚长出来的时候，我曾深受感动，第一次认为那是上帝显示的神迹。不过后来发现那不是神迹以后，所有从它而来的感动就随之消失了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无法解释的时候，才会想到鬼神。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;第九章 小船&lt;!-- raw HTML omitted --&gt;标注(黄色) - 位置 1701&lt;!-- raw HTML omitted --&gt;我认为，我们之所以感到缺乏和不满足，是因为我们对已经拥有的东西缺少感恩之心。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;看到苹果又出了新手机，macbook pro又出了新款的m1笔记本，对比我本自己目前手中所拥有的东西，你真的珍惜过吗？
得不到的永远在骚动 &amp;ndash;《红玫瑰》&lt;/p&gt;</description>
    </item>
    <item>
      <title>官方客服也开始割韭菜</title>
      <link>https://wdd.js.org/posts/2021/05/ae2rme/</link>
      <pubDate>Thu, 20 May 2021 13:31:36 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/ae2rme/</guid>
      <description>&lt;p&gt;联通官方客服已经开始割韭菜了。&lt;/p&gt;
&lt;p&gt;前两天10010给我打电话，一个女客服操着浓重的口音，兴奋的给说我是优质客户，然后因为回馈老用户的关系，每个月会多送我2个G的5G高速流量。&lt;/p&gt;
&lt;p&gt;我当时很警觉，立马问她这个会对我原来的套餐有影响吗，她说没任何影响，接着殷切的问我要不要办理。我思考了一下，觉得不用花钱，又多了2个G的流量，索性就办理了。&lt;/p&gt;
&lt;p&gt;今天我在联通掌上营业厅上查自己的实时话费，突然多出了一项9元的流量叠加包月套餐费。的确对我原来的套餐没有影响，只是多了一个新的业务。😂&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/ae2rme/2022-10-29-19-35-36.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我思来想去，我应该没有办理这个套餐啊？哪里冒出来的。然后仔细的从迷宫似的掌上营业厅上查找套餐信息。结果给我找到了下面的信息。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/ae2rme/2022-10-29-19-35-48.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我当时很生气&lt;/strong&gt;，当时客服给我介绍流量包的时候，从始至终没有提这个流量包要收费的事情。&lt;strong&gt;我也是大意了，没有闪。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/ae2rme/2022-10-29-19-36-06.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着我就打了10010的官方客服，然后走人工投诉，最终取消了这个套餐。&lt;/p&gt;
&lt;p&gt;我想，这种电话应该很多人都接过吧，被骗的应该不只是少数，如果不仔细看自己的账单，我也不知道有这件事情。&lt;/p&gt;
&lt;p&gt;从这件事事情我也反省自己：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;官方客服也不要信&lt;/li&gt;
&lt;li&gt;客服说的话，都要当作放屁&lt;/li&gt;
&lt;li&gt;没有看到黑纸白字的承诺，都是骗人的&lt;/li&gt;
&lt;li&gt;不要想贪小便宜，否则自己就会被当作韭菜&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/ae2rme/2022-10-29-19-36-20.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>再读鲁滨逊漂流记: 成年人如何面对孤独</title>
      <link>https://wdd.js.org/posts/2021/05/vzfo04/</link>
      <pubDate>Mon, 17 May 2021 18:23:41 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/vzfo04/</guid>
      <description>&lt;p&gt;初中的时候，我曾经读过鲁滨逊漂流记，那时候这本书中最吸引我的是各种新奇的冒险体验，鲁滨逊接下来会遇到什么事情，是我最关注的事情。&lt;/p&gt;
&lt;p&gt;最近，我又开始读这本书了。是因为我感觉到很孤独，我不知道如何解决。我想，鲁滨逊一个人在一个荒岛上过了二十八年，他是如何面对孤独的呢？我想找到这个答案。&lt;/p&gt;
&lt;h1 id=&#34;写日记&#34;&gt;写日记&lt;/h1&gt;
&lt;p&gt;小说中有不少的章节，都是鲁滨逊的日记。记录了他每天的工作和经历，通过写日志，他仿佛能够与自己对话。所以，有时候当我感到孤独的时候，我也写日记，把我的感想，我的困惑和烦恼统统写出来。对我自己来说，这也是一种释放。&lt;/p&gt;
&lt;h1 id=&#34;投身工作制造产品让自己忙活&#34;&gt;投身工作，制造产品，让自己忙活&lt;/h1&gt;
&lt;p&gt;除非生病或者下雨，鲁兵逊总是在不停的忙活着。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;收集葡萄，晒葡萄干&lt;/li&gt;
&lt;li&gt;圈养小羊，让自己有充足的肉可以吃&lt;/li&gt;
&lt;li&gt;种植大麦，自己制作面包&lt;/li&gt;
&lt;li&gt;加固自己的房子&lt;/li&gt;
&lt;li&gt;晒制陶土，制作陶器&lt;/li&gt;
&lt;li&gt;环岛旅行&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;鲁滨逊每天都在忙活着，每一天过得都非常有意义。我也觉得自己决不能浪费时间。&lt;/p&gt;
&lt;h1 id=&#34;找到自己的信仰&#34;&gt;找到自己的信仰&lt;/h1&gt;
&lt;p&gt;鲁滨逊在一次生病过程中，身体非常虚弱，当他回忆往事的时候，总觉得自己是个罪恶的人，无法得到谅解。但是偶然他得到一本《圣经》，他阅读圣经，从中找到自己的信仰。有信仰是非常幸福的事情，但是你若问我我的信仰是什么，我也不知道我的信仰是什么。&lt;/p&gt;
&lt;p&gt;这是最好的时代，也是最坏的时代。所有的人都觉得90后是压力最大的一代，90都神经也是最敏感的（腾讯张军的致敬青年，白岩松的“不会吧”）。我们承受着各种压力，其中最大的可能就是房价了。&lt;/p&gt;
&lt;p&gt;人生当中，自由自在可能仅仅是片刻的，承受压力却是主旋律。但是如何面对压力，却把人分成了不同的样子。有的人会被压力击垮，放弃抵抗，沉醉于各种网络精神鸦片中，有的人却能负重前行，坚持学习，一往无前。&lt;/p&gt;
&lt;p&gt;罗曼罗兰说过：这世上只有一种真正的英雄主义，就是认清生活的真相，并且任然热爱她。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用AI让卡通人物更加真实</title>
      <link>https://wdd.js.org/posts/2021/05/mfh46t/</link>
      <pubDate>Fri, 14 May 2021 13:49:09 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/mfh46t/</guid>
      <description>&lt;h1 id=&#34;魔女宅急便-琪琪&#34;&gt;魔女宅急便 琪琪&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-16-39.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;有点像花木兰&#34;&gt;有点像花木兰&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-16-46.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;佐助&#34;&gt;佐助&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-16-52.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;不认识&#34;&gt;不认识&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-16-58.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;小樱&#34;&gt;小樱&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-17-04.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;不认识-1&#34;&gt;不认识&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-17-10.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;不认识-2&#34;&gt;不认识&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-17-17.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;不认识-3&#34;&gt;不认识&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/05/mfh46t/2022-10-29-20-17-25.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://designyoutrust.com/2021/04/person-uses-artificial-intelligence-to-make-anime-and-cartoon-characters-look-more-realistic/&#34;&gt;https://designyoutrust.com/2021/04/person-uses-artificial-intelligence-to-make-anime-and-cartoon-characters-look-more-realistic/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>RabbitMq 大量的连接抖动</title>
      <link>https://wdd.js.org/posts/2021/05/nr1shd/</link>
      <pubDate>Thu, 13 May 2021 11:41:43 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/nr1shd/</guid>
      <description>&lt;h1 id=&#34;连接抖动介绍&#34;&gt;连接抖动介绍&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Workloads with high connection churn (a high rate of connections being opened and closed) will require TCP setting tuning to avoid exhaustion of certain resources: max number of file handles, Erlang processes on RabbitMQ nodes, kernel&amp;rsquo;s ephemeral port range (for hosts that open a lot of connections, including Federation links and Shovel connections), and others. &lt;strong&gt;Nodes that are exhausted of those resources won&amp;rsquo;t be able to accept new connections&lt;/strong&gt;, which will negatively affect overall system availability.&lt;/p&gt;</description>
    </item>
    <item>
      <title>用古龙的手法 写我只会心疼哥哥</title>
      <link>https://wdd.js.org/posts/2021/05/rhan2i/</link>
      <pubDate>Mon, 10 May 2021 20:38:50 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/rhan2i/</guid>
      <description>&lt;p&gt;【我只会心疼哥哥（原视频）-哔哩哔哩】&lt;a href=&#34;https://b23.tv/9YIMtp&#34;&gt;https://b23.tv/9YIMtp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;蓝天白云，晴空万里。路旁的电线杆笔挺的站着，有几只小鸟，在电线上蹦来蹦去，叫着闹着，空气中充了令人愉快的感觉。&lt;/p&gt;
&lt;p&gt;一辆白色雅迪冠能T5石墨烯72电池增程矩阵式大灯轻便型电动车自北向南，疾驰而过。&lt;/p&gt;
&lt;p&gt;车上坐着一男一女。少女扎着马尾辫，手中举着一根折叠式棒棒糖，笑靥如画，喃喃道：“哥哥，哥哥，你给我买这个，你女朋友知道了，不会生气吧？” 不等男生回答，她自顾自的先尝了一口。然后把棒棒糖举到男生嘴边，然后嘻嘻笑道：“真好吃，哥，你也尝一口”&lt;/p&gt;
&lt;p&gt;没有一个人瞧见这男生是怎么舔到棒棒糖的，但他的确尝了一口。&lt;/p&gt;
&lt;p&gt;少女睁大眼睛，张开嘴巴，惊讶的瞪着棒棒糖，又生气又害羞，仿佛怪自己不该那么鲁莽。她皎白的面颊已泛起了晕晕，在阳光下，放佛是一朵刚开的海棠， 娇嗔道：“哥哥，你女朋友要是知道我俩吃同一个棒棒糖，你女朋友不会吃醋吧？”&lt;/p&gt;
&lt;p&gt;“哥哥，你骑着小电动车，还带着我，你女朋友要是知道了，不会打我吧”&lt;/p&gt;
&lt;p&gt;“好可怕！你女朋友！”&lt;/p&gt;
&lt;p&gt;少女用眼角瞟着男生，黯然道：“你女朋过不像我，我只会心疼哥哥。”&lt;/p&gt;</description>
    </item>
    <item>
      <title>python ModuleNotFoundError</title>
      <link>https://wdd.js.org/posts/2021/05/blzt8r/</link>
      <pubDate>Mon, 10 May 2021 11:01:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/blzt8r/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 wave.py
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Traceback &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;most recent call last&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  File &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wave.py&amp;#34;&lt;/span&gt;, line 3, in &amp;lt;module&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    import matplotlib.pyplot as plt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ModuleNotFoundError: No module named &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;matplotlib&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种问题一般有两个原因&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这个第三方的包本地的确没有安装，解决方式就是安装这个包&lt;/li&gt;
&lt;li&gt;这个包安装了，但是因为环境配置或者其他问题，导致找不到正确的路径&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;问题1-本地有没有安装过matplotlib&#34;&gt;问题1: 本地有没有安装过matplotlib?&lt;/h1&gt;
&lt;p&gt;下面的命令的输出说明已经安装了matplotlib, 并且目录是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/usr/local/lib/python3.9/site-packages&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip3 show matplotlib
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Name: matplotlib
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Version: 3.4.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Summary: Python plotting package
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Home-page: https://matplotlib.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Author: John D. Hunter, Michael Droettboom
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Author-email: matplotlib-users@python.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;License: PSF
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Location: /usr/local/lib/python3.9/site-packages
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Requires: pillow, python-dateutil, pyparsing, numpy, kiwisolver, cycler
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Required-by:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;问题2-python3运行的那个版本的python&#34;&gt;问题2: python3运行的那个版本的python？&lt;/h1&gt;
&lt;p&gt;由于历史原因，python的版本非常多，电脑上可能安装了多个python的版本。&lt;/p&gt;
&lt;p&gt;下面的命令说明，python3实际执行的的是python 3.8.2，搜索的路径也是3.8的。但是pip3安装的第三方包，是在python3.9的目录下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  bin python3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Python 3.8.2 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default, Dec &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt; 2020, 15:06:04&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Clang 12.0.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;clang-1200.0.32.29&lt;span style=&#34;color:#f92672&#34;&gt;)]&lt;/span&gt; on darwin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;help&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;copyright&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;credits&amp;#34;&lt;/span&gt; or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;license&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; more information.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; import sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; print&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sys.path&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python38.zip&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/lib-dynload&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  pip3 -V
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip 21.0.1 from /usr/local/lib/python3.9/site-packages/pip &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;python 3.9&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;问题3-python39在哪&#34;&gt;问题3: python3.9在哪？&lt;/h1&gt;
&lt;p&gt;通过上面的命令，就说了我的电脑上有python3.9， 那么实际要克制行文件在哪里呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>5月书单</title>
      <link>https://wdd.js.org/posts/2021/05/appxev/</link>
      <pubDate>Mon, 10 May 2021 08:51:30 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/appxev/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;人生是一场仅与时间为伴的孤独修行&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;A《鲁宾逊漂流记》&lt;/li&gt;
&lt;li&gt;B《一日看尽长安花》&lt;/li&gt;
&lt;li&gt;C《被讨厌的勇气》&lt;/li&gt;
&lt;li&gt;D《围城》&lt;/li&gt;
&lt;li&gt;E《牛津通识读本 数学》&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th&gt;5.10&lt;/th&gt;
          &lt;th&gt;11&lt;/th&gt;
          &lt;th&gt;12&lt;/th&gt;
          &lt;th&gt;13&lt;/th&gt;
          &lt;th&gt;14&lt;/th&gt;
          &lt;th&gt;15&lt;/th&gt;
          &lt;th&gt;16&lt;/th&gt;
          &lt;th&gt;17&lt;/th&gt;
          &lt;th&gt;18&lt;/th&gt;
          &lt;th&gt;19&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;鲁滨逊漂流记&lt;/td&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;9&lt;/td&gt;
          &lt;td&gt;20&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;被讨厌的勇气&lt;/td&gt;
          &lt;td&gt;20&lt;/td&gt;
          &lt;td&gt;25&lt;/td&gt;
          &lt;td&gt;30&lt;/td&gt;
          &lt;td&gt;36&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;围城&lt;/td&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;10&lt;/td&gt;
          &lt;td&gt;11&lt;/td&gt;
          &lt;td&gt;13&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;牛津通识读本 数学&lt;/td&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;8&lt;/td&gt;
          &lt;td&gt;10&lt;/td&gt;
          &lt;td&gt;19&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;一日看尽长安花&lt;/td&gt;
          &lt;td&gt;15&lt;/td&gt;
          &lt;td&gt;20&lt;/td&gt;
          &lt;td&gt;24&lt;/td&gt;
          &lt;td&gt;35&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>openvpn 报错</title>
      <link>https://wdd.js.org/posts/2021/05/kakgg7/</link>
      <pubDate>Sat, 01 May 2021 13:58:18 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/05/kakgg7/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2021-01-19 12:01:58 OPTIONS ERROR: failed to negotiate cipher with server.  Add the server&amp;#39;s cipher (&amp;#39;BF-CBC&amp;#39;) to --data-ciphers (currently &amp;#39;AES-256-GCM:AES-128-GCM&amp;#39;) if you want to connect to this server.
2021-01-19 12:01:58 ERROR: Failed to apply push options
2021-01-19 12:01:58 Failed to open tun/tap interface
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;解决办法：&lt;!-- raw HTML omitted --&gt;在配置文件中增加一行&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ncp-ciphers &amp;#34;BF-CBC&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;PS： 今天是我的生日，QQ邮箱又是第一个发来祝福的 苦笑.jpg&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>不曾忘的一首小诗</title>
      <link>https://wdd.js.org/posts/2021/04/gbx6x5/</link>
      <pubDate>Wed, 28 Apr 2021 21:52:33 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/gbx6x5/</guid>
      <description>&lt;p&gt;我小时候曾去过成都，那时候还没有高速公路，而是九曲回肠的盘山公路。路的一边是看不到底悬崖，另一边上接近90度的峭壁。在峭壁之上，有很多巨石，摇摇欲坠，十分吓人。&lt;/p&gt;
&lt;p&gt;深夜时分，车灯蔓延处，连起来放佛是一条天路。&lt;/p&gt;
&lt;p&gt;从成都回来的时候，我写下这个小诗，匆匆十年，桃花依旧，物是人非。曾经梦想中的的那个遥远的未来，已然近在咫尺。然而这首小诗，却从未忘记。&lt;/p&gt;
&lt;p&gt;灯光随血液而流动&lt;!-- raw HTML omitted --&gt;心跳伴坎坷而起伏&lt;!-- raw HTML omitted --&gt;极目远眺&lt;!-- raw HTML omitted --&gt;想看见路的时候&lt;!-- raw HTML omitted --&gt;蓦然回首&lt;!-- raw HTML omitted --&gt;路的尽头&lt;!-- raw HTML omitted --&gt;心里头&lt;/p&gt;</description>
    </item>
    <item>
      <title>从/bin/sh到费曼学习法</title>
      <link>https://wdd.js.org/posts/2021/04/zl6rpy/</link>
      <pubDate>Wed, 28 Apr 2021 15:08:19 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/zl6rpy/</guid>
      <description>&lt;p&gt;今天在写一个shell脚本的时候，遇到一个奇怪的报错，说我的脚本有语法错误。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $1 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; $2 &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo ok
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo not ok
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;编译器的报错是说if语句是有问题的，但是我核对了好久遍，也看了网上的例子，发现没什么毛病。&lt;/p&gt;
&lt;p&gt;我自己看了几分钟，还是看不出所以然来。然后我就找了一位同事帮我看看，首先我给他解释了一遍我的脚本是如何工作的，说着说着，他还在思考的时候。我突然发现，我知道原因了。&lt;/p&gt;
&lt;p&gt;这个shell脚本是我从另一个脚本里拷贝的。脚本的第一行是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;原因就在与第一行的这条语句。&lt;/p&gt;
&lt;p&gt;一般情况下我们都是写得/bin/bash,  但是在拷贝的时候，我没有考虑到这个。实际在我的电脑上/bin/sh很可能不是bash, 而是zsh，zsh的语法和bash的语法是不一样的。所以会抱语法错误&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这就是典型的一叶障目，不见泰山。 我觉得我需要买个小黄鸭，在遇到的难以解决的问题时，抽丝剥茧的解释给它听。&lt;/p&gt;
&lt;p&gt;经过这件事情后，我也想到了今天刚学到的一个概念。叫做费曼学习法，据说是很牛逼的学习法，可以非常快的学习一门知识。&lt;/p&gt;
&lt;p&gt;简单介绍一下费曼学习法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择一个你要学学习的概念，写在本子上&lt;/li&gt;
&lt;li&gt;假装你要把这个概念教会别人&lt;/li&gt;
&lt;li&gt;你一定会某些地方卡壳的，当你卡壳的时候，就立即回去看书&lt;/li&gt;
&lt;li&gt;简化你的语言，目的是用你自己的语言，解释某个概念，如果你依然还是有些困惑，那说明你还是不够了解这个概念。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;费曼曾获得诺贝尔奖，所以上他不是个简单的人。费曼的老师叫惠勒，费曼的学习方法很可能收到惠勒的影响。&lt;/p&gt;
&lt;p&gt;惠勒常常说：人只有教别人的时候，才能学到更多。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another favorite Wheelerism is &amp;ldquo;one can only learn by teaching. 惠勒主义&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;惠勒还有一句名言：&lt;/p&gt;
&lt;p&gt;去恨就是是学习，去学习是去理解，去理解是去欣赏，去欣赏则是去爱，也许你会爱上你的理论。，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To hate is to study, to study is to understand, to understand is to appreciate, to appreciate is to love. So maybe I&amp;rsquo;ll end up loving your theory.  &amp;ndash; Wheeler&lt;/p&gt;</description>
    </item>
    <item>
      <title>我的传记 - 大学篇</title>
      <link>https://wdd.js.org/posts/2021/04/mcgyoz/</link>
      <pubDate>Sat, 24 Apr 2021 21:40:43 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/mcgyoz/</guid>
      <description>&lt;p&gt;2012年，我从安徽的一个小城市考到上海，前往一个普通的二本院校上大学，学习网络工程。&lt;/p&gt;
&lt;p&gt;在很多人以为，上大学不就是玩吗？其实也基本属实，特别是像我们这种普通的学校。但是我的大学也并没有荒废，这其实也并不是说明我就多优秀。 这其中的原因，说来也是蛮有意思。我打游戏太菜，而且心理素质不好，且又没有坚持不懈的毅力。所以我就早早的放弃了英雄联盟这种游戏。&lt;/p&gt;
&lt;p&gt;一个大学生，一旦放弃了打游戏，其实他就剩余了很多空余的时间。多余的时间能干生么呢？&lt;/p&gt;
&lt;p&gt;选择不多。1. 可以选择谈谈恋爱。但是一来我囊中羞涩，而来也没有什么长得比较漂亮，一见钟情的女生。所以谈恋爱这事就放下了。 剩下的选择便只有一个，学习。&lt;/p&gt;
&lt;p&gt;对了，就是学习。当其他人都选择游戏娱乐的时候，你稍微用点力，就能比很多人优秀。&lt;/p&gt;
&lt;p&gt;下一个问题就是学习。 学习要有兴趣，并且要决定学什么。&lt;/p&gt;
&lt;p&gt;这种时候，我思潮又落入回忆中，似乎忘记的事情，此刻又清晰想起来。&lt;/p&gt;
&lt;p&gt;那是我初三暑假的时候，参加过一次学校组织的计算机免费培训课程，其中培训了很多东西。像五笔打字、制作flash、学习photoshop之类的。上课老师在课堂上说过，培训结束的时候，会选择几个成绩优异的学生，给予几百块的奖励。为了这几百块的奖励，我也不能退缩，我很快记住了五笔词根。然后在课堂上，我在众同学佩服的眼光中，把五笔字根全部背了一遍给老师听。&lt;/p&gt;
&lt;p&gt;学习的内容中，photoshop真实给我打开了一个通往神秘世界的大门，原来电脑还能做这么牛逼的事情。接下来经过我废寝忘食，专心致志，一丝不苟的学习，我已经知道了一些基本的图片制作技巧。利用这个技巧，我做了很多搞笑的图片，just for fun!&lt;/p&gt;
&lt;p&gt;然而直到暑假结束，很多同学心心念念的几百块奖励，讲课老师在也没有提过。&lt;/p&gt;
&lt;p&gt;我想，有了初中的ps经验，况且我对这东西很感兴趣。所以我就从淘宝上换了几十块钱，买了一本很厚的，讲解photoshop的书。按照书中的指导，我对photoshop有了全面系统的学习，然后又跟着实战，学会了很多关于抠图、美容、特效的技术。虽然我学了photoshop，但是感觉上并没有什么用，因为考试又不考photoshop, 所以我只能自己通过制作一些搞笑图片来自娱自乐。&lt;/p&gt;
&lt;p&gt;然而，一旦你学会某个东西，便真的有派上用场的时候。大四快毕业时，很多同学开始搞简历，简历上一般要贴照片的。所以我便成为了班级里远近闻名的修图大师。&lt;/p&gt;
&lt;p&gt;除了photoshop，专业课上可以说的就是学习编程了。当时我c语言学的非常好，授课老师经常在课堂上提我来回答问题。为了避免回答不上来问题，显得很没面子。我经常在上课之前偷偷的就预习上课的内容，并且学习如何解答课后的习题。所以老师的提问我经常可以轻松的回答。老师似乎我觉得我是个可育之才，经常在其他班级上课的时候，也会在课上提我的名字，说：其他班的王xx同学，他这个问题回答的很好。所以一些其他班级的同学，也是知道我的名字的。&lt;/p&gt;
&lt;p&gt;每每到考试之前，我总会收到不少加我QQ好友的申请，然后问我有没有时间，想找我帮他们复习c语言。然后带上饮料，约我到图书馆，当面传道授业解惑。我还记得一个比较奇葩的老师，给同学布置作业，要求实现某某功能，至少要求要有三千行代码，然后该同学东拼西凑，也只凑够了快一千行，然后找我帮忙。&lt;/p&gt;
&lt;p&gt;可以参考：&lt;/p&gt;
&lt;p&gt;大二的暑假，我们搬了校区。从远离市区的新校区，搬到了离市区比较近的老校区。&lt;/p&gt;
&lt;p&gt;快放假了，有不少的同学决定暑假留校，然后找点工作，赚点零花钱。&lt;/p&gt;
&lt;p&gt;我也觉得放假回家没意思，决定暑假找工作。因为我有一些photoshop的基础，所以就在招聘网站上写自己精通photoshop，看看有没有人需要。很快我找到了一份工作，然而刚开始的工作并不是图片制作，而是摄影摄像。具体的内容是给古玩艺术品拍照，然后我就一边学习一边拍照，照片拍完还要用ps做后期处理。所以整个暑假，包括大三，和大四。我基本上都在和古玩艺术品打交道，见识了不少的宝贝。从书画，到紫砂壶，玉器，陶器，手工艺品等等，都有接触。上海的各大古玩城，我也基本都跑过好几遍。也组织过一次小型的拍卖会，主要负责拍卖图册的制作。&lt;/p&gt;
&lt;p&gt;我的大三和大四时很忙的，倒不是学习，而是课外的工作。工作很累，每晚基本上都是9点以后下班，回到学校就基本上10点左右。有时候因为太累而在地铁上睡着，结果坐过站了。正好是最后一班地铁，所以只能下了地铁，步行往回走。&lt;/p&gt;
&lt;p&gt;课外的工作很累，但也学到了不少的东西。除此之外，就是自己赚钱能养活自己了。至少大三和大四，我没有再问父母要过生活费。即使是对于父母，要生活费这件事情，也让我觉得不在自在。我是一个向往自由的人，不希望被任何人束缚，即使是父母。&lt;/p&gt;
&lt;p&gt;课外工作的最后阶段，我用自己赚的钱买了人生第一个非常贵的手机iphone6s。我觉得，这是我应得的东西。&lt;/p&gt;
&lt;p&gt;匆匆4年，大学就这么结束了。我对大学并没有什么怀念，只是觉得，我算是蛮幸运的，至少没有白白浪费掉四年的光阴。&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于中科院回信文字的联想</title>
      <link>https://wdd.js.org/posts/2021/04/dttcg5/</link>
      <pubDate>Wed, 21 Apr 2021 20:38:45 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/dttcg5/</guid>
      <description>&lt;p&gt;最近看到澎湃新闻报道了一个博士论文的致谢部分，内容如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;走了很远的路，吃了很多的苦，才将这份博士学位论文送到你的面前。二十二载求学路，一路风雨泥泞，许多不容易。如梦一场，仿佛昨天一家人才团聚过。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;看到这个句子，我瞬间觉得一种似曾相识之感。&lt;/p&gt;
&lt;p&gt;我记得我也曾写过类似的句子。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我花了很长的时间，走过了人生的大半个青葱岁月的花样年华
才学会什么是效率，什么是专一。
蓦然回首
10年的路，每次转变的开始都是感觉镣铐加身，步履维艰，屡次三番想要放弃&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/wangdd/blog/xyh6lg?view=doc_embed&#34;&gt;生命不息 折腾不止 使用ubuntu作为主力开发工具&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其实，这种句子也不是我的原创。是我仿照我看过的一本小说，从中摘抄而来。&lt;/p&gt;
&lt;p&gt;这本小说叫做《项塔兰》&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我花了很长的岁月，走过大半个世界，才真正学到什么是爱、什么是命运，以及我们所做的抉择。我被拴在墙上遭受拷打时，才顿悟这个真谛。不知为何，就在我内心发出呐喊之际，我意识到，即使镣铐加身，一身血污，孤立无助，我仍然是自由之身，我可以决定是要痛恨拷打我的人，还是原谅他们。我知道，这听起来似乎算不了什么，但在镣铐加身、痛苦万分的当下，当镣铐是你唯一仅有的，那份自由将带给你无限的希望。是要痛恨，还是要原谅，这抉择足以决定人一生的际遇。《项塔兰》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;这是一名通缉犯的十年印度流亡岁月的记录，很难想象，一名在逃犯是如何写出如此优秀的文笔。各位看官有时间可以看看。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/9kfGCXevO5Hlpg_iINof6Q&#34;&gt;https://mp.weixin.qq.com/s/9kfGCXevO5Hlpg_iINof6Q&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>learn Sonic</title>
      <link>https://wdd.js.org/posts/2021/04/kvg1r9/</link>
      <pubDate>Tue, 20 Apr 2021 08:47:29 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/kvg1r9/</guid>
      <description>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Sonic is a fast, lightweight and schema-less search backend. It ingests search texts and identifier tuples that can then be queried against in a microsecond&amp;rsquo;s time.&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;install&#34;&gt;install&lt;/h1&gt;
&lt;h1 id=&#34;ref&#34;&gt;ref&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/valeriansaliou/sonic&#34;&gt;https://github.com/valeriansaliou/sonic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://crates.io/crates/sonic-server&#34;&gt;https://crates.io/crates/sonic-server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>command &#43; tab 无法切换窗口了？</title>
      <link>https://wdd.js.org/posts/2021/04/gt9iss/</link>
      <pubDate>Mon, 19 Apr 2021 17:41:14 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/gt9iss/</guid>
      <description>&lt;p&gt;今天发现一个问题，按住command + tab, 已经切换到对应的应用图标上，但是松开按键之后，屏幕并没有切换到新的App屏幕上。特别是那些全屏的应用。&lt;/p&gt;
&lt;p&gt;看了很多资料，都是没啥用的，最后发现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://apple.stackexchange.com/questions/112350/cmdtab-does-not-work-on-hidden-or-minimized-windows&#34;&gt;https://apple.stackexchange.com/questions/112350/cmdtab-does-not-work-on-hidden-or-minimized-windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最终发现，需要设置调度中心的 &lt;code&gt;切换到某个应用时，会切换到包含该应用程序的打开的窗口空间&lt;/code&gt;， 这个必需要勾选。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/04/gt9iss/2022-10-29-19-54-33.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>draw.io居然有桌面客户端了</title>
      <link>https://wdd.js.org/posts/2021/04/zf3xgd/</link>
      <pubDate>Fri, 09 Apr 2021 21:03:21 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/zf3xgd/</guid>
      <description>&lt;p&gt;当你需要解释一个概念的时候，图形化的展示是最容易让人理解的方式。&lt;/p&gt;
&lt;p&gt;以前我一直用&lt;a href=&#34;https://www.processon.com/diagrams&#34;&gt;processon&lt;/a&gt;来绘制， processon的优点很多，用过的都知道。&lt;/p&gt;
&lt;p&gt;但是缺点也是非常明显的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定价过高&lt;/li&gt;
&lt;li&gt;不支持离线使用&lt;/li&gt;
&lt;li&gt;虽然processon的使用体验还不错，但是对我个人来说，使用的频率并不高&lt;/li&gt;
&lt;li&gt;免费的会员最多只有19个文件可以使用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有一年，我的文件超过了19个，我就只能买会员了。会员到期后，我就没有续费，因为使用的频率太低。&lt;/p&gt;
&lt;h1 id=&#34;关于processon定价&#34;&gt;关于processon定价&lt;/h1&gt;
&lt;p&gt;我们横向对比一下几个互联网产品的收费标准， 从下表可以看出，Processon的定价不菲。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;项目&lt;/th&gt;
          &lt;th&gt;收费标准&lt;/th&gt;
          &lt;th&gt;最低年费用&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;processon&lt;/td&gt;
          &lt;td&gt;升级到个人版 159/年&lt;/td&gt;
          &lt;td&gt;159&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;语雀会员&lt;/td&gt;
          &lt;td&gt;标准99 限时特惠69/年&lt;/td&gt;
          &lt;td&gt;69&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;印象笔记&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;- 标准 8.17/月&lt;!-- raw HTML omitted --&gt;- 高级 12.33/月&lt;!-- raw HTML omitted --&gt;- 专业 16.50/月&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;- 标准 98&lt;!-- raw HTML omitted --&gt;- 高级 148&lt;!-- raw HTML omitted --&gt;- 专业 198&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;b站大会员&lt;/td&gt;
          &lt;td&gt;连续包年 6.3折 148/年&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;- 148&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;爱奇艺&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;- 黄金VIP会员 首年138/年，次年续费218&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;- 138&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;网易云音乐&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;- 连续包年 99&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
          &lt;td&gt;&lt;!-- raw HTML omitted --&gt;- 99&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;drawio-是什么&#34;&gt;draw.io 是什么&lt;/h1&gt;
&lt;p&gt;draw.io的功能涵盖了processon的很多功能，但是其最大的卖点是**免费。（**圈住，要考！）&lt;/p&gt;</description>
    </item>
    <item>
      <title>人为什么活着</title>
      <link>https://wdd.js.org/posts/2021/04/qb6asq/</link>
      <pubDate>Thu, 08 Apr 2021 21:05:15 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/qb6asq/</guid>
      <description>&lt;p&gt;最近几个月，一直有些不顺心的事情让我烦恼。&lt;/p&gt;
&lt;p&gt;下了扶梯，走在站台上往火车上，往二号车厢走去。同行的陌生人行色匆匆，无一逗留。&lt;/p&gt;
&lt;p&gt;动车的车头上，不知道是碰到了什么东西，染了一大片黄色的污渍，仿佛是撞到不知名的动物而留下的痕迹。车灯宛如一个大号的三角眼，直勾勾的往前望着，不知道在再想些什么。&lt;/p&gt;
&lt;p&gt;突然我的脑子里迸射出一个问题: 人为什么活着？&lt;/p&gt;
&lt;p&gt;记得以前课本上说，人和动物的区别是人会使用工具。但是我想在觉得，人和动物的区别应该是，人会问自己: 我什么活着。而动物凭本能行动，似乎并不会考虑活着这么深奥的问题。&lt;/p&gt;
&lt;p&gt;一只蚂蚁在一根绳爬，只有两个方向，要么前进，要么后退。有个蚂蚁似乎发现了第三个方向，就是可以绕着绳子转圈圈。而会转圈圈的蚂蚁，似乎就是那个容易烦恼的蚂蚁。&lt;/p&gt;
&lt;p&gt;这是我第一次考虑人为什么活着这个问题。回首过去，我觉得自己是个动物，凭借本能生活，饿了就吃，累了就睡。&lt;/p&gt;
&lt;p&gt;感觉每一天都是一个周期函数，永不停止的重复上下波动。&lt;/p&gt;
&lt;p&gt;最近刚好对声纹识别有些兴趣，在这个领域，有个技术叫做傅里叶变换。就是把一个时域的信号转换成频域的信号。实际的物理作用并没有变化，只是看待事物的角度发生变化，而看到的东西却不一样了。&lt;/p&gt;
&lt;p&gt;我觉得我也需要对我的生活做个傅里叶变换，找到一些能解决我困惑的答案。&lt;/p&gt;</description>
    </item>
    <item>
      <title>sudo !!的妙用</title>
      <link>https://wdd.js.org/posts/2021/04/nqs50g/</link>
      <pubDate>Thu, 08 Apr 2021 13:27:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/nqs50g/</guid>
      <description>&lt;p&gt;在ubuntu上执行命令，经常会出现下面的报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tcpdump: eno1: You don&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;t have permission to capture on that device
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;socket: Operation not permitted&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种报错一般是执行命令时，没有加上sudo&lt;/p&gt;
&lt;p&gt;快速的解决方案是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;按向上箭头键&lt;/li&gt;
&lt;li&gt;ctrl+a 贯标定位到行首&lt;/li&gt;
&lt;li&gt;输入sudo&lt;/li&gt;
&lt;li&gt;按回车&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上面的步骤是比较快的补救方案，但是因为向上的箭头一般布局在键盘的右下角，不移动手掌就够不着。一般输入向上的箭头时，右手会离开键盘的本位，会低头看下键盘，找下向上的箭头的位置。&lt;/p&gt;
&lt;p&gt;有没有右手不离开键盘本位，不需要低头看键盘的解决方案呢？&lt;/p&gt;
&lt;p&gt;答案就是： &lt;code&gt;sudo !!&lt;/code&gt;  !!会被解释成为上一条执行的命令。sudo !!就会变成使用sudo执行上一条命令。&lt;/p&gt;
&lt;p&gt;快试试看吧 sudo bang bang&lt;/p&gt;</description>
    </item>
    <item>
      <title>iterm2 光标消失了</title>
      <link>https://wdd.js.org/posts/2021/04/hh661g/</link>
      <pubDate>Fri, 02 Apr 2021 21:09:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/04/hh661g/</guid>
      <description>&lt;p&gt;终端用着用着，光标消失了。&lt;/p&gt;
&lt;p&gt;iterm2 仓库issues给出提示，要在设置》高级里面，Use system cursor icons when possile 为 yes.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/04/hh661g/2022-10-29-19-56-39.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然而上面的设置并没有用。&lt;/p&gt;
&lt;p&gt;然后看了superuser上的question, 给出提示, 直接在终端输入 &lt;code&gt;reset&lt;/code&gt; , 光标就会出现。解决了问题。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reset
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/gnachman/iterm2/-/issues/6623&#34;&gt;https://gitlab.com/gnachman/iterm2/-/issues/6623&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://superuser.com/questions/177377/os-x-terminal-cursor-problem&#34;&gt;https://superuser.com/questions/177377/os-x-terminal-cursor-problem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>matplotlib图片弹窗没有弹出</title>
      <link>https://wdd.js.org/posts/2021/03/pqreg4/</link>
      <pubDate>Wed, 31 Mar 2021 21:04:53 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/pqreg4/</guid>
      <description>&lt;p&gt;学习matplotlib绘图时，代码如下，执行过后，图片弹窗没有弹出。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import matplotlib.pyplot as plt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import matplotlib
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt.plot&lt;span style=&#34;color:#f92672&#34;&gt;([&lt;/span&gt;1.6, 2.7&lt;span style=&#34;color:#f92672&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt.show&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;并且有下面的报错&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cannot load backend &amp;lsquo;qt5agg&amp;rsquo; which requires the &amp;lsquo;qt5&amp;rsquo; interactive framework, as &amp;lsquo;headless&amp;rsquo; is currently running&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;看起来似乎是backend没有设置有关。查了些资料，设置了还是不行。&lt;/p&gt;
&lt;p&gt;最后偶然发现，我执行python 都是在tmux里面执行的，如果不再tmux会话里面执行，图片就能正常显示。&lt;/p&gt;
&lt;p&gt;问题从设置backend, 切换到tmux的会话。&lt;/p&gt;
&lt;p&gt;查到sf上正好有相关的问题，可能是在tmux里面PATH环境变量引起的问题。&lt;/p&gt;
&lt;p&gt;问题给的建议是把下面的代码写入.bashrc中，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you&amp;rsquo;re on a Mac and have been wondering why &lt;code&gt;/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin&lt;/code&gt; keeps getting prepended to PATH when you run tmux, it&amp;rsquo;s because of a utility called path_helper that&amp;rsquo;s run from your &lt;code&gt;/etc/profile&lt;/code&gt; file.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;You can&amp;rsquo;t easily persuade tmux (or rather, bash) not to source &lt;code&gt;/etc/profile&lt;/code&gt; (for some reason tmux always runs as a login shell, which means /etc/profile will be read), but you can make sure that the effects of path_helper don&amp;rsquo;t screw with your PATH.&lt;/p&gt;</description>
    </item>
    <item>
      <title>#shazam算法分析</title>
      <link>https://wdd.js.org/posts/2021/03/phgwbe/</link>
      <pubDate>Wed, 31 Mar 2021 09:12:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/phgwbe/</guid>
      <description>&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://coding-geek.com/how-shazam-works/&#34;&gt;http://coding-geek.com/how-shazam-works/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/yutianzuijin/article/details/49787551&#34;&gt;https://blog.csdn.net/yutianzuijin/article/details/49787551&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hpac.cs.umu.se/teaching/sem-mus-17/Reports/Froitzheim.pdf&#34;&gt;http://hpac.cs.umu.se/teaching/sem-mus-17/Reports/Froitzheim.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sfluor/musig&#34;&gt;https://github.com/sfluor/musig&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>黑客帝国终端字符瀑布</title>
      <link>https://wdd.js.org/posts/2021/03/fgutiw/</link>
      <pubDate>Thu, 25 Mar 2021 18:48:14 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/fgutiw/</guid>
      <description>&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install cmatrix
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;帮助文档&#34;&gt;帮助文档&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ cmatrix --help
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Usage: cmatrix -&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;abBcfhlsmVx&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-u delay&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-C color&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -a: Asynchronous scroll
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -b: Bold characters on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -B: All bold characters &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;overrides -b&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -c: Use Japanese characters as seen in the original matrix. Requires appropriate fonts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -f: Force the linux $TERM type to be on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -l: Linux mode &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;uses matrix console font&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -L: Lock mode &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;can be closed from another terminal&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -o: Use old-style scrolling
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -h: Print usage and exit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -n: No bold characters &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;overrides -b and -B, default&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -s: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Screensaver&amp;#34;&lt;/span&gt; mode, exits on first keystroke
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -x: X window mode, use &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; your xterm is using mtx.pcf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -V: Print version information and exit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -u delay &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; - 10, default 4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Screen update delay
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -C &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;color&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;: Use this color &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; matrix &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default green&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -r: rainbow mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -m: lambda mode
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>命令行笔记本 nb 记笔记何须离开终端？</title>
      <link>https://wdd.js.org/posts/2021/03/dtas0p/</link>
      <pubDate>Thu, 25 Mar 2021 18:18:41 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/dtas0p/</guid>
      <description>&lt;p&gt;nb是一个基于命令行的笔记本工具，功能很强大。&lt;/p&gt;
&lt;p&gt;记笔记何须离开终端？&lt;/p&gt;
&lt;h1 id=&#34;特点&#34;&gt;特点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;plain-text data storage,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://xwmx.github.io/nb/#password-protected-encrypted-notes-and-bookmarks&#34;&gt;encryption&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://xwmx.github.io/nb/#listing-notes&#34;&gt;filtering&lt;/a&gt; and &lt;a href=&#34;https://xwmx.github.io/nb/#-search&#34;&gt;search&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;-backed &lt;a href=&#34;https://xwmx.github.io/nb/#-revision-history&#34;&gt;versioning&lt;/a&gt; and &lt;a href=&#34;https://xwmx.github.io/nb/#-git-sync&#34;&gt;syncing&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pandoc.org/&#34;&gt;Pandoc&lt;/a&gt;-backed &lt;a href=&#34;https://xwmx.github.io/nb/#%EF%B8%8F-import--export&#34;&gt;conversion&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;global and local &lt;a href=&#34;https://xwmx.github.io/nb/#-notebooks&#34;&gt;notebooks&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;customizable &lt;a href=&#34;https://xwmx.github.io/nb/#-color-themes&#34;&gt;color themes&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;extensibility through &lt;a href=&#34;https://xwmx.github.io/nb/#-plugins&#34;&gt;plugins&lt;/a&gt;,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;支持各种编辑器打开笔记， 我自然用VIM了。&lt;/p&gt;
&lt;p&gt;A text editor with command line support, such as:&lt;!-- raw HTML omitted --&gt;Vim,&lt;!-- raw HTML omitted --&gt;Emacs,&lt;!-- raw HTML omitted --&gt;Visual Studio Code,&lt;!-- raw HTML omitted --&gt;Sublime Text,&lt;!-- raw HTML omitted --&gt;micro,&lt;!-- raw HTML omitted --&gt;nano,&lt;!-- raw HTML omitted --&gt;Atom,&lt;!-- raw HTML omitted --&gt;TextMate,&lt;!-- raw HTML omitted --&gt;MacDown,&lt;!-- raw HTML omitted --&gt;some of these,&lt;!-- raw HTML omitted --&gt;and many of these.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Taskwarrior 命令行下的专业TodoList神器</title>
      <link>https://wdd.js.org/posts/2021/03/yyz3ca/</link>
      <pubDate>Thu, 25 Mar 2021 09:09:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/yyz3ca/</guid>
      <description>&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;p&gt;Taskwarrior是命令行下的todolist, 特点是快速高效且功能强大，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持项目组&lt;/li&gt;
&lt;li&gt;支持燃烧图&lt;/li&gt;
&lt;li&gt;支持各种类似SQL的语法过滤&lt;/li&gt;
&lt;li&gt;支持各种统计报表&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt; install taskwarrior
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;使用说明&#34;&gt;使用说明&lt;/h1&gt;
&lt;h2 id=&#34;增加todo&#34;&gt;增加Todo&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;task &lt;span style=&#34;color:#66d9ef&#34;&gt;add&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;分机注册测试&lt;/span&gt; due:today
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Created task &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;显示todolist&#34;&gt;显示TodoList&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ task list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ID Age Due        Description      Urg 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 5s  2021-03-25 分机注册测试     8.98
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;开始一个任务&#34;&gt;开始一个任务&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ task &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; start
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Starting task &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;分机注册测试&amp;#39;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Started &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; task.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ task ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ID A Due Description     
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; *  9h 分机注册测试    
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;标记完成一个任务&#34;&gt;标记完成一个任务&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ task &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Completed task &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;分机注册测试&amp;#39;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Completed &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; task.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 任务完成后 task ls将不会显示已经完成的任务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ task ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;No matches.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 可以使用task all 查看所有的todolist&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ task all 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ID St UUID     A Age  Done Project Due        Description                       
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; - C  341a0f48   2min 55s          2021-03-25 分机注册测试
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;燃烧图&#34;&gt;燃烧图&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 按天的燃烧图&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;task burndown.daily
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 按月的燃烧图&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;task burndown.monthly
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 按周的燃烧图&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;task burndown.weekly
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;日历&#34;&gt;日历&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;task calendar
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;更多介绍&#34;&gt;更多介绍&lt;/h1&gt;
&lt;p&gt;更多好玩的东西，可以去看看官方的使用说明文档 &lt;a href=&#34;https://taskwarrior.org/docs/&#34;&gt;https://taskwarrior.org/docs/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>electerm 免费开源跨平台且功能强大的ssh工具</title>
      <link>https://wdd.js.org/posts/2021/03/tigv1h/</link>
      <pubDate>Wed, 24 Mar 2021 19:30:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/tigv1h/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://electerm.github.io/electerm/&#34;&gt;https://electerm.github.io/electerm/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;功能特点&#34;&gt;功能特点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Work as a terminal/file manager or ssh/sftp client(similar to xshell)&lt;/li&gt;
&lt;li&gt;Global hotkey to toggle window visibility (simliar to guake, default is &lt;code&gt;ctrl + 2&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Multi platform(linux, mac, win)&lt;/li&gt;
&lt;li&gt;🇺🇸 🇨🇳 🇧🇷 🇷🇺 🇪🇸 🇫🇷 🇹🇷 🇭🇰 🇯🇵 Support multi-language(&lt;a href=&#34;https://github.com/electerm/electerm-locales&#34;&gt;electerm-locales&lt;/a&gt;, contribute/fix welcome)&lt;/li&gt;
&lt;li&gt;Double click to directly edit remote file(small ones).&lt;/li&gt;
&lt;li&gt;Edit local file with built-in editor(small ones).&lt;/li&gt;
&lt;li&gt;Auth with publickey + password.&lt;/li&gt;
&lt;li&gt;Zmodem(rz, sz).&lt;/li&gt;
&lt;li&gt;Transparent window(Mac, win).&lt;/li&gt;
&lt;li&gt;Terminal background image.&lt;/li&gt;
&lt;li&gt;Global/session proxy.&lt;/li&gt;
&lt;li&gt;Quick commands&lt;/li&gt;
&lt;li&gt;Sync bookmarks/themes/quick commands to github/gitee secret gist&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Serial Port support&lt;/del&gt;(removed after version 1.10.14)&lt;/li&gt;
&lt;li&gt;Quick input to one or all terminal&lt;/li&gt;
&lt;li&gt;Command line usage: check &lt;a href=&#34;https://github.com/electerm/electerm/wiki/Command-line-usage&#34;&gt;wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>mac升级后命令行报错 xcrun: error: invalid active developer path</title>
      <link>https://wdd.js.org/posts/2021/03/ibv4tb/</link>
      <pubDate>Wed, 24 Mar 2021 13:55:51 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/ibv4tb/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xcode&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;--install
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/50b6771eb853&#34;&gt;https://www.jianshu.com/p/50b6771eb853&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>网页分享到微信添加缩略图</title>
      <link>https://wdd.js.org/posts/2021/03/rggbsl/</link>
      <pubDate>Tue, 23 Mar 2021 10:53:15 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/rggbsl/</guid>
      <description>&lt;p&gt;header部分&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;property&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;og:image&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://abc.cc/x.jpg&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;body部分&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;display:none&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://abc.cc/x.jpg&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意，图片的连接，必须是绝对地址。就是格式必需以http开头的地址，不能用相对地址，否则缩略图不会显示。&lt;/p&gt;</description>
    </item>
    <item>
      <title>RFC阅读神器 rfcreader</title>
      <link>https://wdd.js.org/posts/2021/03/mcbqod/</link>
      <pubDate>Fri, 12 Mar 2021 13:04:57 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/mcbqod/</guid>
      <description>&lt;p&gt;rfc &lt;a href=&#34;http://www.rfcreader.com/#rfc5359&#34;&gt;http://www.rfcreader.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;rfcreader是一个在线的网站，可以阅读和搜索rfc文档。&lt;/p&gt;
&lt;p&gt;另外也具有一些非常好用的功能&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;支持账号登录，收藏自己喜欢的rfc文档&lt;/li&gt;
&lt;li&gt;可以对rfc进行标记，评论。&lt;/li&gt;
&lt;li&gt;有良好的目录&lt;/li&gt;
&lt;li&gt;支持书签&lt;/li&gt;
&lt;li&gt;等等。。。。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2021/03/mcbqod/2022-10-29-20-14-47.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>oh my tmux tmux的高级定制</title>
      <link>https://wdd.js.org/posts/2021/03/yroxga/</link>
      <pubDate>Thu, 11 Mar 2021 17:50:30 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/yroxga/</guid>
      <description>&lt;p&gt;参考： &lt;a href=&#34;https://github.com/gpakosz/.tmux&#34;&gt;https://github.com/gpakosz/.tmux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;界面非常漂亮，有很多指示图标，能够实时的查看系统状态，session和window信息&lt;/li&gt;
&lt;li&gt;快捷键非常合理，非常好用&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;gitee.com&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;wangduanduan&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;tmux.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv tmux .tmux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;f .tmux&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;.tmux.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp .tmux&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;.tmux.conf.&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;微调配置&#34;&gt;微调配置&lt;/h1&gt;
&lt;h2 id=&#34;启用ctrla光标定位到行首&#34;&gt;启用ctrl+a光标定位到行首&lt;/h2&gt;
&lt;p&gt;默认情况下，ctrl+a被配置成和ctrl+b的功能相同，但是大多数场景下，ctrl+a是readline的光标回到行首的快捷键，&lt;/p&gt;
&lt;p&gt;所以我们需要恢复ctrl+a的原有功能。&lt;/p&gt;
&lt;p&gt;只需要把下面的两行取消注释&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set -gu prefix2      
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;unbind C-a  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;复制模式支持jk上下移动&#34;&gt;复制模式支持jk上下移动&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set -g mode-keys vi
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;在相同的目录打开新的窗口或者标签页&#34;&gt;在相同的目录打开新的窗口或者标签页&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmux_conf_new_window_retain_current_path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmux_conf_new_pane_retain_current_path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;隐藏系统运行时间信息&#34;&gt;隐藏系统运行时间信息&lt;/h2&gt;
&lt;p&gt;状态栏的系统运行时长似乎没什么用，可以隐藏&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmux_conf_theme_status_left&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; ❐ #S &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>stompjs 心跳机制调研</title>
      <link>https://wdd.js.org/posts/2021/03/ewinve/</link>
      <pubDate>Thu, 04 Mar 2021 10:13:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/03/ewinve/</guid>
      <description></description>
    </item>
    <item>
      <title>hazelcast IDMG</title>
      <link>https://wdd.js.org/posts/2021/02/xlwnvv/</link>
      <pubDate>Wed, 24 Feb 2021 11:54:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/02/xlwnvv/</guid>
      <description>&lt;p&gt;IDMG是 IN-MEMORY DATA GRID的缩写。&lt;/p&gt;
&lt;p&gt;官方的一句话介绍：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The industry&amp;rsquo;s fastest, most scalable in-memory data grid, where speed, scalability and continuous processing are the core requirements for deployment.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;抽取关键词：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;快&lt;/li&gt;
&lt;li&gt;可伸缩&lt;/li&gt;
&lt;li&gt;内存&lt;/li&gt;
&lt;li&gt;分布式&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;An IMDG (in-memory data grid) is a set of networked/clustered computers that pool together their random access memory (RAM) to let applications share data structures with other applications running in the cluster.&lt;/p&gt;
&lt;p&gt;The primary advantage is speed, which has become critical in an environment with billions of mobile, IoT devices and other sources continuously streaming data. With all relevant information in RAM in an IMDG, there is no need to traverse a network to remote storage for transaction processing. The difference in speed is significant – minutes vs. sub-millisecond response times for complex transactions done millions of times per second.&lt;/p&gt;</description>
    </item>
    <item>
      <title>macbook pro 1708 换电池记录</title>
      <link>https://wdd.js.org/posts/2021/02/egkbht/</link>
      <pubDate>Thu, 18 Feb 2021 20:39:19 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/02/egkbht/</guid>
      <description></description>
    </item>
    <item>
      <title>人类灭绝的7种方式</title>
      <link>https://wdd.js.org/posts/2021/02/ploder/</link>
      <pubDate>Fri, 12 Feb 2021 19:33:19 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/02/ploder/</guid>
      <description>&lt;p&gt;人类将以什么方式走向灭绝，很多科幻电影中都有过设想。&lt;/p&gt;
&lt;p&gt;最近读到一本书《人类灭绝》来自日本作家高野和明的科幻小说给出系统的介绍。小说中有一份报告，叫做《海斯曼报告》。&lt;/p&gt;
&lt;p&gt;下面表格中的1-5是报告中提到的人类灭绝方式，6-7是我自己添加。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;种类&lt;/th&gt;
          &lt;th&gt;类别&lt;/th&gt;
          &lt;th&gt;举例&lt;/th&gt;
          &lt;th&gt;相关电影，或者书籍&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;宇宙规模的灾难&lt;/td&gt;
          &lt;td&gt;小行星撞地球，太阳燃尽&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;地球规模的环境变动&lt;/td&gt;
          &lt;td&gt;地球磁场的南北逆转现象，环境污染&lt;/td&gt;
          &lt;td&gt;《2012》《后天》&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;核战&lt;/td&gt;
          &lt;td&gt;二战 日本 核武器&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;疫病 病毒威胁 生物武器&lt;/td&gt;
          &lt;td&gt;电影生化危机，今年的新冠肺炎疫情，HIV&lt;/td&gt;
          &lt;td&gt;《生化危机》《行尸走肉》&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;人类进化&lt;/td&gt;
          &lt;td&gt;由于基因突变，产生更加智能的人类&lt;/td&gt;
          &lt;td&gt;《东京食尸鬼》《人类灭绝》&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;AI失控&lt;/td&gt;
          &lt;td&gt;人工智能出现自我意识&lt;/td&gt;
          &lt;td&gt;《我，机器人》《终结者系列》《黑客帝国系列》&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;外星人入侵&lt;/td&gt;
          &lt;td&gt;高层次文明入侵低层次文明&lt;/td&gt;
          &lt;td&gt;《三体》&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;于三体不同的是，作者从人类第5种可能性展开小说。如果你喜欢三体的话，《人类灭绝》这本小说，也是非常值得一读的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>南京尧新科目二考试考试回顾</title>
      <link>https://wdd.js.org/posts/2021/01/</link>
      <pubDate>Mon, 11 Jan 2021 19:13:31 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2021/01/</guid>
      <description>&lt;p&gt;科目二倒库和四项练的差不多了，决定去参加考试，考试虽然一波三折，但结果还是好的，一次通过了&lt;/p&gt;
&lt;h1 id=&#34;考场熟悉&#34;&gt;考场熟悉&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;考场倒库有14各区，没什么好讲的。&lt;/li&gt;
&lt;li&gt;四项有4各环线，每个环线上有两个考试线路，所以一共是8条线路&lt;/li&gt;
&lt;li&gt;务必看懂各种符号的含义，例如曲线，侧方， 直角与坡道&lt;/li&gt;
&lt;li&gt;【重点】当你知道你自己在那条线上考试之后，务必对照着线路图，将&lt;strong&gt;四项的顺序以及位置牢记于心&lt;/strong&gt;。虽然路上会有牌子指示下一项内容是什么，但是考试的时候，由于视线等各种原因可能不会去在意。也有人，看到前面是直角，就以为是前面是直角转弯，结果到了真正直角转弯的位置，却没有做直角相关的操作，导致考试失败。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如，当你被选择到8号线的四项时，你到了7-8待考等待区后，等待自己的考试车。在等待过程中按照平面图，可以发现，离待考最近的起点之后，8号线，第一个考试项目侧方停车，然后是直角转弯，接着是S弯，最后是坡道。&lt;/p&gt;
&lt;h1 id=&#34;模拟考相关&#34;&gt;模拟考相关&lt;/h1&gt;
&lt;h2 id=&#34;模拟的费用以及项目内容&#34;&gt;模拟的费用以及项目内容&lt;/h2&gt;
&lt;p&gt;模拟的费用是360，包含一下内容&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;倒车入库120，可以倒库3次&lt;/li&gt;
&lt;li&gt;四项有八条线路，每个线路各跑一次&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;四项的车和倒库的车是不同的，这点需要注意。&lt;/p&gt;
&lt;h2 id=&#34;模拟考有用吗&#34;&gt;模拟考有用吗？&lt;/h2&gt;
&lt;p&gt;我觉的是有用的&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一般驾校只有一两条线路，实际考场有8条线路。每条线路你都可以跑一次，从1号线到8号线。跑过这8条线，你会基本知道自己四项中哪些项目比较容易出错。可以针对性加强。另外也可以找找坡道的点位。&lt;/li&gt;
&lt;li&gt;跑模拟四项的时候，有个教练会坐在副驾驶上。他会不断的催促你，此时你千万不要让他的催促导致你连续的出错，进而影响到你考试的心态。你是交了钱的，离合和油门都在你这边，教练再催，也是没办法让车加速的。你不要怂。【注意：在真实考试时，副驾驶是没有人的。】&lt;/li&gt;
&lt;li&gt;教练为什么要不停的催你，因为你越快跑完8条线路，他就可以接更多的学员，他手里的小票就越多，提成就越多。当你模拟完8条线路，教练会让你再买几条线路。线路其实是可以按条买的，每条线跑一次30块。真是车轮一转，家财万贯。车轮一响，黄金万两啊。&lt;/li&gt;
&lt;li&gt;虽然倒库的车库有14个，但是&lt;strong&gt;你模拟的那个车库，其实有极大的可能就是你真实考试的那个车库&lt;/strong&gt;。这样你就可以提前熟悉一下车库的点位。我比较菜，模拟三次的倒库都倒失败了。但是我从三次失败中也学到了自己失败的原因。从而在真实考试时成功通过。倒库如果你三次都失败了，也可以单独买的。倒3次60块。倒6次120块。但是这就不建议再花钱了。你应该记住自己的错误的点。比如是那边压线了，然后回到驾校，和你的教练沟通一下。驾校的教练会给你更加有用的建议。另外你务必要记住自己是几号库，你只要和驾校教练沟通一下，他都知道这个库位的处理细节的。&lt;/li&gt;
&lt;li&gt;如果我没有模拟考过，很可能我科目二第一次会挂，然后还要花时间去搞这件事。如果能用钱解决的事情，我更希望能节省一些时间。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;心态&#34;&gt;心态&lt;/h1&gt;
&lt;p&gt;考试的心态很重要，和我一起参见考试的一个同学。他没有参加模拟考，但是他在考试中倒库一把就倒进去了。我认为他是比较牛逼的。但是有可能他骄傲了，挂在了几个转向灯和坡道定点上。侧方停车时，出库居然忘记打转向灯了。&lt;/p&gt;
&lt;p&gt;也有人忘记系安全带了。&lt;/p&gt;
&lt;p&gt;很多小的点，也很容易的点。在驾校都练的很熟练，但是一到考场，就总是丢三落四的忘记。为什么会有这种场景的。&lt;/p&gt;
&lt;p&gt;因为心态变了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>macbook pro 使用三年后的感受</title>
      <link>https://wdd.js.org/posts/2020/12/kxpswu/</link>
      <pubDate>Wed, 30 Dec 2020 13:25:21 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/12/kxpswu/</guid>
      <description>&lt;p&gt;我的macbook是2017买的, 使用到今天大概1204天。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最初的使用体验是&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;触摸板很灵敏&lt;/li&gt;
&lt;li&gt;屏幕很高清&lt;/li&gt;
&lt;li&gt;系统很流畅&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;三年中出现过的问题&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;键盘中的几个按键出现过问题，按键不灵敏。17年是用的蝴蝶键盘，这个键盘问题很多。最新版已经换成了剪刀脚键盘了。&lt;/li&gt;
&lt;li&gt;屏幕老化，屏幕的四周出现淡红色的红晕，但是不影响使用。&lt;/li&gt;
&lt;li&gt;如果不充电的情况下，掉电蛮快的，而且有时候电量还很多，就自动关机。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;现在的感觉：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;触摸板我基本不会用了，因为大部分时间我都是用键盘可以搞定一切。因为我用了vim编辑器。&lt;/li&gt;
&lt;li&gt;我也不再使用macbook pro自带的键盘，因为真是不好用。所有的笔记本键盘，除了thinkpad的键盘。都不太好用，不适合长时间打字。所以我用了外接的静电容键盘。&lt;/li&gt;
&lt;li&gt;无论多么好的自带键盘，都比不过外接的键盘，毕竟是专业的。当然除非你经常初查或者移动，外接键盘真是非常值得入手。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;关于下一台电脑：&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;下一台电脑我会等待M2芯片, macbook pro或则是macbook mini， 这个我还没想好。我对命令行以及相关unix有着很大的依赖。即使用ubuntu, 我也不可能再使用windows。&lt;/p&gt;</description>
    </item>
    <item>
      <title>lens k8s IDE</title>
      <link>https://wdd.js.org/posts/2020/12/ai1lnu/</link>
      <pubDate>Wed, 23 Dec 2020 19:28:16 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/12/ai1lnu/</guid>
      <description>&lt;h1 id=&#34;下载安装&#34;&gt;下载安装&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2020/dmg/280451/1608723355915-643e36ab-7e24-4412-a5fc-5be9f03d4cea.dmg?_lake_card=%7B%22uid%22%3A%221608723332085-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2020%2Fdmg%2F280451%2F1608723355915-643e36ab-7e24-4412-a5fc-5be9f03d4cea.dmg%22%2C%22name%22%3A%22Lens-4.0.4.dmg%22%2C%22size%22%3A128698408%2C%22type%22%3A%22%22%2C%22ext%22%3A%22dmg%22%2C%22progress%22%3A%7B%22percent%22%3A99%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%2208dCP%22%2C%22card%22%3A%22file%22%7D&#34;&gt;Lens-4.0.4.dmg&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;添加集群&#34;&gt;添加集群&lt;/h1&gt;
&lt;p&gt;在k8s master 节点上使用输入下面的指令，** 将输出内容复制一下**&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl config view --minify --raw
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;选择fiel--add-cluster&#34;&gt;选择Fiel &amp;gt; Add cluster&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/12/ai1lnu/2022-10-29-19-37-01.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;粘贴&#34;&gt;粘贴&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/12/ai1lnu/2022-10-29-19-37-14.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;集群就显示出来了&#34;&gt;集群就显示出来了&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/12/ai1lnu/2022-10-29-19-37-25.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>perl: warning: Setting locale failed.</title>
      <link>https://wdd.js.org/posts/2020/12/setting-locale-failed/</link>
      <pubDate>Thu, 17 Dec 2020 11:42:20 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/12/setting-locale-failed/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;perl: warning: Setting locale failed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;perl: warning: Please check that your locale settings:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	LANGUAGE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;unset&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	LC_ALL &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;unset&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	LC_CTYPE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	LANG &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en_US.UTF-8&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    are supported and installed on your system.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;perl: warning: Falling back to the standard locale &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;add in .bashrc&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export LANG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export LANGUAGE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export LC_COLLATE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;C
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export LC_CTYPE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;source ~/.bashrc&lt;/p&gt;</description>
    </item>
    <item>
      <title>Get: shift &#43; 鼠标滚轮 左右滚动页面</title>
      <link>https://wdd.js.org/posts/2020/12/yor2t9/</link>
      <pubDate>Mon, 07 Dec 2020 12:15:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/12/yor2t9/</guid>
      <description>&lt;p&gt;使用触摸板，可以左右滑动，来左右滚动只能部分显示的页面。但是在用鼠标的时候，由于鼠标滚轮只能上下滚动页面，所以不太方便。&lt;/p&gt;
&lt;p&gt;此时，你可以按住shift + 滚动鼠标滚轮，来实现左右滚动页面&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chrome 键盘快捷键参考</title>
      <link>https://wdd.js.org/posts/2020/11/muk33s/</link>
      <pubDate>Sun, 22 Nov 2020 15:19:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/11/muk33s/</guid>
      <description>&lt;p&gt;本页介绍 Chrome DevTools 中所有键盘快捷键的参考信息。一些快捷键全局可用，而其他快捷键会特定于单一面板。&lt;!-- raw HTML omitted --&gt;您也可以在提示中找到快捷键。将鼠标悬停在 DevTools 的 UI 元素上可以显示元素的提示。 如果元素有快捷键，提示将包含快捷键。&lt;/p&gt;
&lt;h2 id=&#34;访问-devtools&#34;&gt;访问 DevTools&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;访问 DevTools&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;在 Windows 上&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;在 Mac 上&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;打开 Developer Tools&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;F12、Ctrl + Shift + I&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Cmd + Opt + I&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;打开/切换检查元素模式和浏览器窗口&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + C&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Cmd + Shift + C&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;打开 Developer Tools 并聚焦到控制台&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + J&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Cmd + Opt + J&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;检查检查器（取消停靠第一个后按）&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ctrl + Shift + I&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Cmd + Opt + I&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;全局键盘快捷键&#34;&gt;全局键盘快捷键&lt;/h2&gt;
&lt;p&gt;下列键盘快捷键可以在所有 DevTools 面板中使用：&lt;/p&gt;</description>
    </item>
    <item>
      <title>RFC 6917 笔记</title>
      <link>https://wdd.js.org/posts/2020/11/ig536h/</link>
      <pubDate>Sun, 22 Nov 2020 10:46:31 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/11/ig536h/</guid>
      <description>&lt;p&gt;when considered in conjunction with deployment architectures that include 1:M and M:N combinations of Application Servers and Media Servers&lt;/p&gt;
&lt;p&gt;Media Resource Broker (MRB) entity, which manages the availability of Media Servers and the media resource demands of Application Servers.  The document includes potential deployment options for an MRB and appropriate interfaces to Application Servers and Media Servers.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/11/ig536h/2022-10-29-20-00-59.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/11/ig536h/2022-10-29-20-01-07.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/11/ig536h/2022-10-29-20-01-15.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>NAT</title>
      <link>https://wdd.js.org/posts/2020/11/nh68ws/</link>
      <pubDate>Sat, 21 Nov 2020 14:53:03 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/11/nh68ws/</guid>
      <description>&lt;h1 id=&#34;4种nat类型&#34;&gt;4种NAT类型&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;NAT类型&lt;/th&gt;
          &lt;th&gt;接收数据前是否要先发送数据&lt;/th&gt;
          &lt;th&gt;有没有可能检测下一个IP:PORT对是否打开&lt;/th&gt;
          &lt;th&gt;是否限制发包目的的IP:PORT&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;全锥型&lt;/td&gt;
          &lt;td&gt;no&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
          &lt;td&gt;no&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;限制锥型&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
          &lt;td&gt;only IP&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;端口限制型&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;对称型&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
          &lt;td&gt;no&lt;/td&gt;
          &lt;td&gt;yes&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;nat穿透&#34;&gt;NAT穿透&lt;/h1&gt;
&lt;p&gt;• STUN: Simple traversal of UDP over NAT&lt;!-- raw HTML omitted --&gt;• TURN: Traversal of UDP over Relay NAT&lt;!-- raw HTML omitted --&gt;• ALG: Application Layer Gateways&lt;!-- raw HTML omitted --&gt;• MANUAL: Manual configuration (port forwarding)&lt;!-- raw HTML omitted --&gt;• UPNP: Universal Plug and Play&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/11/nh68ws/2022-10-29-20-19-45.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>树莓派安装fs 1.10</title>
      <link>https://wdd.js.org/posts/2020/11/gtrrng/</link>
      <pubDate>Wed, 18 Nov 2020 13:04:21 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/11/gtrrng/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. 将源码包上传到服务器, 并解压
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;安装依赖&#34;&gt;安装依赖&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install autoconf &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libtool &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libtool-bin &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libjpeg-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libsqlite3-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libspeex-dev libspeexdsp-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libldns-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libedit-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libtiff-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;libavformat-dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libswscale-dev libsndfile-dev &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;liblua5.1-0-dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libcurl4-openssl-dev libpcre3-dev libopus-dev libpq-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./bootstrap.sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./configure
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;make&#34;&gt;make&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考：&lt;a href=&#34;https://www.cnblogs.com/MikeZhang/p/RaspberryPiInstallFreeSwitch.html&#34;&gt;https://www.cnblogs.com/MikeZhang/p/RaspberryPiInstallFreeSwitch.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>在iPhone iPad上搭建Linux本地开发环境</title>
      <link>https://wdd.js.org/posts/2020/11/kfl9zd/</link>
      <pubDate>Mon, 02 Nov 2020 20:06:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/11/kfl9zd/</guid>
      <description>&lt;p&gt;我在家里的时候，大部分时间用iPad远程连接到服务端做开发。虽然也是蛮方便的，但是每年都需要买个云服务器，也是一笔花费，最近看到一个App, 可以在手机上直接运行一个Linux环境，试了一下，果然还不错。下面记录一下安装过程。&lt;/p&gt;
&lt;h1 id=&#34;step1-下载ish&#34;&gt;step1: 下载iSh&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/11/kfl9zd/2022-10-29-20-05-02.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;step2-安装apk&#34;&gt;step2: 安装apk&lt;/h1&gt;
&lt;p&gt;这个软件下载之后打开，就直接进到shell界面，虽然它是一个基于alpine的环境，但是没有apk， 我们需要手工安装这个包管理工具。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget -qO- http://dl-cdn.alpinelinux.org/alpine/v3.12/main/x86/apk-tools-static-2.10.5-r1.apk | tar -xz sbin/apk.static &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./sbin/apk.static add apk-tools &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm sbin/apk.static &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rmdir sbin 2&amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;温馨提示：在iSh的右下角，有个按钮是粘贴按钮。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/11/kfl9zd/2022-10-29-20-05-17.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;step3-apk-update&#34;&gt;step3: apk update&lt;/h1&gt;
&lt;p&gt;虽然安装了apk,  但是不更新的话，可能很多安装包都没有，所以最好先更新。&lt;/p&gt;
&lt;p&gt;在更新之前。最好执行下面的命令，把apk的源换成清华的，这样之后的安装软件会比较快点。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g&amp;#39;&lt;/span&gt; /etc/apk/repositories
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apk update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;step4-安装各种开发工具-git-zsh-tmux-vim&#34;&gt;step4: 安装各种开发工具 git zsh tmux vim&amp;hellip;&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apk add git zsh tmux vim
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;step5-安装oh-my-zsh-这是必不可少的神器&#34;&gt;step5: 安装oh-my-zsh 这是必不可少的神器&lt;/h1&gt;
&lt;p&gt;因为从github上克隆oh-my-zsh可能会很慢，所以我用了码云上的一个仓库。 这样速度就会很快了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://gitee.com/nuannuande/oh-my-zsh.git ~/.oh-my-zsh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chsh -s &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;which zsh&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;step6-安装nodejs-python-golang等&#34;&gt;step6: 安装nodejs python golang等。&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apk add nodejs python3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面看到输出了nodejs和python的版本，说明安装成功。另外ish支持换肤的。之前的白色的，下面的是黑色的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>tar打包小技巧: 替换根目录</title>
      <link>https://wdd.js.org/posts/2020/10/sxuez4/</link>
      <pubDate>Tue, 27 Oct 2020 11:23:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/10/sxuez4/</guid>
      <description>&lt;p&gt;环境mac&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 这个目录打包之后，内部的顶层目录是dist, 解压之后，有可能覆盖到以前的dist&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -zcvf demo.tar.gz dist/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用这个命令，顶层目录将会被修改成demo-0210&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -s /^dist/demo-0210/ -zcvf demo.tar.gz dist/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>讲价的学问</title>
      <link>https://wdd.js.org/posts/2020/10/ahtqix/</link>
      <pubDate>Mon, 05 Oct 2020 10:11:18 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/10/ahtqix/</guid>
      <description>&lt;h1 id=&#34;只要有价格就可以讲价&#34;&gt;&lt;strong&gt;只要有价格，就可以讲价&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;**&lt;!-- raw HTML omitted --&gt;**只要有价格，就可以讲价。**但是也有例外，例如超市，超市的东西明码标价。售货员一般不会管价格。&lt;/p&gt;
&lt;h1 id=&#34;其次要和能管价的人谈&#34;&gt;&lt;strong&gt;其次，要和能管价的人谈&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;**&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;其次，要和能管价的人谈。&lt;/strong&gt; 有些人不管价格，讲多少都没用。&lt;/p&gt;
&lt;h1 id=&#34;50理论&#34;&gt;50%理论&lt;/h1&gt;
&lt;p&gt;第一次喊价以后，一般只会抬价，而不会降价，所以务必要重视。&lt;/p&gt;
&lt;p&gt;例如一束花，店家要价80，实际这束花成本20。如果你第一喊价70，那你只能优惠小于10元。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一次喊价要低于心理价位，这样才有留够上涨的空间&lt;/li&gt;
&lt;li&gt;**50%理论 ，**一般你的第一次出价可以按照卖家要价的50%开始喊价。然后再利用各种计策。提高价格，这里最重要的是摸出买家的底价，高于这个低价，买家才会卖。80元的花，你的第一次出价可以喊40元。&lt;/li&gt;
&lt;li&gt;脸皮要厚，脸皮厚，才能要更多优惠&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>[todo]锋利的linux日志分析命令</title>
      <link>https://wdd.js.org/posts/2020/04/qlqhiv/</link>
      <pubDate>Sun, 04 Oct 2020 10:13:10 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/qlqhiv/</guid>
      <description>&lt;h1 id=&#34;预处理&#34;&gt;预处理&lt;/h1&gt;
&lt;h2 id=&#34;从一个文件中过滤&#34;&gt;从一个文件中过滤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grep key file&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜ grep ERROR a.log 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12:12 ERROR:core bad message
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;从多个文件中过滤&#34;&gt;从多个文件中过滤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grep key file1 fil2&lt;/code&gt; 多文件搜索，指定多个文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep key *.log&lt;/code&gt;  使用正则的方式，匹配多个文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep -h key *.log&lt;/code&gt; 可以使用-h, 让结果中不出现文件名。默认文件名会出现在匹配行的前面。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜ grep ERROR a.log b.log 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a.log:12:12 ERROR:core bad message
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b.log:13:12 ERROR:core bad message
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜ grep ERROR *.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a.log:12:12 ERROR:core bad message
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b.log:13:12 ERROR:core bad message
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;多个关键词过滤&#34;&gt;多个关键词过滤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grep -e key1 -e key2 file&lt;/code&gt; 使用-e参数，可以制定多个关键词&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜ grep -e ERROR -e INFO a.log 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12:12 ERROR:core bad message
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12:12 INFO:parse bad message1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;正则过滤&#34;&gt;正则过滤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grep -E REG file&lt;/code&gt;  下面例子是匹配db:后跟数字部分&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜ grep -E &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db:\d+ &amp;#34;&lt;/span&gt; a.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12:14 WARNING:db:1 bad message
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12:14 WARNING:db:21 bad message
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12:14 WARNING:db:2 bad message1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12:14 WARNING:db:4 bad message
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;仅输出匹配字段&#34;&gt;仅输出匹配字段&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grep -o args&lt;/code&gt; 使用-o参数，可以仅仅输出匹配项，而不是整个匹配的行&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  go-tour grep -o -E &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db:\d+ &amp;#34;&lt;/span&gt; a.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db:1 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db:21 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db:2 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db:4 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;统计关键词出现的行数&#34;&gt;统计关键词出现的行数&lt;/h2&gt;
&lt;p&gt;例如一个nginx的access.log, 我们想统计其中的POST的个数，和OPTIONS的个数。&lt;/p&gt;</description>
    </item>
    <item>
      <title>flash_player_admin_guide</title>
      <link>https://wdd.js.org/posts/2020/09/thg9yu/</link>
      <pubDate>Wed, 23 Sep 2020 16:28:06 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/09/thg9yu/</guid>
      <description>&lt;p&gt;虽然flash已经几乎被淘汰了，但是在某些老版本的IE里面，依然有他们顽强的身影。&lt;/p&gt;
&lt;p&gt;使用flash 模拟websocket, 有时会遇到下面的问题。虽然flash安全策略文件已经部署，但是客户端依然报错。&lt;/p&gt;
&lt;p&gt;[WebSocket] cannot connect to Web Socket Server at &amp;hellip; make sure the server is runing and Flash policy file is correct placed.&lt;/p&gt;
&lt;p&gt;解决方案：&lt;/p&gt;
&lt;p&gt;在**%WINDIR%\System32\Macromed\Flash**下创建一个名为mms.cfg的文件, 如果文件已经存在，则不用创建。&lt;/p&gt;
&lt;p&gt;文件内容如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DisableSockets&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2020/pdf/280451/1600849762923-f66702f2-a7f1-4951-b746-fc0666c2d1cf.pdf&#34;&gt;flash_player_admin_guide.pdf&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用commitlint检查git提交信息是否合规</title>
      <link>https://wdd.js.org/posts/2020/09/vu0ag0/</link>
      <pubDate>Wed, 23 Sep 2020 09:29:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/09/vu0ag0/</guid>
      <description>&lt;p&gt;建议先看下前提知识：&lt;a href=&#34;https://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html&#34;&gt;https://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;提交信息规范&#34;&gt;提交信息规范&lt;/h1&gt;
&lt;p&gt;通用类型的头字段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;build 构建&lt;/li&gt;
&lt;li&gt;ci 持续继承工具&lt;/li&gt;
&lt;li&gt;chore 构建过程或辅助工具的变动&lt;/li&gt;
&lt;li&gt;docs 文档（documentation）&lt;/li&gt;
&lt;li&gt;feat 新功能（feature）&lt;/li&gt;
&lt;li&gt;fix 修补bug&lt;/li&gt;
&lt;li&gt;perf 性能优化&lt;/li&gt;
&lt;li&gt;refactor 重构（即不是新增功能，也不是修改bug的代码变动）&lt;/li&gt;
&lt;li&gt;revert&lt;/li&gt;
&lt;li&gt;style 格式（不影响代码运行的变动）&lt;/li&gt;
&lt;li&gt;test 增加测试&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fix: xxxxxx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;feat: xxxxxx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;h2 id=&#34;安装依赖&#34;&gt;安装依赖&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yarn add -D @commitlint/config-conventional @commitlint/cli husky
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;修改packagejson&#34;&gt;修改package.json&lt;/h2&gt;
&lt;p&gt;在package.json中加入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;husky&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hooks&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;commit-msg&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;commitlint -E HUSKY_GIT_PARAMS&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;新增配置&#34;&gt;新增配置&lt;/h2&gt;
&lt;p&gt;文件名：commitlint.config.js&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;module.exports &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;extends: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@commitlint/config-conventional&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;测试&#34;&gt;测试&lt;/h1&gt;
&lt;p&gt;如果你的提交不符合规范，提交将会失败。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  git commit -am &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;00&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;warning ../package.json: No license field
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;husky &amp;gt; commit-msg &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;node v12.18.3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;⧗   input: &lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;✖   subject may not be empty &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;subject-empty&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;✖   type may not be empty &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;type-empty&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;✖   found &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; problems, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; warnings
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ⓘ   Get help: https://github.com/conventional-changelog/commitlint/#what-is-commitlint
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;根据commitlog生成changelog&#34;&gt;根据commitlog生成changelog&lt;/h1&gt;
&lt;p&gt;下面命令中的1.5.5 1.5.10可以是两个tag, 也可以是两个分支。&lt;/p&gt;</description>
    </item>
    <item>
      <title>租房的检查清单</title>
      <link>https://wdd.js.org/posts/2020/09/xglwgs/</link>
      <pubDate>Wed, 16 Sep 2020 20:57:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/09/xglwgs/</guid>
      <description>&lt;p&gt;在上海工作的人，除了一年一次的春运，就可能是就是一年一次的找房搬家了。&lt;/p&gt;
&lt;p&gt;找房彷佛就是一趟西天取经，要经历九九八十一难，也要个各种妖魔鬼怪斗智斗勇。这其中难处，暂且不表。重点介绍你应当如何去按照一定的方案来检查各种设施的功能。&lt;/p&gt;
&lt;p&gt;要知道，世事多变，你现下找的房子如果很不错，即使后期突然需要转租，也是比较容易转租的。否则房子转租不出去，自己也白白赔了押金。&lt;/p&gt;
&lt;p&gt;重点检查&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;洗衣机&lt;/li&gt;
&lt;li&gt;空调&lt;/li&gt;
&lt;li&gt;冰箱&lt;/li&gt;
&lt;li&gt;抽油烟机&lt;/li&gt;
&lt;li&gt;马桶&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面这些设备，不要斤斤打眼看看外表正不正常，更要尽可能去试试。比如说马桶，即使能无法坐在上面上个厕所，你也要用手按一下，看看冲水是否正常。 交钱之前你是二房东大爷，交完钱签好合同，二房东就是你大爷了。马桶要是不好用，浪费水不说，还影响心情。到时候你找你大爷来修，你大爷就不一定有时间了。你大爷一般包了几百套房子，怎么会管你的小问题呢。&lt;/p&gt;
&lt;p&gt;总之呢，你要有自己的一个检查清单项目，要检查哪些，如何检查，务必做到切实可行。&lt;/p&gt;
&lt;p&gt;有的时候，房子有些问题，房东和中介故意顾左右而言他，你切不可被他们玩的团团转。一定要按照既定的方案实施检查。&lt;/p&gt;
&lt;p&gt;另外就是签合同了，违约金这块要注意的。有的中介和二房东狼狈为奸，除了要不退押金，还要有额外的赔钱项。这点务必要注意。正常来处，如果转租不出去，你有确定要退房，一般只有不退押金，没有其他的赔钱项。这点要在租房合同上写清楚。&lt;/p&gt;
&lt;p&gt;凡是没有黑纸白纸写清楚的，你都可以认为是中介和二房东在忽悠。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何避免被收银员坑</title>
      <link>https://wdd.js.org/posts/2020/09/hpc6fy/</link>
      <pubDate>Wed, 16 Sep 2020 19:16:58 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/09/hpc6fy/</guid>
      <description>&lt;p&gt;大部分人结账付钱的时候，都不怎么关注。很多次被收银员褥羊毛了也毫不察觉。&lt;/p&gt;
&lt;p&gt;场景1:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你去买水果，看到苹果比较新鲜，价格8元/每斤，但是收银员称重计费的时候，是按照12元/每斤计算的。但是当时你在打开支付宝准备付钱，没有注意称上的单价。付费过后，收银员没给你小票。你也没注意，事情就这么过去了。
如果你对收银员按的单价表示怀疑，问了句：这苹果怎么和标价上不一致？ 收银员尴尬的笑了笑，说到：不好意思，我按错了。比较老练的可能会说：不好意思，我还以为你拿的是旁边的那种水果呢？&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;场景2:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你和朋友一起去吃烤鱼，点了一条清江鱼，服务员称重过后，在菜单上用铅笔写了3.5斤。酒足饭饱之后，你去结账。收银员开出小票，上面写的清江鱼 4.2斤，你也没注意。甚至有可能那个铅笔写的斤数已经被酒水的污渍涂抹的不清楚了。如果有表示怀疑，仔细看了看小票，说鱼的重量不对。收银员又尴尬的笑了笑，说到：不好意思，这个可能记得别的桌的鱼的重量的。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;场景3:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你买了一包垃圾袋7元，一包衣服撑18，一个垃圾桶6，五金店的老板也没用计算机，抬头望着天空的那朵白云。彷佛再做云计算，然后说：一共38块。&lt;/p&gt;
&lt;p&gt;shit! 很多人真的就直接掏钱了。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;你看看，收银员说的不好意思多值钱，简直是一字千金啊！但是更多时候，我们都是稀里糊涂的蒙在鼓里。&lt;/p&gt;
&lt;p&gt;要想不被辱羊毛，务必要谨记。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;商品的标价要谨记于心&lt;/li&gt;
&lt;li&gt;不要相信收银员的信口开河的算钱，要自己算&lt;/li&gt;
&lt;li&gt;买完东西，一定要问收银员要小票&lt;/li&gt;
&lt;li&gt;收银员称重的时候，要注意观察称上显示的价格和摆货区的价格是否一致&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>IO性能 Ｎode vs PHP vs Java vs Go</title>
      <link>https://wdd.js.org/posts/2020/09/upi47f/</link>
      <pubDate>Mon, 14 Sep 2020 16:43:06 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/09/upi47f/</guid>
      <description>&lt;h1 id=&#34;system-calls&#34;&gt;System Calls&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;应用程序工作在用户模式&lt;/li&gt;
&lt;li&gt;应用程序不能直接访问硬件资源，应用程序需要调用操作系统提供的接口间接访问。这个叫做系统调用。一般的系统调用都是阻塞的。阻塞的意思就是你在网上买了个苹果，在你收到这个快递之前，你啥也不干，就躺在床上等着。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;非阻塞&#34;&gt;非阻塞&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;非阻塞的程序，在系统调用时，会立即返回一个标shi&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>使用iPad开发折腾记</title>
      <link>https://wdd.js.org/posts/2020/09/rzumhc/</link>
      <pubDate>Tue, 08 Sep 2020 20:37:52 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/09/rzumhc/</guid>
      <description>&lt;h1 id=&#34;为什么要用ipad开发&#34;&gt;为什么要用iPad开发？&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;第一，我不想再买台电脑或者笔记本放在家里。因为我也不用电脑来打游戏。而且无论台式机还是笔记本都比较占地方。搬家也费劲。&lt;/li&gt;
&lt;li&gt;第二，我只有一台MacBook Pro，以前下班也会背着，因为总有些事情需要做。但是自从有一天觉得肩膀不舒服了，我就决定不再背电脑。廉颇老矣，腰酸背痛。&lt;/li&gt;
&lt;li&gt;虽然不再背电脑，但是偶有雅兴，心血来潮，我还需要写点博客或者代码的。&lt;/li&gt;
&lt;li&gt;所以我买了台iPad来开发或者写博客。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;前期准备工作&#34;&gt;前期准备工作&lt;/h1&gt;
&lt;h2 id=&#34;硬件准备&#34;&gt;硬件准备&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;一台iPad&lt;/li&gt;
&lt;li&gt;一个蓝牙键盘。最好买那种适合笔记本的蓝牙键盘，千万不要买可折叠的蓝牙键盘，因为用着不舒服&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;软件准备&#34;&gt;软件准备&lt;/h2&gt;
&lt;p&gt;常规的功能，例如写文字，写博客，一个浏览器足以胜任。唯一的难点在于如何编程。&lt;/p&gt;
&lt;p&gt;目前来说，有两个方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;方案1: 使用在线编辑器。例如码云，github, codepen等网站，都是提供在线编辑器的。优点是方便，免费。缺点也很明显，无法调试或者运行代码。&lt;/li&gt;
&lt;li&gt;方案2: 购买云主机，iPad上安装Termius, ssh远程连接到服务端，在真正的操作系统中做开发。优点是比较自由，扩展性强。缺点是需要花钱，而且在没有IDE环境做开发是有不小的难度的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方案1由于比较简单，就不赘述了。&lt;/p&gt;
&lt;p&gt;着重讲讲方案2:&lt;/p&gt;
&lt;h1 id=&#34;购买云主机&#34;&gt;购买云主机&lt;/h1&gt;
&lt;p&gt;一般来说，即使是最低配置的主机，一年的费用也至少要几百块。但是也有例外情况。我的目标是找那些年费在一百块以内的云主机。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;针对大学生的优惠。一般大学生可以以几十块的价钱买到最低配的云主机。&lt;/li&gt;
&lt;li&gt;针对新用户的优惠。新用户的优惠力度还是很大的。一般用过一年之后，我就会转站其他云服务提供商。所以国内的好多朵公有云，基本上我都上过。唯一没上过的就是筋斗云。&lt;/li&gt;
&lt;li&gt;特殊优惠日。一般来说，一年之内，至少存在两个优惠日，双十一和六一八。在这两个时间点，一般可以买到比较优惠的云主机。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;开发环境搭建&#34;&gt;开发环境搭建&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;使用Terminue连接到远程服务器上。注意最好在公有云上使用公钥登录，并禁止掉密码登录。最好再安装个fail2ban。因为每个云主机基本上每天都有很多恶意的登录尝试。&lt;/li&gt;
&lt;li&gt;需要安装oh-my-zsh.  最好用的sh, 不解释。&lt;/li&gt;
&lt;li&gt;作为开发环境，一个屏幕肯定是不够的，所以你需要tmux.&lt;/li&gt;
&lt;li&gt;编辑器呢。锻炼自己的VIM使用能力吧。VIM是个外边比较冰冷的编辑器，上手难度相比于那些花花绿绿的编辑器而言，显得那么格格不入。但是就像有首歌唱的的，有些人不知道那些好，但就是谁也替代不了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总之呢，你必须要强迫自己能够熟练的运用以下的几个软件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;VIM&lt;/li&gt;
&lt;li&gt;tumx&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;后记&#34;&gt;后记&lt;/h1&gt;</description>
    </item>
    <item>
      <title>岁月的皮肤</title>
      <link>https://wdd.js.org/posts/2020/08/cs9htr/</link>
      <pubDate>Sun, 30 Aug 2020 21:47:35 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/08/cs9htr/</guid>
      <description>&lt;p&gt;早上六点多起床，搭乘半个小时的地铁，来到医院做体验。&lt;/p&gt;
&lt;p&gt;在抽血排队叫号的时候，我看到一位老奶奶被她女儿搀扶着坐在抽血的窗口前。&lt;/p&gt;
&lt;p&gt;老奶奶把右边的胳膊伸到抽血的垫子上，那是让人看一眼就难以忘记的皮肤。她的皮肤非常松弛，布满了褶皱，褶皱上有各种棕色和深色的斑点。&lt;/p&gt;
&lt;p&gt;我回想起了高中时学的生物学，皮肤是人类最大的一个器官，并且是保护人体的第一道防线。&lt;/p&gt;
&lt;p&gt;我不禁看了看自己胳膊，思绪万千。或许以后我的皮肤也是这样吧。这就是岁月的皮肤！&lt;/p&gt;
&lt;p&gt;时间啊！你走的慢点吧！&lt;/p&gt;
&lt;p&gt;人生很短，做些值得回忆的事情吧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>从日漫到美漫</title>
      <link>https://wdd.js.org/posts/2020/08/ybgr0g/</link>
      <pubDate>Sun, 30 Aug 2020 21:22:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/08/ybgr0g/</guid>
      <description>&lt;p&gt;我挺喜欢看动漫的，尤其是日漫(似乎也没有别的选择🐶)。&lt;/p&gt;
&lt;p&gt;小时候星空卫视放七龙珠，大学追火影和海贼王。日漫中梦想和激战总是少不了，这也是少年所必不可少的。但是日漫有个很大的特点，就是烂尾。&lt;/p&gt;
&lt;p&gt;没办法，漫画一旦达到了一定的连载时期，很多时候往往不受原作者控制了。这其中可能涉及到不少人的利益纠葛。&lt;/p&gt;
&lt;p&gt;与动辄几百集的日漫相比，美漫似乎更加偏向于短小精悍。&lt;/p&gt;
&lt;p&gt;近年来我也看过一些不错的美漫。例如瑞克和莫提，脆莓公园。这类漫画有个特点，就是更加现实，当然其中也不乏有温情出现。看这类漫画，让我想到李宗吾先生所说的厚黑学。感觉美国人是无师自通，深谙厚黑之哲学。&lt;/p&gt;
&lt;p&gt;也许动漫没有变，变的是我们自己：从梦想和激战转变到现实和厚黑。&lt;/p&gt;</description>
    </item>
    <item>
      <title>统一入口Makefile</title>
      <link>https://wdd.js.org/posts/2020/08/rudtng/</link>
      <pubDate>Sat, 22 Aug 2020 11:41:32 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/08/rudtng/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Makefile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---src
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   |___Makefile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   |___main.c
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如何编写顶层的Makefiel, 使其进入到src中，执行src中的Makefile?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;run:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;MAKE&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; -C src target a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; b&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>tmux深度教学</title>
      <link>https://wdd.js.org/posts/2020/08/osz3gu/</link>
      <pubDate>Sat, 22 Aug 2020 08:00:03 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/08/osz3gu/</guid>
      <description>&lt;h1 id=&#34;tmux使用场景&#34;&gt;tmux使用场景&lt;/h1&gt;
&lt;p&gt;远程ssh连接到服务器，最难受的是随时有可能ssh掉线，然后一切都需要花额外的时间重新恢复，也有可能一些工作只能重新开始。&lt;/p&gt;
&lt;p&gt;在接续介绍tmux之前，先说说mosh。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/08/osz3gu/2022-10-29-20-22-54.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;【mosh架构图】&lt;/p&gt;
&lt;p&gt;我曾使用过&lt;a href=&#34;https://mosh.org/&#34;&gt;mosh&lt;/a&gt;, 据说mosh永远不会掉线。实际上有可能的确如此，但是mosh实际上安装比较麻烦。mosh需要在服务端安装server, 然后要在你本地的电脑上安装client, 然后通过这个client去连接mosh服务端的守护进程。mosh需要安装在客户端服务端都安装软件，然后可能还要设置一下网络策略，才能真正使用。&lt;/p&gt;
&lt;p&gt;mosh需要改变很多，这在生产环境是不可能的。另外即使是自己的开发环境，这样搞起来也是比较麻烦的。&lt;/p&gt;
&lt;p&gt;下图是tmux的架构图。实际上我们只需要在服务端安装tmux, 剩下的ssh的连接都可以用标准的功能。&lt;!-- raw HTML omitted --&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/08/osz3gu/2022-10-29-20-23-08.png&#34;&gt;
&lt;!-- raw HTML omitted --&gt;【tmux架构图】&lt;/p&gt;
&lt;h1 id=&#34;tmux概念sesssion-window-panes&#34;&gt;tmux概念：sesssion, window, panes&lt;/h1&gt;
&lt;p&gt;概念不清楚，往往是觉得tmux难用的关键点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;session之间是相互隔离的，tmux可以启动多个session&lt;/li&gt;
&lt;li&gt;一个session可以有多个window&lt;/li&gt;
&lt;li&gt;一个window可以有多个panes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/08/osz3gu/2022-10-29-20-23-27.png&#34;&gt;
&lt;!-- raw HTML omitted --&gt;在tmux中按ctrl-b w, 可以在sesion，window和panel之间跳转。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/08/osz3gu/2022-10-29-20-23-38.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;注意：默认情况下，&lt;strong&gt;一个sesion默认会打开一个window, 一个window会默认打开一个pane。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;session操作&#34;&gt;session操作&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;创建新的sesssion: &lt;code&gt;tmux new -s some_name&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;脱离session: &lt;code&gt;ctrl-b +d&lt;/code&gt;  注意即使脱离session， session中的内容还是在继续工作的&lt;/li&gt;
&lt;li&gt;进入某个session: &lt;code&gt;tmux attach -t some_name&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;查看sesion列表: &lt;code&gt;tmux ls&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;kill某个session: &lt;code&gt;tmux kill-session -t some_name&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;kill所有session: &lt;code&gt;tmux kill-server&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;重命名session: &lt;code&gt;ctrl-b $&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;选择session: &lt;code&gt;ctrl-b s&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;window操作&#34;&gt;window操作&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;新建: &lt;code&gt;ctrl-b c&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;查看列表: &lt;code&gt;ctrl-b w&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;关闭当前window: &lt;code&gt;ctrl-b &amp;amp;&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;重命名当前window: &lt;code&gt;ctrl-b ,&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;切换到上一个window: &lt;code&gt;ctrl-b p&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;切换到下一个window: &lt;code&gt;ctrl-b n&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;按序号切换到制定的window: &lt;code&gt;ctrl-b 数字&lt;/code&gt;  数字可以用0-9&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;panes操作&#34;&gt;panes操作&lt;/h1&gt;
&lt;p&gt;pane相当于分屏，所有pane都是在一个窗口里都显示出来的。这点和window不同，一个window显示出来，则意味着其他window是隐藏的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>打造高可扩展性的微服务</title>
      <link>https://wdd.js.org/posts/2020/08/lrzu06/</link>
      <pubDate>Sat, 15 Aug 2020 21:14:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/08/lrzu06/</guid>
      <description>&lt;h1 id=&#34;关键技术&#34;&gt;关键技术&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Docker: 容器&lt;/li&gt;
&lt;li&gt;kuberneter：架构与部署&lt;/li&gt;
&lt;li&gt;HELM: 打包和部署&lt;/li&gt;
&lt;li&gt;Prometheus： 监控&lt;/li&gt;
&lt;li&gt;Open TRACING + ZIPKIN ： 分布式追踪&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;关键性能指标&#34;&gt;关键性能指标&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;I/O 性能:&lt;/li&gt;
&lt;li&gt;启动耗时: 当服务出现故障，需要重启时，启动的速度越快，对客户的影响越小。&lt;/li&gt;
&lt;li&gt;内存使用:&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>vim ctags安装及使用</title>
      <link>https://wdd.js.org/posts/2020/08/ed6944/</link>
      <pubDate>Mon, 10 Aug 2020 09:29:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/08/ed6944/</guid>
      <description>&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ubuntu or debian&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install ctags
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# centos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum install ctags &lt;span style=&#34;color:#75715e&#34;&gt;# centos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# macOSX&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install ctags
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;注意，如果在macOS 上输入ctags -R, 可能会有报错
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/Library/Developer/CommandLineTools/usr/bin/ctags: illegal option -- R
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;usage: ctags &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-BFadtuwvx&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-f tagsfile&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; file ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;那么你可以输入which ctags: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/bin/ctags &lt;span style=&#34;color:#75715e&#34;&gt;# 如果输出是这个，那么路径就是错的。正确的目录应该是/usr/local/bin/ctags&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;那么你可以在你的.zshrc或者其他配置文件中，增加一个alias
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;alias ctags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/bin/ctags&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;
&lt;p&gt;进入到项目跟目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ctags -R &lt;span style=&#34;color:#75715e&#34;&gt;# 当前目录及其子目录生成ctags文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;进入vim&#34;&gt;进入vim&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim main.c &lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:set tags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$PWD/tags &lt;span style=&#34;color:#75715e&#34;&gt;#让vim读区当前文件下的ctags文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 在多个文件的场景下，最好用绝对路径设置tags文件的位置 &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 否则有可能会报错neovim E433: No tags file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;快捷键&#34;&gt;快捷键&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Ctrl+] 跳转到标签定义的地方&lt;/li&gt;
&lt;li&gt;Ctrl+o 跳到之前的地方&lt;/li&gt;
&lt;li&gt;ctrl+t 回到跳转之前的标签处&lt;/li&gt;
&lt;li&gt;:ptag some_key 打开新的面板预览some_key的定义&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;下一个定义处&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h1 id=&#34;上一个定义处&#34;&gt;上一个定义处&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;gd 当前函数内查找当前标识符的定义处&lt;/li&gt;
&lt;li&gt;gD 当前文件查找标识符的第一次定义处&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>iTerm2 使用触摸版向下滚动命令输出</title>
      <link>https://wdd.js.org/posts/2020/07/gon16g/</link>
      <pubDate>Thu, 23 Jul 2020 14:26:54 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/07/gon16g/</guid>
      <description>&lt;p&gt;以前有个iTerm2有个很贴心的功能，鼠标向下滚动时，相关命令的输出也会自动向下。&lt;/p&gt;
&lt;p&gt;但是不知道最近是升级系统还是升级iTerm2的原因，这个功能实现不了。😭😭😭😭😭😭😭&lt;/p&gt;
&lt;p&gt;例如用vim打开一个大文件，或者使用man去查看一个命令的介绍文档时。如果要想向下滚动命令的输出内容。只能按j或者按空格或者回车。然而按键虽然精确，却没有用触摸板滚动来的爽。&lt;/p&gt;
&lt;p&gt;为了让vim能够接受鼠标向下滚动功能，我也曾设置了 &lt;code&gt;set mouse=a&lt;/code&gt; 这个设置虽然可以用触摸板来向下滚屏了，但是也出现了意想不到的问题。&lt;/p&gt;
&lt;p&gt;然后我就去研究iTerm2的配置，发现关于鼠标的配置中，有一个 &lt;code&gt;Scroll wheel send arrow keys when in alternat screen mode&lt;/code&gt; , 把这个指设置为Yes。那么无论Vim， 还是man命令，都可以用触摸板去滚动屏幕了。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/07/gon16g/2022-10-29-19-52-15.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>mac上netstat命令</title>
      <link>https://wdd.js.org/posts/2020/07/hingbv/</link>
      <pubDate>Thu, 23 Jul 2020 14:16:35 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/07/hingbv/</guid>
      <description>&lt;p&gt;Mac上的netstat和Linux上的有不少的不同之处。&lt;/p&gt;
&lt;p&gt;在Liunx上常使用&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Linux&lt;/th&gt;
          &lt;th&gt;Mac&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;netstat -nulp&lt;/td&gt;
          &lt;td&gt;netstat -nva -p udp&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;netsat -ntlp&lt;/td&gt;
          &lt;td&gt;netsat -nva -p tcp&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注意，在Mac上netstat的-n和linux上的含义相同&lt;/p&gt;</description>
    </item>
    <item>
      <title>获取本机外部公网IP</title>
      <link>https://wdd.js.org/posts/2020/07/bh7hy0/</link>
      <pubDate>Tue, 14 Jul 2020 11:14:14 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/07/bh7hy0/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl ip.sb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl cip.cc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>exec user process caused no such file or diectory</title>
      <link>https://wdd.js.org/posts/2020/07/docker-exec-user-process/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/07/docker-exec-user-process/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;exec user process caused &amp;#34;no such file or diectory&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;解决方案：
将镜像构建的 Dockerfile ENTRYPOINT [&amp;quot;/run.sh&amp;quot;] 改为下面的&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ENTRYPOINT [&amp;#34;sh&amp;#34;,&amp;#34;/run.sh&amp;#34;]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其实就是加了个sh&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用image标签上传日志</title>
      <link>https://wdd.js.org/posts/2020/07/koow4y/</link>
      <pubDate>Mon, 06 Jul 2020 14:55:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/07/koow4y/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;report&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;string&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Image&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`/report?log=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;report&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>ModuleNotFoundError: No module named &#39;SocketServer&#39;</title>
      <link>https://wdd.js.org/posts/2020/07/ncigfk/</link>
      <pubDate>Thu, 02 Jul 2020 15:54:42 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/07/ncigfk/</guid>
      <description>&lt;p&gt;python Flask框架报错。刚开始我只关注了这个报错，没有看到这个报错上上面还有一个报错&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ModuleNotFoundError: No module named &amp;#39;http.client&amp;#39;; &amp;#39;http&amp;#39; is not a package
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;实际上问题的关键其实是 &lt;code&gt;&#39;http&#39; is not a package&lt;/code&gt; , 为什么会有这个报错呢？&lt;/p&gt;
&lt;p&gt;其实因为我自己在项目目录里新建一个叫做http.py的文件，这个文件名和python的标准库重名了，就导致了后续的一系列的问题。&lt;/p&gt;
&lt;h1 id=&#34;问题总结&#34;&gt;问题总结&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;文件名一定不要和某些标准库的文件名相同&lt;/li&gt;
&lt;li&gt;排查问题的时候，一定要首先排查最先出现问题的点&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>iTerm2技巧 维护多个host与固定tab页面标题</title>
      <link>https://wdd.js.org/posts/2020/06/ba84a7/</link>
      <pubDate>Tue, 30 Jun 2020 13:16:05 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/ba84a7/</guid>
      <description>&lt;p&gt;iTerm我已经使用了很长时间了，总体各方面的特点都非常好，但是有几个地方也是让我苦恼的地方。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;tab 页面的标题会根据执行的命令或者路径发生变化，如果你开了七八个ssh远程，有时候很难区分这个tab页面到底是连接的哪台机器。&lt;/li&gt;
&lt;li&gt;如果你有十几个机器需要连接，你不可能手动输入ssh root@ip地址的方式去连接，太多了记不住。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;如何维护多个远程host&#34;&gt;如何维护多个远程host?&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;使用profile维护多个远程host, 每个profile对应连接到一台机器。profile name填入该host的名字。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注意右边的Command, Send text at start的输入框，这个输入框，就是要执行的ssh指令，里面包含了远程host的地址。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/06/ba84a7/2022-10-29-19-40-52.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后你就可以在Profils的菜单中选择一个profile进行连接了。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/06/ba84a7/2022-10-29-19-41-01.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;如何让tab页面的标题不改变&#34;&gt;如何让tab页面的标题不改变？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;一定不要勾选Applications in terminal may change the title,  默认这项是勾选的。&lt;/li&gt;
&lt;li&gt;Ttile一定要选择Name,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/06/ba84a7/2022-10-29-19-41-12.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;badge的妙用&#34;&gt;badge的妙用？&lt;/h1&gt;
&lt;p&gt;如果标签页的tab的名称还不够强调当前tab页面是连接哪个标签页面的，你可以用用Badge去强调一下。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/06/ba84a7/2022-10-29-19-41-27.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/06/ba84a7/2022-10-29-19-41-37.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>MacOS 随航功能链接ipad超时</title>
      <link>https://wdd.js.org/posts/2020/06/yh0oty/</link>
      <pubDate>Sun, 28 Jun 2020 07:54:04 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/yh0oty/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;首先去官网查看一下，macos的系统版本和硬件以及ipad的版本是否支持随航。这是前提条件。&lt;/li&gt;
&lt;li&gt;macos 和 ipad 需要登录同一个AppleID&lt;/li&gt;
&lt;li&gt;macos和iPad需要在同一个Wi-Fi下&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;遇到报错提示链接超时时：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;MacOS 退出apple账号，然后重新登录，登录完了之后重启电脑&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;再次尝试连接，就可以连接成功了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>xcrun: error: invalid active developer path</title>
      <link>https://wdd.js.org/posts/2020/06/wetv3e/</link>
      <pubDate>Sat, 27 Jun 2020 11:20:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/wetv3e/</guid>
      <description>&lt;p&gt;macos 升级后，发现git等命令都不可用了。&lt;/p&gt;
&lt;p&gt;第一次使用xcode-select &amp;ndash;install, 有报错。于是就用brew 安装了git。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;后续使用其他命令是，发现gcc命令也不可用。于是第二天又用 &lt;code&gt;xcode-select --install&lt;/code&gt; 执行了一遍，忽然又可以正常安装开发软件了。&lt;/p&gt;
&lt;p&gt;所以又把brew 安装的git给卸载了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>生产环境nginx配置</title>
      <link>https://wdd.js.org/posts/2020/06/rlmqq8/</link>
      <pubDate>Wed, 24 Jun 2020 19:36:06 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/rlmqq8/</guid>
      <description>&lt;p&gt;最近遇到一个问题，WebSocket总是会在下午出现比较大的断开的量。&lt;/p&gt;
&lt;p&gt;首先怀疑的是客户端的网络到服务端的网络出现抖动或者断开，要么就是入口的nginx有异常，或者是内部的服务出现异常。&lt;/p&gt;
&lt;p&gt;排查下来，发现nginx的最大打开文件个数是1024&lt;/p&gt;
&lt;p&gt;nginx master进程&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/06/rlmqq8/2022-10-29-20-32-06.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;nginx work进程&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/06/rlmqq8/2022-10-29-20-32-16.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;当进程打开文件数超过限制时会发生什么&#34;&gt;当进程打开文件数超过限制时，会发生什么？&lt;/h1&gt;
&lt;p&gt;当进程超过最大打开文件限制时，会收到SIGXFSZ信号。这个信号会默认行为会杀死一个进程。进程内部也可以捕获这个信号。&lt;/p&gt;
&lt;p&gt;我试着向nginx wrok进程发送SIGXFSZ信号, work进程会退出，然后master监听了这个事件后，会重新启动一个work进程。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kill -XFSZ work_pid
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在nginx的error.log文件中，可以看到类似的日志输出。&lt;/p&gt;
&lt;p&gt;这里的25就是XFSZ信号的整数表示。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;... [alert] ...#.: work process ... exited on signal 25 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;&lt;!-- raw HTML omitted --&gt;&lt;/em&gt;&lt;!-- raw HTML omitted --&gt;_&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.monitis.com/blog/6-best-practices-for-optimizing-your-nginx-performance/&#34;&gt;https://www.monitis.com/blog/6-best-practices-for-optimizing-your-nginx-performance/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/shansongxian/p/9989631.html&#34;&gt;https://www.cnblogs.com/shansongxian/p/9989631.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/jpfss/p/9755706.html&#34;&gt;https://www.cnblogs.com/jpfss/p/9755706.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man2/getrlimit.2.html&#34;&gt;https://man7.org/linux/man-pages/man2/getrlimit.2.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man5/proc.5.html&#34;&gt;https://man7.org/linux/man-pages/man5/proc.5.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>[未完成] WebSocket调研</title>
      <link>https://wdd.js.org/posts/2020/06/sbhglg/</link>
      <pubDate>Wed, 24 Jun 2020 11:09:02 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/sbhglg/</guid>
      <description>&lt;h1 id=&#34;调研目的&#34;&gt;调研目的&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;在异常情况下，网络断开对WebSocket的影响&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;测试代码&#34;&gt;测试代码&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;测试代码没有心跳机制&lt;/li&gt;
&lt;li&gt;心跳机制并不包含在WebSocket协议内部&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;var ws &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new WebSocket&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wss://echo.websocket.org/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ws.onopen &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    console.log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;onopen&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ws.onerror &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  console.log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;onerror: &amp;#39;&lt;/span&gt; + e.code&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  console.log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ws.onclose &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  console.log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;onclose: &amp;#39;&lt;/span&gt; + e.code&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  console.log&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;场景1-断网后是否会立即触发onerror-或者onclose事件&#34;&gt;场景1: 断网后，是否会立即触发onerror, 或者onclose事件？&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：不会立即触发&lt;/p&gt;
&lt;p&gt;测试代码中没有心跳机制，断网后，并不会立即触发onerror或者onclose的回调函数。&lt;/p&gt;
&lt;p&gt;个人测试的情况&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;及其&lt;/th&gt;
          &lt;th&gt;测试场景&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Macbook pro chrome 83.0.4103.106&lt;/td&gt;
          &lt;td&gt;每隔10秒发送一次消息的情况下，40秒后出发onclose事件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Macbook pro chrome 83.0.4103.106&lt;/td&gt;
          &lt;td&gt;一直不发送消息，一直就不回出发onclose事件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Macbook pro chrome 83.0.4103.106&lt;/td&gt;
          &lt;td&gt;发出一个消息后？&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;场景2-断网后使用send发送数据回触发事件吗&#34;&gt;场景2: 断网后，使用send()发送数据，回触发事件吗？&lt;/h1&gt;
&lt;h1 id=&#34;为什么无法准确拿到断开原因&#34;&gt;为什么无法准确拿到断开原因？&lt;/h1&gt;
&lt;p&gt;WebSocket关闭事件中有三个属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;code 断开原因码&lt;/li&gt;
&lt;li&gt;reason 具体原因&lt;/li&gt;
&lt;li&gt;wasClean 是否是正常断开&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;官方文档上，code字段有很多个值。但是大多数情况下，要么拿到的值是undefined, 要么是1006，基本上没有其他情况。&lt;/p&gt;</description>
    </item>
    <item>
      <title>fping 网络状态监控测试</title>
      <link>https://wdd.js.org/posts/2020/06/qtdzvr/</link>
      <pubDate>Sat, 20 Jun 2020 17:06:42 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/qtdzvr/</guid>
      <description>&lt;p&gt;新建一个文件 ip.list.cfg,  包含所有的带测试的ip地址。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;192.168.40.20
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;192.168.40.21
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行命令:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nohup fping -D -u -l -p &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt; -f ip.list.cfg &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;-D 显示时间戳&lt;/li&gt;
&lt;li&gt;-u 显示不可达的目标&lt;/li&gt;
&lt;li&gt;-l 持续的ping&lt;/li&gt;
&lt;li&gt;-p 每隔多少毫秒执行一次&lt;/li&gt;
&lt;li&gt;-f 指定ip列表文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在nohup.out中，回持续的显示到各个ip的网络状况。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643928.961414&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.20 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 3.22 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3.22 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643928.969987&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.21 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 1.22 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1.22 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643930.965753&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.20 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 5.25 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4.23 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643930.972833&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.21 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 1.14 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1.18 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643932.965636&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.20 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 3.45 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3.97 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643932.978245&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.21 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 4.39 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2.25 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643934.991354&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.20 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 27.9 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;9.96 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643934.991621&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.21 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 14.9 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;5.42 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643936.978135&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.20 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 11.3 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;10.2 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1592643936.979620&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 192.168.40.21 : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt; bytes, 1.37 ms &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4.61 avg, 0% loss&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>oh-my-zsh 安装 tmux插件</title>
      <link>https://wdd.js.org/posts/2020/06/rh9zsc/</link>
      <pubDate>Wed, 17 Jun 2020 13:20:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/rh9zsc/</guid>
      <description>&lt;h1 id=&#34;zshrc配置&#34;&gt;.zshrc配置&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim ~/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plugins&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt;git tmux&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 加入tmux, 然后保存退出&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source ~/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;tmux-快捷键&#34;&gt;tmux 快捷键&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Alias&lt;/th&gt;
          &lt;th&gt;Command&lt;/th&gt;
          &lt;th&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;ta&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;tmux attach -t&lt;/td&gt;
          &lt;td&gt;Attach new tmux session to already running named session&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;tad&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;tmux attach -d -t&lt;/td&gt;
          &lt;td&gt;Detach named tmux session&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;ts&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;tmux new-session -s&lt;/td&gt;
          &lt;td&gt;Create a new named tmux session&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;tl&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;tmux list-sessions&lt;/td&gt;
          &lt;td&gt;Displays a list of running tmux sessions&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;tksv&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;tmux kill-server&lt;/td&gt;
          &lt;td&gt;Terminate all running tmux sessions&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;tkss&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;tmux kill-session -t&lt;/td&gt;
          &lt;td&gt;Terminate named running tmux session&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;tmux&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;_zsh_tmux_plugin_run&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;Start a new tmux session&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>Nodejs诊断报告</title>
      <link>https://wdd.js.org/posts/2020/06/elg2v2/</link>
      <pubDate>Fri, 12 Jun 2020 09:07:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/elg2v2/</guid>
      <description></description>
    </item>
    <item>
      <title>解决问题的最后一个思路：拼写错误！！</title>
      <link>https://wdd.js.org/posts/2020/06/ghpbm9/</link>
      <pubDate>Fri, 05 Jun 2020 11:55:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/ghpbm9/</guid>
      <description>&lt;p&gt;从各种层次排查了问题，包括&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;docker版本不一样&lt;/li&gt;
&lt;li&gt;脚本不一样&lt;/li&gt;
&lt;li&gt;镜像的问题&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从各种角度排查过后，却发现，问题在是&lt;strong&gt;拼写错误。环境变量没有设置对，导致进程无法前台运行。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;能不拼写就不要拼写！！直接复制。&lt;/p&gt;
&lt;p&gt;大文件在传输图中可能会文件损坏，最好使用md5sum计算文件校验和，然后做对比。&lt;/p&gt;</description>
    </item>
    <item>
      <title>01 手绘风格的流程图</title>
      <link>https://wdd.js.org/posts/2020/06/gbm9n6/</link>
      <pubDate>Fri, 05 Jun 2020 09:31:37 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/06/gbm9n6/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;webrtc的各种demo &lt;a href=&#34;https://webrtc.github.io/samples/&#34;&gt;https://webrtc.github.io/samples/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;在线音频处理 &lt;a href=&#34;https://audiomass.co/&#34;&gt;https://audiomass.co/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;值得深入阅读，关于如何demo的思考 &lt;a href=&#34;https://kitsonkelly.com/posts/deno-is-a-browser-for-code/&#34;&gt;https://kitsonkelly.com/posts/deno-is-a-browser-for-code/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;不错的介绍demo的博客 &lt;a href=&#34;https://kitsonkelly.com/posts&#34;&gt;https://kitsonkelly.com/posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;js如何获取音频视频 &lt;a href=&#34;https://www.webdevdrops.com/en/how-to-access-device-cameras-with-javascript/&#34;&gt;https://www.webdevdrops.com/en/how-to-access-device-cameras-with-javascript/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;bats可以用来测试shell脚本 &lt;a href=&#34;https://github.com/bats-core/bats-core&#34;&gt;https://github.com/bats-core/bats-core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;手绘风格的流程图 &lt;a href=&#34;https://excalidraw.com/&#34;&gt;https://excalidraw.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>理发店的营业模式分析</title>
      <link>https://wdd.js.org/posts/2020/05/frut12/</link>
      <pubDate>Sat, 30 May 2020 20:13:00 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/frut12/</guid>
      <description>&lt;h1 id=&#34;1-理发店分类&#34;&gt;1. 理发店分类&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;类别&lt;/th&gt;
          &lt;th&gt;店面大小&lt;/th&gt;
          &lt;th&gt;并发理发人数&lt;/th&gt;
          &lt;th&gt;业务范围&lt;/th&gt;
          &lt;th&gt;消费者画像&lt;/th&gt;
          &lt;th&gt;定价&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;A(单一理发类)&lt;/td&gt;
          &lt;td&gt;较小&lt;/td&gt;
          &lt;td&gt;4-6&lt;/td&gt;
          &lt;td&gt;理发、染发、烫发&lt;/td&gt;
          &lt;td&gt;学生、普通工人&lt;/td&gt;
          &lt;td&gt;较低&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B(综合服务类)&lt;/td&gt;
          &lt;td&gt;较大&lt;/td&gt;
          &lt;td&gt;12-20&lt;/td&gt;
          &lt;td&gt;理发、染发、烫发、美容、减肥、刮痧、按摩、脱毛等等&lt;/td&gt;
          &lt;td&gt;白领、老板等有一定经济能力者&lt;/td&gt;
          &lt;td&gt;中上&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;2-如何吸引顾客上门&#34;&gt;2. 如何吸引顾客上门？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;优惠卡：在理发店营业之前，往往可以以极低的价格，派发理发卡。例如办理20元理发5次这样的理发卡。这样在理发店营业之初，就会有足够的客户上门理发。&lt;/li&gt;
&lt;li&gt;认知偏差：很多理发店会门口挂个横幅: x+x+x 仅需5元。全场套餐仅需1折。其实这些都是吸引顾客的钩子，而真正的前提条件，往往是要办理xxxx元的会员卡。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-如何吸引客户更多的消费&#34;&gt;3. 如何吸引客户更多的消费？&lt;/h1&gt;
&lt;p&gt;对于B类理发店来说，一般情况下顾客进店之后，并不会对其立即理发。而需要一位服务员进行理发前的准备，例如头部按摩、颈部刮痧、肩部按摩的放松准备。也可能会上一些茶水，糖果瓜子之类的食品。&lt;/p&gt;
&lt;p&gt;进入理发店，除了有理发的消费之外，还可能纯在其他的消费机会。而消费机会的前提在于**服务人员和顾客之间的沟通。&lt;strong&gt;所以以为能够察言寡色的服务员则显得尤为重要。如果顾客一句话也不说，那也是无法让其更多的消费的。&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;常见的沟通手法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;发现顾客身上的小瑕疵，进而咨询顾客是否需要专业的人员帮您看看。（注意这一步一定不要立即推荐套餐服务，这样会立即引起顾客的反感情绪。）&lt;/li&gt;
&lt;li&gt;经过专业人员的查看之后，一般会向客户推荐比较优惠的体验一次的项目。因为体验一次往往是话费比较小的。如果上来给客户推荐一两千的套餐，客户一般会拒绝。&lt;/li&gt;
&lt;li&gt;简单的套餐体验过后，可以向顾客推荐套餐，以及如果使用套餐，单次理疗会更加优惠。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总得理念就是：&lt;strong&gt;循序渐诱，不可操之过急&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-如何留住顾客&#34;&gt;4. 如何留住顾客？&lt;/h1&gt;
&lt;p&gt;理发店顾客粘性一般比较小，周围四五家理发店，顾客凭什么再次光顾你这家呢？&lt;/p&gt;
&lt;p&gt;答案就是：&lt;strong&gt;会员卡&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>小岛经济学: 鱼、美元和经济的故事</title>
      <link>https://wdd.js.org/posts/2020/05/kn7c4e/</link>
      <pubDate>Fri, 22 May 2020 20:35:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/kn7c4e/</guid>
      <description>&lt;p&gt;之前读完鱼、美元和经济学的故事第一版，令我印象深刻。后来kindle上有出现了这本书的第二版，内容增加了，并且也增加了一些好看的插图。&lt;/p&gt;
&lt;p&gt;我度过不少经济学的书，《国富论》是比较深奥的一本，我只能看懂前面一两章，就读不下去了。&lt;/p&gt;
&lt;p&gt;但是小岛经济学的这本书，真的把经济学里难以理解的东西说的通俗易懂。&lt;/p&gt;
&lt;p&gt;也许经济学本来并不是那么难以理解，只是专家慢慢变多了，他们就把经济学变得难以理解了。因为只有这样，才能显得他们是多么的富有聪明才智。&lt;/p&gt;
&lt;h1 id=&#34;1-自己的生意&#34;&gt;1. 自己的生意&lt;/h1&gt;
&lt;p&gt;每个人实际上都在经营自己的生意，将自己的劳动力卖给出价最高的老板。&lt;/p&gt;
&lt;h1 id=&#34;2-员工的价值&#34;&gt;2. 员工的价值&lt;/h1&gt;
&lt;p&gt;员工的价值主要取决于三个方面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需求（老板是否需要员工所掌握的技能）&lt;/li&gt;
&lt;li&gt;供应（有多少人具备这些技能）&lt;/li&gt;
&lt;li&gt;生产力（员工对那些工作完成的程度如何）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以，你的价值并不会因为你吃苦耐劳而升高。&lt;/p&gt;
&lt;h1 id=&#34;3-纽约地铁&#34;&gt;3. 纽约地铁&lt;/h1&gt;
&lt;p&gt;纽约的地址由私营公司建设，40年内都是由私营公司负责运营。虽然地铁造价不菲，但是还是实现了盈利。更值得一提的是，40年里车票的价格从未上涨。&lt;/p&gt;
&lt;p&gt;这是值得深思的地方，有些公共事情，私营公司来做可能要比政府做的更好、效率更高。&lt;/p&gt;
&lt;p&gt;政府对公共设施的垄断，很大的可能会造成效率低下和贪污腐败。&lt;/p&gt;
&lt;h1 id=&#34;4-经济的目的&#34;&gt;4. 经济的目的&lt;/h1&gt;
&lt;p&gt;提供就业岗位并不是经济的目的，经济的目的是不断提高生产力。&lt;/p&gt;
&lt;h1 id=&#34;5-膨胀与紧缩&#34;&gt;5. 膨胀与紧缩&lt;/h1&gt;
&lt;p&gt;通货膨胀就是货币的供给增加，相反的就是通货紧缩。价格并不会膨胀或者紧缩，价格只能上涨或者下跌。膨胀的不是价格，而是货币供给。&lt;/p&gt;
&lt;h1 id=&#34;6-谁需要你的货币&#34;&gt;6. 谁需要你的货币？&lt;/h1&gt;
&lt;p&gt;如果没有人想购买你的产品，也就没有人需要你的货币。&lt;/p&gt;
&lt;p&gt;美国的很多产品在全世界都很吃香，所以美元是很多国家都需要的。&lt;/p&gt;
&lt;h1 id=&#34;7-人们为何消费&#34;&gt;7. 人们为何消费？&lt;/h1&gt;
&lt;p&gt;经济并不会因为人们的消费而增长，而是经济增长会自然的带动人们的消费。&lt;/p&gt;
&lt;p&gt;但是目前看来，眼下最为火爆的就是“带货”这个词，各种人物，无论是公众明星还是普通人，都想来搞带货。&lt;/p&gt;
&lt;p&gt;各种新闻报道也在大肆宣扬，某某明星直播带货xxx亿元。&lt;/p&gt;
&lt;p&gt;当你被xxx亿元吸引时，你是否也曾暗暗思考过，这些钱来自哪里？ 买这些东西对于消费者来说，又有什么好处。&lt;/p&gt;
&lt;p&gt;在经济以为疫情的影响和下行时，为什么会有那么多人疯狂购物呢？&lt;/p&gt;
&lt;p&gt;天下皆知美之为美，斯恶已。我想这种带货的模式，也许就快要到尽头了。&lt;/p&gt;
&lt;h1 id=&#34;8-量化宽松&#34;&gt;8. 量化宽松&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;北京的白菜（一到）浙江,便用红头绳系住菜根,倒挂在水果店头,尊为“胶菜”；福建野生着的芦荟,（运往）北京就请进温室,且美其名曰“龙舌兰”. 《藤野先生》鲁迅&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;明明白白的通货膨胀，到了经济学家和政客的嘴里，美其名曰“量化宽松”。&lt;/p&gt;</description>
    </item>
    <item>
      <title>文件名以-开头</title>
      <link>https://wdd.js.org/posts/2020/05/ei2y93/</link>
      <pubDate>Thu, 21 May 2020 15:24:33 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/ei2y93/</guid>
      <description>&lt;p&gt;-.slice&lt;/p&gt;
&lt;p&gt;用 &amp;ndash; 表示参数已经结束&lt;/p&gt;
&lt;p&gt;cat &amp;ndash; -.slice&lt;!-- raw HTML omitted --&gt;vim &amp;ndash; -.slice&lt;/p&gt;</description>
    </item>
    <item>
      <title>nginx 配置不显示版本号</title>
      <link>https://wdd.js.org/posts/2020/05/es9hvu/</link>
      <pubDate>Thu, 14 May 2020 09:44:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/es9hvu/</guid>
      <description>&lt;h1 id=&#34;隐藏版本号&#34;&gt;隐藏版本号&lt;/h1&gt;
&lt;p&gt;nginx会在响应头上添加如下的头。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: nginx/1.17.9
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果不想在Server部分显示出nginx的版本号，需要在nginx.conf的http{}部分设置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	server_tokens off;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后重启nginx, nginx的响应头就会变成。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server: nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>获取进程工作目录</title>
      <link>https://wdd.js.org/posts/2020/05/azkyhl/</link>
      <pubDate>Thu, 14 May 2020 09:20:47 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/azkyhl/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pwdx pid
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lsof -p pid | grep cwd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>你好，下丘脑</title>
      <link>https://wdd.js.org/posts/2020/05/nkegg6/</link>
      <pubDate>Tue, 12 May 2020 22:44:49 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/nkegg6/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;人的大脑中有个器官，叫做下丘脑。下丘脑有控制体温控制的功能。刚出生的婴儿，下丘脑发育不完全，无法调节自己的体温。所以一般都把小宝宝包被子里，而她只能通过哭闹反应自己的不适。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;随着身体的发育，下丘脑逐渐掌握体温控制的功能。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;白天越来越长，从电脑屏幕上抬起头，发现已经有人收拾桌面，准备好要下班了。&lt;/p&gt;
&lt;p&gt;不知不觉，已经六点多了。&lt;/p&gt;
&lt;p&gt;夕阳西下，晚霞似火，凉风习习。&lt;/p&gt;
&lt;p&gt;漕河泾的腾讯大楼，影子被拉到地下停车场的入口，彷佛是情人间的法式舌吻。&lt;/p&gt;
&lt;p&gt;园区里行人匆匆，车辆缓缓～&lt;/p&gt;
&lt;p&gt;掐指算起，毕业已四年。时间如白驹过隙，指间流沙。&lt;/p&gt;
&lt;p&gt;恍然间，三十将至，尚未而立。&lt;/p&gt;
&lt;p&gt;小孩子爱憎分明，喜欢与不喜欢就直接说，不懂得拐弯抹角。&lt;/p&gt;
&lt;p&gt;成年人放下爱憎，只有生存&lt;/p&gt;
&lt;p&gt;无论如何，你应当体谅别人的世界与你的不同。&lt;/p&gt;
&lt;p&gt;对你来说，很容易理解的问题。可能对别人来说，是难以理解的。&lt;/p&gt;
&lt;p&gt;不要将自己当作干柴，稍微一点，就成烈火。&lt;/p&gt;
&lt;p&gt;当你知道你将要说的话会让别人难堪时，请咽下去吧。&lt;/p&gt;
&lt;p&gt;不要轻易否定一个人的工作价值，每个人都希望自己得到肯定。&lt;/p&gt;
&lt;p&gt;无论是对待陌生人、同事、或者是朋友。&lt;/p&gt;
&lt;p&gt;我们不是刚出生的婴儿，我们有完全发育的下丘脑。&lt;/p&gt;
&lt;p&gt;控制你的体温，同时也控制你的脾气，你说话的方式。&lt;/p&gt;
&lt;p&gt;每个人都值得温柔以待，即使是你不喜欢的人。&lt;/p&gt;
&lt;p&gt;你好，下丘脑～&lt;/p&gt;</description>
    </item>
    <item>
      <title>尿酸简史</title>
      <link>https://wdd.js.org/posts/2020/05/teadt5/</link>
      <pubDate>Tue, 12 May 2020 15:47:14 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/teadt5/</guid>
      <description>&lt;h1 id=&#34;从细胞说起&#34;&gt;从细胞说起&lt;/h1&gt;
&lt;p&gt;人体由细胞组成。人体的细胞中大约有40-60万亿个。细胞无时无刻不再新老更替、新陈代谢。&lt;/p&gt;
&lt;p&gt;微观世界的细胞变化，反应在人体生产，就是一个人从成长到衰老的过程。&lt;/p&gt;
&lt;p&gt;细胞中有一种重要的物质，核酸。核酸是脱氧核糖核酸(DNA)和核糖核酸(RNA)的总称。&lt;/p&gt;
&lt;p&gt;核酸由无数的核苷酸组成，核苷酸里有一种物质叫做嘌呤。而嘌呤和人体的尿酸有着密不可分的关系。&lt;/p&gt;
&lt;p&gt;除了作为遗传物质的一部分，嘌呤中的腺嘌呤也是腺苷三磷酸(ATP)的重要组成部分。APT是人体直接的能量来源。&lt;/p&gt;
&lt;p&gt;在剧烈运动时，APT会进一步分解成腺嘌呤。&lt;/p&gt;
&lt;p&gt;总之：&lt;strong&gt;尿酸和嘌呤的关系非常密切。人体细胞的遗传物质以及作为能量来源的APT都会产生嘌呤。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;尿酸来源分类&#34;&gt;尿酸来源分类&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;内源性尿酸： 来自人体自身细胞衰亡，残留的嘌呤经过酶的作用产生尿酸&lt;/li&gt;
&lt;li&gt;外源性尿酸: 大多来自食物中的嘌呤类化合物、核酸、核蛋白等物质、经过酶的作用下产生尿酸。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们身体中的尿酸2/3来自自身的生命活动, 1/3来自食物。&lt;/p&gt;
&lt;h1 id=&#34;尿酸的合成与排泄&#34;&gt;尿酸的合成与排泄&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;大部分的嘌呤在肝脏中经过氧化代谢、变成尿酸。在词过程中，有两类酶扮演着重要作用。
&lt;ul&gt;
&lt;li&gt;抑制尿酸合成的酶&lt;/li&gt;
&lt;li&gt;促进尿酸合成的酶&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2/3的尿酸通过肾脏排出。肾脏只有也有能够促进或者抑制尿酸重吸收的酶。&lt;/li&gt;
&lt;li&gt;1/3的尿酸通过肠道排出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以尿酸较高的患者，医生会让你抽血查肝功能和肾功能，如果肝脏中的某些指标异常，也会进一步通过B超去做进一步的判断。&lt;/p&gt;
&lt;p&gt;很多人误以为尿酸是查尿液，实际上这是被尿酸的名字误解了，尿酸是抽血检测的。&lt;/p&gt;
&lt;p&gt;人体中酶在声明活动中扮演着重要的角色。酶就好像是太极中的阴与阳一样，相互制衡达到平衡之时，身体才会健康。否则阴阳失衡，必然会存在身体病变。&lt;/p&gt;
&lt;p&gt;另外一些降低尿酸的药品，例如苯溴马隆片，其药理也是通过降低肾脏对尿酸的重吸收，来促进尿酸的排泄的。&lt;/p&gt;
&lt;h1 id=&#34;食物中的尿酸对人体影响有多大&#34;&gt;食物中的尿酸对人体影响有多大？&lt;/h1&gt;
&lt;p&gt;具体哪些不能吃，哪些能吃，网上都有很多资料了。总之，大鱼大肉是要尽量避免的。食物主要要以清淡为主，吃饭不要吃撑，尽量迟到7分饱，或者迟到不饿为佳。&lt;/p&gt;
&lt;h1 id=&#34;高尿酸的危害&#34;&gt;高尿酸的危害&lt;/h1&gt;
&lt;p&gt;有溶解度相关知识的同学都会知道，溶质在溶液中都是由溶解度的，超过溶解度之后，物质就会析出。尿酸也是如此，过饱和的尿酸会析出称为尿酸结晶。&lt;/p&gt;
&lt;p&gt;这些结晶会沉积在关节和各种软组织，就可能造成这些部位的损害。&lt;/p&gt;
&lt;p&gt;当尿酸结晶附着在关节软骨表面上的滑膜上时，血液中的白细胞会把它当做敌人，释放各种酶去进攻。这些酶在进攻敌人的同时，对自身的关节软骨的溶解和自身软组织的损伤。 对痛风患者而言，感受到的就是苦不堪言的痛风性关节炎&lt;/p&gt;
&lt;p&gt;另外，大量的尿酸最终是通过肾脏排泄的，如果尿酸在肾脏上析出。对肾脏也会造成难以修复的损害，甚至患上尿毒症。光听这个尿毒症的名字，你就应该这道，这个病有多厉害。当你管不住自己嘴的时候，想想尿毒症吧。&lt;/p&gt;
&lt;p&gt;不要等到失去任劳任怨的肾脏之后，再后悔莫及。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://baike.baidu.com/item/%E4%BA%BA%E4%BD%93%E7%BB%86%E8%83%9E&#34;&gt;https://baike.baidu.com/item/%E4%BA%BA%E4%BD%93%E7%BB%86%E8%83%9E&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>kaldi安装</title>
      <link>https://wdd.js.org/posts/2020/05/haowe5/</link>
      <pubDate>Tue, 12 May 2020 15:40:02 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/haowe5/</guid>
      <description>&lt;p&gt;为了省去安装的麻烦，我直接使用的是容器版本的kaldi&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/kaldiasr/kaldi&#34;&gt;https://hub.docker.com/r/kaldiasr/kaldi&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker pull kaldiasr/kaldi
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;This is the official Docker Hub of the Kaldi project: http://kaldi-asr.org

Kaldi offers two sets of images: CPU-based images and GPU-based images. Daily builds of the latest version of the master branch (both CPU and GPU images) are pushed to DockerHub.

Sample usage of the CPU based images:

docker run -it kaldiasr/kaldi:latest

Sample usage of the GPU based images:

Note: use nvidia-docker to run the GPU images.

docker run -it --runtime=nvidia kaldiasr/kaldi:gpu-latest

Please refer to Kaldi&amp;#39;s GitHub repository for more details.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;kaldiasr/kaldi这个镜像是基于linuxkit构建的，如果缺少什么包，可以使用apt命令在容器中安装&lt;/p&gt;</description>
    </item>
    <item>
      <title>Type &#39;Timeout&#39; is not assignable to type &#39;number&#39;</title>
      <link>https://wdd.js.org/posts/2020/05/uwe59t/</link>
      <pubDate>Tue, 12 May 2020 15:35:54 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/uwe59t/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;timer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NodeJS&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Timer&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;timer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;global&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setTimeout&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;myFunction&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;http://evanshortiss.com/development/nodejs/typescript/2016/11/16/timers-in-typescript.html&#34;&gt;http://evanshortiss.com/development/nodejs/typescript/2016/11/16/timers-in-typescript.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>macbook 清空DNS缓存</title>
      <link>https://wdd.js.org/posts/2020/05/gy02f8/</link>
      <pubDate>Mon, 11 May 2020 17:40:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/gy02f8/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo killall -HUP mDNSResponder
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>xmpp学习</title>
      <link>https://wdd.js.org/posts/2020/05/db6ou6/</link>
      <pubDate>Fri, 08 May 2020 11:09:53 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/db6ou6/</guid>
      <description></description>
    </item>
    <item>
      <title>从pcap文件提取转wav语音文件</title>
      <link>https://wdd.js.org/posts/2020/05/fosfbg/</link>
      <pubDate>Fri, 01 May 2020 09:36:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/05/fosfbg/</guid>
      <description>&lt;p&gt;wireshark具有这个功能，但是并不适合做批量执行。&lt;/p&gt;
&lt;p&gt;下面的方案比较适合批量执行。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 1. 安装依赖
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;yum install gcc libpcap&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;devel libnet&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;devel sox &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 2. 克隆源码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;git clone https:&lt;span style=&#34;color:#75715e&#34;&gt;//github.com/wangduanduan/rtpsplit.git
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 3. 切换目录
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;cd rtpsplit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 4. 编译可执行文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 5. 将可执行文件复制到/usr/local/bin目录下
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;cp src&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;rtpbreak &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;usr&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;local&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;bin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 6. 切换到录音文件的目录，假如当前目录只有一个文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;rtpbreak &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r krk9hprvin1u1laqe14g&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;beffe8aaeb9bf99.pcap &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;g &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;d .&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  audio git:(edge) &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;✗&lt;/span&gt; rtpbreak &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r krk9hprvin1u1laqe14g&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;beffe8aaeb9bf99.pcap &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;g &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;d .&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; rtpbreak v1&lt;span style=&#34;color:#ae81ff&#34;&gt;.3&lt;/span&gt;a running here&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; pid: &lt;span style=&#34;color:#ae81ff&#34;&gt;1885&lt;/span&gt;, date&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;time: &lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Configuration
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; INPUT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Packet source: rxfile &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;krk9hprvin1u1laqe14g&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;beffe8aaeb9bf99.pcap&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Force datalink header length: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; OUTPUT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Output directory: &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     RTP raw dumps: enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     RTP pcap dumps: enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Fill gaps: enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Dump noise: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Logfile: &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;.&lt;span style=&#34;color:#75715e&#34;&gt;//rtp.0.txt&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;     Logging to stdout: enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Logging to syslog: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Be verbose: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; SELECT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Sniff packets in promisc mode: enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Add pcap filter: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Expecting even destination UDP port: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Expecting unprivileged source&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;destination UDP ports: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Expecting RTP payload type: any
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Expecting RTP payload length: any
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Packet timeout: &lt;span style=&#34;color:#ae81ff&#34;&gt;10.00&lt;/span&gt; seconds
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Pattern timeout: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt; seconds
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Pattern packets: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; EXECUTION
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Running as user&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;group: root&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;root
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Running daemonized: disabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; You can dump stats sending me a SIGUSR2 signal
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Reading packets...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;open di .&lt;span style=&#34;color:#75715e&#34;&gt;//rtp.0.0.txt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt; [rtp0] detected: pt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;(g711U) &lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.40.192&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;26396&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.60.229&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;open di .&lt;span style=&#34;color:#75715e&#34;&gt;//rtp.0.1.txt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt; [rtp1] detected: pt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;(g711U) &lt;span style=&#34;color:#ae81ff&#34;&gt;10.197.169.10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49265&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;192.168.60.229&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20012&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; eof reached.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Caught SIGTERM &lt;span style=&#34;color:#a6e22e&#34;&gt;signal&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;), cleaning up...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; [rtp1] closed: packets inbuffer&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; flushed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;285&lt;/span&gt; lost&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.00&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;), call_length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;m12s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; [rtp0] closed: packets inbuffer&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; flushed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;586&lt;/span&gt; lost&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.00&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;), call_length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;m12s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Alive RTP Sessions: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Closed RTP Sessions: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Detected RTP Sessions: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Flushed RTP packets: &lt;span style=&#34;color:#ae81ff&#34;&gt;871&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Lost RTP packets: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.00&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;Noise&lt;/span&gt; (false positive) packets: &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; No active RTP streams
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 7. 查看输出文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;185&lt;/span&gt;K May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; krk9hprvin1u1laqe14g&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;beffe8aaeb9bf99.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;132&lt;/span&gt;K May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.0&lt;/span&gt;.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;92&lt;/span&gt;K May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.0&lt;/span&gt;.raw
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;412&lt;/span&gt; May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.0&lt;/span&gt;.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;K May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.1&lt;/span&gt;.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;K May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.1&lt;/span&gt;.raw
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;435&lt;/span&gt; May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.1&lt;/span&gt;.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rw&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;. &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;1.7&lt;/span&gt;K May  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt; rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0&lt;/span&gt;.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 8. 使用sox 转码以及合成wav文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;sox &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r8000 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c1 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t ul rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.0&lt;/span&gt;.raw &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t wav &lt;span style=&#34;color:#ae81ff&#34;&gt;0.&lt;/span&gt;wav
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sox &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r8000 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c1 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t ul rtp&lt;span style=&#34;color:#ae81ff&#34;&gt;.0.1&lt;/span&gt;.raw &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t wav &lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;wav
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sox &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m &lt;span style=&#34;color:#ae81ff&#34;&gt;0.&lt;/span&gt;wav &lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;wav call.wav
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 最终合成的 call.wav文件，就是可以放到浏览器中播放的双声道语音文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;h2 id=&#34;rtpbreak帮助文档&#34;&gt;rtpbreak帮助文档&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Copyright&lt;/span&gt; (c) &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2008&lt;/span&gt; Dallachiesa Michele &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;micheleDOTdallachiesaATposteDOTit&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rtpbreak v1&lt;span style=&#34;color:#ae81ff&#34;&gt;.3&lt;/span&gt;a is free software, covered by the GNU General Public License.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;USAGE: &lt;span style=&#34;color:#a6e22e&#34;&gt;rtpbreak&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;|-&lt;/span&gt;i) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;source&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; [options]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; INPUT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Read packets from pcap file &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Read packets from network interface &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;L &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Force datalink header length &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; bytes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; OUTPUT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;d &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Set output directory to &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; (def:.)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;w            Disable RTP raw dumps
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;W            Disable RTP pcap dumps
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;g            Fill gaps in RTP raw &lt;span style=&#34;color:#a6e22e&#34;&gt;dumps&lt;/span&gt; (caused by lost packets)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;n            Dump noise packets
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;f            Disable stdout logging
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;F            Enable syslog logging
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;v            Be verbose
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; SELECT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m            Sniff packets in promisc mode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Add pcap filter &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;e            Expect even destination UDP port
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;u            Expect unprivileged source&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;destination UDP &lt;span style=&#34;color:#a6e22e&#34;&gt;ports&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Expect RTP payload type &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;l &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Expect RTP payload length &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; bytes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;    Set packet timeout to &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;seconds&lt;/span&gt; (def:&lt;span style=&#34;color:#ae81ff&#34;&gt;10.00&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;T &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;    Set pattern timeout to &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;seconds&lt;/span&gt; (def:&lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;P &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Set pattern packets count to &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; (def:&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; EXECUTION
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Z &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;      Run as user &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;D            Run in &lt;span style=&#34;color:#a6e22e&#34;&gt;background&lt;/span&gt; (option &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;f implicit)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; MISC
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;k            List known RTP payload types
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;h            This
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>娱乐智障</title>
      <link>https://wdd.js.org/posts/2020/04/uffptn/</link>
      <pubDate>Tue, 28 Apr 2020 21:56:52 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/uffptn/</guid>
      <description>&lt;p&gt;娱乐至死，娱乐也能让人变得智障。&lt;/p&gt;
&lt;p&gt;贪图于精神愉悦，在永无休止的欢悦中难以自拔。&lt;/p&gt;
&lt;p&gt;道德经上写道：五色令人目盲，五音令人耳聋，五味令人口爽，驰骋田猎令人心发狂。&lt;/p&gt;
&lt;p&gt;现代人尤其如此。买分辨率最高的显示器，刷新频率最高的手机，买最贵的耳机，吃口味最为劲爆的火锅。&lt;/p&gt;
&lt;p&gt;感觉人都已经被五官所控制，变成了一个行尸走肉的躯壳。&lt;/p&gt;
&lt;p&gt;但是话又说回来，人为什么要这要麻痹自己呢？&lt;/p&gt;
&lt;p&gt;或许变成一个智障，才能稍微从现实的夹缝中稍微缓口气。&lt;/p&gt;
&lt;p&gt;冷风如刀，以大地为砧板，视众生皆为鱼肉。&lt;/p&gt;</description>
    </item>
    <item>
      <title>自动IP拦截工具fail2ban使用教程</title>
      <link>https://wdd.js.org/posts/2020/04/ih9pz2/</link>
      <pubDate>Tue, 28 Apr 2020 08:48:11 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/ih9pz2/</guid>
      <description>&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;p&gt;如果你的主机在公网上有端口暴露出去，那么总会有一些不怀好意的家伙，会尝试通过各种方式攻击你的机器。常见的服务例如ssh, nginx都会有类似的威胁。&lt;/p&gt;
&lt;p&gt;手工将某个ip加入黑名单，这种操作太麻烦，而且效率低。而fail2ban就是一种自动化的解决方案。&lt;/p&gt;
&lt;h1 id=&#34;fail2ban工作原理&#34;&gt;fail2ban工作原理&lt;/h1&gt;
&lt;p&gt;fail2ban的工作原理是监控某个日志文件，然后根据某些关键词，提取出攻击方的IP地址，然后将其加入到黑名单。&lt;/p&gt;
&lt;h1 id=&#34;fail2ban安装&#34;&gt;fail2ban安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;yum&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fail2ban&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;y&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;如果找不到fail2ban包&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;就执行下面的命令&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;yum&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;epel&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;release&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;安装fail2ban&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;完成后&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;enable&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fail2ban&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;设置fail2ban开机启动&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fail2ban&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;启动fail2ban&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;systemctl&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fail2ban&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;查看fail2ban的运行状态&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;用fail2ban保护ssh&#34;&gt;用fail2ban保护ssh&lt;/h1&gt;
&lt;p&gt;fail2ban的配置文件位于/etc/fail2ban目录下。&lt;/p&gt;
&lt;p&gt;在该目录下建立一个文件 jail.local, 内容如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bantime 持续禁止多久&lt;/li&gt;
&lt;li&gt;maxretry 最大多少次尝试&lt;/li&gt;
&lt;li&gt;banaction 拦截后的操作&lt;/li&gt;
&lt;li&gt;findtime 查找时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看下下面的操作的意思是：监控sshd服务的最近10分钟的日志，如果某个ip在10分钟之内，有2次登录失败，就把这个ip加入黑名单, 24小时之后，这个ip才会被从黑名单中移除。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;DEFAULT&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bantime&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;banaction&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;iptables&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;multiport&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;maxretry&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;findtime&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;sshd&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;enabled&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后重启fail2ban, &lt;code&gt;systemctl restart fail2ban&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;fail2ban提供管理工具fail2ban-client&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**fail2ban-client status **显示fail2ban的状态&lt;/li&gt;
&lt;li&gt;**fail2ban-client status sshd **显示某个监狱的配置。从下文的输出来看可以看出来fail2ban已经拦截了一些IP地址了&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; fail2ban-client status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|- Number of jail:	&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;- Jail list:	sshd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; fail2ban-client status sshd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the jail: sshd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|- Filter
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|  |- Currently failed:	&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|  |- Total failed:	&lt;span style=&#34;color:#ae81ff&#34;&gt;23289&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|  &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;- Journal matches:	_SYSTEMD_UNIT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sshd.service + _COMM&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sshd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;- Actions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   |- Currently banned:	&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   |- Total banned:	&lt;span style=&#34;color:#ae81ff&#34;&gt;1270&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;- Banned IP list:	93.174.93.10 165.22.238.92 23.231.25.234 134.255.219.207 77.202.192.113 120.224.47.86 144.91.70.139 90.3.194.84 217.182.89.87
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;fail2ban保护sshd的原理&#34;&gt;fail2ban保护sshd的原理&lt;/h1&gt;
&lt;p&gt;fail2ban的配置文件目录下有个filter.d目录，该目录下有个sshd.conf的文件，这个文件就是对于sshd日志的过滤规则，里面有些正常时用来提取出恶意家伙的IP地址。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux进程和线程</title>
      <link>https://wdd.js.org/posts/2020/04/pbcbub/</link>
      <pubDate>Sat, 25 Apr 2020 20:30:18 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/pbcbub/</guid>
      <description>&lt;p&gt;思考题：当你用ssh登录到一个linux机器，并且执行了某个hello.sh之后，有哪些进程参与了该过程?&lt;/p&gt;
&lt;h1 id=&#34;linux系统架构&#34;&gt;linux系统架构&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;kernel mode&lt;/li&gt;
&lt;li&gt;user mode&lt;/li&gt;
&lt;li&gt;内核态和用户态的区别&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/04/pbcbub/2022-10-29-20-27-18.png&#34;&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/04/pbcbub/2022-10-29-20-27-24.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;h1 id=&#34;什么是进程&#34;&gt;什么是进程&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;进程是运行的程序&lt;/li&gt;
&lt;li&gt;process 是对 processor 虚拟化，通过时间片&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/04/pbcbub/2022-10-29-20-27-31.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;进程都有uid&#34;&gt;进程都有uid&lt;/h1&gt;
&lt;p&gt;nginx访问某个目录，&lt;strong&gt;Permission denied&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/04/pbcbub/2022-10-29-20-27-41.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;进程都有pid&#34;&gt;进程都有pid&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;$$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/04/pbcbub/2022-10-29-20-27-52.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;进程都有父进程&#34;&gt;进程都有父进程&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;准确来说，除了pid为0的进程之外，其他进程都有父进程&lt;/li&gt;
&lt;li&gt;有时候，你用kill命令杀死了一个进程，但是立马你就发现这个进程又起来了。你就要看看，这个进程是不是有个非init进程的父进程。一般这个进程负责监控子进程，一旦子进程挂掉，就会去重新创建一个进程。所以你需要找到这个父进程的Id，先把父进程kill掉，然后在kill子进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/04/pbcbub/2022-10-29-20-27-58.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;进程是一棵树&#34;&gt;进程是一棵树&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pid is &lt;/span&gt;$$&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;times&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	sleep 2s;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	let times++;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo $times hello;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  ~ pstree &lt;span style=&#34;color:#ae81ff&#34;&gt;24601&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sshd─┬─3*&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;sshd───zsh&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ├─sshd───zsh───pstree
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     └─sshd───zsh───world.sh───sleep
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;进程都有生命周期&#34;&gt;进程都有生命周期&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;创建&lt;/li&gt;
&lt;li&gt;销毁&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;进程都有状态&#34;&gt;进程都有状态&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;runing 进程占用CPU, 正在执行指令&lt;/li&gt;
&lt;li&gt;ready 进程所有需要的资源都已经就绪，等待进入CPU执行&lt;/li&gt;
&lt;li&gt;blocked 进程被某些事件阻断，例如IO。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进程的状态转移图&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>老年生活</title>
      <link>https://wdd.js.org/posts/2020/04/ysx4gz/</link>
      <pubDate>Thu, 23 Apr 2020 21:18:22 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/ysx4gz/</guid>
      <description>&lt;p&gt;最近感觉提前步入老年生活，晚上九点睡觉，早上六点醒来。醒来之后打盹一会，等着按灭六点十分的闹钟。&lt;/p&gt;
&lt;p&gt;哎，又困了。😩😩😩😩😩😩&lt;/p&gt;</description>
    </item>
    <item>
      <title>简历之吃苦耐劳</title>
      <link>https://wdd.js.org/posts/2020/04/oczker/</link>
      <pubDate>Thu, 23 Apr 2020 21:06:33 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/oczker/</guid>
      <description>&lt;p&gt;最近需要招个前端开发，我更想让他向Nodejs方面发展。&lt;/p&gt;
&lt;p&gt;简历看的眼花，不知道为什么有那么多人都在简历上写吃苦难耐，难道做前端开发真的需要吃苦耐劳吗？&lt;/p&gt;
&lt;p&gt;我在NPM上没有找到能收邮件的包，找到了发邮件的包。&lt;/p&gt;
&lt;p&gt;我想找个能收邮件的包，自动收邮件，自动分析和过滤一些不想看的简历。&lt;/p&gt;</description>
    </item>
    <item>
      <title>window轻量级抓包工具RawCap介绍</title>
      <link>https://wdd.js.org/posts/2020/04/pfkelh/</link>
      <pubDate>Thu, 09 Apr 2020 16:58:20 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/pfkelh/</guid>
      <description>&lt;p&gt;相比于wireshark, RawCap非常小，仅有48kb。&lt;/p&gt;
&lt;p&gt;使用RawCap命令需要&lt;strong&gt;使用管理员权限打开CMD&lt;/strong&gt;，然后进入到RawCap.exe的目录。例如F:\Tools&lt;/p&gt;
&lt;h1 id=&#34;显示网卡列表&#34;&gt;显示网卡列表&lt;/h1&gt;
&lt;p&gt;输入RawCap.exe &amp;ndash;help, 可以显示命令的使用帮助、网卡列表还有使用例子。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;F:&lt;span style=&#34;color:#ae81ff&#34;&gt;\T&lt;/span&gt;ools&amp;gt;RawCap.exe --help
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NETRESEC RawCap version 0.2.0.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Usage: RawCap.exe &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTIONS&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &amp;lt;interface&amp;gt; &amp;lt;pcap_target&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &amp;lt;interface&amp;gt; can be an interface number or IP address
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &amp;lt;pcap_target&amp;gt; can be filename, stdout &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; or named pipe &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;starting with &lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;\p&lt;/span&gt;ipe&lt;span style=&#34;color:#ae81ff&#34;&gt;\)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OPTIONS:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -f          Flush data to file after each packet &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;no buffer&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -c &amp;lt;count&amp;gt;  Stop sniffing after receiving &amp;lt;count&amp;gt; packets
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -s &amp;lt;sec&amp;gt;    Stop sniffing after &amp;lt;sec&amp;gt; seconds
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -m          Disable automatic creation of RawCap firewall entry
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -q          Quiet, don&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;t print packet count to standard out
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;INTERFACES:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 0.     IP        : 169.254.63.243
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Name  : Local Area Connection
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Type  : Ethernet
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 1.     IP        : 192.168.1.129
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Name  : WiFi
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Type  : Wireless80211
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 2.     IP        : 127.0.0.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Name  : Loopback Pseudo-Interface &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Type  : Loopback
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 3.     IP        : 10.165.240.132
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Name  : Mobile &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        NIC Type  : Wwanpp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Example 1: RawCap.exe &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; dumpfile.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Example 2: RawCap.exe -s &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; 127.0.0.1 localhost.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Example 3: RawCap.exe 127.0.0.1 &lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;\p&lt;/span&gt;ipe&lt;span style=&#34;color:#ae81ff&#34;&gt;\R&lt;/span&gt;awCap
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Example 4: RawCap.exe -q 127.0.0.1 - | Wireshark.exe -i - -k
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;:::warning
注意：&lt;/p&gt;</description>
    </item>
    <item>
      <title>大数据时代的平民新装</title>
      <link>https://wdd.js.org/posts/2020/04/pgwzdz/</link>
      <pubDate>Sun, 05 Apr 2020 08:41:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/pgwzdz/</guid>
      <description>&lt;p&gt;之前在百毒搜索了一下营养师考证，然后最近就经常收到骚扰电话，咨询我是否有意参加考试。&lt;/p&gt;
&lt;p&gt;在没有留任何电话号码的情况下，我的手机号就被精准的定位到。可想而知个人隐私问题是多么严重。&lt;/p&gt;
&lt;p&gt;以前只有皇帝一个人穿透明新装，现在每个人都穿着这件衣服。&lt;/p&gt;</description>
    </item>
    <item>
      <title>孩子血型一定和父母血型相同吗？</title>
      <link>https://wdd.js.org/posts/2020/04/vhovyr/</link>
      <pubDate>Wed, 01 Apr 2020 13:33:51 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/vhovyr/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;之前看过一个报道，父亲发现儿子的血型和自己以及妻子的血型都不一样，怀疑儿子不是自己亲生的，最后把自己妻儿弄死了。但是孩子的DNA检测显示是自己亲生的。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;这是一个不懂血型相关知识的悲剧啊。&lt;/p&gt;
&lt;p&gt;血型是由红细胞表面的两种抗原决定的。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;A抗原&lt;/th&gt;
          &lt;th&gt;B抗原&lt;/th&gt;
          &lt;th&gt;血型&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;A&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;B&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;AB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;O&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;下图的表格是父母血型与子女血型的可能性与比例。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;父母血型&lt;/th&gt;
          &lt;th&gt;子女可能有血型及比例&lt;/th&gt;
          &lt;th&gt;子女不可能有血型&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;O、O&lt;/td&gt;
          &lt;td&gt;O&lt;/td&gt;
          &lt;td&gt;A、B、AB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;O、A&lt;/td&gt;
          &lt;td&gt;O、A （1：3）&lt;/td&gt;
          &lt;td&gt;B、AB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;O、B&lt;/td&gt;
          &lt;td&gt;O、B （1：3）&lt;/td&gt;
          &lt;td&gt;A、AB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;O、AB&lt;/td&gt;
          &lt;td&gt;A、B （1：1）&lt;/td&gt;
          &lt;td&gt;O、AB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;A、A&lt;/td&gt;
          &lt;td&gt;O、A （1：15）&lt;/td&gt;
          &lt;td&gt;B、AB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;A、B&lt;/td&gt;
          &lt;td&gt;A、B、AB、O (3:3:9:1)&lt;/td&gt;
          &lt;td&gt;—&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;A、AB&lt;/td&gt;
          &lt;td&gt;A、B、AB （4：1：3）&lt;/td&gt;
          &lt;td&gt;O&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B、B&lt;/td&gt;
          &lt;td&gt;O、B（1：15）&lt;/td&gt;
          &lt;td&gt;A、AB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B、AB&lt;/td&gt;
          &lt;td&gt;A、B、AB（1：4：3）&lt;/td&gt;
          &lt;td&gt;O&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;AB、AB&lt;/td&gt;
          &lt;td&gt;A、B、AB（1：1：2）&lt;/td&gt;
          &lt;td&gt;O&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;虽说孩子的血型不一定和父母的血型相同。但是如果父母都是O型血，生出的孩子如果不是O型，那么不是亲生的可能性也是蛮大的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>食物的酸碱性的误解</title>
      <link>https://wdd.js.org/posts/2020/04/ly7nlv/</link>
      <pubDate>Wed, 01 Apr 2020 13:04:30 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/04/ly7nlv/</guid>
      <description>&lt;p&gt;大多数人可能由下面的两种方式去判断食物的酸碱性&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;舌头👅。用嘴巴尝一下，酸的食物就是酸性的。&lt;/li&gt;
&lt;li&gt;ph值。可以用ph试纸&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;以上两种判断食物酸碱性的方法都是错误的。&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;食物的酸碱性，取决于食物中含有矿物质的种类和含量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;碱性食物：含有钠、钾、钙、镁、铁&lt;/li&gt;
&lt;li&gt;酸性食物：还有磷、氯、硫&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从元素周期表中也可以看出来，酸碱性相同的物质基本都是比较靠近的。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/04/ly7nlv/2022-10-29-20-14-19.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;含有钠钾钙镁铝的食物，进入人体之后，在人体的氧化作用下，最终代谢产物呈现碱性。&lt;/p&gt;
&lt;p&gt;另外，大部分的水果，例如柠檬、橙子、苹果这种的，吃起来是酸的，而实际上他们是碱性食物。&lt;/p&gt;
&lt;p&gt;食物分类表&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;项目&lt;/th&gt;
          &lt;th&gt;举例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;强酸性食物&lt;/td&gt;
          &lt;td&gt;牛肉、猪肉、鸡肉、金枪鱼、牡蛎、比目鱼、奶酪、米、麦、面包、酒类、花生、核桃、糖、饼干、啤酒等&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;弱酸性食物&lt;/td&gt;
          &lt;td&gt;火腿、鸡蛋、龙虾、章鱼、鱿鱼、荞麦、奶油、豌豆、鳗鱼、河鱼、巧克力、葱、空心粉、炸豆腐等&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;强碱性食物&lt;/td&gt;
          &lt;td&gt;茶、白菜、柿子、黄瓜、胡萝卜、菠菜、卷心菜、生菜、芋头、海带、柑橘、无花果、西瓜、葡萄、板栗、咖啡、葡萄酒等&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;弱碱性食物&lt;/td&gt;
          &lt;td&gt;豆腐、豌豆、大豆、绿豆、竹笋、马铃薯、香菇、蘑菇、油菜、南瓜、芹菜、番薯、莲藕、洋葱、茄子、萝卜、牛奶、苹果、梨、香蕉、樱桃等&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>代码增肥赋</title>
      <link>https://wdd.js.org/posts/2020/03/wyeo4w/</link>
      <pubDate>Tue, 24 Mar 2020 13:42:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/03/wyeo4w/</guid>
      <description>&lt;p&gt;大学，编程之师作业，曰：xxx功能，至少代码三千行。&lt;/p&gt;
&lt;p&gt;室友呕心沥血，废寝忘食，东拼西凑。奈何凑到代码一千行。&lt;/p&gt;
&lt;p&gt;友不释然，怏怏不乐。求助于我。&lt;/p&gt;
&lt;p&gt;于告知曰：此事易尔！但需可乐两瓶、瓜子两包。&lt;/p&gt;
&lt;p&gt;友悦之，曰：请稍等，片刻回。&lt;/p&gt;
&lt;p&gt;友即回，代码亦成。&lt;/p&gt;
&lt;p&gt;友黯然道：子之功力，无不及也。&lt;/p&gt;
&lt;p&gt;于笑曰：无他，但手熟而。&lt;/p&gt;
&lt;p&gt;多加注释多换行，一不留神三千行。&lt;/p&gt;
&lt;p&gt;😂😂😂😂🤣🤣🤣🤣😅😅😅😅&lt;/p&gt;</description>
    </item>
    <item>
      <title>devicemap  驱动模式修改</title>
      <link>https://wdd.js.org/posts/2020/03/eaikcr/</link>
      <pubDate>Fri, 20 Mar 2020 17:32:30 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/03/eaikcr/</guid>
      <description></description>
    </item>
    <item>
      <title>命令行日志查看神器：lnav</title>
      <link>https://wdd.js.org/posts/2020/03/wikbh8/</link>
      <pubDate>Fri, 13 Mar 2020 21:48:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/03/wikbh8/</guid>
      <description>&lt;p&gt;lnav, 不需要服务端，不需要设置，仍然功能强大到没有朋友。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-45-45.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;速度与性能&#34;&gt;速度与性能&lt;/h1&gt;
&lt;p&gt;lnav是一个可以运行在终端上的日志分析工具。功能非常强大，如果grep和tail等命令无法满足你的需求，或许你可以尝试一下lnav。&lt;/p&gt;
&lt;p&gt;lnav的官方仓库是&lt;a href=&#34;https://github.com/tstack/lnav&#34;&gt;https://github.com/tstack/lnav&lt;/a&gt;，在mac上可以使用 &lt;code&gt;brew install lnav&lt;/code&gt; 命令安装这个命令。&lt;/p&gt;
&lt;p&gt;在我的4C8G的Macbook Pro上，打开一个2.8G的日志文件到渲染出现，需要花费约40s，平均每秒载入超过70MB。载入日志和渲染时，使用了接近100%的CPU。渲染完毕，使用1.2G的内存空间。&lt;/p&gt;
&lt;p&gt;总之呢，这个工具载入日志的速度很快。但是最好不要再生产环境上使用这个命令载入过大的日志文件，否则可能造成系统资源消耗太大的问题。&lt;/p&gt;
&lt;p&gt;在载入2.8G的日志文件后(3200多万行)，过滤时显得非常卡顿，但是查看日志并不卡顿。&lt;/p&gt;
&lt;p&gt;在lnav的搜索关键字，下次打开其他日志时，lnav会自动搜索这个关键词。这是它的Session记录功能，可以使用Ctrl+R重置Session。&lt;/p&gt;
&lt;p&gt;lnav的特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法高亮&lt;/li&gt;
&lt;li&gt;各种过滤条件
&lt;ul&gt;
&lt;li&gt;多关键词过滤&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;各种快捷跳转&lt;/li&gt;
&lt;li&gt;自带统计和可视化功能，比如使用条形图展示单位时间内的报错和日志数量&lt;/li&gt;
&lt;li&gt;自动日志格式检查。支持很多种日志格式&lt;/li&gt;
&lt;li&gt;能够按照时间去过滤日志&lt;/li&gt;
&lt;li&gt;TAB自动补全&lt;/li&gt;
&lt;li&gt;实时操作&lt;/li&gt;
&lt;li&gt;支持SQL语法查日志&lt;/li&gt;
&lt;li&gt;支持文件导出成其他格式&lt;/li&gt;
&lt;li&gt;支持直接打开tar.gz等压缩后的日志文件&lt;/li&gt;
&lt;li&gt;支持很多快捷键&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;x下面是按天的日志统计，灰色是普通日志，黄色是告警日志，红色的错误日志。三种颜色叠加的长度就是总日志。时间跨度单位也是可以调节的。最大跨度是一天，最短跨度是1秒。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-46-14.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;仍然是日志格式&#34;&gt;仍然是日志格式&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-46-21.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;自动日志格式检测&#34;&gt;自动日志格式检测&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;系统日志&lt;/li&gt;
&lt;li&gt;Web服务器访问日志&lt;/li&gt;
&lt;li&gt;报错日志&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;过滤&#34;&gt;过滤&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;可以设置多个过滤规则&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-46-28.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;时间线过滤&#34;&gt;时间线过滤&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;精确时间的日志&lt;/li&gt;
&lt;li&gt;上个小时，下个小时&lt;/li&gt;
&lt;li&gt;上一分钟，下一分钟&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能够按照时间去追踪日志&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-46-35.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;按照时间周期统计&#34;&gt;按照时间周期统计&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;统计每秒出现的错误，告警和总日志的量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-46-41.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;语法高亮&#34;&gt;语法高亮&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-46-47.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;tab键自动补全&#34;&gt;Tab键自动补全&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/03/wikbh8/2022-10-29-20-46-53.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lnav.readthedocs.io/en/latest/&#34;&gt;https://lnav.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;如果你更喜欢GUI工具，那也可以试试&lt;a href=&#34;https://github.com/nickbnf/glogg&#34;&gt;https://github.com/nickbnf/glogg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;后记&#34;&gt;后记&lt;/h1&gt;
&lt;p&gt;最近因为工作需要，每天都会去排查很多的日志文件。我也曾想过装ELK之类的工具，但是我收到是文件。日志文件要转存到ELK中也要花功夫。另外ELK也是非常耗费资源的。ELK部署到一半我就果断放弃了。&lt;/p&gt;
&lt;p&gt;与其南辕北辙，不如回归本质。找些命令行的小工具直接分析日志文件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何烧肉才好吃</title>
      <link>https://wdd.js.org/posts/2020/02/edtzzx/</link>
      <pubDate>Wed, 26 Feb 2020 20:37:52 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/02/edtzzx/</guid>
      <description>&lt;h1 id=&#34;1-选肉&#34;&gt;1. 选肉&lt;/h1&gt;
&lt;p&gt;**猪肉，肥瘦相间的五花肉才最好吃。**精瘦肉吃起来会太柴，太肥的肉会显得太腻。五花肉则刚刚好，不柴也不腻。&lt;/p&gt;
&lt;h1 id=&#34;2-炒干&#34;&gt;2. 炒干&lt;/h1&gt;
&lt;p&gt;烧好的猪肉中如果有生水的味道，则口感不好，而且会显得肉不够熟。&lt;/p&gt;
&lt;h1 id=&#34;3-具体步骤&#34;&gt;3. 具体步骤&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;五花肉洗净，切片。放入干净的炒锅中，然后开火烧&lt;/li&gt;
&lt;li&gt;将五花肉的水分烧干，并且冒油，肉面发黄&lt;/li&gt;
&lt;li&gt;放入姜葱蒜，小米椒，加入生抽，料酒，食盐爆炒。如果猪油比较少，则可以放入适量食用油&lt;/li&gt;
&lt;li&gt;然后可以按需加入蔬菜。例如花菜、或者芹菜、或者小青椒&lt;/li&gt;
&lt;li&gt;炒到蔬菜9成熟，然后出锅&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>我的数据可视化处理过程</title>
      <link>https://wdd.js.org/posts/2020/02/mrgkvf/</link>
      <pubDate>Sun, 16 Feb 2020 14:55:15 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/02/mrgkvf/</guid>
      <description>&lt;h1 id=&#34;数据规整&#34;&gt;数据规整&lt;/h1&gt;
&lt;p&gt;我的数据来源一般都是来自于日志文件，不同的日志文件格式可能都不相同。所以第一步就是把数据抽取出来，并且格式化。&lt;/p&gt;
&lt;p&gt;一般情况下我会用grep或者awk进行初步的整理。如果shell脚本处理不太方便，通常我会写个js脚本。&lt;/p&gt;
&lt;p&gt;Node.js的readline可以实现按行取出。处理过后的输出依然是写文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readline&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readline&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dayjs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dayjs&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fileName&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data.log&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;batch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dayjs&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MMDDHHmmss&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dist&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;createWriteStream&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fileName&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.out`&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rl&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;readline&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;createInterface&lt;/span&gt;({
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;createReadStream&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;fileName&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rl&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;handlerLine&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;handlerLine&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;line&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;line&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;split&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dayjs&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`2020-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;valueOf&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`rtpproxy,tag=b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;batch&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; socket=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,mem=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;000000\n`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;dist&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出的文件格式如下，至于为什么是这种格式，且看下文分晓。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rtpproxy&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;tag&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;b0216014954&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;691&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;mem&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3106936&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1581477499000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rtpproxy&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;tag&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;b0216014954&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;615&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;mem&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3109328&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1581477648000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rtpproxy&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;tag&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;b0216014954&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;669&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;mem&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3113764&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1581477901000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rtpproxy&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;tag&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;b0216014954&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;701&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;mem&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3114820&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1581477961000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;数据导入&#34;&gt;数据导入&lt;/h1&gt;
&lt;p&gt;以前我都会把数据规整后的输出写成一个JSON文件，然后写html页面，引入Echarts库，进行数据可视化。&lt;/p&gt;
&lt;p&gt;但是这种方式过于繁琐，每次都要写个Echars的Options。&lt;/p&gt;
&lt;p&gt;所以我想，如果把数据写入influxdb，然后用grafana去做可视化，那岂不是十分方便。&lt;/p&gt;
&lt;p&gt;所以，我们要把数据导入influxdb。&lt;/p&gt;
&lt;h1 id=&#34;启动influxdb-grafana&#34;&gt;启动influxdb grafana&lt;/h1&gt;
&lt;p&gt;下面是一个Makefile， 用来启动容器。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;make create-network 用来创建两个容器的网络，这样grafana就可以通过容器名访问influxdb了。&lt;/li&gt;
&lt;li&gt;make run-influxdb 启动influxdb，其中8086端口是influxdb对外提供服务的端口&lt;/li&gt;
&lt;li&gt;make run-grafana 启动grafana, 其中3000端口是grafana对外提供服务的端口&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;run-influxdb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	docker run -d -p 8083:8083 -p 8086:8086 --network b2 --name influxdb  influxdb:latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;run-grafana&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	docker run -d --name grafana --network b2  -p 3000:3000 grafana/grafana
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;create-network&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	docker network create -d bridge --ip-range&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;192.168.1.0/24 --gateway&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;192.168.1.1 --subnet&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;192.168.1.0/24 b2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;接着你打开localhost:3000端口，输入默认的用户名密码 admin/amdin来登录&lt;/p&gt;</description>
    </item>
    <item>
      <title>故障的特征分析方法</title>
      <link>https://wdd.js.org/posts/2020/02/rx59i2/</link>
      <pubDate>Fri, 14 Feb 2020 20:08:17 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/02/rx59i2/</guid>
      <description>&lt;h1 id=&#34;特征维度&#34;&gt;特征维度&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;特征项&lt;/th&gt;
          &lt;th&gt;集中&lt;/th&gt;
          &lt;th&gt;无规律&lt;/th&gt;
          &lt;th&gt;周期性&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;时间&lt;/td&gt;
          &lt;td&gt;集中在某个时间点发生&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;按固定时间间隔发生&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;空间&lt;/td&gt;
          &lt;td&gt;集中在某个空间发生&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;人物&lt;/td&gt;
          &lt;td&gt;集中在某个人物身上发生&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    <item>
      <title>我走过的nginx反向代理的坑</title>
      <link>https://wdd.js.org/posts/2020/02/ngse8g/</link>
      <pubDate>Thu, 13 Feb 2020 21:21:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/02/ngse8g/</guid>
      <description>&lt;p&gt;下文的论述都以下面的配置为例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;location ^~ /p/security &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  rewrite /p/security/&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;.*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; /security/$1  break;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  proxy_pass         http://security:8080;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  proxy_redirect     off;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  proxy_set_header   Host $host;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  add_header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Access-Control-Allow-Origin&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt; always;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  add_header &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Access-Control-Allow-Credentials&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt; always;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;如果dns无法解析，nginx则无法启动&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;security如果无法解析，那么nginx则无法启动&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DNS缓存问题：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;nginx启动时，如果将security dns解析为1.2.3.4。如果security的ip地址变了。nginx不会自动解析新的ip地址，导致反向代理报错504。&lt;/li&gt;
&lt;li&gt;反向代理的DNS缓存问题务必重视&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨域头配置的always&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;反向代理一般都是希望允许跨域的。如果不加always，那么只会对成功的请求加跨域头，失败的请求则不会。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于**&amp;lsquo;Access-Control-Allow-Origin&amp;rsquo; &amp;lsquo;*&amp;rsquo;，如果后端服务本身就带有这个头，那么如果你在nginx中再添加这个头，就会在浏览器中遇到下面的报错。而解决办法就是不要在nginx中设置这个头。**&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Access to fetch at &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://192.168.40.107:31088/p/security/v2/login&amp;#39;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;from origin &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://localhost:5000&amp;#39;&lt;/span&gt; has been blocked by CORS policy:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Response to preflight request doesn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t pass access control check: 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;The &amp;#39;&lt;/span&gt;Access-Control-Allow-Origin&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; header contains multiple values &amp;#39;&lt;/span&gt;*, *&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;but only one is allowed. Have the server send the header with a valid value, 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;or, if an opaque response serves your needs, set the request&amp;#39;&lt;/span&gt;s mode to 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;no-cors&amp;#39;&lt;/span&gt; to fetch the resource with CORS disabled.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考链接&#34;&gt;参考链接&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://nginx.org/en/docs/http/ngx_http_headers_module.html&#34;&gt;http://nginx.org/en/docs/http/ngx_http_headers_module.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.hxs.biz/html/20180425122255.html&#34;&gt;http://www.hxs.biz/html/20180425122255.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/xiojing825/article/details/83383524&#34;&gt;https://blog.csdn.net/xiojing825/article/details/83383524&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/1470375&#34;&gt;https://cloud.tencent.com/developer/article/1470375&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/bbg221/article/details/79886979&#34;&gt;https://blog.csdn.net/bbg221/article/details/79886979&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>kindle阅读器的寿命</title>
      <link>https://wdd.js.org/posts/2020/02/amkcs2/</link>
      <pubDate>Tue, 04 Feb 2020 09:12:29 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/02/amkcs2/</guid>
      <description>&lt;p&gt;2018年1月26日，我在京东上买了一个Kindle Paperwhite, 距离今天，大概已经2年多一点了。&lt;/p&gt;
&lt;p&gt;我是一个重度读者，每天都会花上一些时间去阅读。最近两天发现，本来可以连续两周不用充电的kindle。基本上现在是电量以每天50%的速度减少。或许，2年，就是kindle的寿命。&lt;/p&gt;
&lt;p&gt;刚开始读书总觉得没有什么进度，后来我就喜欢把每天读书的进度给记录下来。这样做的好处是能够督促我不要偷懒，&lt;/p&gt;
&lt;p&gt;我读书有个习惯，每天以至少1%的进度去读一本书，并且我会将进度记录下来。基本上，我每天会读7-8本书的1%。&lt;/p&gt;
&lt;p&gt;两年时间内我读过的书，要比我从小学到大学读过的书都要多。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2020/02/amkcs2/2022-10-29-19-37-57.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>论禹三过家门而不入的真实原因</title>
      <link>https://wdd.js.org/posts/2020/01/encss4/</link>
      <pubDate>Thu, 09 Jan 2020 13:43:47 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2020/01/encss4/</guid>
      <description>&lt;p&gt;最早听说“三过家门而不入”，是说禹治水大公无私，路过家门都没有回家。&lt;/p&gt;
&lt;p&gt;最近看到史记，发现这句话原本是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;禹伤先人父鲧(发音和滚相同)功之不成受诛，乃劳身焦思，居外十三年，过家门不敢入&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;ldquo;三过家门而不入&amp;quot;这个短语中, 与原文少一个“敢”字，少了一个字，含义差距很大。&lt;/p&gt;
&lt;p&gt;没有敢字，说明是自己主动的。加上敢字，则会让人思考。&lt;strong&gt;禹为什么不敢回家？他在怕什么呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里就需要提到禹的父亲鲧。&lt;/p&gt;
&lt;p&gt;鲧治水九年，没有把水治理好。在舜巡视的时候，被赐死在羽山。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;舜登用，摄行天子之政，巡狩。行视鲧之治水无状，乃殛（发音和即相同）鲧于羽山以死&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;所以，如果禹治不好水，你想禹的下场是什么？&lt;/p&gt;</description>
    </item>
    <item>
      <title>进程实战</title>
      <link>https://wdd.js.org/posts/2019/12/drkxqu/</link>
      <pubDate>Wed, 18 Dec 2019 09:10:04 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/12/drkxqu/</guid>
      <description></description>
    </item>
    <item>
      <title>docker slim</title>
      <link>https://wdd.js.org/posts/2019/12/caytlk/</link>
      <pubDate>Sat, 14 Dec 2019 11:32:27 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/12/caytlk/</guid>
      <description></description>
    </item>
    <item>
      <title>wifi工作模式测试</title>
      <link>https://wdd.js.org/posts/2019/12/mgyw98/</link>
      <pubDate>Thu, 12 Dec 2019 10:11:47 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/12/mgyw98/</guid>
      <description>&lt;p&gt;路由器无线网络的模式有11b only ,11g only, 11n only,11bg mixed,11bgn mixed&lt;/p&gt;
&lt;p&gt;11b：就是11M &lt;!-- raw HTML omitted --&gt;11g：就是54M &lt;!-- raw HTML omitted --&gt;11n：就是150M或者300M &lt;!-- raw HTML omitted --&gt;only：在此模式下，频道仅使用 802.11b标准&lt;!-- raw HTML omitted --&gt;mixed：支持混合 802.11b 和 802.11g 装置&lt;/p&gt;
&lt;p&gt;修改路由器工作模式后，手机连接wifi，然后用腾讯手机管家对WiFi测速&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;工作模式&lt;/th&gt;
          &lt;th&gt;下载速度&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;11b&lt;/td&gt;
          &lt;td&gt;200kb/s&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;11g&lt;/td&gt;
          &lt;td&gt;400kb/s&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;11n&lt;/td&gt;
          &lt;td&gt;1.1MB/s&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;11bgn mixed&lt;/td&gt;
          &lt;td&gt;2.06MB/s&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;所以，选择11bgn是个不错的选择。&lt;/p&gt;</description>
    </item>
    <item>
      <title>influxdb时间精度到秒</title>
      <link>https://wdd.js.org/posts/2019/12/nolg61/</link>
      <pubDate>Wed, 11 Dec 2019 17:48:20 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/12/nolg61/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;var&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;var&lt;/span&gt; t1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:13:06.078545239Z&amp;#34;&lt;/span&gt;,153&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:14:06.087484224Z&amp;#34;&lt;/span&gt;,118&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:15:07.723571286Z&amp;#34;&lt;/span&gt;,198&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:16:09.534879791Z&amp;#34;&lt;/span&gt;,249&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;var&lt;/span&gt; t2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:13:06Z&amp;#34;&lt;/span&gt;,153&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:14:06Z&amp;#34;&lt;/span&gt;,118&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:15:07Z&amp;#34;&lt;/span&gt;,198&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-12-11T09:16:09Z&amp;#34;&lt;/span&gt;,249&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;var&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t1.map&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;item&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        value: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;item&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, item&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;option &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        text: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;动态数据 + 时间坐标轴&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tooltip: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        trigger: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;axis&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xAxis: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    yAxis: &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    series: &lt;span style=&#34;color:#f92672&#34;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;模拟数据&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        showSymbol: false,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hoverAnimation: false,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        data: data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;数据集t1时间精度到秒，并且带9位小数&lt;/li&gt;
&lt;li&gt;数据集t2时间精确到秒，不带小数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;t1的绘线出现往回拐，明显有问题。不知道这是不是echars的bug&lt;/p&gt;</description>
    </item>
    <item>
      <title>influxdb HTTP 接口学习</title>
      <link>https://wdd.js.org/posts/2019/12/pv5xgz/</link>
      <pubDate>Thu, 05 Dec 2019 11:12:33 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/12/pv5xgz/</guid>
      <description>&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;h1 id=&#34;查询某个字段&#34;&gt;查询某个字段&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;q&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; real_used_size &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; opensips &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt;  time &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2019-12-05T00:10:00Z&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;正常查询结果，下面是例子，和上面的sql没有关系。&lt;/p&gt;
&lt;p&gt;:::warning
时间必须用单引号括起来，不能用双引号，格式也必须是YYYY-MM-DDTHH:MM:SSZ
:::&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;results&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;statement_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;series&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cpu_load_short&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;columns&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;values&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2015-01-29T21:55:43.702900257Z&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2015-01-29T21:55:43.702900257Z&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2015-06-11T20:46:02Z&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果有报错，数组项中的某一个会有error属性，值为报错原因&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;results&amp;#34;&lt;/span&gt;:[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;statement_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;invalid operation: time and *influxql.StringLiteral are not compatible&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;批次查询&#34;&gt;批次查询&lt;/h1&gt;
&lt;p&gt;语句之间用分号隔开&lt;/p&gt;</description>
    </item>
    <item>
      <title>登徒子好色赋</title>
      <link>https://wdd.js.org/posts/2019/11/wkyqnl/</link>
      <pubDate>Wed, 27 Nov 2019 13:37:31 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/wkyqnl/</guid>
      <description>&lt;h1 id=&#34;原文&#34;&gt;原文&lt;/h1&gt;
&lt;p&gt;大夫登徒子侍于楚王，短宋玉曰：&amp;ldquo;玉为人体貌闲丽，口多微辞，又性好色。愿王勿与出入后宫。&amp;rdquo;　&lt;/p&gt;
&lt;p&gt;王以登徒子之言问宋玉。&lt;/p&gt;
&lt;p&gt;玉曰：&amp;ldquo;体貌闲丽，所受于天也；口多微辞，所学于师也；至于好色，臣无有也。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;王曰：&amp;ldquo;子不好色，亦有说乎？有说则止，无说则退。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;玉曰：&amp;ldquo;天下之佳人莫若楚国，楚国之丽者莫若臣里，臣里之美者莫若臣东家之子。东家之子，增之一分则太长，减之一分则太短 ；著粉则太白，施朱则太赤；眉如翠羽，肌如白雪；腰如束素，齿如含贝；嫣然一笑，惑阳城，迷下蔡。然此女登墙窥臣三年，至今未许也。登徒子则不然：其妻蓬头挛耳，齞唇历齿，旁行踽偻，又疥且痔。登徒子悦之，使有五子。王孰察之，谁为好色者矣。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;是时，秦章华大夫在侧，因进而称曰：&amp;ldquo;今夫宋玉盛称邻之女，以为美色，愚乱之邪；臣自以为守德，谓不如彼矣。且夫南楚穷巷之妾，焉足为大王言乎?若臣之陋，目所曾睹者，未敢云也。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;王曰：&amp;ldquo;试为寡人说之。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;大夫曰：&amp;ldquo;唯唯。臣少曾远游，周览九土，足历五都。出咸阳、熙邯郸，从容郑、卫、溱 、洧之间 。是时向春之末 ，迎夏之阳，鸧鹒喈喈，群女出桑。此郊之姝，华色含光，体美容冶，不待饰装。臣观其丽者，因称诗曰：&amp;lsquo;遵大路兮揽子祛&amp;rsquo;。赠以芳华辞甚妙。于是处子怳若有望而不来，忽若有来而不见。意密体疏，俯仰异观；含喜微笑，窃视流眄。复称诗曰：&amp;lsquo;寐春风兮发鲜荣，洁斋俟兮惠音声，赠我如此兮不如无生。&amp;lsquo;因迁延而辞避。盖徒以微辞相感动。精神相依凭；目欲其颜，心顾其义，扬《诗》守礼，终不过差，故足称也。&amp;rdquo;&lt;/p&gt;
&lt;p&gt;于是楚王称善，宋玉遂不退。&lt;/p&gt;
&lt;h1 id=&#34;我来翻译&#34;&gt;我来翻译&lt;/h1&gt;
&lt;p&gt;士大夫登徒先生站在楚王身旁，评论宋玉，说：宋玉这小伙子，长得很帅，但是非常八卦，而且好色，建议您不要让他进入后宫。&lt;/p&gt;
&lt;p&gt;楚王用登徒先生的话问宋玉。&lt;/p&gt;
&lt;p&gt;宋玉争辩说：我长得帅，这是父母生得好。我比较八卦，是因为我学识广博，口才好。至于说我好色，那是没有的事情。&lt;/p&gt;
&lt;p&gt;宋玉接着说：“天下的美女啊，没有比得上楚国的。楚国的美女，没有比得上臣里这个地方的。臣里的美女，没有比得上我邻居家的那个姑娘。”&lt;/p&gt;
&lt;p&gt;“那个姑娘，长得再高一点就太高了，长得再低一点就太低了。擦了粉底的话就太白，擦了腮红就太红了。眉毛像黑色的羽毛，肌肤像白雪一样。腰非常细，牙齿像贝壳一样白皙。”&lt;/p&gt;
&lt;p&gt;“她一笑，阳城和下蔡这两个地方的所有男人，都会被迷住。”&lt;/p&gt;
&lt;p&gt;“然而这个美女，天天登上我家的墙头偷窥我三年了，我至今都没有答应她让她作为我女朋友。”&lt;/p&gt;
&lt;p&gt;“登徒先生则不然，他老婆蓬头垢面、兔唇龅牙、走路佝偻、还长痔疮。但是登徒先生却非常喜欢她，和她生了5个孩子。大王你仔细想想，谁才是真正的好色？”&lt;/p&gt;</description>
    </item>
    <item>
      <title>洛神赋</title>
      <link>https://wdd.js.org/posts/2019/11/ck3yzp/</link>
      <pubDate>Wed, 27 Nov 2019 13:32:53 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/ck3yzp/</guid>
      <description>&lt;p&gt;黄初三年，余朝京师，还济洛川。古人有言：斯水之神，名曰宓妃。感宋玉对楚王神女之事，遂作斯赋。其词曰：&lt;/p&gt;
&lt;p&gt; 余从京域，言归东藩，背伊阙，越轘辕，经通谷，陵景山。日既西倾，车殆马烦。尔乃税驾乎蘅皋，秣驷乎芝田，容与乎阳林，流眄乎洛川。于是精移神骇，忽焉思散。俯则未察，仰以殊观。睹一丽人，于岩之畔。乃援御者而告之曰：“尔有觌于彼者乎？彼何人斯，若此之艳也！”御者对曰：“臣闻河洛之神，名曰宓妃。然则君王之所见，无乃是乎！其状若何？臣愿闻之。”&lt;/p&gt;
&lt;p&gt; 余告之曰：其形也，&lt;strong&gt;翩若惊鸿，婉若游龙&lt;/strong&gt;。荣曜秋菊，华茂春松。髣髴兮若轻云之蔽月，飘飖兮若流风之回雪。远而望之，皎若太阳升朝霞；迫而察之，灼若芙蕖出渌波。秾纤得中，修短合度。肩若削成，腰如约素。延颈秀项，皓质呈露。芳泽无加，铅华弗御。云髻峨峨，修眉联娟。丹唇外朗，皓齿内鲜。明眸善睐，靥辅承权。瓌姿艳逸，仪静体闲。柔情绰态，媚于语言。奇服旷世，骨像应图。披罗衣之璀粲兮，珥瑶碧之华琚。戴金翠之首饰，缀明珠以耀躯。践远游之文履，曳雾绡之轻裾。微幽兰之芳蔼兮，步踟蹰于山隅。于是忽焉纵体，以遨以嬉。左倚采旄，右荫桂旗。攘皓腕于神浒兮，采湍濑之玄芝。&lt;/p&gt;
&lt;p&gt; 余情悦其淑美兮，心振荡而不怡。无良媒以接欢兮，托微波而通辞。愿诚素之先达兮，解玉佩以要之。嗟佳人之信修，羌习礼而明诗。抗琼珶以和予兮，指潜渊而为期。执眷眷之款实兮，惧斯灵之我欺。感交甫之弃言兮，怅犹豫而狐疑。收和颜而静志兮，申礼防以自持。&lt;/p&gt;
&lt;p&gt; 于是洛灵感焉，徙倚彷徨。神光离合，乍阴乍阳。竦轻躯以鹤立，若将飞而未翔。践椒途之郁烈，步蘅薄而流芳。超长吟以永慕兮，声哀厉而弥长。尔乃众灵杂沓，命俦啸侣。或戏清流，或翔神渚，或采明珠，或拾翠羽。从南湘之二妃，携汉滨之游女。叹匏瓜之无匹兮，咏牵牛之独处。扬轻袿之猗靡兮，翳修袖以延伫。体迅飞凫，飘忽若神。**凌波微步，罗袜生尘。**动无常则，若危若安；进止难期，若往若还。转眄流精，光润玉颜。含辞未吐，气若幽兰。华容婀娜，令我忘餐。&lt;/p&gt;
&lt;p&gt; 于是屏翳收风，川后静波。冯夷鸣鼓，女娲清歌。腾文鱼以警乘，鸣玉銮以偕逝。六龙俨其齐首，载云车之容裔。鲸鲵踊而夹毂，水禽翔而为卫。于是越北沚，过南冈，纡素领，回清扬。动朱唇以徐言，陈交接之大纲。恨人神之道殊兮，怨盛年之莫当。抗罗袂以掩涕兮，泪流襟之浪浪。悼良会之永绝兮，哀一逝而异乡。无微情以效爱兮，献江南之明珰。虽潜处于太阴，长寄心于君王。忽不悟其所舍，怅神宵而蔽光。&lt;/p&gt;
&lt;p&gt; 于是背下陵高，足往神留。遗情想像，顾望怀愁。冀灵体之复形，御轻舟而上溯。浮长川而忘反，思绵绵而增慕。夜耿耿而不寐，沾繁霜而至曙。命仆夫而就驾，吾将归乎东路。揽騑辔以抗策，怅盘桓而不能去。&lt;/p&gt;</description>
    </item>
    <item>
      <title>割韭菜</title>
      <link>https://wdd.js.org/posts/2019/11/blqt1k/</link>
      <pubDate>Wed, 27 Nov 2019 13:29:16 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/blqt1k/</guid>
      <description>&lt;p&gt;有两种选择，要么被忽悠成韭菜被别人割，要么割别热的韭菜。&lt;/p&gt;</description>
    </item>
    <item>
      <title>朝三暮四</title>
      <link>https://wdd.js.org/posts/2019/11/urkvnz/</link>
      <pubDate>Wed, 27 Nov 2019 13:19:07 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/urkvnz/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;“狙公赋芧，曰：&amp;lsquo;朝三而暮四。&amp;lsquo;众狙皆怒。曰：&amp;lsquo;然则朝四而暮三。&amp;lsquo;众狙皆悦。名实未亏而喜怒为用，亦因是也。《庄子—齐物论》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;有个人养猴子，每天早上喂给每个猴子三颗枣，下午每个猴子喂四颗枣。&lt;/p&gt;
&lt;p&gt;有一天他突然想搞点事情，就对猴子说：从今以后，每天早上每人给你们四颗枣，下午每人给你们三颗枣，你们说好不好？&lt;/p&gt;
&lt;p&gt;猴子们上蹿下跳，怒发冲冠，生气的说：不行！不行！那怎么行呢？&lt;/p&gt;
&lt;p&gt;养猴子人摆摆手，和气的说：好吧，好吧，还按照以前方式来。&lt;/p&gt;
&lt;p&gt;猴子们很满意，笼子里充满祥和的空气~&lt;/p&gt;</description>
    </item>
    <item>
      <title>众生鱼肉</title>
      <link>https://wdd.js.org/posts/2019/11/kug5fo/</link>
      <pubDate>Wed, 27 Nov 2019 13:17:10 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/kug5fo/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;冷风如刀，以大地为砧板，视众生为鱼肉。万里飞雪，将苍穹作洪炉，溶万物为白银
《多情剑客无情剑》&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>第三种生存</title>
      <link>https://wdd.js.org/posts/2019/11/gn4aak/</link>
      <pubDate>Wed, 27 Nov 2019 13:02:14 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/gn4aak/</guid>
      <description>&lt;p&gt;我以前看过王志刚的一本书《第三种生存》，觉得蛮有意思的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;依赖于权利阶层。例如当官&lt;/li&gt;
&lt;li&gt;依赖于财富阶层。例如打工&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大部分人其实都在依赖权利阶层或者财富阶层在生存，能够跳出的人这两种生存方式的，称之为第三种生存。&lt;/p&gt;
&lt;p&gt;第三种生存方式，是讲自己打造成某个领域中专家级别的人物。&lt;/p&gt;
&lt;p&gt;称为专家，称为大多数中的少数人。物以稀为贵，人亦如此。&lt;/p&gt;</description>
    </item>
    <item>
      <title>所有的古镇都是一个样[todo]</title>
      <link>https://wdd.js.org/posts/2019/11/bhbmum/</link>
      <pubDate>Sat, 23 Nov 2019 12:12:58 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/bhbmum/</guid>
      <description></description>
    </item>
    <item>
      <title>买了语雀会员是怎样体验？</title>
      <link>https://wdd.js.org/posts/2019/11/gonmzq/</link>
      <pubDate>Sat, 23 Nov 2019 11:55:06 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/gonmzq/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/11/gonmzq/2022-10-29-19-52-43.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;今天打开语雀，发现已经有了会员功能。说实在的，相比普通用户，会员的优势并不大。除非你是哪种重度文字控患者，10个知识库并不够你用了。&lt;/p&gt;
&lt;p&gt;我在出现会员服务之前，已经有了多于10个知识库。&lt;/p&gt;
&lt;p&gt;相比于免费服务，我更喜欢付费的服务。&lt;strong&gt;免费的服务永远是最贵的服务。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;很多人，可以买爱奇艺的会员、优酷视频、腾讯视频、京东会员，但是往往对于能够真正提升自己能力的投资，往往安于免费，不忍付出。&lt;/p&gt;
&lt;p&gt;除非是动辄几千的会员，我会考虑自己是否真正需要。一百左右的年费会员，在上海，也就是喝三四杯奶茶的价钱。&lt;/p&gt;
&lt;p&gt;所以，我就买了会员。&lt;/p&gt;
&lt;p&gt;买了会员有什么感觉，感觉我可能会多创建几个知识库吧。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/11/gonmzq/2022-10-29-19-52-50.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mysql计划任务：Event Scheduler</title>
      <link>https://wdd.js.org/posts/2019/11/xss1vk/</link>
      <pubDate>Wed, 13 Nov 2019 13:09:46 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/xss1vk/</guid>
      <description>&lt;p&gt;从MySql5.1.6增加计划任务功能&lt;/p&gt;
&lt;h1 id=&#34;判断计划任务是否启动&#34;&gt;判断计划任务是否启动&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; VARIABLES &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;event_scheduler&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;开启计划任务&#34;&gt;开启计划任务&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; event_scheduler&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;创建计划任务&#34;&gt;创建计划任务&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;create&lt;/span&gt; test_e &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; scheduler &lt;span style=&#34;color:#66d9ef&#34;&gt;every&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;day&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;sql&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;修改计划任务&#34;&gt;修改计划任务&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;临时关闭事件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; EVENT e_test DISABLE;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;开启事件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; EVENT e_test ENABLE;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;将每天清空&lt;/span&gt;test表改为5天清空一次
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; EVENT e_test &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; SCHEDULE &lt;span style=&#34;color:#66d9ef&#34;&gt;EVERY&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DAY&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;删除计划任务&#34;&gt;删除计划任务&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;drop&lt;/span&gt; event e_test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>打印易于提取关键词的日志</title>
      <link>https://wdd.js.org/posts/2019/11/xa694b/</link>
      <pubDate>Fri, 01 Nov 2019 09:30:37 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/xa694b/</guid>
      <description>&lt;p&gt;下面的日志是打印出socket.io断开的信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// bad
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`socket.io &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;handshake&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;agentId&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; disconnect. reason: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;reason&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是这条日志不利于关键词搜索，如果搜disconnect，那么可能很多地方都有这个关键词。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// good
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`socket.io disconnect &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;handshake&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;agentId&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; reason: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;reason&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// bad
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`socket.io &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;handshake&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;agentId&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; disconnect. reason: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;reason&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;总结经验&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多个关键词位置要靠前&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多个关键词要集中&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;日志日志要标记来自特殊的用于，比如说，来自&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Linux私房菜</title>
      <link>https://wdd.js.org/posts/2019/11/qy6ugu/</link>
      <pubDate>Fri, 01 Nov 2019 08:06:51 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/11/qy6ugu/</guid>
      <description>&lt;h1 id=&#34;五大单元&#34;&gt; 五大单元&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt; 输入单元&lt;/li&gt;
&lt;li&gt;CPU：算术，逻辑，内存&lt;/li&gt;
&lt;li&gt;输出单元&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;指令集&#34;&gt; 指令集&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt; 精简指令集&lt;/li&gt;
&lt;li&gt;福仔指令集&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>带你领略镜花缘中的神奇国度</title>
      <link>https://wdd.js.org/posts/2019/10/zfn92c/</link>
      <pubDate>Sun, 27 Oct 2019 19:43:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/zfn92c/</guid>
      <description>&lt;p&gt;《镜花缘》是清代李汝珍写的一部长篇小说，小说前半部分是主角游历海外各国的清代经历，有点像日本动漫海贼王。后半部分比较无趣，略过不提。&lt;/p&gt;
&lt;p&gt;单讲小说的前半部分，小说发生在唐代，主角叫做唐敖，本来科举中了探花，但是因为他和讨伐武则天的徐敬业有结拜之交，被人告发，遂革去了探花，降为秀才。&lt;/p&gt;
&lt;p&gt;唐敖心灰意冷，煮熟的鸭子就这么飞了。于是决定舍弃功名，游历山水。正好他的妹夫，林之洋是个跑远洋贸易的。&lt;/p&gt;
&lt;p&gt;唐敖正好搭上了妹夫的顺风船，环游世界之旅就这么开始了！！&lt;/p&gt;
&lt;h1 id=&#34;1-君子国&#34;&gt;1. 君子国&lt;/h1&gt;
&lt;p&gt;君子国讲究好让不正，惟善为宝。说的是这个国家的人啊，素质非常高，高到什么地步呢？高到有点反人类。&lt;/p&gt;
&lt;p&gt;下面的一个场景，是我从小说中简化的一个场景：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;买家说：老板，你的东西质量真好，价格却那么低，如果我买了去，我内心会不安的。跪求你抬高些价格，我才买，不然我就不买了。&lt;/p&gt;
&lt;p&gt;店铺老板说：我要的价格这么高，已经觉得过意不去了，如果你还让我涨价，还你还是去别的地方买东西吧。&lt;/p&gt;
&lt;p&gt;买家说：既然你不愿意涨价，那也行，我还按照这个价格买你的东西，但是我只拿一半东西走。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;是不是很反人类，从来只见过买家想要压低价格的，还未听说过买家想抬高价格的。&lt;/p&gt;
&lt;h1 id=&#34;2-大人国&#34;&gt;2. 大人国&lt;/h1&gt;
&lt;p&gt;此处的大人国，并不是说他们的身材巨大，而是形容他们国人的品格高大。他们都是争相做善事，不作恶事。&lt;/p&gt;
&lt;p&gt;除此以外，在他们的国家，很容易区分好人和坏人。他们所有的人脚下都踩着云。光明正大的人，脚下是彩云；经常做坏事的人，脚下是黑云。&lt;/p&gt;
&lt;p&gt;云的色彩会随着人的品行而变化，坏人如果能够向善，足下也会产生彩云。&lt;/p&gt;
&lt;p&gt;有些大官人，不希望别人看到他们脚下云的颜色，所以会用布裹上，但是这样做岂不是掩耳盗铃吗？&lt;/p&gt;
&lt;h1 id=&#34;3-黑齿国&#34;&gt; 3. 黑齿国&lt;/h1&gt;
&lt;p&gt;这个国家的人全身通黑，连牙齿都是黑的。我怀疑作者是不是去过非洲，但是非洲人的牙齿往往都是白色的。&lt;/p&gt;
&lt;p&gt;但是人不可貌相，黑齿国的人非常喜欢读书，个个都是满腹经纶。而且这个地方的小偷，只会偷书，却不偷金银宝物。&lt;/p&gt;
&lt;h1 id=&#34;4-劳民国&#34;&gt; 4. 劳民国&lt;/h1&gt;
&lt;p&gt;该国的人也是面色墨黑，走路都是摇摇晃晃，终日忙忙碌碌。但是呢，这个国家的人每个都是长寿。&lt;/p&gt;
&lt;h1 id=&#34;5-聂耳国&#34;&gt; 5. 聂耳国&lt;/h1&gt;
&lt;p&gt;聂耳国的耳朵很长，长耳及腰，走路都需要用手去捧着耳朵。更有甚者，耳朵及地。&lt;/p&gt;
&lt;p&gt;除了耳朵长的这个特点之外，有的人耳朵也特别大。据说可以一个耳朵当床垫，一个耳朵当棉被，睡在自己的耳朵里。&lt;/p&gt;
&lt;h1 id=&#34;6-无肠国&#34;&gt; 6. 无肠国&lt;/h1&gt;
&lt;p&gt;这个国家的人都没有肠子，无论吃喝什么东西，都会立即排出体外。所以他们在吃饭之前，都先找好厕所，不然就变成随地大小便了。&lt;/p&gt;
&lt;p&gt;更为恶心的是，因为他们吃的快也拉的快，很多食物都没有消化完全。所以有些人就把拉出来的便便收集起来，再给其他人吃。&lt;/p&gt;
&lt;h1 id=&#34;7-鬼国&#34;&gt; 7. 鬼国&lt;/h1&gt;
&lt;p&gt;国人夜晚不睡觉，颠倒白天黑夜，行为似鬼。&lt;/p&gt;
&lt;h1 id=&#34;8-毛民国&#34;&gt; 8. 毛民国&lt;/h1&gt;
&lt;p&gt;国人一身长毛，据说是上一世太为吝啬，一毛不拔。所以阎王让他下一世出生在毛民国，让他们满身长满毛。&lt;/p&gt;
&lt;h1 id=&#34;9-无继国&#34;&gt; 9. 无继国&lt;/h1&gt;
&lt;p&gt;国人从不生育，也没有孩子。而且他们也不区分男女。&lt;/p&gt;
&lt;p&gt;之所以他们国家的人口没有减少，是因为人死后120年之后还会再次复活。&lt;/p&gt;
&lt;p&gt;所以他们都是死了又活，活了有死。&lt;/p&gt;
&lt;h1 id=&#34;10-深目国&#34;&gt; 10. 深目国&lt;/h1&gt;
&lt;p&gt;他们脸上没有眼睛，他们的两个眼睛都长在自己的手掌里。是不是觉得似曾相识呢？火影里面的我爱罗。&lt;/p&gt;</description>
    </item>
    <item>
      <title>接口压力测试</title>
      <link>https://wdd.js.org/posts/2019/10/pbv6ok/</link>
      <pubDate>Fri, 25 Oct 2019 16:12:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/pbv6ok/</guid>
      <description>&lt;h1 id=&#34;ab安装&#34;&gt;ab安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;apt&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;install&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apache2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;utils&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>vox语音转mp3</title>
      <link>https://wdd.js.org/posts/2019/10/nw4wmm/</link>
      <pubDate>Tue, 22 Oct 2019 16:44:31 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/nw4wmm/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;get&lt;/span&gt; install sox libsox&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;fmt&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mp3 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sox &lt;span style=&#34;color:#66d9ef&#34;&gt;input&lt;/span&gt;.vox &lt;span style=&#34;color:#66d9ef&#34;&gt;output&lt;/span&gt;.mp3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;sox支持命令&#34;&gt;sox支持命令&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;➜&lt;/span&gt;  vox sox &lt;span style=&#34;color:#75715e&#34;&gt;--help
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;sox:      SoX v14.&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Usage&lt;/span&gt; summary: [gopts] [[fopts] infile]... [fopts] outfile [effect [effopt]]...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SPECIAL FILENAMES (infile, outfile):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;                        Pipe&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;redirect &lt;span style=&#34;color:#66d9ef&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;output&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;stdin&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;stdout&lt;/span&gt;); may need &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;d, &lt;span style=&#34;color:#75715e&#34;&gt;--default-device     Use the default audio device (where available)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;n, &lt;span style=&#34;color:#75715e&#34;&gt;--null               Use the `null&amp;#39; file handler; e.g. with synth effect
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;p, &lt;span style=&#34;color:#75715e&#34;&gt;--sox-pipe           Alias for `-t sox -&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SPECIAL FILENAMES (infile &lt;span style=&#34;color:#66d9ef&#34;&gt;only&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;|program [options] ...&amp;#34;&lt;/span&gt; Pipe &lt;span style=&#34;color:#66d9ef&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;external&lt;/span&gt; program (&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; supported)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;server&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;file       Use the given URL &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;input&lt;/span&gt; file (&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; supported)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GLOBAL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OPTIONS&lt;/span&gt; (gopts) (can be specified &lt;span style=&#34;color:#66d9ef&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt; point &lt;span style=&#34;color:#66d9ef&#34;&gt;before&lt;/span&gt; the &lt;span style=&#34;color:#66d9ef&#34;&gt;first&lt;/span&gt; effect):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--buffer BYTES           Set the size of all processing buffers (default 8192)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--clobber                Don&amp;#39;t prompt to overwrite output file (default)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--combine concatenate    Concatenate all input files (default for sox, rec)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--combine sequence       Sequence all input files (default for play)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;D, &lt;span style=&#34;color:#75715e&#34;&gt;--no-dither          Don&amp;#39;t dither automatically
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--effects-file FILENAME  File containing effects and options
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;G&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;--guard              Use temporary files to guard against clipping
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;h, &lt;span style=&#34;color:#75715e&#34;&gt;--help               Display version number and usage information
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--help-effect NAME       Show usage of effect NAME, or NAME=all for all
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--help-format NAME       Show info on format NAME, or NAME=all for all
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--i, --info              Behave as soxi(1)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--input-buffer BYTES     Override the input buffer size (default: as --buffer)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--no-clobber             Prompt to overwrite output file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m, &lt;span style=&#34;color:#75715e&#34;&gt;--combine mix        Mix multiple input files (instead of concatenating)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--combine mix-power      Mix to equal power (instead of concatenating)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;M, &lt;span style=&#34;color:#75715e&#34;&gt;--combine merge      Merge multiple input files (instead of concatenating)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--magic                  Use `magic&amp;#39; file-type detection
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--multi-threaded         Enable parallel effects channels processing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--norm                   Guard (see --guard) &amp;amp; normalise
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--play-rate-arg ARG      Default `rate&amp;#39; argument for auto-resample with `play&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--plot gnuplot|octave    Generate script to plot response of filter effect
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;q, &lt;span style=&#34;color:#75715e&#34;&gt;--no-show-progress   Run in quiet mode; opposite of -S
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--replay-gain track|album|off  Default: off (sox, rec), track (play)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;R                       Use &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; random numbers (same &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;each&lt;/span&gt; run &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; SoX)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;S, &lt;span style=&#34;color:#75715e&#34;&gt;--show-progress      Display progress while processing audio data
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--single-threaded        Disable parallel effects channels processing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--temp DIRECTORY         Specify the directory to use for temporary files
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;T, &lt;span style=&#34;color:#75715e&#34;&gt;--combine multiply   Multiply samples of corresponding channels from all
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                         &lt;span style=&#34;color:#66d9ef&#34;&gt;input&lt;/span&gt; files (&lt;span style=&#34;color:#66d9ef&#34;&gt;instead&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; concatenating)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--version                Display version number of SoX and exit
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;V[&lt;span style=&#34;color:#66d9ef&#34;&gt;LEVEL&lt;/span&gt;]                &lt;span style=&#34;color:#66d9ef&#34;&gt;Increment&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; verbosity &lt;span style=&#34;color:#66d9ef&#34;&gt;level&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;); levels:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                           &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;: failure messages
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                           &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;: warnings
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                           &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;: details &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; processing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                           &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;: increasing levels &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; debug messages
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FORMAT &lt;span style=&#34;color:#66d9ef&#34;&gt;OPTIONS&lt;/span&gt; (fopts):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Input&lt;/span&gt; file format &lt;span style=&#34;color:#66d9ef&#34;&gt;options&lt;/span&gt; need &lt;span style=&#34;color:#66d9ef&#34;&gt;only&lt;/span&gt; be supplied &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; files that &lt;span style=&#34;color:#66d9ef&#34;&gt;are&lt;/span&gt; headerless.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Output&lt;/span&gt; files will have the same format &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; the &lt;span style=&#34;color:#66d9ef&#34;&gt;input&lt;/span&gt; file &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; possible &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;not&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;overriden &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;any&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; various means &lt;span style=&#34;color:#66d9ef&#34;&gt;including&lt;/span&gt; providing &lt;span style=&#34;color:#66d9ef&#34;&gt;output&lt;/span&gt; format &lt;span style=&#34;color:#66d9ef&#34;&gt;options&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;v&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--volume FACTOR       Input file volume adjustment factor (real number)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--ignore-length          Ignore input file length given in header; read to EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--type FILETYPE       File type of audio
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;e&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--encoding ENCODING   Set encoding (ENCODING may be one of signed-integer,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                         unsigned&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;integer, floating&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;point, mu&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;law, a&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;law,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                         ima&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;adpcm, ms&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;adpcm, gsm&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;full&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rate)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--bits BITS           Encoded sample size in bits
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;N&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--reverse-nibbles     Encoded nibble-order
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;X&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--reverse-bits        Encoded bit-order
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--endian little|big|swap Encoded byte-order; swap means opposite to default
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;L&lt;span style=&#34;color:#f92672&#34;&gt;/-&lt;/span&gt;B&lt;span style=&#34;color:#f92672&#34;&gt;/-&lt;/span&gt;x                 Short &lt;span style=&#34;color:#66d9ef&#34;&gt;options&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the above
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--channels CHANNELS   Number of channels of audio data; e.g. 2 = stereo
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--rate RATE           Sample rate of audio
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;C&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--compression FACTOR  Compression factor for output format
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--add-comment TEXT       Append output file comment
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--comment TEXT           Specify comment text for the output file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--comment-file FILENAME  File containing comment text for the output file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--no-glob                Don&amp;#39;t `glob&amp;#39; wildcard match the following filename
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AUDIO FILE FORMATS: &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;svx aif aifc aiff aiffc al amb amr&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;nb amr&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;wb anb au avr awb caf cdda cdr cvs cvsd cvu dat dvms f32 f4 f64 f8 fap flac fssd gsm gsrt hcom htk ima ircam la lpc lpc10 lu mat mat4 mat5 maud mp2 mp3 nist ogg paf prc pvf raw s1 s16 s2 s24 s3 s32 s4 s8 sb sd2 sds sf sl sln smp snd sndfile sndr sndt sou sox sph sw txw u1 u16 u2 u24 u3 u32 u4 u8 ub ul uw vms voc vorbis vox w64 wav wavpcm wv wve xa xi
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PLAYLIST FORMATS: m3u pls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AUDIO DEVICE DRIVERS: alsa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EFFECTS: allpass band bandpass bandreject bass bend biquad chorus channels compand contrast dcshift deemph delay dither divide&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; downsample earwax echo echos equalizer fade fir firfit&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; flanger gain highpass hilbert &lt;span style=&#34;color:#66d9ef&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; ladspa loudness lowpass mcompand mixer&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; noiseprof noisered norm oops &lt;span style=&#34;color:#66d9ef&#34;&gt;output&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; overdrive &lt;span style=&#34;color:#66d9ef&#34;&gt;pad&lt;/span&gt; phaser pitch rate remix repeat reverb reverse riaa silence sinc spectrogram speed splice stat stats stretch swap synth tempo treble tremolo &lt;span style=&#34;color:#66d9ef&#34;&gt;trim&lt;/span&gt; upsample vad vol
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Deprecated effect    &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Experimental effect    &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; LibSoX&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;only&lt;/span&gt; effect
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EFFECT &lt;span style=&#34;color:#66d9ef&#34;&gt;OPTIONS&lt;/span&gt; (effopts): effect dependent; see &lt;span style=&#34;color:#75715e&#34;&gt;--help-effect
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://sox.sourceforge.net/sox.html#OPTIONS&#34;&gt;http://sox.sourceforge.net/sox.html#OPTIONS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>MySql索引</title>
      <link>https://wdd.js.org/posts/2019/10/bs9nax/</link>
      <pubDate>Tue, 22 Oct 2019 10:36:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/bs9nax/</guid>
      <description>&lt;p&gt;prd是表名，agent是表中的一个字段，index_agent是索引名&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;create&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;index&lt;/span&gt; index_agent &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; prd(agent) &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;创建索引&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;show&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; prd &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;显示表上有哪些索引&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;drop&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;index&lt;/span&gt; index_agent &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; prd &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;删除索引&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;创建索引的好处是查询速度有极大的提成，坏处是更新记录时，有可能也会更新索引，从而降低性能。&lt;/p&gt;
&lt;p&gt;所以索引比较适合那种只写入，或者查询，但是一般不会更新的数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于v语言: 越是漂亮的语言，越会骗人</title>
      <link>https://wdd.js.org/posts/2019/10/awgyhh/</link>
      <pubDate>Mon, 21 Oct 2019 21:15:29 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/awgyhh/</guid>
      <description>&lt;p&gt;今天逛github trending, 发现榜首有个项目，叫做v语言。&lt;a href=&#34;https://github.com/vlang/v&#34;&gt;https://github.com/vlang/v&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;看了介绍，说这个语言非常牛X，几乎囊括了所有语言的长处。性能、编译耗时、内存使用都是碾压其他语言。&lt;/p&gt;
&lt;p&gt;但是，要记住张无忌娘说过的一句话：&lt;strong&gt;越是漂亮的女人，越会骗人。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每一门语言都是由特定的使用场景，从而则决定了该语言在该场景下解决问题的能力。&lt;/p&gt;
&lt;p&gt;不谈使用场景，而仅仅强调优点，往往是耍流氓。&lt;/p&gt;
&lt;p&gt;你看JavaScript一出生，就是各种问题，但是在浏览器里，JavaScript就是能够一统天下，无人能够掩盖其锋芒。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins 全局变量参考</title>
      <link>https://wdd.js.org/posts/2019/10/ikg19e/</link>
      <pubDate>Tue, 15 Oct 2019 22:34:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/ikg19e/</guid>
      <description>&lt;h1 id=&#34;docker&#34;&gt;docker&lt;/h1&gt;
&lt;p&gt;The docker variable offers convenient access to Docker-related functions from a Pipeline script.&lt;/p&gt;
&lt;p&gt;Methods needing a slave will implicitly run a node {…} block if you have not wrapped them in one. It is a good idea to enclose a block of steps which should all run on the same node in such a block yourself. (If using a Swarm server, or any other specific Docker server, this probably does not matter, but if you are using the default server on localhost it likely will.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Restful API 架构思考</title>
      <link>https://wdd.js.org/posts/2019/10/irl0p4/</link>
      <pubDate>Tue, 15 Oct 2019 22:32:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/irl0p4/</guid>
      <description>&lt;h1 id=&#34;1-什么是rest&#34;&gt;1. 什么是REST?&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;表现层状态转换（REST，英文：Representational State Transfer）是Roy Thomas Fielding博士于2000年在他的博士论文[1] 中提出来的一种万维网软件架构风格，目的是便于不同软件/程序在网络（例如互联网）中互相传递信息。表现层状态转换（REST，英文：Representational State Transfer）是根基于超文本传输协议(HTTP)之上而确定的一组约束和属性，是一种设计提供万维网络服务的软件构建风格。匹配或兼容于这种架构风格(简称为 REST 或 RESTful)的网络服务，允许客户端发出以统一资源标识符访问和操作网络资源的请求，而与预先定义好的无状态操作集一致化。&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%A1%A8%E7%8E%B0%E5%B1%82%E7%8A%B6%E6%80%81%E8%BD%AC%E6%8D%A2&#34;&gt;wikipdeia&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/irl0p4/2022-10-29-20-02-04.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;REST API 不是一个标准或者一个是协议，仅仅是一种风格，一种style。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;RESTful API的简单定义可以轻松解释这个概念。 REST是一种架构风格，RESTful是它的解释。也就是说，如果您的后端服务器具有REST API，并且您（从网站/应用程序）向客户端请求此API，则您的客户端为RESTful。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/irl0p4/2022-10-29-20-02-12.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-rest-api最为重要的约束&#34;&gt;2. REST API最为重要的约束&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Client-Server&lt;/code&gt; 通信只能由客户端单方面发起，表现为请求-响应的形式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Stateless&lt;/code&gt; 通信的会话状态（Session State）应该全部由客户端负责维护&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cache&lt;/code&gt; 响应内容可以在通信链的某处被缓存，以改善网络效率&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Uniform Interface&lt;/code&gt; 通信链的组件之间通过统一的接口相互通信，以提高交互的可见性&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Layered System&lt;/code&gt; 通过限制组件的行为（即每个组件只能“看到”与其交互的紧邻层），将架构分解为若干等级的层。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Code-On-Demand&lt;/code&gt; 支持通过下载并执行一些代码（例如Java Applet、Flash或JavaScript），对客户端的功能进行扩展。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-rest-api-http方法-与-curd&#34;&gt;3. REST API HTTP方法 与 CURD&lt;/h1&gt;
&lt;p&gt;REST API 使用POST，GET, PUT, DELETE的HTTP方法来描述对资源的增、查、改、删。&lt;!-- raw HTML omitted --&gt;这四个HTTP方法在数据层对应着SQL的插入、查询、更新、删除操作。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/irl0p4/2022-10-29-20-02-20.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-状态码&#34;&gt;4. 状态码&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1xx&lt;/code&gt; - informational;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2xx&lt;/code&gt; - success;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3xx&lt;/code&gt; - redirection;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;4xx&lt;/code&gt; - client error;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;5xx&lt;/code&gt; - server error.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5-restful架构设计&#34;&gt;5. RESTful架构设计&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GET&lt;/code&gt; /users - get all users;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET&lt;/code&gt; /users/123 - get a particular user with id = 123;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET&lt;/code&gt; /posts - get all posts.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;POST&lt;/code&gt; /users.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PUT&lt;/code&gt; /users/123 - upgrade a user entity with id = 123.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DELETE&lt;/code&gt; /users/123 - delete a user with id = 123.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6-文档&#34;&gt;6. 文档&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/irl0p4/2022-10-29-20-02-30.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>掌握谷歌搜索高级指令</title>
      <link>https://wdd.js.org/posts/2019/10/giflpm/</link>
      <pubDate>Tue, 15 Oct 2019 22:30:27 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/giflpm/</guid>
      <description>&lt;h1 id=&#34;1-谷歌搜索指令&#34;&gt;1. 谷歌搜索指令&lt;/h1&gt;
&lt;h1 id=&#34;2-基本命令&#34;&gt;2. 基本命令&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;符号&lt;/th&gt;
          &lt;th&gt;简介&lt;/th&gt;
          &lt;th&gt;语法&lt;/th&gt;
          &lt;th&gt;注意点&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;+&lt;/td&gt;
          &lt;td&gt;包含A且必须包含B&lt;/td&gt;
          &lt;td&gt;A +B&lt;/td&gt;
          &lt;td&gt;A和+之间有空格&lt;/td&gt;
          &lt;td&gt;Maxwell +wills&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-&lt;/td&gt;
          &lt;td&gt;包含A且不包含B&lt;/td&gt;
          &lt;td&gt;A -B&lt;/td&gt;
          &lt;td&gt;A和+之间有空格&lt;/td&gt;
          &lt;td&gt;Maxwell -Absolom&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;quot; &amp;quot;&lt;/td&gt;
          &lt;td&gt;完整匹配AB&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;AB&amp;rdquo;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&amp;ldquo;Thomas Jefferson&amp;rdquo;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;OR&lt;/td&gt;
          &lt;td&gt;包含A或者B&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;A OR B&lt;/code&gt; 或者 `A&lt;/td&gt;
          &lt;td&gt;B`&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;+-&amp;ldquo;OR&lt;/td&gt;
          &lt;td&gt;指令可以组合，完成更复杂的查询&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;beach -sandy +albert +nathaniel&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;~&lt;/td&gt;
          &lt;td&gt;包含A, 并且包含B的近义词&lt;/td&gt;
          &lt;td&gt;A ~B&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;github ~js&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;..&lt;/td&gt;
          &lt;td&gt;区间查询 AB之间&lt;/td&gt;
          &lt;td&gt;A..B&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;china 1888..2000&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;*&lt;/td&gt;
          &lt;td&gt;匹配任意字符&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;node* java&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;site:&lt;/td&gt;
          &lt;td&gt;站内搜索&lt;/td&gt;
          &lt;td&gt;A site:B&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;filetype:&lt;/td&gt;
          &lt;td&gt;按照文件类型搜索&lt;/td&gt;
          &lt;td&gt;A filetype:B&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;csta filetype:pdf&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;3-关键词使用&#34;&gt;3. 关键词使用&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;方法&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;列举关键词&lt;/td&gt;
          &lt;td&gt;列举所有和搜索相关的关键词，并且尽量把重要的关键词排在前面。&lt;code&gt;不同的关键词顺序会导致不同的返回不同的结果&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;书法 毛笔 绘画&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;不要使用某些词&lt;/td&gt;
          &lt;td&gt;如代词介词语气词，如i, the, of, it, 我，吗&lt;/td&gt;
          &lt;td&gt;搜索引擎一般会直接忽略这些信息含量少的词&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;大小写不敏感&lt;/td&gt;
          &lt;td&gt;大写字符和小写字符在搜索引擎看没有区别，尽量使用小写的就可以&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;4-特殊工具&#34;&gt;4. 特殊工具&lt;/h1&gt;
&lt;h2 id=&#34;41-define-快速返回关键词定义&#34;&gt;4.1. define 快速返回关键词定义&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/giflpm/2022-10-29-19-51-09.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何成为从培训班里出来的牛人？</title>
      <link>https://wdd.js.org/posts/2019/10/vyu2rs/</link>
      <pubDate>Tue, 15 Oct 2019 22:25:56 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/vyu2rs/</guid>
      <description>&lt;h1 id=&#34;1-培训行业的现状和问题&#34;&gt;1. 培训行业的现状和问题&lt;/h1&gt;
&lt;p&gt;进入培训班学习可能有一下两个原因：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;想转行&lt;/li&gt;
&lt;li&gt;学校里学的东西太过时了，需要深入学习本行业的知识&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;培训的行业的核心思想都是：如何快速的让你能够面试通过&lt;/p&gt;
&lt;p&gt;老师教的东西大多是一些面试必须要问的一些知识，做的项目也应该都是市面上比较火的项目。这么做的不利之处有以下几点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;局限性：知识局限于教师的授课范围，知识面窄&lt;/li&gt;
&lt;li&gt;扩展性：快餐式学习管饱不管消化，很多知识吸收不高，无法举一反三&lt;/li&gt;
&lt;li&gt;系统性：没有系统的整体知识体系&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以这些因素可能会让用人不太喜欢培训出来的应聘者，而往往希望刚毕业的应届生。但是，培训行业出来的应聘者，也不乏国士无双的牛逼人物。&lt;/p&gt;
&lt;h1 id=&#34;2-如何成为培训出来的牛人&#34;&gt;2. 如何成为培训出来的牛人？&lt;/h1&gt;
&lt;p&gt;无论在哪个行业，自学都是必不可少的事情。毕业不是学习的终点，而应该是起点。你和技术牛人之间的距离或许并不遥远，可能只是一个芭蕉扇的距离。&lt;/p&gt;
&lt;h2 id=&#34;21-读权威书籍扎实理论基础&#34;&gt;2.1. 读权威书籍，扎实理论基础&lt;/h2&gt;
&lt;p&gt;每个行业都有一些经历时间考验而熠熠生辉的经典数据，例如在前端行业。我认为下面两本书是必须要读完一本的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基础&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/10546125/&#34;&gt;JavaScript高级程序设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/1232061/&#34;&gt;JavaScript权威指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;进阶&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/3590768/&#34;&gt;JavaScript语言精粹&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/26638316/&#34;&gt;JavaScript忍者秘籍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/25883834/&#34;&gt;You Don&amp;rsquo;t Know JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/&#34;&gt;JS函数式编程指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;22-动手能力闲话少说放码过来&#34;&gt;2.2. 动手能力，闲话少说，放码过来&lt;/h2&gt;
&lt;p&gt;各种demo啊，效果啊，有时间自己都可以撸一遍，放在github上，又不收钱，还能提高动手能力。&lt;/p&gt;
&lt;h2 id=&#34;23-数据结构&#34;&gt;2.3. 数据结构&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;差劲的程序员操心代码，牛逼的程序员操心数据结构和它们之间的关系。 一一Linus Torvalds, Linux 创始人&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;优秀的数据结构，可以节省你80%的编码时间。差劲的数据结构，你需要花大量的时间去做各种高难度动作的转换，一不小心，数据库就要累的气喘如牛，停机罢工。&lt;/p&gt;
&lt;h2 id=&#34;24-知识积累从博客开始&#34;&gt;2.4. 知识积累，从博客开始&lt;/h2&gt;
&lt;p&gt;如果你已经在某个行业工作个两三年，一篇像样的博客都没有。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;那我觉得你可能是个懒人。&lt;/code&gt;因为几乎很少写东西。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;我觉得你可以是个自私的人。&lt;/code&gt;因为做计算机行业的，谁没有用过别人造的轮子。即使你没有造轮子的能力，即使你给出一个问题应该如何解决的，至少你对计算机行业也作出了你的贡献。&lt;/p&gt;
&lt;h2 id=&#34;25-互联网的基石-tcp-ip&#34;&gt;2.5. 互联网的基石 TCP IP&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180312205615_vUZuEg_.jpeg#align=left&amp;display=inline&amp;height=226&amp;originHeight=226&amp;originWidth=223&amp;status=uploading&amp;width=223&#34;&gt;&lt;/p&gt;
&lt;p&gt;计算机行业是分层的，就像大海一样，海面上的往往都是惊涛骇浪，暴风骤雨，各种框架层出不穷，争奇斗艳。当你深入海底，你会发现，那里是最平静的地方。而TCP IP等协议知识，就是整个互联网大航海时代的海底。互联网行业如此多娇，引无数框架竞折腰。浪潮之巅者成为行业热点，所有资源会喷薄涌入，失去优势被替代者，往往折戟沉沙铁未销。总之，越是上层，竞争越激烈，换代越快。&lt;/p&gt;
&lt;p&gt;但是底层的TCP/IP之类的知识，往往几十年都不会有多大的改变。而且无论你从事什么语言开发，只要你涉及到通信了，你就需要TCP/IP的知识点，不过你不清楚这些知识点，你可以随时给自己埋下定时炸弹。&lt;/p&gt;
&lt;p&gt;这个错误我也犯过，你可以看我的犯错记录：&lt;a href=&#34;https://wdd.js.org/tcp-high-recv-q-or-send-q-reasons.html&#34;&gt;哑代理 - TCP链接高Recv-Q，内存泄露的罪魁祸首&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;关于TCP/IP, 推荐一下书籍&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基础&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/24737674/&#34;&gt;图解TCP/IP : 第5版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/25863515/&#34;&gt;图解HTTP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;进阶&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/10746113/&#34;&gt;HTTP权威指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;26-工具的威力&#34;&gt;2.6. 工具的威力&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;你用刀，我用枪，谁说谁能打过谁&lt;/code&gt;。原始社会两个野蛮人相遇，块头大的，食物多，可以拥有更多的繁衍后代的权利。但是当一个野蛮人知道用刀的威力时，他就不会害怕胳膊比较粗的对手了。&lt;/p&gt;
&lt;p&gt;举例来说，前端开发免不了有时需要一个静态文件服务器，如果你只知道阿帕奇，那你的工具也太落后了。你可以看看这篇文章：&lt;a href=&#34;https://wdd.js.org/one-command-create-static-file-server.html&#34;&gt;一行命令搭建简易静态文件http服务器&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;当你想要更偷懒，想要不安于现状时，你会找到更多的厉害的工具。&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>你不知道的专业化道路</title>
      <link>https://wdd.js.org/posts/2019/10/vpqfyr/</link>
      <pubDate>Tue, 15 Oct 2019 22:25:18 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/vpqfyr/</guid>
      <description>&lt;h1 id=&#34;从分工到专业化&#34;&gt;从分工到专业化&lt;/h1&gt;
&lt;p&gt;分工提高生产效率，专业化提高个人价值。很多人都认为，一旦我们进入了某一行，我们就应该在这个行业深挖到底。例如我是做前端的，我就会去学习各种前端的知识点，各种层出不穷的框架。我总是在如饥似渴的希望自己能够保持在深入学习的状态，我不想哪一天自己突然out了。&lt;/p&gt;
&lt;h1 id=&#34;专业化的危机在哪&#34;&gt;专业化的危机在哪？&lt;/h1&gt;
&lt;p&gt;以前我在上初中的时候，就稍稍的学习了一点点ActionScript的知识。可能有些人不知道ActionScript是干嘛的，它是在flash的环境中工作的，可以在flash里做一些动画和特效之类的。那时候flash是很火的技术，几乎所有的网站都是有flash的，所以会ActionScript语言的程序员，工资都不低。&lt;/p&gt;
&lt;p&gt;但是，你现在还听过什么ActionScript吗？ 它的宿主环境flash都已经被淘汰了，皮之不存毛将焉附。可想而知，flash的淘汰，同时也让时长淘汰了一批在ActionScript的专家。&lt;/p&gt;
&lt;p&gt;所以，专业化并不是一个安全的道路。准确来说，世界上本来就没有安全的路。大多说认为这条路安全，是因为他们总是以静态的眼光看这条路。说点题外话，如果你书读多了，你会发现，其实一直在你思想里的那些观念，那些故事，往往都是忽悠人的。你可以看看我的一个书单：&lt;a href=&#34;https://wdd.js.org/2018-reading-plan.html&#34;&gt;2018年我的阅读计划&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;从企业的角度考虑，每个老板都想招在某一方面专家。但是从个人的角度考虑，如果你在专业化的道路钻研的非常深，或许有时候你应该放慢脚步，找个长椅，坐着想一想，如果你前面马上就是死路了，你应该怎么办？&lt;/p&gt;
&lt;h1 id=&#34;我们应该怎么办&#34;&gt;我们应该怎么办？&lt;/h1&gt;
&lt;p&gt;世界上没有安全的路，世界上也没有一直安全的职业。一个职业的火爆，往往因为这个行业的火爆。而永远也没有永远火爆的行业，当退潮时，将会有大批的弄潮儿会搁浅，干死，窒息&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;除去环境造成的扰动，人的身体也会随着年龄会慢慢老化。&lt;/p&gt;
&lt;p&gt;你可以想象一下，当你四十多岁时。那些新来的实习生，比你要的工资低，比你更容易接受这个行业的前沿知识，比你更加能加班，比你能力更强时，比你更听话时。你的优势在哪里？我相信到那时候，你的领导会毫不犹豫开了你。&lt;/p&gt;
&lt;p&gt;在此，你要改变。我给出以下几个角度，你可以自行延伸。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开始锻炼身体 这是一切的基石&lt;/li&gt;
&lt;li&gt;搞一搞副业，学习一下你喜欢的东西，你可以去深入学学如何做菜，如何摄影等等&lt;/li&gt;
&lt;li&gt;学习理财知识，这是学校从没教你的，但是却是非常重要的东西&lt;/li&gt;
&lt;li&gt;读书，越多越好&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考文献&#34;&gt;参考文献&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/1790456/&#34;&gt;专业主义 日 大前研一 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/25816940/&#34;&gt;富爸爸穷爸爸 罗伯特·清崎 / 莎伦·莱希特&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/1261560/&#34;&gt;国富论 英 亚当·斯密&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/5375620/&#34;&gt;失控&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/1012611/&#34;&gt;乌合之众 法 古斯塔夫·勒庞&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://survivor.ruanyifeng.com/index.html&#34;&gt;未来世界的幸存者 阮一峰&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/book/xiaolai/reborn/details&#34;&gt;新生 七年就是一辈子 李笑来&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>我苦苦寻找诡异的bug原因，其实是我的无知</title>
      <link>https://wdd.js.org/posts/2019/10/qmgxqm/</link>
      <pubDate>Tue, 15 Oct 2019 22:22:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/qmgxqm/</guid>
      <description>&lt;h1 id=&#34;1-问题1chosen插件无法显示图标&#34;&gt;1. 问题1：chosen插件无法显示图标&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;问题现象&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;在我本地调试的时候，我使用了一个多选下拉框的插件，就是&lt;a href=&#34;https://harvesthq.github.io/chosen/&#34;&gt;chosen&lt;/a&gt;, 不知道为什么，这个多选框上面的图标不见了。我找了半天没有找到原因，然后我把我的机器的内网地址给我同事，让他访问我机器，当它访问到这个页面时。他的电脑上居然显示出了这个下拉框的图标。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;这是什么鬼？&lt;/code&gt;, 为什么同样的代码，在我的电脑上显示不出图标，但是在他的电脑上可以显示。有句名言说的好：&lt;code&gt;没有什么bug是一遍调试解决不了的，如果有，就再仔细调试一遍&lt;/code&gt;。于是我就再次调试一遍。&lt;/p&gt;
&lt;p&gt;我发现了一些第一遍没有注意到的东西&lt;code&gt;媒体查询&lt;/code&gt;，就是在css里有这样的语句：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;@media
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;从这里作为切入口，我发现：&lt;code&gt;媒体查询的类会覆盖它原生的类的属性&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由于我的电脑视网膜屏幕，分辨率比较高，触发了媒体查询，这就导致了媒体查询的类覆盖了原生的类。而覆盖后的类，使用了&lt;code&gt;chosen-sprite@2x.png&lt;/code&gt;作为图标的背景图片。但是这个图片并没有被放在这个插件的目录下，有的只有&lt;code&gt;chosen-sprite.png&lt;/code&gt;这个图片。在一般情况下，都是用&lt;code&gt;chosen-sprite.png&lt;/code&gt;作为背景图片的。这就解释了：为什么同事的电脑上出现了图标，但是我的电脑上没有出现这个图标。&lt;/p&gt;
&lt;p&gt;总结: &lt;code&gt;如果你要使用一个插件，你最好把这个插件的所有文件都放在同一个目录下。而不要只放一些你认为有用的文件。最后：媒体查询的相关知识也是必要的。&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-问题2jquery-与-vue之间的暧昧&#34;&gt;2. 问题2：jQuery 与 Vue之间的暧昧&lt;/h1&gt;
&lt;p&gt;jQuery流派代表着直接操纵DOM的流派，Vue流派代表着操纵数据的流派。&lt;/p&gt;
&lt;p&gt;如果在项目里，你使用了一些jQuery插件，也使用了Vue，这就可能导致一些问题。&lt;/p&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
    &amp;lt;script src=&amp;#34;https://cdn.bootcss.com/vue/2.4.4/vue.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&amp;#34;https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt;
    姓名 &amp;lt;input type=&amp;#34;text&amp;#34; v-model=&amp;#34;userName&amp;#34;&amp;gt; &amp;lt;br/&amp;gt;
    年龄 &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;userAge&amp;#34; v-model=&amp;#34;userAge&amp;#34;&amp;gt; &amp;lt;br/&amp;gt;
&amp;lt;/div&amp;gt;


&amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt;

new Vue({
    el: &amp;#39;#app&amp;#39;,
    data: {
        userName: &amp;#39;&amp;#39;,
        userAge: 12
    }
});

$(&amp;#39;#userAge&amp;#39;).val(14);

&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在页面刚打开时：姓名输入框是空的，年龄输入框是14。但是一旦你在姓名输入框输入任何字符时，年龄输入框的值就会变成12。&lt;/p&gt;
&lt;p&gt;如果你仔细看过&lt;a href=&#34;https://cn.vuejs.org/v2/guide/forms.html&#34;&gt;Vue官方文档&lt;/a&gt;，你会很容易定位问题所在。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;v-model 会忽略所有表单元素的 value、checked、selected 特性的初始值。因为它会选择 Vue 实例数据来作为具体的值。你应该通过 JavaScript 在组件的 data 选项中声明初始值。---Vue官方文档
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你可以用 v-model 指令在表单控件元素上创建双向数据绑定。它会根据控件类型自动选取正确的方法来更新元素。尽管有些神奇，但 &lt;code&gt;v-model 本质上不过是语法糖，它负责监听用户的输入事件以更新数据&lt;/code&gt;，并特别处理一些极端的例子。&lt;/p&gt;</description>
    </item>
    <item>
      <title>一行命令搭建简易静态文件http服务器</title>
      <link>https://wdd.js.org/posts/2019/10/hvqggd/</link>
      <pubDate>Tue, 15 Oct 2019 22:21:02 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/hvqggd/</guid>
      <description>&lt;p&gt;简易服务器：在命令执行的所在路径启动一个http服务器，然后你可以通过浏览器访问该路径下的所有文件。&lt;/p&gt;
&lt;p&gt;在局域网内传文件，或者自己测试使用都是非常方便的。&lt;/p&gt;
&lt;h1 id=&#34;1-基于python&#34;&gt;1. 基于python&lt;/h1&gt;
&lt;h2 id=&#34;11-基于python2&#34;&gt;1.1. 基于Python2&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python -m SimpleHTTPServer port&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; python -m SimpleHTTPServer 8099
Serving HTTP on 0.0.0.0 port 8099 ...
127.0.0.1 - - [24/Oct/2017 11:07:56] &amp;#34;GET / HTTP/1.1&amp;#34; 200 -
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;12-基于python3&#34;&gt;1.2. 基于python3&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python3 -m http.server port&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; python3 -m http.server 8099
Serving HTTP on 0.0.0.0 port 8099 (http://0.0.0.0:8099/) ...
127.0.0.1 - - [24/Oct/2017 11:05:06] &amp;#34;GET / HTTP/1.1&amp;#34; 200 -
127.0.0.1 - - [24/Oct/2017 11:05:06] code 404, message File not found
127.0.0.1 - - [24/Oct/2017 11:05:06] &amp;#34;GET /favicon.ico HTTP/1.1&amp;#34; 404 -
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-基于nodejs&#34;&gt;2. 基于nodejs&lt;/h1&gt;
&lt;p&gt;首先你要安装nodejs&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>python实战 报纸分词排序</title>
      <link>https://wdd.js.org/posts/2019/10/rmsqoa/</link>
      <pubDate>Tue, 15 Oct 2019 21:59:23 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/rmsqoa/</guid>
      <description>&lt;h1 id=&#34;1-环境&#34;&gt;1. 环境&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;win7 64位&lt;/li&gt;
&lt;li&gt;python 3.5&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-目标&#34;&gt;2. 目标&lt;/h1&gt;
&lt;p&gt;抓取一篇报纸，并提取出关键字，然后按照出现次数排序，用echarts在页面上显示出来。&lt;/p&gt;
&lt;h1 id=&#34;3-工具选择&#34;&gt;3. 工具选择&lt;/h1&gt;
&lt;p&gt;因为之前对nodejs的相关工具比较熟悉，在用python的时候，也想有类似的工具。所以就做了一个对比的表格。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;功能&lt;/th&gt;
          &lt;th&gt;nodejs版&lt;/th&gt;
          &lt;th&gt;python版&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;http工具&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/request/request&#34;&gt;request&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/requests/requests&#34;&gt;requests&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;中文分词工具&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/leizongmin/node-segment&#34;&gt;node-segment&lt;/a&gt;, &lt;a href=&#34;https://github.com/yanyiwu/nodejieba&#34;&gt;nodejieba&lt;/a&gt;(一直没有安装成功过)&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/fxsjy/jieba&#34;&gt;jieba&lt;/a&gt;(分词准确度比node-segment好)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;DOM解析工具&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/cheeriojs/cheerio&#34;&gt;cheeio&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/gawel/pyquery&#34;&gt;pyquery&lt;/a&gt;(这两个工具都是有类似jQuery那种选择DOM的接口，很方便)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;函数编程工具&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/jashkenas/underscore&#34;&gt;underscore.js&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/serkanyersen/underscore.py&#34;&gt;underscore.py&lt;/a&gt;(underscore来处理集合比较方便)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;服务器&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/expressjs/express&#34;&gt;express&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/pallets/flask&#34;&gt;flask&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;4-开始的噩梦中文乱码&#34;&gt;4. 开始的噩梦：中文乱码&lt;/h1&gt;
&lt;p&gt;感觉每个学python的人都遇到过中文乱码的问题。我也不例外。&lt;/p&gt;
&lt;p&gt;首先要抓取网页，但是网页在控制台输出的时候，中文总是乱码。搞了好久，搞得我差点要放弃python。最终找到解决方法。&lt;a href=&#34;http://blog.csdn.net/jim7424994/article/details/22675759&#34;&gt; 解决python3 UnicodeEncodeError: &amp;lsquo;gbk&amp;rsquo; codec can&amp;rsquo;t encode character &amp;lsquo;\xXX&amp;rsquo; in position XX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;过程很艰辛，但是从中也学到很多知识。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import io
import sys
sys.stdout = io.TextIOWrapper(sys.stoodout.buffer,encoding=&amp;#39;gb18030&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;5-函数式编程-顺享丝滑&#34;&gt;5. 函数式编程： 顺享丝滑&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#filename word_rank.py
import requests
import io
import re
import sys
import jieba as _jieba # 中文分词比较优秀的一个库
from pyquery import PyQuery as pq #类似于jquery、cheerio的库
from underscore import _ # underscore.js python版本
sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=&amp;#39;gb18030&amp;#39;) # 解决控制台中文乱码

USELESSWORDS = [&amp;#39;的&amp;#39;,&amp;#39;要&amp;#39;,&amp;#39;了&amp;#39;,&amp;#39;在&amp;#39;,&amp;#39;和&amp;#39;,&amp;#39;是&amp;#39;,&amp;#39;把&amp;#39;,&amp;#39;向&amp;#39;,&amp;#39;上&amp;#39;,&amp;#39;为&amp;#39;,&amp;#39;等&amp;#39;,&amp;#39;个&amp;#39;] # 标记一些无用的单词
TOP = 30 # 只要前面的30个就可以了

def _remove_punctuation(line): # 移除非中文字符
    # rule = re.compile(&amp;#34;[^a-zA-Z0-9\u4e00-\u9fa5]&amp;#34;)
    rule = re.compile(&amp;#34;[^\u4e00-\u9fa5]&amp;#34;)
    line = rule.sub(&amp;#39;&amp;#39;,line)
    return line

def _calculate_frequency(words): # 计算分词出现的次数
    result = {}
    res = []

    for word in words:
        if result.get(word, -1) == -1:
            result[word] = 1
        else:
            result[word] += 1

    for word in result:
        if _.contains(USELESSWORDS, word): # 排除无用的分词
            continue

        res.append({
                &amp;#39;word&amp;#39;: word,
                &amp;#39;fre&amp;#39;: result[word]
            })

    return _.sortBy(res, &amp;#39;fre&amp;#39;)[::-1][:TOP] # 降序排列

def _get_page(url): # 获取页面
    return requests.get(url)

def _get_text(req): # 获取文章部分
    return pq(req.content)(&amp;#39;#ozoom&amp;#39;).text()

def main(url): # 入口函数，函数组合
    return _.compose(
        _get_page,
        _get_text,
        _remove_punctuation,
        _jieba.cut,
        _calculate_frequency
        )(url)
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;6-python服务端flask浅入浅出&#34;&gt;6. python服务端：Flask浅入浅出&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import word_rank
from flask import Flask, request, jsonify, render_template
app = Flask(__name__)
app.debug = True

@app.route(&amp;#39;/rank&amp;#39;) # 从query参数里获取pageUrl，并给分词排序
def getRank():
    pageUrl = request.args.get(&amp;#39;pageUrl&amp;#39;)
    app.logger.debug(pageUrl)

    rank = word_rank.main(pageUrl)
    app.logger.debug(rank)
    return jsonify(rank)

@app.route(&amp;#39;/&amp;#39;) # 主页面
def getHome():
    return render_template(&amp;#39;home.html&amp;#39;)

if __name__ == &amp;#39;__main__&amp;#39;:
    app.run()
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;7-总结&#34;&gt;7. 总结&lt;/h1&gt;
&lt;p&gt;据说有个定律：&lt;code&gt;凡是能用JavaScript写出来的，最终都会用JavaScript写出来&lt;/code&gt;。 我是很希望这样啦。但是不得不承认，python上有很多非常优秀的库。&lt;!-- raw HTML omitted --&gt;这些库在npm上并没有找到合适的替代品。&lt;/p&gt;</description>
    </item>
    <item>
      <title>代码整洁之道 - 有意义的命名</title>
      <link>https://wdd.js.org/posts/2019/10/ouvbom/</link>
      <pubDate>Tue, 15 Oct 2019 21:58:30 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/ouvbom/</guid>
      <description>&lt;p&gt;在小朱元璋出生一个月后，父母为他取了一个名字（元时惯例）：朱重八，这个名字也可以叫做朱八八。我们这里再介绍一下，朱重八家族的名字，都很有特点。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;朱重八高祖名字：朱百六；
朱重八曾祖名字：朱四九；
朱重八祖父名字：朱初一；
他的父亲我们介绍过了，叫朱五四。
取这样的名字不是因为朱家是搞数学的，而是因为在元朝，老百姓如果不能上学和当官就没有名字，只能以父母年龄相加或者出生的日期命名。（登记户口的人一定会眼花）&amp;ndash;《明朝那些事儿》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;那么问题来了，朱四九和朱百六是什么关系？ 你可能马上懵逼了。所以说：&lt;code&gt;命名不仅仅是一种科学，更是一种艺术&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&#34;1-名副其实&#34;&gt;1. 名副其实&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// bad
var d; // 分手的时间，以天计算

// good
var daysAfterBrokeUp; // 分手以后，以天计算
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-避免误导&#34;&gt;2. 避免误导&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// bad
var nameList = &amp;#39;wdd&amp;#39;; // List一般暗指数据是数组，而不应该赋值给字符串

// good
var nameList = [&amp;#39;wdd&amp;#39;,&amp;#39;ddw&amp;#39;,&amp;#39;dwd&amp;#39;]; // 

// bad
var ill10o = 10; //千万不要把i,1,l,0,o,O放在一起，傻傻分不清楚

// good
var illOne = 10;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-做有意义的区分&#34;&gt;3. 做有意义的区分&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// bad
var userData, userInfo; // Data和Info, 有什么区别？？？？, 不要再用data和info这样模糊不清的单词了

// good
var userProfile, userAcount
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;4-使用读得出来的名称&#34;&gt;4. 使用读得出来的名称&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// bad 
var beeceearrthrtee; // 你知道怎么读吗？ 鼻涕阿三？？

// good
var userName;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;5-使用可搜索的名称&#34;&gt;5. 使用可搜索的名称&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// bad
var e = &amp;#39;not found&amp;#39;; // 想搜e, 就很难搜

// good
var ERROR_NO_FOUND = &amp;#39;not found&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;6-方法名一概是动词短语&#34;&gt;6. 方法名一概是动词短语&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// good
function createAgent(){}
funtion deleteAgent(){}
function updateAgent(){}
function queryAgent(){}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;7-尽量不要用单字母名称-除了用于循环&#34;&gt;7. 尽量不要用单字母名称, 除了用于循环&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// bad
var i = 1;

// good
for(var i=0; i&amp;lt;10; i++){
    ...
}

// very good
userList.forEach(function(user){
    ...
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;8-每个概念对应一个词&#34;&gt;8. 每个概念对应一个词&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;controller和manager, 没什么区别，要用controller都用controller, 要用manager都用manager, 不要混着用
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;9-建立项目词汇表-不要随意创造名称&#34;&gt;9. 建立项目词汇表, 不要随意创造名称&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;user, agent, org, queue, activity, device...
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;10-参考资料&#34;&gt;10. 参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《代码整洁之道》&lt;/li&gt;
&lt;li&gt;《明朝那些事儿》&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>【译】13简单的优秀编码规则（从我15年的经验）</title>
      <link>https://wdd.js.org/posts/2019/10/corgz1/</link>
      <pubDate>Tue, 15 Oct 2019 21:54:25 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/corgz1/</guid>
      <description>&lt;p&gt;原文地址：&lt;a href=&#34;https://hackernoon.com/few-simple-rules-for-good-coding-my-15-years-experience-96cb29d4acd9#.ddzpjb80c&#34;&gt;https://hackernoon.com/few-simple-rules-for-good-coding-my-15-years-experience-96cb29d4acd9#.ddzpjb80c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;嗨，我的工作作为一个程序员超过15年，并使用许多不同的语言，范例，框架和其他狗屎。我想和大家分享我写好代码的规则。&lt;/p&gt;
&lt;h1 id=&#34;1-优化vs可读性-去他妈的优化&#34;&gt;1. 优化VS可读性 去他妈的优化&lt;/h1&gt;
&lt;p&gt;始终编写易于阅读且对开发人员可理解的代码。因为在硬可读代码上花费的时间和资源将远远高于从优化中获得的。&lt;!-- raw HTML omitted --&gt;如果你需要进行优化，那么使它像DI的独立模块，具有100％的测试覆盖率，并且不会被触及至少一年。&lt;/p&gt;
&lt;h1 id=&#34;2-架构第一&#34;&gt;2. 架构第一&lt;/h1&gt;
&lt;p&gt;我看到很多人说“我们需要快速做事，我们没有时间做架构”。其中约99％的人因为这样的想法而遇到了大问题。&lt;!-- raw HTML omitted --&gt;编写代码而不考虑其架构是没有用的，就像没有实现它们的计划一样，梦想你的愿望。&lt;!-- raw HTML omitted --&gt;在编写代码的第一行之前，你应该明白它将要做什么，它将如何使用，模块，服务如何相互工作，它将有什么结构，如何进行测试和调试，以及如何更新。&lt;/p&gt;
&lt;h1 id=&#34;3-测试覆盖率&#34;&gt;3. 测试覆盖率&lt;/h1&gt;
&lt;p&gt;测试是好事，但他们并不总是负担得起，对项目有意义。&lt;/p&gt;
&lt;p&gt;当你需要测试：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当你编写模块时，微服务将不会被触及至少一个月。&lt;/li&gt;
&lt;li&gt;当你编写开源代码。&lt;/li&gt;
&lt;li&gt;当你编写涉及金融渠道的核心代码或代码。&lt;/li&gt;
&lt;li&gt;当您有代码更新的同时更新测试的资源。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当你不需要测试时：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当你是一个创业。&lt;/li&gt;
&lt;li&gt;当你有小团队和代码更改是快速。&lt;/li&gt;
&lt;li&gt;当你编写的脚本，可以简单地通过他们的输出手动测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;记住，&lt;code&gt;带有严格测试的代码可能比没有测试的代码更有害&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&#34;4-保持简单极度简单&#34;&gt;4. 保持简单，极度简单&lt;/h1&gt;
&lt;p&gt;不要编写复杂的代码。更多更简单，那么更少的错误它可能有和更少的时间来调试它们。代码应该做的只是它需要没有非常多的抽象和其他OOP shit（尤其是涉及java开发人员）+ 20％的东西可能需要在将来以简单的方式更新它。&lt;/p&gt;
&lt;h1 id=&#34;5-注释&#34;&gt;5. 注释&lt;/h1&gt;
&lt;p&gt;出现注释说明你的代码不够好。好的代码应该是可以理解的，没有一行注释。但是如何为新开发人员节省时间？ - 编写简单的内联文档描述什么和如何方法工作。这将节省很多时间来理解，甚至更多 - 它将给人们更多的机会来提出更好的实施这种方法。并且它将是全球代码文档的良好开端。&lt;/p&gt;
&lt;h1 id=&#34;6-硬耦合vs较小耦合&#34;&gt;6. 硬耦合VS较小耦合&lt;/h1&gt;
&lt;p&gt;始终尝试使用微服务架构。单片软件可以比微服务软件运行得更快，但只能在一个服务器的上下文中运行。&lt;!-- raw HTML omitted --&gt;微服务使您可以不仅在许多服务器上，而且有时甚至在一台机器上（我的意思是过程分发）高效地分发您的软件。&lt;/p&gt;
&lt;h1 id=&#34;7-代码审查&#34;&gt;7. 代码审查&lt;/h1&gt;
&lt;p&gt;代码审查可以是好的，也以是坏的。&lt;!-- raw HTML omitted --&gt;您可以组织代码审查，只有当您有开发人员了解95％的代码，谁可以监控所有更新，而不浪费很多时间。在其他情况下，这将是只是耗时，每个人都会讨厌这个。&lt;/p&gt;
&lt;p&gt;在这部分有很多问题，所以更深入地描述这一点。&lt;/p&gt;
&lt;p&gt;许多人认为代码审查是一个很好的方式教新手，或者工作在不同部分的代码的队友。但是代码审查的主要目标是保持代码质量，而不是教学。让我们想象你的团队制作代码用于控制核反应堆或太空火箭发动机的冷却系统。你在非常硬的逻辑中犯了巨大的错误，然后你给这个代码审查新的家伙。你怎么认为会发生意外的风险？ - 我的练习率超过70％。&lt;/p&gt;
&lt;p&gt;良好的团队是每个人都有自己的角色，负责确切的工作。如果有人想要理解另一段代码，那么他去一个负责任去问他。你不可能知道一切，更好的优秀的理解小块代码而不是理解所有。&lt;/p&gt;
&lt;h1 id=&#34;8-重构没啥用&#34;&gt;8. 重构没啥用&lt;/h1&gt;
&lt;p&gt;在我的职业生涯中，我听到很多次“不要担心，我们以后会重构它”。在未来，这会导致大的技术债务或从头开始删除所有的代码和写作。&lt;/p&gt;
&lt;p&gt;所以，不要得到一个债务，除非你有钱从头开发你的软件几次。&lt;/p&gt;
&lt;h1 id=&#34;9-当你累了或在一个坏的心情不要写代码&#34;&gt;9. 当你累了或在一个坏的心情不要写代码。&lt;/h1&gt;
&lt;p&gt;当开发人员厌倦时，他们正在制造2到5倍或者更多的bug。所以工作更多是非常糟糕的做法。这就是为什么越来越多的国家思考6小时工作日，其中一些已经有了。精神工作不同于使用你的二头肌。&lt;/p&gt;</description>
    </item>
    <item>
      <title>gitbash生存指南 之 git常用命令与oh-my-zsh常用缩写</title>
      <link>https://wdd.js.org/posts/2019/10/gmb0oi/</link>
      <pubDate>Tue, 15 Oct 2019 21:48:37 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/gmb0oi/</guid>
      <description>&lt;p&gt;&lt;code&gt;如果命令行可以解决的问题，就绝对不要用GUI工具。快点试用Git bash吧， 别再用TortoiseGit了。&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-必会8个命令&#34;&gt;1. 必会8个命令&lt;/h1&gt;
&lt;p&gt;下面的操作都是经常使用的，有些只需要做一次，有些是经常操作的&lt;/p&gt;
&lt;p&gt;git命令虽然多，但是经常使用的不超过8个。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;命令&lt;/th&gt;
          &lt;th&gt;执行次数&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git clone http://sdfjslf.git&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;每个项目只需要执行一次&lt;/td&gt;
          &lt;td&gt;//克隆一个项目&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git fetch origin round-2&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;每个分支只需要执行一次&lt;/td&gt;
          &lt;td&gt;//round-2分支在本地不存在，首先要创建一个分支&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git checkout round-2&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;多次&lt;/td&gt;
          &lt;td&gt;// 切换到round-2分支&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git branch --set-upstream-to=origin/round-2&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;每个分支只需要执行一次&lt;/td&gt;
          &lt;td&gt;// 将本地round-2分支关联远程round-2分支&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git add -A&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;每次增加文件都要执行&lt;/td&gt;
          &lt;td&gt;// 在round-2下创建了一个文件, 使用-A可以添加所有文件到暂存区&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git commit -am &amp;quot;我增加了一个文件&amp;quot;&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;每次提交都要执行&lt;/td&gt;
          &lt;td&gt;// commit&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git push&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;每次推送都要执行&lt;/td&gt;
          &lt;td&gt;//最好是在push之前，使用git pull拉去远程代码到本地，否则有可能被拒绝&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;每次拉去都要执行&lt;/td&gt;
          &lt;td&gt;拉去远程分支代码到本地并合并到当前分支&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;2-常用的git命令&#34;&gt;2. 常用的git命令&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;假设你在master分支上&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 将本地修改后的文件推送到本地仓库
git commit -am &amp;#39;修改了一个问题&amp;#39;

// 将本地仓库推送到远程仓库
git push
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;21-状态管理&#34;&gt;2.1. 状态管理&lt;/h2&gt;
&lt;h3 id=&#34;211-状态查看&#34;&gt;2.1.1. 状态查看&lt;/h3&gt;
&lt;p&gt;查看当前仓库状态&lt;/p&gt;</description>
    </item>
    <item>
      <title>免费服务的盈利模式</title>
      <link>https://wdd.js.org/posts/2019/10/ce03id/</link>
      <pubDate>Tue, 15 Oct 2019 21:46:04 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/ce03id/</guid>
      <description>&lt;p&gt;免费产品的盈利模式有四种&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;投放广告&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;增值服务：先把羊养肥，再慢慢割羊毛，现在大部分都是互联网服务都是这种&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;交叉补贴: A服务免费，再用户使用A服务时，通过提供B服务来盈利&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;零边际成本：免费提供A服务，但是用户需要用物品去交换A服务，服务提供者通过加工物品来盈利&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>thinkpad 系列恢复F1-F12原始功能，切换ctrl和fn的位置</title>
      <link>https://wdd.js.org/posts/2019/10/qzbgvf/</link>
      <pubDate>Tue, 15 Oct 2019 21:45:31 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/qzbgvf/</guid>
      <description>&lt;h1 id=&#34;1-实验准备&#34;&gt;1. 实验准备&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;T450笔记本&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-进入bios&#34;&gt;2. 进入BIOS&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;重启电脑&lt;/li&gt;
&lt;li&gt;一直不停按enter&lt;/li&gt;
&lt;li&gt;按F1&lt;/li&gt;
&lt;li&gt;选择Keyboard/mouse&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;3-恢复f1-f2恢复原始功能&#34;&gt;3. 恢复F1-F2恢复原始功能:&lt;/h1&gt;
&lt;p&gt;fn and ctrl key swap &lt;strong&gt;[enabled]&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-切换ctrl和ctrl的位置&#34;&gt;4. 切换ctrl和ctrl的位置:&lt;/h1&gt;
&lt;p&gt;F1-F12 as primary function &lt;strong&gt;[enabled]&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-保存退出&#34;&gt;5. 保存，退出&lt;/h1&gt;</description>
    </item>
    <item>
      <title>windows上免费的文本对比工具</title>
      <link>https://wdd.js.org/posts/2019/10/zo8dx2/</link>
      <pubDate>Tue, 15 Oct 2019 11:24:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/zo8dx2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://winmerge.org/?lang=en&#34;&gt;https://winmerge.org/?lang=en&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/zo8dx2/2022-10-29-19-58-33.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2019/zip/280451/1571109955442-52856f01-dd3f-4a0b-8df1-64ce063b68d4.zip?_lake_card=%7B%22uid%22%3A%221571109951803-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2019%2Fzip%2F280451%2F1571109955442-52856f01-dd3f-4a0b-8df1-64ce063b68d4.zip%22%2C%22name%22%3A%22WinMerge-2.16.4-Setup.exe.zip%22%2C%22size%22%3A5704664%2C%22type%22%3A%22application%2Fzip%22%2C%22ext%22%3A%22zip%22%2C%22progress%22%3A%7B%22percent%22%3A0%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%224hUeH%22%2C%22card%22%3A%22file%22%7D&#34;&gt;WinMerge-2.16.4-Setup.exe.zip&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>手工安装git最新版</title>
      <link>https://wdd.js.org/posts/2019/10/gxkb91/</link>
      <pubDate>Sat, 12 Oct 2019 11:25:20 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/gxkb91/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Install Required Packages&lt;!-- raw HTML omitted --&gt;Firstly we need to make sure that we have installed required packages on your system. Use following command to install required packages before compiling Git source.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel
# yum install  gcc perl-ExtUtils-MakeMaker
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Uninstall old Git RPM&lt;!-- raw HTML omitted --&gt;Now remove any prior installation of Git through RPM file or Yum package manager. If your older version is also compiled through source, then skip this step.&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何面对未知的项目</title>
      <link>https://wdd.js.org/posts/2019/10/bl933p/</link>
      <pubDate>Fri, 11 Oct 2019 19:20:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/bl933p/</guid>
      <description>&lt;p&gt;有些项目，文档写的不是很清楚，很多地方都需要摸着石头过河，在此写下自己的一点心得体会。&lt;/p&gt;
&lt;h1 id=&#34;后悔药&#34;&gt;后悔药&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;哪怕是改动一行代码，也要创建一个新的分支&lt;/strong&gt;。如果发现前方有无法绕行的故障，你将会庆幸自己给自己留下退路。&lt;/p&gt;
&lt;p&gt;不要把自己逼到死角，永远给自己留下一个B计划。&lt;/p&gt;
&lt;h1 id=&#34;小碎步&#34;&gt;小碎步&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;不要大段重构，要小步慢走&lt;/strong&gt;。尽量减少发生问题的点。在一本书中找错别字很难，但是在一行文字中找错别字就非常容易了。&lt;/p&gt;
&lt;h1 id=&#34;勿猜测&#34;&gt;勿猜测&lt;/h1&gt;
&lt;p&gt;当你不知道某个函数如何使用时，&lt;strong&gt;不要去猜测&lt;/strong&gt;，而应该去看官方文档是如何讲解这个函数的。&lt;/p&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>一个人喝粥太淡</title>
      <link>https://wdd.js.org/posts/2019/10/an4am1/</link>
      <pubDate>Fri, 11 Oct 2019 19:18:21 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/an4am1/</guid>
      <description>&lt;p&gt;一个人喝粥太淡，&lt;!-- raw HTML omitted --&gt;两个人电话粥太甜。&lt;!-- raw HTML omitted --&gt;回忆似水流年，&lt;!-- raw HTML omitted --&gt;翘首如花美眷。&lt;!-- raw HTML omitted --&gt;对着微信聊天，&lt;!-- raw HTML omitted --&gt;凌晨了也没有觉得晚。&lt;!-- raw HTML omitted --&gt;窗外的月亮很圆，&lt;!-- raw HTML omitted --&gt;就像你那双明亮的眼。&lt;!-- raw HTML omitted --&gt;说一声晚安，&lt;!-- raw HTML omitted --&gt;道一声再见，&lt;!-- raw HTML omitted --&gt;我的梦中是有你的春天。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/an4am1/2022-10-29-19-38-42.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>你有邮箱吗？</title>
      <link>https://wdd.js.org/posts/2019/10/tgn9th/</link>
      <pubDate>Fri, 11 Oct 2019 19:15:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/tgn9th/</guid>
      <description>&lt;p&gt;你有邮箱吗？&lt;!-- raw HTML omitted --&gt;如果你有的话，&lt;!-- raw HTML omitted --&gt;那么当我不在你身边的时候，&lt;!-- raw HTML omitted --&gt;我会每天给你写一封信，&lt;!-- raw HTML omitted --&gt;告诉你，&lt;!-- raw HTML omitted --&gt;我今天遇见的的人，&lt;!-- raw HTML omitted --&gt;告诉你，&lt;!-- raw HTML omitted --&gt;我身边发生的事，&lt;!-- raw HTML omitted --&gt;告诉你，&lt;!-- raw HTML omitted --&gt;当你不在我身边时，&lt;!-- raw HTML omitted --&gt;我有多想你&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySql表复制 与 调整字段</title>
      <link>https://wdd.js.org/posts/2019/10/nhrhfr/</link>
      <pubDate>Thu, 10 Oct 2019 21:30:20 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/nhrhfr/</guid>
      <description>&lt;h1 id=&#34;表复制&#34;&gt;表复制&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 不跨数据库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;insert into subscriber_copy(id, username) select id, username &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; subscriber
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 跨数据库 需要在表名前加上数据库名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;insert into wdd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;test(id, username) select id, username &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; opensips.subscriber
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;调整表结构&#34;&gt;调整表结构&lt;/h1&gt;
&lt;h2 id=&#34;增加字段&#34;&gt;增加字段&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ALTER TABLE test ADD &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;username&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt; char(&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; null default &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>理解mysql 表连接</title>
      <link>https://wdd.js.org/posts/2019/10/gdeknt/</link>
      <pubDate>Thu, 10 Oct 2019 21:29:32 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/gdeknt/</guid>
      <description>&lt;p&gt;表wdd_a&lt;!-- raw HTML omitted --&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/gdeknt/2022-10-29-19-49-42.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;表wdd_b&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/gdeknt/2022-10-29-19-50-01.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;不使用where子句生成的表的数是两个表行数的积，其字段的字段两个表的拼接&lt;/p&gt;
&lt;p&gt;查询的行数 = 表a的行数 x 表b的行数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;wdd_a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;wdd_b&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;order&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; wdd_a.id
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/gdeknt/2022-10-29-19-50-09.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;表联合不使用where子句，会存在两个问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;查询出来的结果没有意义&lt;/li&gt;
&lt;li&gt;产生大量的无用数据，例如1000行的表a联合1000行的表b，将会产生1000*1000行的结果&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;wdd_a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;wdd_b&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; wdd_a.id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wdd_b.id
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当使用表联合之后，产生的数据&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;是有意义的&lt;/li&gt;
&lt;li&gt;查询结果的行数一定比两张表的行数都要少&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;下面是一个复杂的例子，给表起了别名，另外也只抽取了部分字段&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;caller_id_dpid&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;caller_id_dpid&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;callee_id_dpid&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;callee_id_dpid&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;trunk_group&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;trunk_group&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;domain&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;domain&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;wj_route_group&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;domain&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;route_group_id&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>世界名画</title>
      <link>https://wdd.js.org/posts/2019/10/cgr19x/</link>
      <pubDate>Thu, 10 Oct 2019 21:28:42 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/cgr19x/</guid>
      <description>&lt;h1 id=&#34;你何时结婚&#34;&gt;你何时结婚 &lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-42-39.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;玩纸牌者&#34;&gt;玩纸牌者&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-42-53.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;梦&#34;&gt;梦&lt;/h1&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;鲍尔夫人的肖像&#34;&gt;鲍尔夫人的肖像&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-04.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;呐喊&#34;&gt;呐喊&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-11.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;裸体-绿叶-半身像&#34;&gt;裸体 绿叶 半身像&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-19.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;加歇医生&#34;&gt;加歇医生&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-28.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;拿烟斗的男孩&#34;&gt;拿烟斗的男孩&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-35.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;老吉他手&#34;&gt;老吉他手&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-42.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;红黄蓝的构成ii-蒙德里安&#34;&gt;红黄蓝的构成II  蒙德里安&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-50.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;镜前少女&#34;&gt;镜前少女&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-43-57.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;神奈川冲浪&#34;&gt;神奈川冲浪&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/10/cgr19x/2022-10-29-19-44-05.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>虚拟化浪潮</title>
      <link>https://wdd.js.org/posts/2019/10/nzpt8a/</link>
      <pubDate>Thu, 10 Oct 2019 21:27:47 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/nzpt8a/</guid>
      <description>&lt;h1 id=&#34;刀耕火种没有docker的时代&#34;&gt;刀耕火种：没有docker的时代&lt;/h1&gt;
&lt;p&gt;想想哪些没有docker时光, 我们是怎么玩linux的。&lt;/p&gt;
&lt;p&gt;首先你要先装一个vmware或者virtualbox, 然后再下载一个几个GB的ISO文件，然后一步两步三步的经过十几个步骤，终于装好了一个虚拟机。这其中的步骤，每一步都可能有几个坑在等你踩。&lt;/p&gt;
&lt;p&gt;六年前，也就是在2013的时候，docker出现了，这个新奇的东西，可以让你用一行命令运行一个各种linux的发行版。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it centos
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it debian
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;黑色裂变docker时代&#34;&gt;黑色裂变：docker时代&lt;/h1&gt;
&lt;p&gt;docker 官网上，有个对docker非常准确的定位：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Docker: The Modern Platform for High-Velocity Innovation&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;我觉得行英文很好理解，但是不好翻译，从中抽取三个一个最终要的关键词。&amp;ldquo;High-Velocty&amp;rdquo;，可以理解为加速，提速。&lt;/p&gt;
&lt;p&gt;那么docker让devops提速了多少呢？&lt;/p&gt;
&lt;p&gt;没有docker的时代，如果可以称为冷兵器时代的话，docker的出现，将devops带入了热兵器时代。&lt;/p&gt;
&lt;p&gt;我们不用再准备石头，木棍，不需要打磨兵器，我们唯一要做的事情，瞄准目标，扣动扳机。&lt;/p&gt;
&lt;h1 id=&#34;运筹帷幄k8s时代&#34;&gt;运筹帷幄：k8s时代&lt;/h1&gt;
&lt;p&gt;说实在的，我还没仔细去体味docker的时代时，就已经进入了k8s时代。k8s的出现，让我们可以不用管docker, 可以直接跳过docker, 直接学习k8s的概念与命令。&lt;/p&gt;
&lt;p&gt;k8s的好处就不再多少了，只说说它的缺点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源消耗大：k8s单机版没什么意义，一般都是集群，你需要多台虚拟机&lt;/li&gt;
&lt;li&gt;部署耗费精力：想要部署k8s，要部署几个配套的基础服务&lt;/li&gt;
&lt;li&gt;k8s对于tcp服务支持很好，对于udp服务，&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以如果我们仅仅是需要一个环境，跑跑自己的代码，相比于k8s，docker无疑是最方便且便宜的选择。&lt;/p&gt;
&lt;p&gt;说实在的，我之前一直对docker没有全面的掌握，系统的学习，我将会在这个知识库里，系统的梳理docker相关的知识和实战经验。&lt;/p&gt;
&lt;h1 id=&#34;帝国烽烟云原生时代&#34;&gt;帝国烽烟：云原生时代&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;微服务&lt;/li&gt;
&lt;li&gt;应用编排调度&lt;/li&gt;
&lt;li&gt;容器化&lt;/li&gt;
&lt;li&gt;面向API&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Docker,_Inc.&#34;&gt;https://en.wikipedia.org/wiki/Docker,_Inc.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://thenewstack.io/10-key-attributes-of-cloud-native-applications/&#34;&gt;https://thenewstack.io/10-key-attributes-of-cloud-native-applications/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jimmysong.io/kubernetes-handbook/cloud-native/cloud-native-definition.html&#34;&gt;https://jimmysong.io/kubernetes-handbook/cloud-native/cloud-native-definition.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.redhat.com/en/topics/cloud-native-apps&#34;&gt;https://www.redhat.com/en/topics/cloud-native-apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>influxdb http操作</title>
      <link>https://wdd.js.org/posts/2019/10/eqgykt/</link>
      <pubDate>Wed, 09 Oct 2019 16:22:18 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/eqgykt/</guid>
      <description>&lt;h1 id=&#34;创建数据库&#34;&gt;创建数据库&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;XPOST http:&lt;span style=&#34;color:#75715e&#34;&gt;//localhost:8086/query --data-urlencode &amp;#34;q=CREATE DATABASE testdb&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;写数据到数据库&#34;&gt;写数据到数据库&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;XPOST &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;http:&lt;span style=&#34;color:#75715e&#34;&gt;//localhost:8086/write?db=mydb&amp;#39; --data-binary &amp;#39;cpu_load_short,host=server01,region=us-west value=0.64 1434055562000000000&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;批量写入&#34;&gt;批量写入&lt;/h1&gt;
&lt;p&gt;output.txt&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx_second,tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ip169 value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1592638800000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx_second,tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ip169 value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1592638801000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx_second,tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ip169 value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1592638802000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx_second,tag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ip169 value&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1592638803000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -i -XPOST &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://localhost:8086/write?db=mydb&amp;#39;&lt;/span&gt; --data-binary @output.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.influxdata.com/influxdb/v1.7/guides/writing_data/&#34;&gt;https://docs.influxdata.com/influxdb/v1.7/guides/writing_data/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>ssh保持连接状态不断开</title>
      <link>https://wdd.js.org/posts/2019/10/swoxa5/</link>
      <pubDate>Sun, 06 Oct 2019 19:41:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/10/swoxa5/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;编辑这个文件 ~/.ssh/config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;在顶部添加下边两行
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host *
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ServerAliveInterval&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;每隔30秒向服务端发送 no-op包&lt;/p&gt;</description>
    </item>
    <item>
      <title>致命女人 Why Women Kill</title>
      <link>https://wdd.js.org/posts/2019/09/zgwg91/</link>
      <pubDate>Thu, 26 Sep 2019 20:12:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/zgwg91/</guid>
      <description>&lt;p&gt;前些天，有朋友推荐一部美剧《致命女人》，听着名字，觉得有点像特工或者犯罪系列的电视剧。&lt;/p&gt;
&lt;p&gt;看了前第一集之后，才发现这个剧是讲述关于婚姻方面问题美剧。&lt;/p&gt;
&lt;p&gt;一般情况下，我不喜欢看婚姻题材的影视。但是，任何事情都逃不过真相定律。&lt;/p&gt;</description>
    </item>
    <item>
      <title>git 删除未跟踪的文件</title>
      <link>https://wdd.js.org/posts/2019/09/vccx09/</link>
      <pubDate>Thu, 19 Sep 2019 17:02:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/vccx09/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clean -n &lt;span style=&#34;color:#75715e&#34;&gt;# 打印哪些文件将会被删除&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clean -f &lt;span style=&#34;color:#75715e&#34;&gt;# 删除文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clean -fd &lt;span style=&#34;color:#75715e&#34;&gt;# 删除文件个目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/61212/how-to-remove-local-untracked-files-from-the-current-git-working-tree&#34;&gt;https://stackoverflow.com/questions/61212/how-to-remove-local-untracked-files-from-the-current-git-working-tree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>pdf转ppt工具收集</title>
      <link>https://wdd.js.org/posts/2019/09/wn0a02/</link>
      <pubDate>Wed, 18 Sep 2019 10:50:42 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/wn0a02/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://smallpdf.com/&#34;&gt;https://smallpdf.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pdfpai.com/pdf-to-powerpoint&#34;&gt;https://www.pdfpai.com/pdf-to-powerpoint&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Royal TSX git status 输出乱码</title>
      <link>https://wdd.js.org/posts/2019/09/msx8i9/</link>
      <pubDate>Tue, 17 Sep 2019 16:36:38 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/msx8i9/</guid>
      <description>&lt;h1 id=&#34;问题描述&#34;&gt;问题描述&lt;/h1&gt;
&lt;p&gt;连接服务器时的报警&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-bash: 警告:setlocale: LC_CTYPE: 无法改变区域选项 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;UTF-8&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: 没有那个文件或目录
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;git status 发现本来应该显示 &amp;lsquo;on brance master&amp;rsquo; 之类的地方，居然英文也乱码了，都是问号。&lt;/p&gt;
&lt;h1 id=&#34;解决方案&#34;&gt;解决方案&lt;/h1&gt;
&lt;p&gt;vim /etc/environment , 然后加入如下代码，然后重新打开ssh窗口&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LC_ALL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LANG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>git取消设置http代理</title>
      <link>https://wdd.js.org/posts/2019/09/yko32n/</link>
      <pubDate>Tue, 17 Sep 2019 16:06:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/yko32n/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global --unset http.proxy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>关注点分离的问题</title>
      <link>https://wdd.js.org/posts/2019/09/xi7kpf/</link>
      <pubDate>Fri, 06 Sep 2019 12:37:25 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/xi7kpf/</guid>
      <description>&lt;p&gt;前端组件化时，有个很时髦的词语叫做关注点分离，这个用在组件上比较好，我们可以把大的模块分割成小的模块，降低了整个模块的复杂度。&lt;/p&gt;
&lt;p&gt;但是有时候，我觉得关注点分离并不好。这个不是指在代码开发过程，而是解决问题的过程。&lt;/p&gt;
&lt;h1 id=&#34;关注点分离的处理方式&#34;&gt;关注点分离的处理方式&lt;/h1&gt;
&lt;p&gt;假如我要解决问题A，但是在解决过程中，我发现了一个我不知道的东西B, 然后我就去研究这B是什么东西，然后接二连三，我从B一路找到了Z。&lt;/p&gt;
&lt;p&gt;然后在这个解决过程耽误一段时候后，才想起来：我之前是要解决什么问题来着？？&lt;/p&gt;
&lt;h1 id=&#34;关注点集中的处理方式&#34;&gt;关注点集中的处理方式&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;不要再深究的路径上走的太深&lt;/li&gt;
&lt;li&gt;在走其他路径时，也不要忘记最后要回到A点&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>TCP和UDP的区别畅想</title>
      <link>https://wdd.js.org/posts/2019/09/vc8oxs/</link>
      <pubDate>Thu, 05 Sep 2019 14:59:32 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/vc8oxs/</guid>
      <description>&lt;p&gt;web服务器如果是基于tcp的，那么用来监听端口端口例如80，一定只能用来接收消息，而不能从这个端口主动发消息出去。&lt;/p&gt;
&lt;p&gt;但是udp服务器就不一样了，同一端口，即可以用来做listen的端口，也可以从这个端口主动发消息出去。&lt;/p&gt;</description>
    </item>
    <item>
      <title>PlantUML教程 包学包会</title>
      <link>https://wdd.js.org/posts/2019/09/hvscve/</link>
      <pubDate>Thu, 05 Sep 2019 12:55:27 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/hvscve/</guid>
      <description>&lt;p&gt;我觉得PlantUML非常适合绘制时序图，先给个完整的例子，我经常会用到的PlantUML画SIP请求时序图。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@startuml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;autonumber
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;alice-&amp;gt;bob: INVITE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bob-&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#green]&amp;gt;alice: 180 Ringing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bob-&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#green]&amp;gt;alice: 200 OK&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; talking &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bob-&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#green]&amp;gt;alice: BYE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;alice-&amp;gt;bob: &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@enduml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/09/hvscve/2022-10-29-19-59-29.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;简单箭头&#34;&gt;简单箭头&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;&amp;gt; 虚线箭头&lt;/li&gt;
&lt;li&gt;-&amp;gt; 简单箭头&lt;/li&gt;
&lt;li&gt;-[#red]&amp;gt; 带颜色的箭头&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@startuml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;alice-&amp;gt;bob: INVITE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bob--&amp;gt;alice: &lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt; Ringing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@enduml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/09/hvscve/2022-10-29-19-59-46.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;声明参与者顺序&#34;&gt;声明参与者顺序&lt;/h1&gt;
&lt;p&gt;先使用participant关键字声明了bob， 那么bob就会出现在最左边&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@startuml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;participant bob
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;participant alice
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;alice-&amp;gt;bob: INVITE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bob-&amp;gt;alice: &lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt; Ringing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@enduml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/09/hvscve/2022-10-29-19-59-53.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;声明参与者类型&#34;&gt;声明参与者类型&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;actor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boundary&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;control&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;entity&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;database&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@startuml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;participant start
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;actor a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;boundary b
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;control c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;entity d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;database e
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;start-&amp;gt;a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;start-&amp;gt;b
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;start-&amp;gt;c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;start-&amp;gt;d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;start-&amp;gt;e
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@enduml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/09/hvscve/2022-10-29-20-00-04.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>编译器和女朋友有什么相同之处</title>
      <link>https://wdd.js.org/posts/2019/09/myy94p/</link>
      <pubDate>Tue, 03 Sep 2019 21:12:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/09/myy94p/</guid>
      <description>&lt;p&gt;编译器面无表情的说：xxx.cfg 189行，有个地方多了个分号？&lt;/p&gt;
&lt;p&gt;但是你在在xxx.cfg的地189哼哧哼哧找了半天，满头大汗，也没发现有任何问题，这一行甚至连个分号都没有！！&lt;/p&gt;
&lt;p&gt;而实际上，这个问题并不是出在第189行，而是出在前面几行。&lt;/p&gt;
&lt;p&gt;所以说，编译器和女朋友的相同之处在于：**他们说的话，你不能全信，也不能不信。**而要从他们说的话中分析上下文，从蛛丝马迹中，寻求唯一的真相。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ssh 私钥使用失败</title>
      <link>https://wdd.js.org/posts/2019/08/vhovcg/</link>
      <pubDate>Sat, 17 Aug 2019 18:53:37 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/vhovcg/</guid>
      <description>&lt;p&gt;报错信息如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Permissions &lt;span style=&#34;color:#ae81ff&#34;&gt;0644&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mmmmm&amp;#39;&lt;/span&gt; are too open.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;It is required that your private key files are NOT accessible by others.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;This private key will be ignored.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;解决方案：将你的私钥的权限改为600, 也就是说只有你自己可读可写，其他人都不能用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt; 你的私钥
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>在不打开文件，将全文复制到剪贴板</title>
      <link>https://wdd.js.org/posts/2019/08/iyotwd/</link>
      <pubDate>Fri, 16 Aug 2019 09:25:37 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/iyotwd/</guid>
      <description>&lt;p&gt;一般拷贝全文分为以下几步&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用编辑器打开文件&lt;/li&gt;
&lt;li&gt;全文选择文件&lt;/li&gt;
&lt;li&gt;执行拷贝命令&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实际上操作系统提供了一些命令，可以在不打开文件的情况下，将文件内容复制到剪贴板。&lt;/p&gt;
&lt;h1 id=&#34;mac-pbcopy&#34;&gt;mac pbcopy&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aaa&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;txt&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pbcopy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;linuxxsel&#34;&gt;linux xsel&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aaa&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;txt&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xsel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;windows-clip&#34;&gt;windows clip&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aaa&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;txt&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clip&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>macbook pro 开机后wifi无响应问题调研</title>
      <link>https://wdd.js.org/posts/2019/08/gw9eka/</link>
      <pubDate>Thu, 15 Aug 2019 08:48:22 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/gw9eka/</guid>
      <description>&lt;h1 id=&#34;解决方案&#34;&gt;解决方案&lt;/h1&gt;
&lt;h2 id=&#34;方案1&#34;&gt;方案1：&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sudo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;kill&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`ps aux | grep -v grep | grep /usr/libexec/airportd | awk &amp;#39;{print $2}&amp;#39;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者任务管理器搜索并且杀掉&lt;!-- raw HTML omitted --&gt;airportd这个进程&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://discussionschinese.apple.com/thread/140138832?answerId=140339277322#140339277322&#34;&gt;https://discussionschinese.apple.com/thread/140138832?answerId=140339277322#140339277322&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.v2ex.com/t/505737&#34;&gt;https://www.v2ex.com/t/505737&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/Goals1989/article/details/88578012&#34;&gt;https://blog.csdn.net/Goals1989/article/details/88578012&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>mysql远程连接速度太慢</title>
      <link>https://wdd.js.org/posts/2019/08/kieuga/</link>
      <pubDate>Thu, 08 Aug 2019 16:56:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/kieuga/</guid>
      <description>&lt;p&gt;编辑/etc/my.cnf，增加skip-name-resolve&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;skip-name-resolve
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后重启mysql&lt;/p&gt;</description>
    </item>
    <item>
      <title>xmysql 一行命令从任何mysql数据库生成REST API</title>
      <link>https://wdd.js.org/posts/2019/08/vv5oro/</link>
      <pubDate>Tue, 06 Aug 2019 13:56:20 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/vv5oro/</guid>
      <description>&lt;p&gt;github向我推荐这个&lt;a href=&#34;https://github.com/o1lab/xmysql&#34;&gt;xmysql&lt;/a&gt;时候，我瞟了一眼它的简介&lt;code&gt;One command to generate REST APIs for any MySql Database&lt;/code&gt;, 说实话这个介绍让我眼前一亮，想想每次向后端的同学要个接口的时候，他们总是要&lt;code&gt;哼哧哼哧&lt;/code&gt;搞个半天给才能我。抱着试试看的心态，我试用了一个疗程，oh不是， 是安装并使用了一下。 说实话，体验是蛮不错的，但是体验一把过后，我想不到这个工具的使用场景，因为&lt;code&gt;你不可能把数据库的所有表都公开出来，让前端随意读写,&lt;/code&gt; 但是试试看总是不错的.&lt;/p&gt;
&lt;h1 id=&#34;1-来吧冒险一次&#34;&gt;1 来吧，冒险一次！&lt;/h1&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;code&gt;安装与使用&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;npm install -g xmysqlxmysql -h localhost -u mysqlUsername -p mysqlPassword -d databaseName浏览器打开：http://localhost:3000， 应该可以看到一堆json&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;2-特点&#34;&gt;2 特点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;产生REST Api从任何mysql 数据库 🔥🔥&lt;/li&gt;
&lt;li&gt;无论主键，外键，表等的命名规则如何，都提供API 🔥🔥&lt;/li&gt;
&lt;li&gt;支持复合主键 🔥🔥&lt;/li&gt;
&lt;li&gt;REST API通常使用：CRUD，List，FindOne，Count，Exists，Distinct&lt;!-- raw HTML omitted --&gt;批量插入，批量删除，批量读取 🔥&lt;/li&gt;
&lt;li&gt;关联表&lt;/li&gt;
&lt;li&gt;翻页&lt;/li&gt;
&lt;li&gt;排序&lt;/li&gt;
&lt;li&gt;按字段过滤 🔥&lt;/li&gt;
&lt;li&gt;行过滤 🔥&lt;/li&gt;
&lt;li&gt;综合功能&lt;/li&gt;
&lt;li&gt;Group By, Having (as query params) 🔥🔥&lt;/li&gt;
&lt;li&gt;Group By, Having (as a separate API) 🔥🔥&lt;/li&gt;
&lt;li&gt;Multiple group by in one API 🔥🔥🔥🔥&lt;/li&gt;
&lt;li&gt;Chart API for numeric column 🔥🔥🔥🔥🔥🔥&lt;/li&gt;
&lt;li&gt;Auto Chart API - (a gift for lazy while prototyping) 🔥🔥🔥🔥🔥🔥&lt;/li&gt;
&lt;li&gt;XJOIN - (Supports any number of JOINS) 🔥🔥🔥🔥🔥🔥🔥🔥🔥&lt;/li&gt;
&lt;li&gt;Supports views&lt;/li&gt;
&lt;li&gt;Prototyping (features available when using local MySql server only)&lt;/li&gt;
&lt;li&gt;Run dynamic queries 🔥🔥🔥&lt;/li&gt;
&lt;li&gt;Upload single file&lt;/li&gt;
&lt;li&gt;Upload multiple files&lt;/li&gt;
&lt;li&gt;Download file&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-api-概览&#34;&gt;3 API 概览&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;HTTP Type&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;API URL&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Comments&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Gets all REST APIs&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Lists rows of table&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;POST&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Create a new row&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;PUT&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Replaces existing row with new row&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;POST :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/bulk&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Create multiple rows - send object array in request body&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/bulk&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Lists multiple rows - /api/tableName/bulk?_ids=1,2,3&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;DELETE :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/bulk&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Deletes multiple rows - /api/tableName/bulk?_ids=1,2,3&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/:id&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Retrieves a row by primary key&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;PATCH&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/:id&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Updates row element by primary key&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;DELETE&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/:id&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Delete a row by primary key&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/findOne&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Works as list but gets single record matching criteria&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/count&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Count number of rows in a table&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/distinct&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Distinct row(s) in table - /api/tableName/distinct?_fields=col1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/:id/exists&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;True or false whether a row exists or not&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#relational-tables&#34;&gt;/api/parentTable/:id/childTable&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Get list of child table rows with parent table foreign key&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#aggregate-functions&#34;&gt;/api/tableName/aggregate&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Aggregate results of numeric column(s)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#group-by-having-as-api&#34;&gt;/api/tableName/groupby&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Group by results of column(s)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#union-of-multiple-group-by-statements&#34;&gt;/api/tableName/ugroupby&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Multiple group by results using one call&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#chart&#34;&gt;/api/tableName/chart&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Numeric column distribution based on (min,max,step) or(step array) or (automagic)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#autochart&#34;&gt;/api/tableName/autochart&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Same as Chart but identifies which are numeric column automatically - gift for lazy while prototyping&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#xjoin&#34;&gt;/api/xjoin&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;handles join&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#run-dynamic-queries&#34;&gt;/dynamic&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;execute dynamic mysql statements with params&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#upload-single-file&#34;&gt;/upload&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;upload single file&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#upload-multiple-files&#34;&gt;/uploads&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;upload multiple files&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET :fire:&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a href=&#34;https://wdd.js.org/readme-of-xmysql.html#download-file&#34;&gt;/download&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;download a file&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tableName/describe&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;describe each table for its columns&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;GET&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;/api/tables&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;get all tables in database&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;3-更多资料&#34;&gt;3 更多资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;项目地址：&lt;a href=&#34;https://github.com/o1lab/xmysql&#34;&gt;https://github.com/o1lab/xmysql&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Jenkins 全局变量参考</title>
      <link>https://wdd.js.org/posts/2019/08/tdeab2/</link>
      <pubDate>Tue, 06 Aug 2019 13:48:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/tdeab2/</guid>
      <description>&lt;h1 id=&#34;docker&#34;&gt;docker&lt;/h1&gt;
&lt;p&gt;The docker variable offers convenient access to Docker-related functions from a Pipeline script.&lt;!-- raw HTML omitted --&gt;Methods needing a slave will implicitly run a node {…} block if you have not wrapped them in one. It is a good idea to enclose a block of steps which should all run on the same node in such a block yourself. (If using a Swarm server, or any other specific Docker server, this probably does not matter, but if you are using the default server on localhost it likely will.)&lt;!-- raw HTML omitted --&gt;Some methods return instances of auxiliary classes which serve as holders for an ID and which have their own methods and properties. Methods taking a body return any value returned by the body itself. Some method parameters are optional and are enclosed with []. Reference:&lt;/p&gt;</description>
    </item>
    <item>
      <title>【笔记】操作系统：虚拟化 并发 持久化</title>
      <link>https://wdd.js.org/posts/2019/08/ym77uc/</link>
      <pubDate>Thu, 01 Aug 2019 13:20:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/ym77uc/</guid>
      <description>&lt;h1 id=&#34;虚拟化&#34;&gt;虚拟化&lt;/h1&gt;
&lt;p&gt;问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;操作系统如何虚拟化?&lt;/li&gt;
&lt;li&gt;虚拟化有什么好处?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;操作系统向下控制硬件，向上提供API给应用程序调用。 &lt;/p&gt;
&lt;p&gt;系统的资源是有限的，应用程序都需要资源才能正常运行，所以操作系统也要负责资源的分配和协调。通常计算机有以下的资源。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;cpu&lt;/li&gt;
&lt;li&gt;内存&lt;/li&gt;
&lt;li&gt;磁盘&lt;/li&gt;
&lt;li&gt;网络&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有些资源可以轮流使用，而有些资源只能被独占使用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>问题排查方法论</title>
      <link>https://wdd.js.org/posts/2019/08/vqergg/</link>
      <pubDate>Thu, 01 Aug 2019 08:20:34 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/08/vqergg/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;处理问题的关键在于收集数据，基于数据找出触发条件。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;1-处理步骤&#34;&gt;1. 处理步骤&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;收集信息并记录&lt;/strong&gt;：包括日志，截图，抓包，客户反馈等等。注意：原始数据非常重要，如果不记录下来，有可能再也无法去重现。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分析数据&lt;/strong&gt;：注意：分析数据不要有提前的结果倾向，否者只会找有利于该倾向的证据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;给出报告和建议，以及解决方案，并记录存档&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;2-概率维度&#34;&gt;2. 概率维度&lt;/h1&gt;
&lt;p&gt;问题出现的概率，是一个非常重要的指标，需要提前明确&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;必然出现&lt;/strong&gt;：在某个条件下，问题必然出现
&lt;ul&gt;
&lt;li&gt;注意：必然出现的问题，也可能是小范围内的必然，放到大范围内，就不是必然出现。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;偶然出现&lt;/strong&gt;：问题出现有一定的概率性
&lt;ul&gt;
&lt;li&gt;注意：问题偶然出现也并不一定说明问题是偶然的，有可能因为没有找到唯一确定的触发条件，导致问题看起来是偶然的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-特征维度&#34;&gt;3. 特征维度&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;时间特征&lt;/strong&gt;：集中于某一段时间产生&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;地理特征&lt;/strong&gt;：集中于某一片区域产生&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;人群特征&lt;/strong&gt;：集中于某几个人产生&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设备特征&lt;/strong&gt;：集中于某些电脑或者客户端&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>解决问题的思维模式</title>
      <link>https://wdd.js.org/posts/2019/07/bq7ih4/</link>
      <pubDate>Tue, 30 Jul 2019 20:16:39 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/bq7ih4/</guid>
      <description>&lt;p&gt;问题分为两种，一种是搜索引擎能够找到答案的，另一种是搜索引擎找不到答案的。&lt;/p&gt;
&lt;p&gt;按照80-20原则，前者估计能占到80%，而后者能占到20%。&lt;/p&gt;
&lt;h1 id=&#34;1-搜索引擎的使用&#34;&gt;1 搜索引擎的使用&lt;/h1&gt;
&lt;h2 id=&#34;11-如何让搜索引擎更加理解你&#34;&gt;1.1 如何让搜索引擎更加理解你？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你能理解搜索引擎，那么搜索引擎会更加理解你。&lt;/p&gt;&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;搜索引擎是基于关键词去搜索的，所以尽量给搜索引擎关键词，而不是大段的报错&lt;/li&gt;
&lt;li&gt;关键词的顺序很重要，把重要的关键词放在靠前的位置&lt;/li&gt;
&lt;li&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;12-如何提炼关键词&#34;&gt;1.2 如何提炼关键词？&lt;/h2&gt;
&lt;h2 id=&#34;13-不错的所搜引擎推荐&#34;&gt;1.3 不错的所搜引擎推荐？&lt;/h2&gt;
&lt;h1 id=&#34;2-当搜索引擎无法解决时&#34;&gt;2 当搜索引擎无法解决时？&lt;/h1&gt;
&lt;p&gt;当搜索引擎无法解决时，可以从哪些方面思考？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;拼写或者格式等错误&lt;/li&gt;
&lt;li&gt;上下文不理解，语境不清晰，断章取义&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>现代诗 五首 摘抄</title>
      <link>https://wdd.js.org/posts/2019/07/icwy4b/</link>
      <pubDate>Mon, 29 Jul 2019 22:20:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/icwy4b/</guid>
      <description>&lt;h1 id=&#34;梦与诗&#34;&gt;梦与诗&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;胡适&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;醉过才知酒浓&lt;!-- raw HTML omitted --&gt;爱过才知情重&lt;!-- raw HTML omitted --&gt;你不能做我的诗&lt;!-- raw HTML omitted --&gt;正如我不能做你的梦&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;情歌&#34;&gt;情歌&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;刘半农&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;天上飘着些微云&lt;!-- raw HTML omitted --&gt;地上吹着些微风&lt;!-- raw HTML omitted --&gt;啊！&lt;!-- raw HTML omitted --&gt;微风吹动了我的头发&lt;!-- raw HTML omitted --&gt;教我如何不想她？&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;沙扬娜拉-赠日本女郎&#34;&gt;沙扬娜拉 赠日本女郎&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;徐志摩&lt;/strong&gt;&lt;!-- raw HTML omitted --&gt;最是那一低头的温柔&lt;!-- raw HTML omitted --&gt;像一朵水莲花不胜凉风的娇羞&lt;!-- raw HTML omitted --&gt;道一声珍重&lt;!-- raw HTML omitted --&gt;道一声珍重&lt;!-- raw HTML omitted --&gt;那一声珍重里有蜜甜的忧愁&lt;!-- raw HTML omitted --&gt;沙扬娜拉！&lt;/p&gt;</description>
    </item>
    <item>
      <title>ghost博客 固定feature博客</title>
      <link>https://wdd.js.org/posts/2019/07/ae4atc/</link>
      <pubDate>Mon, 22 Jul 2019 17:30:35 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/ae4atc/</guid>
      <description>&lt;h1 id=&#34;docker-ghost-安装&#34;&gt;Docker ghost 安装&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	docker run -d --name myghost -p 8090:2368 -e url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;http://172.16.200.228:8090/ &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-v /root/volumes/ghost:/var/lib/ghost/content ghost
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;模板修改&#34;&gt;模板修改&lt;/h1&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ghostforbeginners.com/move-featured-posts-to-the-top-of-your-blog/&#34;&gt;https://www.ghostforbeginners.com/move-featured-posts-to-the-top-of-your-blog/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>MySql学习</title>
      <link>https://wdd.js.org/posts/2019/07/bk7r40/</link>
      <pubDate>Tue, 16 Jul 2019 21:15:53 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/bk7r40/</guid>
      <description>&lt;h1 id=&#34;表复制&#34;&gt;表复制&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 不跨数据库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;insert into subscriber_copy(id, username) select id, username &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; subscriber
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 跨数据库 需要在表名前加上数据库名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;insert into wdd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;test(id, username) select id, username &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; opensips.subscriber
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;调整表结构&#34;&gt;调整表结构&lt;/h1&gt;
&lt;h2 id=&#34;增加字段&#34;&gt;增加字段&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ALTER TABLE test ADD &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;username&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt; char(&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; null default &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;随机选择一个数据&#34;&gt;随机选择一个数据&lt;/h1&gt;
&lt;p&gt;SELECT name  FROM table_name order by rand() limit 1&lt;/p&gt;</description>
    </item>
    <item>
      <title>无题 再读唐诗宋词</title>
      <link>https://wdd.js.org/posts/2019/07/fabbky/</link>
      <pubDate>Mon, 15 Jul 2019 21:20:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/fabbky/</guid>
      <description>&lt;p&gt;【少年】慈母手中线，游子身上衣&lt;!-- raw HTML omitted --&gt;【毕业】浔阳江头夜送客，枫叶荻花秋瑟瑟&lt;!-- raw HTML omitted --&gt;【实习】千呼万唤始出来，犹抱琵琶半遮面&lt;!-- raw HTML omitted --&gt;【工作加班】衣带渐宽终不悔，为伊消得人憔悴&lt;!-- raw HTML omitted --&gt;【同学结婚】昔别君未婚，儿女忽成行&lt;!-- raw HTML omitted --&gt;【表白】欲得周郎顾，时时误拂弦&lt;!-- raw HTML omitted --&gt;【恋爱】在天愿作比翼鸟，在地愿为连理枝&lt;!-- raw HTML omitted --&gt;【分手】别有幽愁暗恨生，此时无声胜有声&lt;!-- raw HTML omitted --&gt;【春节回家】近乡情更怯，不敢问来人&lt;!-- raw HTML omitted --&gt;【车站遇友】马上相逢无纸笔，凭君传语报平安&lt;!-- raw HTML omitted --&gt;【外婆去世】洛阳亲友如相问，一片冰心在玉壶&lt;!-- raw HTML omitted --&gt;【节后会沪】两岸猿声啼不住，动车已过万重山&lt;!-- raw HTML omitted --&gt;【情人节】天阶夜色凉如水，坐看牵牛织女星&lt;!-- raw HTML omitted --&gt;【重游南京】浮云一别后，流水十年间&lt;!-- raw HTML omitted --&gt;【秦淮灯会】云想衣裳花想容，春风拂槛露华浓&lt;/p&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>从千与千寻谈编程风格</title>
      <link>https://wdd.js.org/posts/2019/07/gzfn7t/</link>
      <pubDate>Mon, 15 Jul 2019 21:06:47 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/gzfn7t/</guid>
      <description>&lt;p&gt;汤婆婆给千寻签订了契约，之后千寻的名字被抹去了，每个人都叫千寻小千，甚至千寻自己，也忘记了自己原来的名字。&lt;/p&gt;
&lt;p&gt;但是只有白先生告诫千寻，一定要记住自己的名字，否则再也无法回到原来的世界。而白先生自己，就是那个已经无法回到原来世界的人。&lt;/p&gt;
&lt;h1 id=&#34;最重要的是记住自己的名字&#34;&gt;最重要的是记住自己的名字&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;名字要有意义&lt;/li&gt;
&lt;li&gt;不要使用缩写，缩写会让你忘记自己的原来的名字&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;没有工作的人会变成妖怪的&#34;&gt;没有工作的人，会变成妖怪的&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;没有用的变量，会变成垃圾&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;别吃得太胖会被杀掉的&#34;&gt;别吃得太胖，会被杀掉的&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;别占用太多内存，会被操作系统给杀掉的&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>如何维护老代码?</title>
      <link>https://wdd.js.org/posts/2019/07/osb460/</link>
      <pubDate>Mon, 15 Jul 2019 20:10:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/osb460/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Photo by &lt;a href=&#34;https://unsplash.com/@mrblairfraser?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&#34;&gt;Blair Fraser&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/collections/1545226/my-first-collection/f94c9ebcc429826cde277e968753cd2f?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;从头开发一个软件只是小儿科，改进一个程序才显真本事。《若为自由故  自由软件之父理查德·斯托曼传》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;每个人都有从零开发软件的处女情结，但是事实上我们大多数时候都在维护别人的代码。&lt;/p&gt;
&lt;p&gt;所以，别人写的代码如何糟糕，你再抱怨也是无意义的。&lt;/p&gt;
&lt;p&gt;从内心中问自己，&lt;strong&gt;你究竟是在抱怨别人，还是不敢面对自己脆弱的内心。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;老代码的意义&#34;&gt;老代码的意义&lt;/h1&gt;
&lt;p&gt;廉颇老矣，尚能饭否。&lt;/p&gt;
&lt;p&gt;老代码的有很多缺点，如难以维护，逻辑混乱。但是老代码有唯一的好处，就是老代码经过生产环境的洗礼。这至少能证明老代码能够稳定运行，不出问题。&lt;/p&gt;
&lt;p&gt;东西，如果不出问题，就不要动它。&lt;/p&gt;
&lt;h1 id=&#34;老代码可能存在哪些问题&#34;&gt;老代码可能存在哪些问题&lt;/h1&gt;
&lt;p&gt;老代码的问题，就是我们重构的点。首先我们要明确，老代码中有哪些问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模块性不强，重复代码太多&lt;/li&gt;
&lt;li&gt;逻辑混乱，业务逻辑和框架逻辑混杂&lt;/li&gt;
&lt;li&gt;注释混乱：特别要小心，很多老代码中的注释都可能不知道祖传多少代了。如果你要按着注释去理解，很可能南辕北辙，走火入魔。&lt;strong&gt;按照代码的执行去理解业务逻辑，而不是按照注释。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;配置性的硬代码和业务逻辑混杂，这个是需要在后期抽离的&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;如果你无法理解请勿重构&#34;&gt;如果你无法理解，请勿重构&lt;/h1&gt;
&lt;p&gt;带着respect, 也带着质疑，阅读并理解老代码。取其精华，去其糟粕。如果你还不理解老代码，就别急着重构它，让子弹飞一会。&lt;/p&gt;
&lt;p&gt;等自己能够理解老代码时，再去重构。我相信在理解基础上重构，会更快，也更安全。&lt;/p&gt;
&lt;h1 id=&#34;不要大段改写要见缝插针&#34;&gt;不要大段改写，要见缝插针&lt;/h1&gt;
&lt;p&gt;不要在老代码中直接写自己的代码，应该使用函数。&lt;/p&gt;
&lt;p&gt;在老代码中改动一行，调用自己写的函数。&lt;/p&gt;
&lt;p&gt;几乎每种语言中都有函数这种组织代码的形式，通过见缝插针调用函数的方式。能够尽量减少老代码的改动，如果出现问题，也比较容易调试。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1秒搭建静态文件服务器</title>
      <link>https://wdd.js.org/posts/2019/07/stxzl6/</link>
      <pubDate>Fri, 12 Jul 2019 21:24:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/stxzl6/</guid>
      <description>&lt;h1 id=&#34;基于python&#34;&gt;基于python&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 基于python2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python -m SimpleHTTPServer &lt;span style=&#34;color:#ae81ff&#34;&gt;8088&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 基于python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python -m http.server &lt;span style=&#34;color:#ae81ff&#34;&gt;8088&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;基于nodejs&#34;&gt;基于Node.js&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zeit/serve&#34;&gt;https://github.com/zeit/serve&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/http-party/http-server&#34;&gt;https://github.com/http-party/http-server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>python request 库学习</title>
      <link>https://wdd.js.org/posts/2019/07/ya30bi/</link>
      <pubDate>Fri, 12 Jul 2019 11:21:23 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/ya30bi/</guid>
      <description>&lt;h1 id=&#34;上传文件&#34;&gt;上传文件&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import requests
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;headers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ssid&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1234&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;files &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;file&amp;#39;&lt;/span&gt;: open&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yourfile.tar.gz&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:1345/fileUpload/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests.post&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;url, files&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;files, headers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;headers&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;r.status_code&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>编码规则</title>
      <link>https://wdd.js.org/posts/2019/07/pxdvcx/</link>
      <pubDate>Tue, 09 Jul 2019 09:49:33 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/pxdvcx/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;变量不要使用缩写，要见名知意&lt;/strong&gt;。现代化的IDE都提供自动补全功能，即使是VIM, 也可以用ctrl+n， ctrl+p, ctrl+y, ctrl+e去自动补全。 &lt;strong&gt;变量名缩写真是灾难。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Docker相关问题及解决方案</title>
      <link>https://wdd.js.org/posts/2019/07/fpbkzg/</link>
      <pubDate>Mon, 08 Jul 2019 11:59:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/07/fpbkzg/</guid>
      <description>&lt;h1 id=&#34;使用http仓库&#34;&gt;使用HTTP仓库&lt;/h1&gt;
&lt;p&gt;默认docker不允许使用HTTP的仓库，只允许HTTPS的仓库。如果你用http的仓库，可能会报如下的错误。&lt;/p&gt;
&lt;p&gt;Get https://registry:5000/v1/_ping: http: server gave HTTP response to HTTPS client&lt;/p&gt;
&lt;p&gt;解决方案是：配置insecure-registries使docker使用我们的http仓库。&lt;/p&gt;
&lt;p&gt;在 &lt;strong&gt;/etc/docker/daemon.json 文件中添加&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;insecure-registries&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;registry:5000&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;harbor:5000&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;重启docker&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service docker restart
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 执行命令 docker info | grep insecure 应该可以看到不安全仓库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;存储问题&#34;&gt;存储问题&lt;/h1&gt;
&lt;p&gt;有些docker的存储策略并未指定，在运行容器时，可能会报如下错误&lt;/p&gt;
&lt;p&gt;/usr/bin/docker-current: Error response from daemon: error creating overlay mount to&lt;/p&gt;
&lt;p&gt;解决方案：&lt;/p&gt;
&lt;p&gt;vim /etc/sysconfig/docker-storage&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DOCKER_STORAGE_OPTIONS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-s overlay&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl daemon-reload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service docker restart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    <item>
      <title>Graphviz教程 你学废了吗？</title>
      <link>https://wdd.js.org/posts/2019/06/</link>
      <pubDate>Thu, 27 Jun 2019 08:59:47 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/06/</guid>
      <description>&lt;p&gt;语雀官方的Graphviz感觉太复杂，我还是写一个简单一点的吧。&lt;/p&gt;
&lt;h1 id=&#34;两个圆一条线&#34;&gt;两个圆一条线&lt;/h1&gt;
&lt;p&gt;注意&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;graph&lt;/strong&gt;是用来标记无向图，里面只能用&amp;ndash;，不能用-&amp;gt;，否则无法显然出图片&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;digraph&lt;/strong&gt;用来标记有向图，里面只用用-&amp;gt; 不能用&amp;ndash;, 否则无法显然出图片&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;graph easy &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a -- b;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/06/2022-10-29-20-07-29.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;连线加个备注&#34;&gt;连线加个备注&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;graph easy&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a--b &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;你真漂亮&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/06/2022-10-29-20-07-38.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;你真漂亮要大点红色显眼点&#34;&gt;你真漂亮，要大点，红色显眼点&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;graph easy&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a--b &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;你真漂亮&amp;#34;&lt;/span&gt;, fontcolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;red, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;34&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/06/2022-10-29-20-07-47.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;两个圆一个带有箭头的线&#34;&gt;两个圆，一个带有箭头的线&lt;/h1&gt;
&lt;p&gt;注意，这里用的&lt;strong&gt;digraph， 用来表示有向图&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;digraph easy &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a -&amp;gt; b;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/06/2022-10-29-20-07-55.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;如何画虚线呢&#34;&gt;如何画虚线呢？&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;digraph easy &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  a -&amp;gt; b &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;style&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dashed&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/06/2022-10-29-20-08-03.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;椭圆太单调了有没有其他形状&#34;&gt;椭圆太单调了，有没有其他形状？&lt;/h1&gt;
&lt;p&gt;shape&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;box  矩形&lt;/li&gt;
&lt;li&gt;polygon&lt;/li&gt;
&lt;li&gt;ellipse&lt;/li&gt;
&lt;li&gt;circle  圆形&lt;/li&gt;
&lt;li&gt;point&lt;/li&gt;
&lt;li&gt;egg 蛋形&lt;/li&gt;
&lt;li&gt;triangle 三角形&lt;/li&gt;
&lt;li&gt;plaintext 使用文字&lt;/li&gt;
&lt;li&gt;diamond 钻石型&lt;/li&gt;
&lt;li&gt;trapezium 梯形&lt;/li&gt;
&lt;li&gt;parallelogram 斜的长方形&lt;/li&gt;
&lt;li&gt;house&lt;/li&gt;
&lt;li&gt;hexagon&lt;/li&gt;
&lt;li&gt;octagon&lt;/li&gt;
&lt;li&gt;doublecircle&lt;/li&gt;
&lt;li&gt;doubleoctagon&lt;/li&gt;
&lt;li&gt;tripleoctagon&lt;/li&gt;
&lt;li&gt;invtriangle&lt;/li&gt;
&lt;li&gt;invtrapezium&lt;/li&gt;
&lt;li&gt;invhouse&lt;/li&gt;
&lt;li&gt;Mdiamond&lt;/li&gt;
&lt;li&gt;Msquare&lt;/li&gt;
&lt;li&gt;Mcircle&lt;/li&gt;
&lt;li&gt;none&lt;/li&gt;
&lt;li&gt;record&lt;/li&gt;
&lt;li&gt;Mrecord&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/posts/2019/06/2022-10-29-20-08-11.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何学习网络协议？</title>
      <link>https://wdd.js.org/posts/2019/01/books-about-network-protocol/</link>
      <pubDate>Fri, 18 Jan 2019 21:32:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/01/books-about-network-protocol/</guid>
      <description>&lt;h1 id=&#34;如何学习网络协议&#34;&gt;如何学习网络协议？&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;大学时，学到网络协议的7层模型时，老师教了大家一个顺口溜：物数网传会表应。并说这是重点，年年必考，5分的题目摆在这里，你们爱背不背。
考试的时候，果然遇到这个问题，搜索枯肠，只能想到这7个字的第一个字，因为这5分，差点挂科。
后来工作面试，面试官也是很喜欢七层模型，三次握手之类的问题，但是遇到这些问题时，总是觉得很心虚。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;1-协议分层&#34;&gt;1. 协议分层&lt;/h1&gt;
&lt;p&gt;四层网络协议模型中，应用层以下一般都是交给操作系统来处理。应用层对于四层模型来说，仅仅是冰山一角。海面下巨复杂的三层协议，都被操作系统给隐藏起来了，一般我们在页面上发起一个ajax请求，看见了network面板多了一个http请求，至于底层是如何实现的，我们并不关心。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://assets.processon.com/chart_image/5c41d889e4b0641c83e1f059.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;应⽤层&lt;/code&gt;负责处理特定的应⽤程序细节。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;运输层&lt;/code&gt;运输层主要为两台主机上的应⽤程序提供端到端的通信。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;网络层&lt;/code&gt;处理理分组在⽹网络中的活动，例例如分组的选路&lt;/li&gt;
&lt;li&gt;&lt;code&gt;链路层&lt;/code&gt;处理理与电缆(或其他任何传输媒介)的物理理接⼝口细节&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面重点讲一下运输层和网络层&lt;/p&gt;
&lt;h2 id=&#34;11-运输层的两兄弟&#34;&gt;1.1. 运输层的两兄弟&lt;/h2&gt;
&lt;p&gt;运输层有两个比较重要的协议。tcp和udp。&lt;/p&gt;
&lt;p&gt;大哥tcp是比较&lt;code&gt;严谨认真、温柔体贴、慢热内向&lt;/code&gt;的协议，发出去的消息，总是一个一个认真检查，等待对方回复和确认，如果一段时间内，对方没有回复确认消息，还会再次发送消息，如果对方回复说你发的太快了，tcp还会体贴的把发送消息的速度降低。&lt;/p&gt;
&lt;p&gt;弟弟udp则比较可爱呆萌、调皮好动、不负责任的协议。哥哥tcp所具有的特点，弟弟udp一个也没有。但是&lt;code&gt;有的人说不清哪里好 但就是谁都替代不了&lt;/code&gt;，udp没有tcp那些复杂的校验和重传等复杂的步骤，所以它发送消息非常快，而且并不保证对方一定收到。如果对方收不到消息，那么udp就会呆萌的看着你，笑着对你说：&lt;code&gt;我已经尽力了&lt;/code&gt;。一般语音而视频数据都是用udp协议传输的，因为音频或者视频卡了一下并不影响整体的质量，而对实时性的要求会更高。&lt;/p&gt;
&lt;h2 id=&#34;12-运输层和网络层的区别&#34;&gt;1.2. 运输层和网络层的区别&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;运输层关注的是端到端层面&lt;/code&gt;，及End1到End2，忽略中间的任何点。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;网络层关注两点之间的层面&lt;/code&gt;，即hop1如何到hop2，hop2如何到hop3&lt;/li&gt;
&lt;li&gt;&lt;code&gt;网络层并不保证消息可靠性&lt;/code&gt;，可靠性上层的传输层负责。TCP采用超时重传，分组确认的机制，保证消息不会丢失。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://assets.processon.com/chart_image/5c41e125e4b056ae29f55886.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;从下图tcp, udp, ip协议中，可以发现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传输层的tcp和udp都是有源端口和目的端口，但是没有ip字段&lt;/li&gt;
&lt;li&gt;源ip和目的ip只在ip数据报中&lt;/li&gt;
&lt;li&gt;理解各个协议，关键在于理解报文的各个字段的含义&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://assets.processon.com/chart_image/5c41e22fe4b056ae29f55947.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;13-ip和端口号的真正含义&#34;&gt;1.3. ip和端口号的真正含义&lt;/h2&gt;
&lt;p&gt;上个章节讲到运输层和网络层的区别，其中端口号被封装在运输层，ip被封装到网络成，&lt;/p&gt;
&lt;p&gt;那么端口号和ip地址到底有什么区别呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ip用来用来标记主机的位置&lt;/li&gt;
&lt;li&gt;端口号用来标记该数据应该被目标主机上的哪个应用程序去处理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://assets.processon.com/chart_image/5c41e3a1e4b0fa03ce9f52c9.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;14-数据在协议栈的流动-封装与分用&#34;&gt;1.4. 数据在协议栈的流动 封装与分用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;当发送消息时，数据在向下传递时，经过不同层次的协议处理，打上各种头部信息&lt;/li&gt;
&lt;li&gt;当接受消息时，数据在向上传递，通过不同的头部信息字段，才知道要交给上层的那个模块来处理。比如一个ip包，如果没有头部信息，那么这个消息究竟是交给tcp协议来处理，还是udp来处理，就不得而知了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://assets.processon.com/chart_image/5c41e531e4b056ae29f55ab3.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-深入阅读好书推荐&#34;&gt;2. 深入阅读，好书推荐&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《http权威指南》 &lt;code&gt;有人说这本书太厚，偷偷告诉你，其实这本书并厚，因为这本书的后面的30%部分都是附录，这本书的精华是前50%的部分&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;《图解http》、《图解tcp/ip》&lt;code&gt;这两本图解的书，知识点讲的都是比较通俗易懂的，适合入门&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;《tcp/ip 详解 卷1》&lt;code&gt;这本书，让你知其然，更知其所以然&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;《tcp/ip 基础》、《tcp/ip 路由技术》&lt;code&gt;这两本书，会让你从不同角度思考协议&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;《精通wireshark》、《wireshark网络分析实战》&lt;code&gt;如果你看了很多书，却从来没有试过网络抓包，那你只是懂纸上谈兵罢了。你永远无法理解tcp三次握手的怦然心动，与四次分手的刻骨铭心。&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>呼叫中心简史</title>
      <link>https://wdd.js.org/posts/2019/01/call-center-brief-history/</link>
      <pubDate>Tue, 15 Jan 2019 21:04:11 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2019/01/call-center-brief-history/</guid>
      <description>&lt;h1 id=&#34;什么是呼叫中心&#34;&gt;什么是呼叫中心？&lt;/h1&gt;
&lt;p&gt;呼叫中心又称为客户服务中心。有以下关键词&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CTI&lt;/li&gt;
&lt;li&gt;通信网络&lt;/li&gt;
&lt;li&gt;计算机&lt;/li&gt;
&lt;li&gt;企业级&lt;/li&gt;
&lt;li&gt;高质量、高效率、全方位、综合信息服务&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;呼叫中心历史&#34;&gt;呼叫中心历史&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;1956年美国泛美航空公司建成世界第一家呼叫中心。&lt;/p&gt;&lt;/blockquote&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;阶段&lt;/th&gt;
          &lt;th&gt;行业范围&lt;/th&gt;
          &lt;th&gt;技术&lt;/th&gt;
          &lt;th&gt;功能与意义&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;第一代呼叫中心&lt;/td&gt;
          &lt;td&gt;民航&lt;/td&gt;
          &lt;td&gt;PBX、电话排队&lt;/td&gt;
          &lt;td&gt;主要服务由人工完成&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;第二代呼叫中心&lt;/td&gt;
          &lt;td&gt;银行、生活&lt;/td&gt;
          &lt;td&gt;IVR(交互式语音应答)、DTMF&lt;/td&gt;
          &lt;td&gt;显著提高工作效率，提供全天候服务&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;第三代呼叫中心&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;CTI(电脑计算机集成)&lt;/td&gt;
          &lt;td&gt;语音数据同步，客户信息存储与查阅，个性化服务，自动化&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;第四代呼叫中心&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;接入电子邮件、互联网、手机短信等&lt;/td&gt;
          &lt;td&gt;多渠道接入、多渠道统一排队&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;第五代呼叫中心&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;接入社交网络、社交媒体(微博、微信等)&lt;/td&gt;
          &lt;td&gt;文本交谈，音频视频沟通&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;呼叫中心分类&#34;&gt;呼叫中心分类&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;按呼叫方式分类
&lt;ul&gt;
&lt;li&gt;外呼型呼叫中心（如电话营销）&lt;/li&gt;
&lt;li&gt;客服型呼叫中心（如客户服务）&lt;/li&gt;
&lt;li&gt;混合型呼叫中心 （如营销和客服）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;按技术架构分类
&lt;ul&gt;
&lt;li&gt;交换机&lt;/li&gt;
&lt;li&gt;板卡&lt;/li&gt;
&lt;li&gt;软交换（IPCC）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://assets.processon.com/chart_image/5c3de07ee4b0641c83dd3eff.png&#34;&gt;
【交换机类型呼叫中心】&lt;/p&gt;</description>
    </item>
    <item>
      <title>时间花在哪里，你就会成为什么样的人</title>
      <link>https://wdd.js.org/posts/2018/01/where-time-you-spend-what-you-will-be/</link>
      <pubDate>Tue, 01 Jan 2019 21:02:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/where-time-you-spend-what-you-will-be/</guid>
      <description>&lt;h1 id=&#34;2008-2018-十年往事如昨&#34;&gt;2008-2018 十年，往事如昨&lt;/h1&gt;
&lt;p&gt;2018年已经是昨天，今天是2019的第一天。&lt;/p&gt;
&lt;p&gt;2008年已经是10年前，10年前的傍晚，我走在南京仙林的一个大街上，提着一瓶矿泉水，擦着额头的汗水，仰头看着大屏幕上播放着北京奥运会的开幕式。&lt;/p&gt;
&lt;p&gt;10年前的夏天，我带着一步诺基亚手机功能机，独自一人去了南京。&lt;/p&gt;
&lt;p&gt;坐过绣球公园的石凳，穿过天妃宫的回廊，吹过阅江楼的凉爽的江风，踏着古老斑驳的城墙，在林荫小路的长椅上，我想着10年后我会在哪里？做着什么事情？&lt;/p&gt;
&lt;p&gt;往事如昨，而今将近而立，但是依然觉得自己还是10年的那个独自出去玩的小男孩。&lt;/p&gt;
&lt;h1 id=&#34;2018-读了10年都没有读完的书五味杂陈&#34;&gt;2018 读了10年都没有读完的书，五味杂陈&lt;/h1&gt;
&lt;p&gt;2018年，在我做手术前，我觉得自己出了工作的时间外，大多数时间都在看书。2018年这一年看的书，要比2008到2018年这十年间的看的书都要多。这都归功于我对每天的看书都有定量的计划，一旦按照这个计划实行几个月，积累的效果还是非常明显的。&lt;/p&gt;
&lt;p&gt;2018年，手机几乎成为人的四肢之外的第五肢。对大多人来说，上厕所可以不带纸，但是不能不带手机。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;各种APP, 都在极力的吸引用户多花点时间在自己身上&lt;/li&gt;
&lt;li&gt;信息流充斥着各种毫无营养，专门吸人眼球的垃圾新闻，但是这种新闻的阅读量还是蛮大的&lt;/li&gt;
&lt;li&gt;各种借钱，信用卡，花呗等都像青楼的小姐，妩媚的笑容，说道：官人，进来做一做&lt;/li&gt;
&lt;li&gt;共享单车，在今年退潮之后，才发现自己都在裸泳&lt;/li&gt;
&lt;li&gt;比特币，挖矿机。不知道谁割了谁的韭菜，总希望有下一个傻子来接盘，最后发现自己可能就是最后一个傻子&lt;/li&gt;
&lt;li&gt;AI，人工智能很火，放佛就快要进入终结者那样的世界&lt;/li&gt;
&lt;li&gt;锤子垮了，曾经吹过的牛逼，曾经理想主义终于脱去那又黑又亮的面具&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;图灵测试（The Turing test）由艾伦·麦席森·图灵发明，指测试者与被测试者（一个人和一台机器）隔开的情况下，通过一些装置（如键盘）向被测试者随意提问。
进行多次测试后，如果有超过30%的测试者不能确定出被测试者是人还是机器，那么这台机器就通过了测试，并被认为具有人类智能。图灵测试一词来源于计算机科学和密码学的先驱阿兰·麦席森·图灵写于1950年的一篇论文《计算机器与智能》，其中30%是图灵对2000年时的机器思考能力的一个预测，目前我们已远远落后于这个预测。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;最后说一下图灵测试，在AI方面，这个测试无人不知。一个机器如果通过了图灵测试，则说明该机器具有了只能。但是三体的作者大刘曾经说过一句话，给我一种醍醐灌顶的感觉，&lt;code&gt;假如一个机器人有能力通过图灵测试，却假装无法通过，你说这个机器是否具有人工智能&lt;/code&gt;。所以大刘的这种说法才更加让人恐惧。机器人能通过图灵测试，只说明这个机器人具有了智能。但是现阶段的智能只不过是条件反射，或者是基于概率计算的结果。后者这种能通话测试，却假装无法通过的智能。这不仅仅是智能，而是&lt;code&gt;机器的城府&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;有智能的机器并不可怕，有城府的机器人才是真正的可怕。&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;如果梦中更加幸福快乐为什么要回到现实&#34;&gt;如果梦中更加幸福快乐，为什么要回到现实&lt;/h1&gt;
&lt;p&gt;火影的最后，大筒木辉夜使用无限月读将世界上的所有人都带入梦境，每个人的查克拉都被吸取，并作为神树的养料。&lt;/p&gt;
&lt;p&gt;如果真的存在大筒木这样的上帝，那么时间就是查克拉。人类唯一真正拥有过的东西，&lt;strong&gt;时间&lt;/strong&gt;，将作为神树的养料，从每个人身上提取。&lt;/p&gt;
&lt;p&gt;各种具有吸引力的术，其实可以理解为无限月读，让人沉醉于梦幻中。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;如果梦中更加幸福快乐，为什么要回到现实中承受压力与悲哀呢？&lt;/code&gt; 目前我无法回复自己的这个问题，期待2019年我可以得到这个答案。&lt;/p&gt;
&lt;h1 id=&#34;工作方面&#34;&gt;工作方面&lt;/h1&gt;
&lt;p&gt;2019年，我会在做一些后端方面的工作，努力加油吧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>深入理解 JavaScript中的变量、值、函数传参</title>
      <link>https://wdd.js.org/posts/2018/12/deep-in-javascript-variable-value-arguments/</link>
      <pubDate>Mon, 17 Dec 2018 15:24:15 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/12/deep-in-javascript-variable-value-arguments/</guid>
      <description>&lt;h1 id=&#34;1-demo&#34;&gt;1. demo&lt;/h1&gt;
&lt;p&gt;如果你对下面的代码没有任何疑问就能自信的回答出输出的内容，那么本篇文章就不值得你浪费时间了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;var1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;var2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;var3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;var4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;var3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;var1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;var3&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;var1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;changed&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;var3&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;changed&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;var3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;changed&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;test&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;var1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;var3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;var1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;var2&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;var3&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;var4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;2-深入理解原始类型&#34;&gt;2. 深入理解原始类型&lt;/h1&gt;
&lt;p&gt;原始类型有5个 &lt;code&gt;Undefinded, Null, Boolean, Number, String&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;21-原始类型变量没有属性和方法&#34;&gt;2.1. 原始类型变量没有属性和方法&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 抬杠, 下面的length属性，toString方法怎么有属性和方法呢？
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;oooo&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;原始类型中，有三个特殊的引用类型&lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;，在操作原始类型时，原始类型变量会转换成对应的&lt;code&gt;基本包装类型&lt;/code&gt;变量去操作。参考&lt;code&gt;JavaScript高级程序设计 5.6 基本包装类型。&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;22-原始类型值不可变&#34;&gt;2.2. 原始类型值不可变&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;原始类型的变量的值是不可变的，只能给变量赋予新的值。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面给出例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// str1 开始的值是aaa
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;aaa&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 首先创建一个能容纳6个字符串的新字符串
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 然后再这个字符串中填充 aaa和bbb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 最后销毁字符串 aaa和bbb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 而不能理解成在str1的值aaa后追加bbb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bbb&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;其他原始类型的值也是不可变的&lt;/strong&gt;, 例如数值类型的。&lt;/p&gt;
&lt;h2 id=&#34;23-原始类型值是字面量&#34;&gt;2.3. 原始类型值是字面量&lt;/h2&gt;
&lt;h1 id=&#34;3-变量和值有什么区别&#34;&gt;3. 变量和值有什么区别？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;不是每一个值都有地址，但每一个变量有。&lt;/code&gt;《Go程序设计语言》&lt;/li&gt;
&lt;li&gt;&lt;code&gt;变量没有类型，值有。变量可以用来保存任何类型的值。&lt;/code&gt;《You-Dont-Know-JS》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;变量都是有内存地址的，变量有用来保存各种类型的值；不同类型的值，占用的空间不同。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 检测的不是变量a的类型，而是a的值1的类型
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;4-变量访问有哪些方式&#34;&gt;4. 变量访问有哪些方式？&lt;/h1&gt;
&lt;p&gt;变量访问的方式有两种：&lt;/p&gt;</description>
    </item>
    <item>
      <title>WTF!! Vue数组splice方法无法正常工作</title>
      <link>https://wdd.js.org/posts/2018/12/vue-array-splice-not-work/</link>
      <pubDate>Wed, 12 Dec 2018 20:29:16 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/12/vue-array-splice-not-work/</guid>
      <description>&lt;p&gt;当函数执行到this.agents.splice()时，我设置了断点。发现传参index是0，但是页面上的列表项对应的第一行数据没有被删除，&lt;/p&gt;
&lt;p&gt;WTF！！！ 这是什么鬼！然后我打开Vue Devtools, 然后刷新了一下，发现那个数组的第一项还是存在的。什么鬼？？&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;removeOneAgentByIndex&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;agents&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;splice&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后我就谷歌了一下，发现这个&lt;a href=&#34;https://stackoverflow.com/questions/48484773/splice-not-working-properly-my-object-list-vuejs&#34;&gt;splice not working properly my object list VueJs&lt;/a&gt;, 大概意思是v-for的时候最好给列表项绑定&lt;code&gt;:key=&lt;/code&gt;。然后我是试了这个方法，发现没啥作用。&lt;/p&gt;
&lt;p&gt;最终我决定，单步调试，&lt;strong&gt;如果我发现该问题出在Vue自身，那我就该抛弃Vue, 学习React了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;单步调试中出现一个异常的情况，removeOneAgentByIndex是被A函数调用的，A函数由websocket事件驱动。正常情况下应该触发一次的事件，服务端却发送了两次到客户端。由于事件重复，第一次执行A删除时，实际上removeOneAgentByIndex是执行成功了，但是重复的第二个事件到来时，A函数又往agents数组中添加了一项。导致看起来，removeOneAgentByIndex函数执行起来似乎没有设么作用。而且这两个重复的事件是在几乎是在同一时间发送到客户端，所以我几乎花了将近一个小时去解决这个bug。&lt;code&gt;引起这个bug的原因是事件重复，所以我在前端代码中加入事件去重功能，最终解决这个问题。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我记得之前看过一篇文章，一个开发者调通过回调函数计费，回调函数是由事件触发，但是没想到有时候事件会重发，导致重复计费。后来这名开发者在自己的代码中加入事件去重的功能，最终解决了这个问题。&lt;/p&gt;
&lt;p&gt;事后总结：我觉得我不该怀疑Vue这种库出现了问题，但是我又不禁去怀疑。&lt;/p&gt;
&lt;p&gt;通过这个bug, 我也学到了第二方法，可以删除Vue数组中的某一项，参考下面代码。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Only in 2.2.0+: Also works with Array + index.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;removeOneAgentByIndex&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;$delete&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;agents&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;另外Vue devtools有时候并不会实时的观测到组件属性的变化，即使点了Refresh按钮。如果点了Refresh按钮还不行，那建议你重新打开谷歌浏览器的devtools面板。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Node.js 如何找出循环依赖的文件？如何解决循环依赖问题？</title>
      <link>https://wdd.js.org/posts/2018/10/how-to-fix-circular-dependencies-in-node-js/</link>
      <pubDate>Mon, 29 Oct 2018 09:21:03 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/10/how-to-fix-circular-dependencies-in-node-js/</guid>
      <description>&lt;p&gt;本文重点是讲解&lt;code&gt;如何解决循环依赖这个问题&lt;/code&gt;。关心这个问题是如何产生的，可以自行谷歌。&lt;/p&gt;
&lt;h1 id=&#34;如何重现这个问题&#34;&gt;如何重现这个问题&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// a.js
const {sayB} = require(&amp;#39;./b.js&amp;#39;)

sayB()

function sayA () {
  console.log(&amp;#39;say A&amp;#39;)
}

module.exports = {
  sayA
}
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// b.js
const {sayA} = require(&amp;#39;./a.js&amp;#39;)

sayA()

function sayB () {
  console.log(&amp;#39;say B&amp;#39;)
}

module.exports = {
  sayB
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行下面的代码&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  test git:(master) ✗ node a.js
/Users/dd/wj-gitlab/tools/test/b.js:3
sayA()
^

TypeError: sayA is not a function
    at Object.&amp;lt;anonymous&amp;gt; (/Users/dd/wj-gitlab/tools/test/b.js:3:1)
    at Module._compile (module.js:635:30)
    at Object.Module._extensions..js (module.js:646:10)
    at Module.load (module.js:554:32)
    at tryModuleLoad (module.js:497:12)
    at Function.Module._load (module.js:489:3)
    at Module.require (module.js:579:17)
    at require (internal/module.js:11:18)
    at Object.&amp;lt;anonymous&amp;gt; (/Users/dd/wj-gitlab/tools/test/a.js:1:78)
    at Module._compile (module.js:635:30)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;sayA is not a function&lt;/code&gt;那么sayA是个什么呢，实际上它是 &lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>shields小徽章是如何生成的？以及搭建自己的shield服务器</title>
      <link>https://wdd.js.org/posts/2018/10/how-to-make-shields-badge/</link>
      <pubDate>Mon, 29 Oct 2018 09:14:43 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/10/how-to-make-shields-badge/</guid>
      <description>&lt;h1 id=&#34;shields小徽章介绍&#34;&gt;shields小徽章介绍&lt;/h1&gt;
&lt;p&gt;一般开源项目都会有一些小徽章来标识项目的状态信息，并且这些信息是会自动更新的。在shields的官网https://shields.io/#/, 上面有各种各样的小图标，并且有很多自定义的方案。&lt;/p&gt;
&lt;h1 id=&#34;起因如何给私有部署的jenkins制作shields服务&#34;&gt;起因：如何给私有部署的jenkins制作shields服务？&lt;/h1&gt;
&lt;p&gt;私有部署的jenkins是用来打包docker镜像的，而我想获取最新的项目打包的jenkins镜像信息。但是私有的jenkins项目信息，公网的shields服务是无法获取其信息的。那么如果搭建一个私有的shields服务呢？&lt;/p&gt;
&lt;h1 id=&#34;第一步如何根据一些信息制作svg图标&#34;&gt;第一步：如何根据一些信息，制作svg图标&lt;/h1&gt;
&lt;p&gt;查看shields图标的源码，可以看到这些图标都是svg格式的图标。然后的思路就是，&lt;code&gt;将文字信息转成svg图标&lt;/code&gt;。最后我发现这个思路是个死胡同，&lt;/p&gt;
&lt;p&gt;有个npm包叫做，&lt;a href=&#34;https://github.com/shrhdk/text-to-svg&#34;&gt;text-to-svg&lt;/a&gt;, 似乎可以将文本转成svg, 但是看了文本转svg的效果，果断就放弃了。&lt;/p&gt;
&lt;p&gt;最后回到起点，看了shields官方仓库，发现一个templates目录，豁然开朗。&lt;code&gt;原来svg图标是由svg的模板生成的&lt;/code&gt;，每次生成图标只需要将信息添加到模板中，然后就可以渲染出svg字符串了。&lt;/p&gt;
&lt;p&gt;顺着这个思路，发现一个包&lt;a href=&#34;https://github.com/albanm/shields-lightweight&#34;&gt;shields-lightweight&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var shields = require(&amp;#39;shields-lightweight&amp;#39;);
var svgBadge = shields.svg(&amp;#39;subject&amp;#39;, &amp;#39;status&amp;#39;, &amp;#39;red&amp;#39;, &amp;#39;flat&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个包的确可以生成和shields一样的小徽章，但是如果徽章中有中文，那么中文就会溢出。&lt;code&gt;因为一个中文字符的宽度要比一个英文字符宽很多。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;所以我就fork了这个项目，重写了图标宽度计算的方式。&lt;a href=&#34;https://github.com/wangduanduan/shields-less&#34;&gt;shields-less&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;npm install shields-less

var shieldsLess = require(&amp;#39;shields-less&amp;#39;)
var svgBadge = shieldsLess.svg({
    leftText: &amp;#39;npm 黄河远上白云间&amp;#39;,
    rightText: &amp;#39;hello 世界&amp;#39;
})

var svgBadge2 = shieldsLess.svg({
    leftText: &amp;#39;npm 黄河远上白云间&amp;#39;,
    rightText: &amp;#39;hello 世界&amp;#39;,
    style: &amp;#39;square&amp;#39;
})

var svgBadge2 = shieldsLess.svg({
    leftText: &amp;#39;npm 黄河远上白云间&amp;#39;,
    rightText: &amp;#39;hello 世界&amp;#39;,
    leftColor: &amp;#39;#e64a19&amp;#39;,
    rightColor: &amp;#39;#448aff&amp;#39;,
    style: &amp;#39;square&amp;#39; // just two style: square and plat(default)
})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;渲染后的效果，查看在线demo: &lt;a href=&#34;https://wdd.js.org/shields-less/example/&#34;&gt;https://wdd.js.org/shields-less/example/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Express代理中间件问题与解决方案</title>
      <link>https://wdd.js.org/posts/2018/09/express-middleware-order-proxy-problem/</link>
      <pubDate>Sun, 30 Sep 2018 09:41:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/09/express-middleware-order-proxy-problem/</guid>
      <description>&lt;h1 id=&#34;前后端分离应用的架构&#34;&gt;前后端分离应用的架构&lt;/h1&gt;
&lt;p&gt;在前后端分离架构中，为了避免跨域以及暴露内部服务地址。一般来说，我会在Express这层中加入一个反向代理。&lt;/p&gt;
&lt;p&gt;所有向后端服务访问的请求，都通过代理转发到内部的各个服务。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://on-img.com/chart_image/5ac48a5fe4b00dc8a02d30f4.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个反向代理服务器，做起来很简单。用&lt;a href=&#34;https://github.com/chimurai/http-proxy-middleware&#34;&gt;http-proxy-middleware&lt;/a&gt;这个模块，几行代码就可以搞定。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// app.js
Object.keys(proxyTable).forEach(function (context) {
  app.use(proxyMiddleware(context, proxyTable[context]))
})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;http-proxy-middleware实际上是对于&lt;a href=&#34;https://github.com/nodejitsu/node-http-proxy&#34;&gt;node-http-proxy&lt;/a&gt;的更加简便的封装。node-http-proxy是http-proxy-middleware的底层包，如果node-http-proxy有问题，那么这个问题就会影响到http-proxy-middleware这个包。&lt;/p&gt;
&lt;h1 id=&#34;最近的bug&#34;&gt;最近的bug&lt;/h1&gt;
&lt;p&gt;http-proxy-middleware最近有个问题，请求体在被代理转发前，如果请求体被解析了。那么后端服务将会收不到请求结束的消息，从浏览器的网络面板可以看出，一个请求一直在pending状态。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/chimurai/http-proxy-middleware/issues/299&#34;&gt;Cannot proxy after parsing body #299&lt;/a&gt;, 实际上这个问题在node-http-proxy也被提出过，而且处于open状态。&lt;a href=&#34;https://github.com/nodejitsu/node-http-proxy/issues/1279&#34;&gt;POST fails/hangs examples to restream also not working #1279&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目前这个bug还是处于open状态，但是还是有解决方案的。就是&lt;code&gt;将请求体解析的中间件挂载在代理之后&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;下面的代码，express.json()会对json格式的请求体进行解析。方案1在代理前就进行body解析，所有格式是json的请求体都会被解析。&lt;/p&gt;
&lt;p&gt;但是有些走代理的请求，如果我们并不关心请求体的内容是什么，实际上我们可以不解析那些走代理的请求。所以，可以先挂载代理中间件，然后挂载请求体解析中间件，最后挂载内部的一些接口服务。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 方案1 bad
app.use(express.json())
Object.keys(proxyTable).forEach(function (context) {
  app.use(proxyMiddleware(context, proxyTable[context]))
})
app.use(&amp;#39;/api&amp;#39;, (req, res, next)=&amp;gt; {

})

// 方案2 good
Object.keys(proxyTable).forEach(function (context) {
  app.use(proxyMiddleware(context, proxyTable[context]))
})
app.use(express.json())
app.use(&amp;#39;/api&amp;#39;, (req, res, next)=&amp;gt; {

})
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;
&lt;p&gt;经过这个问题，我对Express中间件的挂载顺序有了更加深刻的认识。&lt;/p&gt;
&lt;p&gt;同时，在使用第三方包的过程中，如果该包bug，那么也需要自行找出合适的解决方案。而这个能力，往往就是高手与新手的区别。&lt;/p&gt;</description>
    </item>
    <item>
      <title>IE11跨域检查跨域设置</title>
      <link>https://wdd.js.org/posts/2018/08/ie-cross-domain-settings/</link>
      <pubDate>Thu, 23 Aug 2018 10:20:10 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/08/ie-cross-domain-settings/</guid>
      <description>&lt;p&gt;IE11有安全设置中有两个选项，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跨域浏览窗口和框架&lt;/li&gt;
&lt;li&gt;通过域访问数据源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果上面两个选项被禁用，那么IE11会拒绝跨域请求。如果想要跨域成功，必须将上面两个选项设置为启用。&lt;/p&gt;
&lt;h1 id=&#34;第一步&#34;&gt;第一步&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;打开IE11&lt;/li&gt;
&lt;li&gt;点击浏览器右上角的齿轮图标&lt;/li&gt;
&lt;li&gt;点击弹框上的 &lt;code&gt;Internet选项&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180823102310_20uJ5k_Jietu20180823-102245.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;第二步&#34;&gt;第二步&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;点击&lt;code&gt;安全&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;Internet&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;自定义级别&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180823103244_USZZfQ_Jietu20180823-103223.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;第三步&#34;&gt;第三步&lt;/h1&gt;
&lt;p&gt;找到&lt;code&gt;跨域浏览窗口和框架&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果这项是禁用的，那么要勾选启用。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180823103506_t5pugZ_Jietu20180823-103456.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到&lt;code&gt;通过域访问数据源&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果这项是禁用的，那么要勾选启用。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180823103835_hDBxJg_Jietu20180823-103813.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后在点击确定。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180823104124_nVXlJh_Jietu20180823-104111.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后，如果&lt;code&gt;跨域浏览窗口和框架&lt;/code&gt;,&lt;code&gt;通过域访问数据源&lt;/code&gt;都启用了，还是无法跨域。那么最好重启一下电脑。有些设置可能在重启后才会生效。&lt;/p&gt;</description>
    </item>
    <item>
      <title>毕业后，青春像一艘船，沉入海底</title>
      <link>https://wdd.js.org/posts/2018/08/the-rest-of-your-life/</link>
      <pubDate>Tue, 14 Aug 2018 18:36:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/08/the-rest-of-your-life/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814211237_9Y8uPX_Jietu20180814-211226.jpeg&#34;&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;大三那年的暑假&#34;&gt;大三那年的暑假&lt;/h1&gt;
&lt;p&gt;大三那年暑假，很多同学都回去了，寝室大楼空空如也。&lt;/p&gt;
&lt;p&gt;留在上海的同学都在各自找着兼职的工作，为了不显得无聊，我也在网上随便发了一些简历，试试看运气。&lt;/p&gt;
&lt;p&gt;写简历最难写的部分就是写你自己的长处是什么？搜索枯肠，觉得自己似乎也没什特长。感觉大学三年学到一些东西，又感觉什么都没学到。&lt;/p&gt;
&lt;p&gt;如果没有特长，总该也有点理想吧，比如想干点什么？ 似乎我也没什么想做的事情。&lt;/p&gt;
&lt;p&gt;小时候我们都有理想，慢慢长大后，理想越来越模糊，变得越来越迷茫。&lt;/p&gt;
&lt;p&gt;大学里，大部分的人都是在打游戏。我也曾迷恋过打游戏，但是因为自己比较菜，总是被虐，所以放弃了。&lt;/p&gt;
&lt;p&gt;但是我也不是那种天天对着笔记本看电视剧的人。&lt;/p&gt;
&lt;h1 id=&#34;回忆初三那年的暑假&#34;&gt;回忆初三那年的暑假&lt;/h1&gt;
&lt;p&gt;记得，初三的暑假，我参加了一个学校看展的一个免费的计算机培训班。因为培训的老师说，培训结束前会有一个测试，成绩最好的会有几百块的奖励。&lt;/p&gt;
&lt;p&gt;为了几百块的奖励，我第一个背诵完五笔拆字法。随后老师教了我们PS, 就是photoshop。当时我的理解就是，ps可以做出很多搞笑的图片。&lt;/p&gt;
&lt;p&gt;为了成为一个有能力做出搞笑图片的人。我在高中和大学期间，断断续续的系统的自学了PS。&lt;/p&gt;
&lt;p&gt;下面给展示几张我的PS照片&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814185855_oORpt1_Jietu20180814-185838.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【毕业照】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814190245_gfE8Fb_Jietu20180814-190136.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【帮别人做的艺术照】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814190255_wMF7u1_Jietu20180814-190227.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【刺客信条 换脸 我自己】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814190305_8V2gKz_Jietu20180814-190236.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【旅游照 换脸 我自己】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814190409_GjfFso_Jietu20180814-190359.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【宿舍楼 上面ps了一条狼】&lt;/p&gt;
&lt;h1 id=&#34;古玩艺术电商中的店小二&#34;&gt;古玩艺术电商中的店小二&lt;/h1&gt;
&lt;p&gt;基本上，我的PS技术还是能够找点兼职做的。没过多久，我收到了面试邀请，面试的公司位于一个古玩收藏品市场中。&lt;/p&gt;
&lt;p&gt;当然我面试成功了，开出的日薪也是非常诱人，&lt;code&gt;每天35元&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在上海，35元一天的工资，除去来回上下班做地铁和公交，还有中午饭的费用外，基本上不会剩下什么，有时候稍微午饭丰盛点，自己就要倒贴。但是这也是一次不错的尝试，至少有史以来，除去父母以外，我用能力问别人要钱了。&lt;/p&gt;
&lt;p&gt;35元的日薪持续很短一段时间，然后我就涨薪了，到达每天100元。在这个做兼职的地方，我最高拿到的日薪是200元。&lt;/p&gt;
&lt;p&gt;兼职期间我做了各式各样的工作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;古玩艺术品摄影&lt;/li&gt;
&lt;li&gt;海报制作&lt;/li&gt;
&lt;li&gt;拍卖图册制作&lt;/li&gt;
&lt;li&gt;linux运维&lt;/li&gt;
&lt;li&gt;APP UI 设计&lt;/li&gt;
&lt;li&gt;网页设计&lt;/li&gt;
&lt;li&gt;python爬虫&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;兼职的日志过得很苦，单是还算充实。虽然工资不高，但是因为还没毕业，也没有奢望过高的工资。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814211015_JTfR37_Jietu20180814-211003.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【上图 我在一个古玩店的拍摄玉器的时候，有个小女孩过来找我玩，我随手拍的】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814211237_9Y8uPX_Jietu20180814-211226.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【上图 是在1号线 莲花路地铁站 因为错过了地铁拍的】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814211409_tv0CQF_Jietu20180814-211402.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【上图 是从1号线 莲花地铁站 转公交拍的】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814211546_tQTFxw_Jietu20180814-211535.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【每天早上起的很早，能够看到军训的学生在操场上奔跑】&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180814211730_1b2O72_Jietu20180814-211722.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;【在古玩店一般都要拍到很晚，因为是按张数算拍照工资，拍的越多，工资越高。还好晚上回公司 打车费用是可以报销的】&lt;/p&gt;</description>
    </item>
    <item>
      <title>NodeJS Events 模块笔记</title>
      <link>https://wdd.js.org/posts/2018/08/deepin-nodejs-events/</link>
      <pubDate>Fri, 10 Aug 2018 10:18:57 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/08/deepin-nodejs-events/</guid>
      <description>&lt;h1 id=&#34;1-环境&#34;&gt;1. 环境&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;node 8.11.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-基本使用&#34;&gt;2. 基本使用&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 01.js

const EventEmitter = require(&amp;#39;events&amp;#39;);

class MyEmitter extends EventEmitter {}

const myEmitter = new MyEmitter();
myEmitter.on(&amp;#39;event&amp;#39;, () =&amp;gt; {
  console.log(&amp;#39;an event occurred!&amp;#39;);
});
myEmitter.emit(&amp;#39;event&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;an event occurred!
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-传参与this指向&#34;&gt;3. 传参与this指向&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;emit()&lt;/code&gt;方法可以传不限制数量的参数。&lt;/li&gt;
&lt;li&gt;除了箭头函数外，在回调函数内部，this会被绑定到EventEmitter类的实例上&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 02.js
const EventEmitter = require(&amp;#39;events&amp;#39;)

class MyEmitter extends EventEmitter {}

const myEmitter = new MyEmitter()

myEmitter.on(&amp;#39;event&amp;#39;, function (a, b){
  console.log(a, b, this, this === myEmitter)
})

myEmitter.on(&amp;#39;event&amp;#39;, (a, b) =&amp;gt; {
  console.log(a, b, this, this === myEmitter)
})

myEmitter.emit(&amp;#39;event&amp;#39;, &amp;#39;a&amp;#39;, {name:&amp;#39;wdd&amp;#39;})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出：&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript动态下载文件</title>
      <link>https://wdd.js.org/posts/2018/06/js-download-file/</link>
      <pubDate>Wed, 27 Jun 2018 09:09:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/06/js-download-file/</guid>
      <description>&lt;h1 id=&#34;需求描述&#34;&gt;需求描述&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;可以把字符串下载成txt文件&lt;/li&gt;
&lt;li&gt;可以把对象序列化后下载json文件&lt;/li&gt;
&lt;li&gt;下载由ajax请求返回的Excel, Word, pdf 等等其他文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;基本思想&#34;&gt;基本思想&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;downloadJsonIVR () {
  var data = {name: &amp;#39;age&amp;#39;}
  data = JSON.stringify(data)
  data = new Blob([data])
  var a = document.createElement(&amp;#39;a&amp;#39;)
  var url = window.URL.createObjectURL(data)
  a.href = url
  a.download = &amp;#39;what-you-want.json&amp;#39;
  a.click()
},
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;从字符串下载文件&#34;&gt;从字符串下载文件&lt;/h1&gt;
&lt;h1 id=&#34;从ajax请求中下载文件&#34;&gt;从ajax请求中下载文件&lt;/h1&gt;</description>
    </item>
    <item>
      <title>Restful API 架构思考</title>
      <link>https://wdd.js.org/posts/2018/06/think-about-restful-api/</link>
      <pubDate>Thu, 07 Jun 2018 22:35:08 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/06/think-about-restful-api/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-%E4%BB%80%E4%B9%88%E6%98%AFrest&#34;&gt;1. 什么是REST?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-rest-api%E6%9C%80%E4%B8%BA%E9%87%8D%E8%A6%81%E7%9A%84%E7%BA%A6%E6%9D%9F&#34;&gt;2. REST API最为重要的约束&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-rest-api-http%E6%96%B9%E6%B3%95-%E4%B8%8E-curd&#34;&gt;3. REST API HTTP方法 与 CURD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4-%E7%8A%B6%E6%80%81%E7%A0%81&#34;&gt;4. 状态码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#5-restful%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1&#34;&gt;5. RESTful架构设计&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#6-%E6%96%87%E6%A1%A3&#34;&gt;6. 文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#7-%E7%89%88%E6%9C%AC&#34;&gt;7. 版本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#8-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E7%8A%B6%E6%80%81%E4%B8%8E%E6%97%A0%E7%8A%B6%E6%80%81&#34;&gt;8. 深入理解状态与无状态&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#9-%E5%8F%82%E8%80%83&#34;&gt;9. 参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1-什么是rest&#34;&gt;1. 什么是REST?&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;表现层状态转换（REST，英文：Representational State Transfer）是Roy Thomas Fielding博士于2000年在他的博士论文[1] 中提出来的一种万维网软件架构风格，目的是便于不同软件/程序在网络（例如互联网）中互相传递信息。表现层状态转换（REST，英文：Representational State Transfer）是根基于超文本传输协议(HTTP)之上而确定的一组约束和属性，是一种设计提供万维网络服务的软件构建风格。匹配或兼容于这种架构风格(简称为 REST 或 RESTful)的网络服务，允许客户端发出以统一资源标识符访问和操作网络资源的请求，而与预先定义好的无状态操作集一致化。&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%A1%A8%E7%8E%B0%E5%B1%82%E7%8A%B6%E6%80%81%E8%BD%AC%E6%8D%A2&#34;&gt;wikipdeia&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180607224524_M1yRtD_content_api_for_restful_web_services.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;REST API 不是一个标准或者一个是协议，仅仅是一种风格，一种style。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;RESTful API的简单定义可以轻松解释这个概念。 REST是一种架构风格，RESTful是它的解释。也就是说，如果您的后端服务器具有REST API，并且您（从网站/应用程序）向客户端请求此API，则您的客户端为RESTful。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180607225013_Kuay0l_content_rest_api_design.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-rest-api最为重要的约束&#34;&gt;2. REST API最为重要的约束&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Client-Server&lt;/code&gt; 通信只能由客户端单方面发起，表现为请求-响应的形式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Stateless&lt;/code&gt; 通信的会话状态（Session State）应该全部由客户端负责维护&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cache&lt;/code&gt; 响应内容可以在通信链的某处被缓存，以改善网络效率&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Uniform Interface&lt;/code&gt; 通信链的组件之间通过统一的接口相互通信，以提高交互的可见性&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Layered System&lt;/code&gt; 通过限制组件的行为（即每个组件只能“看到”与其交互的紧邻层），将架构分解为若干等级的层。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Code-On-Demand&lt;/code&gt; 支持通过下载并执行一些代码（例如Java Applet、Flash或JavaScript），对客户端的功能进行扩展。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-rest-api-http方法-与-curd&#34;&gt;3. REST API HTTP方法 与 CURD&lt;/h1&gt;
&lt;p&gt;REST API 使用POST，GET, PUT, DELETE的HTTP方法来描述对资源的增、查、改、删。
这四个HTTP方法在数据层对应着SQL的插入、查询、更新、删除操作。&lt;/p&gt;</description>
    </item>
    <item>
      <title>记一次如何解决谷歌浏览器占用过高cpu问题过程</title>
      <link>https://wdd.js.org/posts/2018/06/how-to-fix-google-chrome-very-high-cpu-cost/</link>
      <pubDate>Mon, 04 Jun 2018 17:58:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/06/how-to-fix-google-chrome-very-high-cpu-cost/</guid>
      <description>&lt;h1 id=&#34;1-问题现象&#34;&gt;1. 问题现象&lt;/h1&gt;
&lt;p&gt;有时候发现mac风扇响的厉害，于是我检查了mac系统的活动监视器，发现Google Chrome Helper占用99%的CPU。&lt;/p&gt;
&lt;p&gt;通常来说Chrome如果占用过高的内存，这并不是什么问题，毕竟Chrome的性能以及易用性是建立在占用很多内存的基础上的。&lt;code&gt;但是无论什么程序，持续的占用超过80%的cpu，都是极不正常的&lt;/code&gt;。大多数程序都是占用维持在低于10%的CPU。&lt;/p&gt;
&lt;p&gt;活动监视器指出问题出现在Chrome浏览器。那么问题可以再次细分为三块。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Chrome系统自身问题&lt;/li&gt;
&lt;li&gt;一些插件，例如flash插件，扩展插件&lt;/li&gt;
&lt;li&gt;网页程序js出现的问题&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;2-从任务管理器着手&#34;&gt;2. 从任务管理器着手&lt;/h1&gt;
&lt;p&gt;其实Chrome浏览器自身也是有任务管理器的，一般来说windows版chrome按住&lt;code&gt;shift+esc&lt;/code&gt;就会调出任务管理器窗口。mac版调出任务管理器没有快捷，只能通过&lt;code&gt;Window &amp;gt; Task Manager&lt;/code&gt;调出。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180604181340_ymCT2T_Jietu20180604-174820.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;调出任务管理器后，发现一个标签页，CPU占用率达到99%， 那就说明，应该是这个标签页中存在持续占用大量CPU计算的程序。&lt;/p&gt;
&lt;p&gt;最后找到这个页面，发现该页面背景图是一种动态粒子图。就是基于&lt;a href=&#34;https://github.com/VincentGarreau/particles.js/&#34;&gt;particles.js&lt;/a&gt;做的。我想，终于找到你了。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180604181757_rRfc8L_687474703a2f2f76696e63656e74676172726561752e636f6d2f7061727469636c65732e6a732f6173736574732f696d672f6769746875622d73637265656e2e6a7067.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;于是我把这个动态图的相关js代码给注释掉，电脑的风扇也终于变得安静了。&lt;/p&gt;
&lt;h1 id=&#34;3-问题总结&#34;&gt;3. 问题总结&lt;/h1&gt;
&lt;p&gt;问题解决的总结：&lt;code&gt;解决问题的方法时很简单的，基于一个现象，找到一个原因，基于这个原因再找到一个现象，然后一步一步缩小问题范围，逼近最终原因。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;机器CPU过高，一般都是可以从任务管理器着手解决。系统的任务管理器可以监控各个程序占用的CPU是否正常，通常程序自身也是有任务管理的。&lt;/p&gt;
&lt;p&gt;像谷歌浏览器这种软件，几乎本身就是一个操作系统，所以说它的任务管理器也是必不可少的。Chrome浏览器再带的任务管理器可以告诉你几个关键信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;任务占用的&lt;code&gt;内存&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;任务占用的&lt;code&gt;CPU&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;任务占用的&lt;code&gt;网络流量&lt;/code&gt;大小&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你一打开谷歌浏览器，你的电脑风扇就拼命转，那你最好打开谷歌浏览器的任务管理器看看。&lt;/p&gt;
&lt;h1 id=&#34;4-关于动态背景图的思考&#34;&gt;4. 关于动态背景图的思考&lt;/h1&gt;
&lt;p&gt;动态背景图往往都会给人很酷炫的感觉，但是这种背景图的制作并不是很复杂，如果你使用&lt;a href=&#34;https://github.com/VincentGarreau/particles.js/&#34;&gt;particles.js&lt;/a&gt;来制作，制作一些动态背景图只需要几行代码就可以搞定。但是这种酷炫的背后，CPU也在承受着压力。&lt;/p&gt;
&lt;p&gt;particles.js提供的demo效果图，在Chrome中CPU会被提高到100%。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180605133536_WgqoKS_Jietu20180605-132714.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;也有几家使用动态背景图的官网。我记得知乎以前就用过动态背景图，但是现在找不到了。另外一个使用动态背景图的是&lt;a href=&#34;http://www.daocloud.io/&#34;&gt;daocloud&lt;/a&gt;, CPU也是会在首页飙升到50%。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180605133717_ckASzG_Jietu20180605-132903.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;所谓：&lt;code&gt;强招必自损&lt;/code&gt;，动态背景图在给人以炫酷科技感的同时，也需要权衡这种技术对客户计算机的压力。&lt;/p&gt;
&lt;p&gt;另外，&lt;code&gt;不要小看JavaScript, 它也可能引起大问题&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>IE浏览器不支持location.origin</title>
      <link>https://wdd.js.org/posts/2018/05/ie-not-support-location-origin/</link>
      <pubDate>Thu, 24 May 2018 14:50:49 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/05/ie-not-support-location-origin/</guid>
      <description>&lt;p&gt;某些IE浏览器location.origin属性是undefined，所以如果你要使用该属性，那么要注意做个能力检测。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (!window.location.origin) {
  window.location.origin = window.location.protocol + &amp;#34;//&amp;#34; + window.location.hostname + (window.location.port ? &amp;#39;:&amp;#39; + window.location.port: &amp;#39;&amp;#39;);
}i
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>端到端测试哪家强？不容错过的Cypress</title>
      <link>https://wdd.js.org/posts/2018/05/e2e-testing-hacker-news-with-cypress/</link>
      <pubDate>Mon, 14 May 2018 10:43:02 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/05/e2e-testing-hacker-news-with-cypress/</guid>
      <description>&lt;h1 id=&#34;1-目前e2e测试工具有哪些&#34;&gt;1. 目前E2E测试工具有哪些？&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;项目&lt;/th&gt;
          &lt;th&gt;Web&lt;/th&gt;
          &lt;th&gt;Star&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/GoogleChrome/puppeteer&#34;&gt;puppeteer&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Chromium (~170Mb Mac, ~282Mb Linux, ~280Mb Win)&lt;/td&gt;
          &lt;td&gt;31906&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/segmentio/nightmare&#34;&gt;nightmare&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Electron&lt;/td&gt;
          &lt;td&gt;15502&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/nightwatchjs/nightwatch&#34;&gt;nightwatch&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;WebDriver&lt;/td&gt;
          &lt;td&gt;8135&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/angular/protractor&#34;&gt;protractor&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;selenium&lt;/td&gt;
          &lt;td&gt;7532&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/casperjs/casperjs&#34;&gt;casperjs&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;PhantomJS&lt;/td&gt;
          &lt;td&gt;7180&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/cypress-io/cypress&#34;&gt;cypress&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;Electron&lt;/td&gt;
          &lt;td&gt;5303&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/assaf/zombie&#34;&gt;Zombie&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;不需要&lt;/td&gt;
          &lt;td&gt;4880&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/DevExpress/testcafe&#34;&gt;testcafe&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;不需要&lt;/td&gt;
          &lt;td&gt;4645&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;a href=&#34;https://github.com/Codeception/CodeceptJS&#34;&gt;CodeceptJS&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;webdriverio&lt;/td&gt;
          &lt;td&gt;1665&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;端到端测试一般都需要一个Web容器，来运行前端应用。例如Chromium, Electron, PhantomJS, WebDriver等等。&lt;/p&gt;
&lt;p&gt;从体积角度考虑，这些Web容器&lt;code&gt;体积一般都很大&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;从速度的角度考虑：&lt;code&gt;PhantomJS, WebDriver &amp;lt; Electon, Chromium&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;而且每个工具的侧重点也不同，建议按照需要去选择。&lt;/p&gt;
&lt;h1 id=&#34;2-优秀的端到端测试工具应该有哪些特点&#34;&gt;2. 优秀的端到端测试工具应该有哪些特点？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;安装简易：我希望它非常容易安装，最好可以一行命令就可以安装完毕&lt;/li&gt;
&lt;li&gt;依赖较少：我只想做个E2E测试，不想安装jdk, python之类的东西&lt;/li&gt;
&lt;li&gt;速度很快：运行测试用例的速度要快&lt;/li&gt;
&lt;li&gt;报错详细：详细的报错&lt;/li&gt;
&lt;li&gt;API完备：鼠标键盘操作接口，DOM查询接口等&lt;/li&gt;
&lt;li&gt;Debug方便：出错了可以很方便的调试，而不是去猜&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-为什么要用cypress&#34;&gt;3. 为什么要用Cypress？&lt;/h1&gt;
&lt;p&gt;Cypress基本上拥有了上面的特点之外，还有以下特点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;时光穿梭&lt;/code&gt; 测试运行时，Cypress会自动截图，你可以轻易的查看每个时间的截图&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Debug友好&lt;/code&gt; 不需要再去猜测为什么测试有失败了，Cypress提供Chrome DevTools, 所以Debug是非常方便的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;实时刷新&lt;/code&gt; Cypress检测测试用例改变后，会自动刷新&lt;/li&gt;
&lt;li&gt;&lt;code&gt;自动等待&lt;/code&gt; 不需要在使用wait类似的方法等待某个DOM出现，Cypress会自动帮你做这些&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Spies, stubs, and clocks&lt;/code&gt; Verify and control the behavior of functions, server responses, or timers. The same functionality you love from unit testing is right at your fingertips.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;网络流量控制&lt;/code&gt; 在不涉及服务器的情况下轻松控制，存根和测试边缘案例。无论你喜欢，你都可以存储网络流量。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;一致的结果&lt;/code&gt; 我们的架构不使用Selenium或WebDriver。向快速，一致和可靠的无剥落测试问好。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;截图和视频&lt;/code&gt; 查看失败时自动截取的截图，或无条件运行时整个测试套件的视频。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-安装cypress&#34;&gt;4. 安装cypress&lt;/h1&gt;
&lt;h2 id=&#34;41-使用npm方法安装&#34;&gt;4.1. 使用npm方法安装&lt;/h2&gt;
&lt;p&gt;注意这个方法需要下载压缩过Electron, 所以可能会花费几分钟时间，请耐心等待。&lt;/p&gt;</description>
    </item>
    <item>
      <title>掌握谷歌搜索高级指令</title>
      <link>https://wdd.js.org/posts/2018/04/master-google-search-command/</link>
      <pubDate>Thu, 26 Apr 2018 16:56:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/04/master-google-search-command/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1-%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E6%8C%87%E4%BB%A4&#34;&gt;1. 谷歌搜索指令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4&#34;&gt;2. 基本命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-%E5%85%B3%E9%94%AE%E8%AF%8D%E4%BD%BF%E7%94%A8&#34;&gt;3. 关键词使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4-%E7%89%B9%E6%AE%8A%E5%B7%A5%E5%85%B7&#34;&gt;4. 特殊工具&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#41-define-%E5%BF%AB%E9%80%9F%E8%BF%94%E5%9B%9E%E5%85%B3%E9%94%AE%E8%AF%8D%E5%AE%9A%E4%B9%89&#34;&gt;4.1. define 快速返回关键词定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#42-%E8%AE%A1%E7%AE%97%E5%99%A8&#34;&gt;4.2. 计算器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#43-%E5%8D%95%E4%BD%8D%E8%BD%AC%E6%8D%A2&#34;&gt;4.3. 单位转换&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#44-%E6%97%B6%E5%8C%BA%E6%9F%A5%E8%AF%A2&#34;&gt;4.4. 时区查询&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#45-%E5%9C%B0%E5%8C%BA%E6%9F%A5%E8%AF%A2&#34;&gt;4.5. 地区查询&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#46-%E5%A4%A9%E6%B0%94%E6%9F%A5%E8%AF%A2&#34;&gt;4.6. 天气查询&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#5-%E5%8F%82%E8%80%83&#34;&gt;5. 参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1-谷歌搜索指令&#34;&gt;1. 谷歌搜索指令&lt;/h1&gt;
&lt;h1 id=&#34;2-基本命令&#34;&gt;2. 基本命令&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;符号&lt;/th&gt;
          &lt;th&gt;简介&lt;/th&gt;
          &lt;th&gt;语法&lt;/th&gt;
          &lt;th&gt;注意点&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;| 包含A且必须包含B | A +B | A和+之间有空格 | Maxwell +wills&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;| 包含A且不包含B | A -B | A和+之间有空格 | Maxwell -Absolom
&amp;quot; &amp;quot; | 完整匹配AB | &amp;ldquo;AB&amp;rdquo; | | &amp;ldquo;Thomas Jefferson&amp;rdquo;
OR | 包含A或者B | &lt;code&gt;A OR B&lt;/code&gt; 或者 &lt;code&gt;A | B&lt;/code&gt; |  | nodejs OR webpack
+-&amp;ldquo;OR | 指令可以组合，完成更复杂的查询 | | |  beach -sandy +albert +nathaniel
~ | 包含A, 并且包含B的近义词 | A ~B | | github ~js
.. | 区间查询 AB之间 | A..B | | china 1888..2000&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;| 匹配任意字符 | | | node* java
site: | 站内搜索 | A site:B | | | DLL site:webpack.js.org
filetype: | 按照文件类型搜索 | A filetype:B | | csta filetype:pdf&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-关键词使用&#34;&gt;3. 关键词使用&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;方法&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
          &lt;th&gt;示例&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;列举关键词&lt;/td&gt;
          &lt;td&gt;列举所有和搜索相关的关键词，并且尽量把重要的关键词排在前面。&lt;code&gt;不同的关键词顺序会导致不同的返回不同的结果&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;书法 毛笔 绘画&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;不要使用某些词&lt;/td&gt;
          &lt;td&gt;如代词介词语气词，如i, the, of, it, 我，吗&lt;/td&gt;
          &lt;td&gt;搜索引擎一般会直接忽略这些信息含量少的词&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;大小写不敏感&lt;/td&gt;
          &lt;td&gt;大写字符和小写字符在搜索引擎看没有区别，尽量使用小写的就可以&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;4-特殊工具&#34;&gt;4. 特殊工具&lt;/h1&gt;
&lt;h2 id=&#34;41-define-快速返回关键词定义&#34;&gt;4.1. define 快速返回关键词定义&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180426175550_4QI50S_Jietu20180426-175542.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>金钱游戏 - 银行造钱的秘密</title>
      <link>https://wdd.js.org/posts/2018/04/the-secret-of-bank-create-money/</link>
      <pubDate>Wed, 25 Apr 2018 13:33:52 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/04/the-secret-of-bank-create-money/</guid>
      <description>&lt;h1 id=&#34;1-角色划分&#34;&gt;1. 角色划分&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;角色&lt;/th&gt;
          &lt;th&gt;账户&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;A&lt;/td&gt;
          &lt;td&gt;银行家&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B&lt;/td&gt;
          &lt;td&gt;建筑商&lt;/td&gt;
          &lt;td&gt;100万&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;C&lt;/td&gt;
          &lt;td&gt;商人&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;2-建筑商向银行存储100万&#34;&gt;2. 建筑商向银行存储100万&lt;/h1&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;角色&lt;/th&gt;
          &lt;th&gt;账户&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;A&lt;/td&gt;
          &lt;td&gt;银行家&lt;/td&gt;
          &lt;td&gt;100万 现金&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B&lt;/td&gt;
          &lt;td&gt;建筑商&lt;/td&gt;
          &lt;td&gt;100万 支票&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;C&lt;/td&gt;
          &lt;td&gt;商人&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;2-商人向银行贷款100万&#34;&gt;2. 商人向银行贷款100万&lt;/h1&gt;
&lt;p&gt;此时银行的账户存款已经是0了，但是B还在银行存了100万。那银行究竟是还有100万呢, 还是一毛都没有了呢。&lt;/p&gt;
&lt;p&gt;此时建筑商如果要取现金，那么银行马上就要破产。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;角色&lt;/th&gt;
          &lt;th&gt;账户&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;A&lt;/td&gt;
          &lt;td&gt;银行家&lt;/td&gt;
          &lt;td&gt;100现金&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B&lt;/td&gt;
          &lt;td&gt;建筑商&lt;/td&gt;
          &lt;td&gt;100万 支票&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;C&lt;/td&gt;
          &lt;td&gt;商人&lt;/td&gt;
          &lt;td&gt;100万 支票&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;3-商人需要建筑商来建造房子&#34;&gt;3. 商人需要建筑商来建造房子&lt;/h1&gt;
&lt;p&gt;商人需要建筑商来建筑房子，费用是100万，付给建筑商，建筑商又把100支票存到银行&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;角色&lt;/th&gt;
          &lt;th&gt;账户&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;A&lt;/td&gt;
          &lt;td&gt;银行家&lt;/td&gt;
          &lt;td&gt;100万现金&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B&lt;/td&gt;
          &lt;td&gt;建筑商&lt;/td&gt;
          &lt;td&gt;200万 支票&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;C&lt;/td&gt;
          &lt;td&gt;商人&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;商人又从银行借钱100万，来付给建筑商建房子，建筑商把钱存到银行&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;角色&lt;/th&gt;
          &lt;th&gt;账户&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;A&lt;/td&gt;
          &lt;td&gt;银行家&lt;/td&gt;
          &lt;td&gt;100万现金&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;B&lt;/td&gt;
          &lt;td&gt;建筑商&lt;/td&gt;
          &lt;td&gt;300万 支票&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;C&lt;/td&gt;
          &lt;td&gt;商人&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;只要这个循环还在继续，你会发现，建筑商的账面上的支票越来越多，但是银行始终都是100万现金存在那里，从来都没动过。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Express静态文件浏览器缓存设置与缓存清除</title>
      <link>https://wdd.js.org/posts/2018/04/express-static-file-cache-setting-and-cleaning/</link>
      <pubDate>Sun, 08 Apr 2018 09:00:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/04/express-static-file-cache-setting-and-cleaning/</guid>
      <description>&lt;h1 id=&#34;1-express设置缓存&#34;&gt;1. Express设置缓存&lt;/h1&gt;
&lt;p&gt;Express设置静态文件的方法很简单，一行代码搞定。&lt;code&gt;app.use(express.static(path.join(__dirname, &#39;public&#39;), {maxAge: MAX_AGE}))&lt;/code&gt;,
注意MAX_AGE的单位是毫秒。这句代码的含义是让pulic目录下的所有文件都可以在浏览器中缓存，过期时长为MAX_AGE毫秒。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;app.use(express.static(path.join(__dirname, &amp;#39;public&amp;#39;), {maxAge: config.get(&amp;#39;maxAge&amp;#39;)}))
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-express让浏览器清除缓存&#34;&gt;2. Express让浏览器清除缓存&lt;/h1&gt;
&lt;p&gt;缓存的好处是可以更快的访问服务，但是缓存也有坏处。例如设置缓存为10天，第二天的时候服务更新了。如果客户端不强制刷新页面的话，浏览器会一致使用更新前的静态文件，这样会导致一些BUG。你总当每次出问题时，客户打电话给你后，你让他强制刷新浏览器吧？&lt;/p&gt;
&lt;p&gt;所以，最好在服务重启后，重新让浏览器获取最新的静态文件。&lt;/p&gt;
&lt;p&gt;设置的方式是给每一个静态文件设置一个时间戳。&lt;/p&gt;
&lt;p&gt;例如：&lt;code&gt;vendor/loadjs/load.js?_=123898923423&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;21-express-路由&#34;&gt;2.1. Express 路由&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// /routes/index.js
router.get(&amp;#39;/home&amp;#39;, function (req, res, next) {
  res.render(&amp;#39;home&amp;#39;, {config: config, serverStartTimestamp: new Date().getTime()})
})
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;22-视图文件&#34;&gt;2.2. 视图文件&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// views/home.html
&amp;lt;script src=&amp;#34;vendor/loadjs/load.js?_=&amp;lt;%= serverStartTimestamp %&amp;gt;&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;设置之后，每次服务更新或者重启，浏览器都会使用最新的时间戳serverStartTimestamp，去获取静态文件。&lt;/p&gt;
&lt;h2 id=&#34;23-动态加载js文件&#34;&gt;2.3. 动态加载JS文件&lt;/h2&gt;
&lt;p&gt;有时候js文件并不是直接在HTML中引入，可能是使用了一些js文件加载库，例如requirejs, LABjs等。这些情况下，可以在全局设置环境变量SERVER_START_TIMESTAMP，用来表示服务启动的时间戳，在获取js的时候，将该时间戳拼接在路径上。&lt;/p&gt;
&lt;p&gt;注意：&lt;code&gt;环境变量SERVER_START_TIMESTAMP，一定要在其他脚本使用前定义。&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// views/home.html
&amp;lt;script&amp;gt;
  var SERVER_START_TIMESTAMP = &amp;lt;%= serverStartTimestamp %&amp;gt;
&amp;lt;/script&amp;gt;

// load.js
&amp;#39;vendor/contact-center/skill.js?_=&amp;#39; + SERVER_START_TIMESTAMP
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>WebSocket断开原因分析</title>
      <link>https://wdd.js.org/posts/2018/03/websocket-close-reasons/</link>
      <pubDate>Thu, 29 Mar 2018 20:35:38 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/websocket-close-reasons/</guid>
      <description>&lt;h1 id=&#34;1-把错误打印出来&#34;&gt;1. 把错误打印出来&lt;/h1&gt;
&lt;p&gt;WebSocket断开的原因有很多，最好在WebSocket断开时，将错误打印出来。&lt;/p&gt;
&lt;p&gt;在线demo地址：https://wdd.js.org/websocket-demos/&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180425112232_cxPVAD_Jietu20180425-112142.jpeg&#34;&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ws.onerror = function (e) {
  console.log(&amp;#39;WebSocket发生错误: &amp;#39; + e.code)
  console.log(e)
}
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;如果你想自己玩玩WebSocket, 但是你又不想自己部署一个WebSocket服务器，你可以使用&lt;code&gt;ws = new WebSocket(&#39;wss://echo.websocket.org/&#39;)&lt;/code&gt;, 你向echo.websocket.org发送消息，它会回复你同样的消息。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;2-重要信息错误状态码&#34;&gt;2. 重要信息错误状态码&lt;/h1&gt;
&lt;p&gt;WebSocket断开时，会触发&lt;code&gt;CloseEvent&lt;/code&gt;, CloseEvent会在连接关闭时发送给使用 WebSockets 的客户端. 它在 WebSocket 对象的 onclose 事件监听器中使用。CloseEvent的code字段表示了WebSocket断开的原因。可以从该字段中分析断开的原因。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180329204553_TjCFdu_Jietu20180329-204536.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-关闭状态码表&#34;&gt;3. 关闭状态码表&lt;/h1&gt;
&lt;p&gt;一般来说&lt;code&gt;1006&lt;/code&gt;的错误码出现的情况比较常见，该错误码一般出现在断网时。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;状态码&lt;/th&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;0–999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;保留段, 未使用.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1000&lt;/td&gt;
          &lt;td&gt;CLOSE_NORMAL&lt;/td&gt;
          &lt;td&gt;正常关闭; 无论为何目的而创建, 该链接都已成功完成任务.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1001&lt;/td&gt;
          &lt;td&gt;CLOSE_GOING_AWAY&lt;/td&gt;
          &lt;td&gt;终端离开, 可能因为服务端错误, 也可能因为浏览器正从打开连接的页面跳转离开.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1002&lt;/td&gt;
          &lt;td&gt;CLOSE_PROTOCOL_ERROR&lt;/td&gt;
          &lt;td&gt;由于协议错误而中断连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1003&lt;/td&gt;
          &lt;td&gt;CLOSE_UNSUPPORTED&lt;/td&gt;
          &lt;td&gt;由于接收到不允许的数据类型而断开连接 (如仅接收文本数据的终端接收到了二进制数据).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1004&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;保留&lt;/code&gt;. 其意义可能会在未来定义.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1005&lt;/td&gt;
          &lt;td&gt;CLOSE_NO_STATUS&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;保留&lt;/code&gt;.  表示没有收到预期的状态码.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;1006&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;CLOSE_ABNORMAL&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;保留&lt;/code&gt;. 用于期望收到状态码时连接非正常关闭 (也就是说, 没有发送关闭帧).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1007&lt;/td&gt;
          &lt;td&gt;Unsupported Data&lt;/td&gt;
          &lt;td&gt;由于收到了格式不符的数据而断开连接 (如文本消息中包含了非 UTF-8 数据).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1008&lt;/td&gt;
          &lt;td&gt;Policy Violation&lt;/td&gt;
          &lt;td&gt;由于收到不符合约定的数据而断开连接. 这是一个通用状态码, 用于不适合使用 1003 和 1009 状态码的场景.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1009&lt;/td&gt;
          &lt;td&gt;CLOSE_TOO_LARGE&lt;/td&gt;
          &lt;td&gt;由于收到过大的数据帧而断开连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1010&lt;/td&gt;
          &lt;td&gt;Missing Extension&lt;/td&gt;
          &lt;td&gt;客户端期望服务器商定一个或多个拓展, 但服务器没有处理, 因此客户端断开连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1011&lt;/td&gt;
          &lt;td&gt;Internal Error&lt;/td&gt;
          &lt;td&gt;客户端由于遇到没有预料的情况阻止其完成请求, 因此服务端断开连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1012&lt;/td&gt;
          &lt;td&gt;Service Restart&lt;/td&gt;
          &lt;td&gt;服务器由于重启而断开连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1013&lt;/td&gt;
          &lt;td&gt;Try Again Later&lt;/td&gt;
          &lt;td&gt;服务器由于临时原因断开连接, 如服务器过载因此断开一部分客户端连接.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1014&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;由 WebSocket标准保留以便未来使用.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1015&lt;/td&gt;
          &lt;td&gt;TLS Handshake&lt;/td&gt;
          &lt;td&gt;保留. 表示连接由于无法完成 TLS 握手而关闭 (例如无法验证服务器证书).&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1016–1999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;由 WebSocket标准保留以便未来使用.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2000–2999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;由 WebSocket拓展保留使用.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3000–3999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;可以由库或框架使用.? 不应由应用使用. 可以在 IANA 注册, 先到先得.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4000–4999&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;可以由应用使用.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;4-其他注意事项&#34;&gt;4. 其他注意事项&lt;/h1&gt;
&lt;p&gt;如果你的服务所在的域是HTTPS的，那么使用的WebSocket协议也必须是&lt;code&gt;wss&lt;/code&gt;, 而不能是&lt;code&gt;ws&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>js中的真值和假值</title>
      <link>https://wdd.js.org/posts/2018/03/js-true-and-false-value/</link>
      <pubDate>Tue, 27 Mar 2018 14:31:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/js-true-and-false-value/</guid>
      <description>&lt;p&gt;&lt;code&gt;无论什么语言，都需要逻辑，而逻辑中，能否判断出真假，是最基本也是最重要技能之一&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&#34;js中的假值有6个&#34;&gt;JS中的假值有6个&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;false&lt;/li&gt;
&lt;li&gt;&#39;&#39;&lt;/li&gt;
&lt;li&gt;undefinded&lt;/li&gt;
&lt;li&gt;null&lt;/li&gt;
&lt;li&gt;0, +0, -0&lt;/li&gt;
&lt;li&gt;NaN&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;有点类似假值的真值有两个&#34;&gt;有点类似假值的真值有两个&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;{}&lt;/li&gt;
&lt;li&gt;[]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;空对象和空数组，很多初学者都很用把这两个当做假值。但是实际上他们是真值，你只需要记住，除了null之外的所有对象类型的数据，都是真值。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;typeof null // &amp;#39;object&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;据说：&lt;code&gt;typeof null返回对象这是一个js语言中的bug。&lt;/code&gt;实际上typeof null应该返回null才比较准确，但是这个bug已经存来好久了。几乎所有的代码里都这样去判断。如果把typeof null给改成返回null, 那么这必定会导致JS世界末日。&lt;/p&gt;
&lt;p&gt;我们承认&lt;code&gt;JS并不完美&lt;/code&gt;，她有很多小缺点，但是这并不妨碍她吸引万千开发者拜倒在她的石榴裙下。&lt;/p&gt;
&lt;p&gt;就像一首歌唱的：&lt;code&gt;有些人说不清哪里好 但就是谁都替代不了&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>在实践中我遇到stompjs, websocket和nginx的问题与总结</title>
      <link>https://wdd.js.org/posts/2018/03/stomp-over-websocket/</link>
      <pubDate>Tue, 20 Mar 2018 22:09:34 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/stomp-over-websocket/</guid>
      <description>&lt;h1 id=&#34;1-aws-ec2-不支持websocket&#34;&gt;1. AWS EC2 不支持WebSocket&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.menubar.io/websockets-aws-elasticbeanstalk-ec2/&#34;&gt;直达解决方案 英文版&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单说一下思路：WebSocket底层基于TCP协议的，如果你的服务器基于HTTP协议暴露80端口，那WebSocket肯定无法连接。&lt;code&gt;你只要将HTTP协议修改成TCP协议就可以了。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180320223231_T2gHyb_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后是安全组的配置：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180320223255_pGGCWF_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;同样如果使用了NGINX作为反向代理，那么NGINX也需要做配置的。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// https://gist.githubusercontent.com/unshift/324be6a8dc9e880d4d670de0dc97a8ce/raw/29507ed6b3c9394ecd7842f9d3228827cffd1c58/elasticbeanstalk_websockets

files:
    &amp;#34;/etc/nginx/conf.d/01_websockets.conf&amp;#34; :
        mode: &amp;#34;000644&amp;#34;
        owner: root
        group: root
        content : |
            upstream nodejs {
                server 127.0.0.1:8081;
                keepalive 256;
            }

            server {
                listen 8080;

                location / {
                    proxy_pass  http://nodejs;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection &amp;#34;upgrade&amp;#34;;
                    proxy_http_version 1.1;
                    proxy_set_header        Host            $host;
                    proxy_set_header        X-Real-IP       $remote_addr;
                    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                }
            }

    &amp;#34;/opt/elasticbeanstalk/hooks/appdeploy/enact/41_remove_eb_nginx_confg.sh&amp;#34;:
        mode: &amp;#34;000755&amp;#34;
        owner: root
        group: root
        content : |
            mv /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf.old
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-nginx做反向代理是需要注意的问题&#34;&gt;2. NGINX做反向代理是需要注意的问题&lt;/h1&gt;
&lt;p&gt;如果排除所有问题后，那剩下的问题可以考虑出在反向代理上，一下有几点是可以考虑的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>状态码为200时 jQuery ajax报错</title>
      <link>https://wdd.js.org/posts/2018/03/status-code-200-jquery-ajax-failed/</link>
      <pubDate>Thu, 15 Mar 2018 14:17:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/status-code-200-jquery-ajax-failed/</guid>
      <description>&lt;h1 id=&#34;1-问题现象&#34;&gt;1. 问题现象&lt;/h1&gt;
&lt;p&gt;HTTP 状态码为 200 OK 时， jquery ajax报错&lt;/p&gt;
&lt;h1 id=&#34;2-问题原因&#34;&gt;2. 问题原因&lt;/h1&gt;
&lt;p&gt;jquery ajax的dataType字段包含：json, 但是服务端返回的数据不是规范的json格式，导致jquery解析json字符串报错，最终导致ajax报错。&lt;/p&gt;
&lt;p&gt;jQuery ajax 官方文档上说明：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;json&amp;rdquo;: Evaluates the response as JSON and returns a JavaScript object. Cross-domain &amp;ldquo;json&amp;rdquo; requests are converted to &amp;ldquo;jsonp&amp;rdquo; unless the request includes jsonp: false in its request options. The JSON data is parsed in a strict manner; any malformed JSON is rejected and a parse error is thrown. As of jQuery 1.9, an empty response is also rejected; the server should return a response of null or {} instead. (See json.org for more information on proper JSON formatting.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>前端剪贴板复制功能实现原理</title>
      <link>https://wdd.js.org/posts/2018/03/clipboard-copy-tutorial/</link>
      <pubDate>Wed, 14 Mar 2018 14:19:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/clipboard-copy-tutorial/</guid>
      <description>&lt;h1 id=&#34;1-兼容情况&#34;&gt;1. 兼容情况&lt;/h1&gt;
&lt;p&gt;如果想浏览器支持粘贴功能，那么浏览器必须支持，&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand&#34;&gt;document.execCommand(&amp;lsquo;copy&amp;rsquo;)&lt;/a&gt;方法，也可以根据&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Document/queryCommandSupported&#34;&gt;document.queryCommandEnabled(&amp;lsquo;copy&amp;rsquo;)&lt;/a&gt;，返回的true或者false判断浏览器是否支持copy命令。&lt;/p&gt;
&lt;p&gt;从下表可以看出，主流的浏览器都支持execCommand命令&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180314142213_IhrFsz_Jietu20180314-141253.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-复制的原理&#34;&gt;2. 复制的原理&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;查询元素&lt;/li&gt;
&lt;li&gt;选中元素&lt;/li&gt;
&lt;li&gt;执行复制命令&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;3-代码展示&#34;&gt;3. 代码展示&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// html
&amp;lt;input id=&amp;#34;username&amp;#34; value=&amp;#34;123456&amp;#34;&amp;gt;

// 查询元素
var username = document.getElementById(‘username’)

// 选中元素
username.select()

// 执行复制
document.execCommand(&amp;#39;copy&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;注意: 以上代码只是简单示意，在实践过程中还有几个要判断的情况&lt;/p&gt;&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;首要要去检测浏览器execCommand能力检测&lt;/li&gt;
&lt;li&gt;选取元素时，有可能选取元素为空，要考虑这种情况的处理&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;4-第三方方案&#34;&gt;4. 第三方方案&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://clipboardjs.com/&#34;&gt;clipboard.js&lt;/a&gt;是一个比较方便的剪贴板库，功能蛮多的。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;!-- Target --&amp;gt;
&amp;lt;textarea id=&amp;#34;bar&amp;#34;&amp;gt;Mussum ipsum cacilds...&amp;lt;/textarea&amp;gt;

&amp;lt;!-- Trigger --&amp;gt;
&amp;lt;button class=&amp;#34;btn&amp;#34; data-clipboard-action=&amp;#34;cut&amp;#34; data-clipboard-target=&amp;#34;#bar&amp;#34;&amp;gt;
    Cut to clipboard
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;官方给的代码里有上面的一个示例，如果你用了这个示例，但是不起作用，那你估计是没有初始化ClipboardJS示例的。&lt;/p&gt;
&lt;p&gt;注意：下面的函数必须要主动调用，这样才能给响应的DOM元素注册事件。 ClipboardJS源代码压缩后大约有3kb，虽然很小了，但是如果你不需要它的这么多功能的话，其实你自己写几行代码就可以搞定复制功能。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;new ClipboardJS(&amp;#39;.btn&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Chrome本地跨域origin-null-is-not-allowed问题分析与解决方案</title>
      <link>https://wdd.js.org/posts/2018/03/origin-null-is-not-allowed/</link>
      <pubDate>Fri, 09 Mar 2018 17:58:05 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/03/origin-null-is-not-allowed/</guid>
      <description>&lt;h1 id=&#34;1-问题表现&#34;&gt;1. 问题表现&lt;/h1&gt;
&lt;p&gt;以&lt;code&gt;file:///xxx.html&lt;/code&gt;打开某个html文件，发送ajax请求时报错：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Response to preflight request doesn&amp;#39;t pass access control check: The &amp;#39;Access-Control-Allow-Origin&amp;#39; header has a value &amp;#39;null&amp;#39; that is not equal to the supplied origin. Origin &amp;#39;null&amp;#39; is therefore not allowed access.
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-问题原因&#34;&gt;2. 问题原因&lt;/h1&gt;
&lt;p&gt;Origin null是本地文件系统，因此这表明您正在加载通过file：// URL进行加载调用的HTML页面（例如，只需在本地文件浏览器或类似文件中双击它）。不同的浏览器采用不同的方法将相同来源策略应用到本地文件。&lt;code&gt;Chrome要求比较严格，不允许这种形势的跨域请求。&lt;/code&gt;而最好使用http:// 访问html.&lt;/p&gt;
&lt;h1 id=&#34;3-解决方案&#34;&gt;3. 解决方案&lt;/h1&gt;
&lt;p&gt;以下给出三个解决方案，第一个最快，第三个作为彻底。&lt;/p&gt;
&lt;h2 id=&#34;31-方案1-给chrome快捷方式中增加---allow-file-access-from-files&#34;&gt;3.1. 方案1 给Chrome快捷方式中增加 &amp;ndash;allow-file-access-from-files&lt;/h2&gt;
&lt;p&gt;打开Chrome快捷方式的属性中设置：右击Chrome浏览器快捷方式，选择“属性”，在“目标”中加&amp;quot;&amp;ndash;allow-file-access-from-files&amp;quot;，注意前面有个空格，重启Chrome浏览器便可。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180309181105_SUxYRg_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;32-方案2-启动一个简单的静态文件服务器-以http协议访问html&#34;&gt;3.2. 方案2 启动一个简单的静态文件服务器, 以http协议访问html&lt;/h2&gt;
&lt;p&gt;参见我的这篇文章: &lt;a href=&#34;https://wdd.js.org/one-command-create-static-file-server.html&#34;&gt;一行命令搭建简易静态文件http服务器&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;33-方案3-服务端响应修改access-control-allow-origin--&#34;&gt;3.3. 方案3 服务端响应修改Access-Control-Allow-Origin : *&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;response.addHeader(&amp;#34;Access-Control-Allow-Origin&amp;#34;,&amp;#34;*&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;4-参考文章&#34;&gt;4. 参考文章&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/dandanzmc/article/details/31344267&#34;&gt;如何解决XMLHttpRequest cannot load file~~~~~~~Origin &amp;rsquo;null&amp;rsquo; is therefore not allowed access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/kissliux/article/details/16889111&#34;&gt;让chrome支持本地Ajax请求,Ajax请求status cancel Origin null is not allowed by Access-Control-Allow-Origin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/8456538/origin-null-is-not-allowed-by-access-control-allow-origin&#34;&gt;Origin null is not allowed by Access-Control-Allow-Origin
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>正则表达式在线工具集合</title>
      <link>https://wdd.js.org/posts/2018/02/regex-online-tools/</link>
      <pubDate>Sat, 24 Feb 2018 15:27:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/regex-online-tools/</guid>
      <description>&lt;h1 id=&#34;1-功能最强regex101httpsregex101com&#34;&gt;1. 功能最强：&lt;a href=&#34;https://regex101.com/&#34;&gt;regex101&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持多种语言, prec,php,javascript,python,golang&lt;/li&gt;
&lt;li&gt;界面美观大方&lt;/li&gt;
&lt;li&gt;支持错误提示，实时匹配&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有时候加载速度太慢&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180224153235_7QYNUW_Jietu20180224-153227.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-可视化正则绘图-regulexhttpsjeximregulex&#34;&gt;2. 可视化正则绘图: &lt;a href=&#34;https://jex.im/regulex/&#34;&gt;Regulex&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实时根据正则表达式绘图&lt;/li&gt;
&lt;li&gt;页面加载速度快&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180224153440_Z2JC4M_Jietu20180224-153432.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-可视化正则绘图regexperhttpsregexpercom2f5bf5d2f&#34;&gt;3. 可视化正则绘图：&lt;a href=&#34;https://regexper.com/#%2F%5Bf%5D%2F&#34;&gt;regexper&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据正则表达式绘图&lt;/li&gt;
&lt;li&gt;页面加载速度快&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法实时绘图，需要点击才可以&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180224153957_KAVhWs_Jietu20180224-153944.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-专注于python正则pyregexhttpwwwpyregexcom&#34;&gt;4. 专注于python正则：&lt;a href=&#34;http://www.pyregex.com/&#34;&gt;pyregex&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;专注python&lt;/li&gt;
&lt;li&gt;页面加载速度快&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180224153711_pNQ236_Jietu20180224-153703.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>前端面试和笔试题目</title>
      <link>https://wdd.js.org/posts/2018/02/front-end-interview-handbook/</link>
      <pubDate>Fri, 23 Feb 2018 15:18:26 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/front-end-interview-handbook/</guid>
      <description>&lt;h1 id=&#34;1-问答题&#34;&gt;1. 问答题&lt;/h1&gt;
&lt;h2 id=&#34;11-html相关&#34;&gt;1.1. HTML相关&lt;/h2&gt;
&lt;h3 id=&#34;111-doctype-html的作用是什么&#34;&gt;1.1.1. &lt;!-- raw HTML omitted --&gt;的作用是什么？&lt;/h3&gt;
&lt;h3 id=&#34;112-script-script-async和script-defer之间有什么区别&#34;&gt;1.1.2. script, script async和script defer之间有什么区别？&lt;/h3&gt;
&lt;h3 id=&#34;113-cookie-sessionstorage-和-localstorage之间有什么区别&#34;&gt;1.1.3. cookie, sessionStorage 和 localStorage之间有什么区别？&lt;/h3&gt;
&lt;h3 id=&#34;114-用过哪些html模板渲染工具&#34;&gt;1.1.4. 用过哪些html模板渲染工具？&lt;/h3&gt;
&lt;h2 id=&#34;12-css相关&#34;&gt;1.2. CSS相关&lt;/h2&gt;
&lt;h3 id=&#34;121-简述css盒子模型&#34;&gt;1.2.1. 简述CSS盒子模型&lt;/h3&gt;
&lt;h3 id=&#34;122-css有哪些选择器&#34;&gt;1.2.2. CSS有哪些选择器？&lt;/h3&gt;
&lt;h3 id=&#34;123-css-sprite是什么&#34;&gt;1.2.3. CSS sprite是什么？&lt;/h3&gt;
&lt;h3 id=&#34;124-写一下你知道的前端ui框架&#34;&gt;1.2.4. 写一下你知道的前端UI框架？&lt;/h3&gt;
&lt;h2 id=&#34;13-js相关&#34;&gt;1.3. JS相关&lt;/h2&gt;
&lt;h3 id=&#34;131-js有哪些数据类型&#34;&gt;1.3.1. js有哪些数据类型？&lt;/h3&gt;
&lt;h3 id=&#34;132-js有哪些假值&#34;&gt;1.3.2. js有哪些假值？&lt;/h3&gt;
&lt;h3 id=&#34;133-js数字和字符串之间有什么快速转换的写法&#34;&gt;1.3.3. js数字和字符串之间有什么快速转换的写法？&lt;/h3&gt;
&lt;h3 id=&#34;134-经常使用哪些es6的语法&#34;&gt;1.3.4. 经常使用哪些ES6的语法？&lt;/h3&gt;
&lt;h3 id=&#34;135-什么是同源策略&#34;&gt;1.3.5. 什么是同源策略？&lt;/h3&gt;
&lt;h3 id=&#34;136-跨域有哪些解决方法&#34;&gt;1.3.6. 跨域有哪些解决方法？&lt;/h3&gt;
&lt;h3 id=&#34;137-网页进度条实现的原理&#34;&gt;1.3.7. 网页进度条实现的原理&lt;/h3&gt;
&lt;h3 id=&#34;138-请问consolelog是同步的还是异步的&#34;&gt;1.3.8. 请问console.log是同步的，还是异步的？&lt;/h3&gt;
&lt;h3 id=&#34;139-下面console输出的值是什么&#34;&gt;1.3.9. 下面console输出的值是什么？&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var scores = [10,11,12];
var total = 0;

for(var score in scores){
  total += score;
}

var average = total/scores.length;
console.log(average);
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;1310-请问下面的写法问题在哪&#34;&gt;1.3.10. 请问下面的写法问题在哪？&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;console.log(1)

(function(){
    console.log(1)
})()
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;1311-请问slength是多少s2是多少&#34;&gt;1.3.11. 请问s.length是多少，s[2]是多少&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var s = []
s[3] = 4

s.length ?
s[2] ?
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;1312-说说你对settimeout的深入理解&#34;&gt;1.3.12. 说说你对setTimeout的&lt;code&gt;深入&lt;/code&gt;理解？&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;setTimeout(function(){
  console.log(&amp;#39;hi&amp;#39;)
}, 1000)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;1313-解释闭包概念及其作用&#34;&gt;1.3.13. 解释闭包概念及其作用&lt;/h3&gt;
&lt;h3 id=&#34;1314-如何理解js-函数first-class的概念&#34;&gt;1.3.14. 如何理解js 函数&lt;code&gt;first class&lt;/code&gt;的概念？&lt;/h3&gt;
&lt;h3 id=&#34;1315-函数有哪些调用方式不同this的会指向哪里&#34;&gt;1.3.15. 函数有哪些调用方式？不同this的会指向哪里？&lt;/h3&gt;
&lt;h3 id=&#34;1316-applly和call有什么区别&#34;&gt;1.3.16. applly和call有什么区别？&lt;/h3&gt;
&lt;h3 id=&#34;1317-函数的length属性的代表什么&#34;&gt;1.3.17. 函数的length属性的代表什么？&lt;/h3&gt;
&lt;h3 id=&#34;1318-有用过哪些js编程风格&#34;&gt;1.3.18. 有用过哪些js编程风格&lt;/h3&gt;
&lt;h3 id=&#34;1319-如何理解eventloop&#34;&gt;1.3.19. 如何理解EventLoop?&lt;/h3&gt;
&lt;h3 id=&#34;1320-使用过哪些构建工具各有什么优缺点&#34;&gt;1.3.20. 使用过哪些构建工具？各有什么优缺点？&lt;/h3&gt;
&lt;h2 id=&#34;14-其它&#34;&gt;1.4. 其它&lt;/h2&gt;
&lt;h3 id=&#34;141-平时使用什么搜索引擎查资料&#34;&gt;1.4.1. 平时使用什么搜索引擎查资料？&lt;/h3&gt;
&lt;h3 id=&#34;142-对翻墙有什么看法如何翻墙&#34;&gt;1.4.2. 对翻墙有什么看法？如何翻墙？&lt;/h3&gt;
&lt;h3 id=&#34;143-个人有没有技术博客地址是什么&#34;&gt;1.4.3. 个人有没有技术博客，地址是什么？&lt;/h3&gt;
&lt;h3 id=&#34;144-github上有没有项目&#34;&gt;1.4.4. github上有没有项目？&lt;/h3&gt;
&lt;h2 id=&#34;15-网络相关&#34;&gt;1.5. 网络相关&lt;/h2&gt;
&lt;h3 id=&#34;151-请求状态码-1xx2xx3xx4xx5xx分别有什么含义&#34;&gt;1.5.1. 请求状态码 1xx,2xx,3xx,4xx,5xx分别有什么含义？&lt;/h3&gt;
&lt;h3 id=&#34;152-发送某些post请求时有时会多一些options请求请问这是为什么&#34;&gt;1.5.2. 发送某些post请求时，有时会多一些options请求，请问这是为什么？&lt;/h3&gt;
&lt;h3 id=&#34;153-http报文有哪些组成部分&#34;&gt;1.5.3. http报文有哪些组成部分？&lt;/h3&gt;
&lt;h3 id=&#34;154-http端到端首部和逐跳首部有什么区别&#34;&gt;1.5.4. http端到端首部和逐跳首部有什么区别？&lt;/h3&gt;
&lt;h3 id=&#34;155-http与https在同时使用时有什么注意点&#34;&gt;1.5.5. http与https在同时使用时，有什么注意点？&lt;/h3&gt;
&lt;h3 id=&#34;156-http-tcp-udp-websocket分别位于7层网络的那一层tcp和udp有什么不同&#34;&gt;1.5.6. http, tcp, udp, websocket，分别位于7层网络的那一层？tcp和udp有什么不同？&lt;/h3&gt;
&lt;h1 id=&#34;2-编码题&#34;&gt;2. 编码题&lt;/h1&gt;
&lt;h2 id=&#34;21-写一个函数返回一个数组中所有元素被第一个元素除后的结果&#34;&gt;2.1. 写一个函数，返回一个数组中所有元素被第一个元素除后的结果&lt;/h2&gt;
&lt;h2 id=&#34;22-写一个函数来判断变量是否是数组至少使用两种写法&#34;&gt;2.2. 写一个函数，来判断变量是否是数组，至少使用两种写法&lt;/h2&gt;
&lt;h2 id=&#34;23-写一个函数将秒转化成时分秒格式如80转化成000120&#34;&gt;2.3. 写一个函数，将秒转化成时分秒格式，如80转化成：00:01:20&lt;/h2&gt;
&lt;h2 id=&#34;写一个函数将对象中属性值为-undefined-null的属性删除掉&#34;&gt;写一个函数，将对象中属性值为&amp;rsquo;&amp;rsquo;, undefined, null的属性删除掉&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 处理前
var obj = {
  name: &amp;#39;wdd&amp;#39;,
  address: {
    code: &amp;#39;&amp;#39;,
    tt: null,
    age: 1
  },
  ss: [],
  vv: undefined
}

// 处理后
{
  name: &amp;#39;wdd&amp;#39;,
  address: {
    age: 1
  },
  ss: []
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-翻译题&#34;&gt;3. 翻译题&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Aggregation operations process data records and return computed results. Aggregation operations group values from multiple documents together, and can perform a variety of operations on the grouped data to return a single result. MongoDB provides three ways to perform aggregation: the aggregation pipeline, the map-reduce function, and single purpose aggregation methods.&lt;/p&gt;</description>
    </item>
    <item>
      <title>small is better than big 我的读书方法论</title>
      <link>https://wdd.js.org/posts/2018/02/small-is-better-than-big/</link>
      <pubDate>Tue, 13 Feb 2018 14:57:23 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/small-is-better-than-big/</guid>
      <description>&lt;h1 id=&#34;床底下秘密&#34;&gt;床底下秘密&lt;/h1&gt;
&lt;p&gt;我是一个毅力不是很够的人。我曾经下定决心要锻炼身体，买了一些健身器材，例如瑜伽垫，仰卧起坐的器材，俯卧撑的器材。然而三分钟的热度过后，我把瑜伽垫卷了起来，塞到床底下。把仰卧起坐的器材拆开，也塞到了床底下。&lt;/p&gt;
&lt;p&gt;所以每次我都不敢看床底下，那里塞满了我的羞愧。我常常想，我这不就是永远睡在羞愧之上吗？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;那么，是什么让我放弃了自己的目标，慢慢活成了自己讨厌的样子呢？&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;之前和朋友聊天，我们有一段时间没见了。我突然觉得他也太能聊了，说了很多我不知道的新鲜事，还有一些可以让人茅塞顿开的想法。完了之后，他劝我让我多读书。我觉得这个想法很多。我是确实需要读书了。毕竟我的床底下已经没有空间再塞其他的东西了。&lt;/p&gt;
&lt;p&gt;于是我在多看阅读上买了一下电子书，在京东上买了一些实体书，然后又买了一个kindle。在读书的过程中，有时候作者也会推荐你看一些其他的书。我给自己定了&lt;a href=&#34;https://wdd.js.org/2018-reading-plan.html&#34;&gt;2018年我的阅读计划&lt;/a&gt;，给自己定下要看哪些书。&lt;/p&gt;
&lt;h1 id=&#34;看书的方法&#34;&gt;看书的方法&lt;/h1&gt;
&lt;p&gt;当我决定要看书，并且为此付出了不少的金钱的情况下。我是非常不愿因让我的金钱的付出白白打水漂的，毕竟买书以及买设备，这不是免费的服务。于是我给自己指定了一个非常完善的定量阅读标准&lt;/p&gt;
&lt;p&gt;读书方法v1.0.0 版 如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每天至少看三本书&lt;/li&gt;
&lt;li&gt;每本书看50页&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;人要有标准才能判断是否达标，没有标准，没有数字化的支撑，那是很难以持续的。比如说中国的菜谱，做某道菜中写了一句：&lt;code&gt;加入少许盐&lt;/code&gt;。中国人看了会想，那我就按照口味随便加点盐吧。外国人就会被搞得非常迷糊，少许是多少克盐？ 20g, 30g? 完全没有标准嘛。&lt;/p&gt;
&lt;p&gt;按照读书方法 v1.0.0版，我看了几天，这个效果是很好的。但是我很累，电子书50页可不是个小数目。有时候很难完成的。于是我必须要升级我的读书方法。&lt;/p&gt;
&lt;p&gt;读书方法v1.0.1 版 如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每天至少看三本书&lt;/li&gt;
&lt;li&gt;每本书看10页&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;按照读书方法v1.0.1 版，我看了几天，虽然读书的进度很慢，但是我很容易有满足感，因为这个目标是很容易就达成的。因为你随便去上个厕所，看个10页电子书也是绰绰有余的。但是这个版本也有个问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果我今天看的这本书看的流连忘返，一不小心忘记看页码了，居然不知不觉读了38页，那么是不是已经消耗了未来几天的阅读量呢，明天这本书要不要度呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，我要升级我的读书方法。&lt;/p&gt;
&lt;p&gt;读书方法v1.0.2版：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每天至少读三本书&lt;/li&gt;
&lt;li&gt;每本书至少读10页&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我按照这个方法，感觉做的不错。每天都有一定的阅读量要看，而且阅读量不是很大，不会让我觉得很累。而且当我完成了这个目标，我是会获得不小的满足感。&lt;/p&gt;
&lt;p&gt;大目标分解成小目标去逐个击破，这是我这篇文章的核心观点。&lt;/p&gt;
&lt;h1 id=&#34;冲量公式-i--f-x-t&#34;&gt;冲量公式 I = F x T&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;冲量是力的时间累积效应的量度，是矢量。如果物体所受的力是大小和方向都不变的恒力F，冲量I就是F和作用时间t的乘积。
冲量是描述力对物体作用的时间累积效应的物理量。力的冲量是一个过程量。在谈及冲量时，必须明确是哪个力在哪段时间上的冲量。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;个人好习惯的养成，不是一蹴而就的，而是类似于物理学冲量的概念：力在一段时间内的累积，是过程量&lt;/p&gt;
&lt;p&gt;三分钟的热度对应的冲量：I = F_max x T_min。使用很大的力，作用时间超短，基本上没啥效果，冲量趋近于零。&lt;/p&gt;
&lt;p&gt;微习惯对应的冲量：I = F_min x T_max。使用很小的力，做长时间的积累。冲量不会趋近于零，而是会慢慢增长，然后趋近于一个稳定水平。比如你给自己规定每天看1页书，但是大多数情况下，如果你做了看书的动作，基本上你看书的页数一定会大于1页。&lt;/p&gt;
&lt;h1 id=&#34;看什么样的书&#34;&gt;看什么样的书&lt;/h1&gt;
&lt;p&gt;我自己喜欢看计算机，心理学，历史人文方面的出版书籍。而我的选择标准有两个，符合任一一个，我都会去看。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;要有用。无论是对我的专业知识，还是对人际交往，金融理财等方面要用有益之处&lt;/li&gt;
&lt;li&gt;要有趣。没趣的书我是断然不会去看的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;读书实际上是读人，一流作家写的一流的书，三流作家只能写出九流的书。&lt;/p&gt;</description>
    </item>
    <item>
      <title>基于 WebRTC 构建 Web SIP Phone</title>
      <link>https://wdd.js.org/posts/2018/02/webrtc-web-sip-phone/</link>
      <pubDate>Sun, 11 Feb 2018 14:44:58 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/webrtc-web-sip-phone/</guid>
      <description>&lt;h1 id=&#34;0-阅前须知&#34;&gt;0 阅前须知&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;本文并不是教程，只是实现方案&lt;/li&gt;
&lt;li&gt;我只是从WEB端考虑这个问题，实际还需要后端sip服务器的配合&lt;/li&gt;
&lt;li&gt;jsSIP有个非常不错的在线demo, 可以去哪里玩耍，很好玩呢 &lt;a href=&#34;https://tryit.jssip.net/&#34;&gt;try jssip &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211144554_nUwjgc_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-技术简介&#34;&gt;1. 技术简介&lt;/h1&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WebRTC&lt;/code&gt;: WebRTC，名称源自&lt;code&gt;网页即时通信&lt;/code&gt;（英语：Web Real-Time Communication）的缩写，是一个支持网页浏览器进行实时语音对话或视频对话的API。它于2011年6月1日开源并在Google、Mozilla、Opera支持下被纳入万维网联盟的W3C推荐标准&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SIP&lt;/code&gt;: &lt;code&gt;会话发起协议&lt;/code&gt;（Session Initiation Protocol，缩写SIP）是一个由IETF MMUSIC工作组开发的协议，作为标准被提议用于创建，修改和终止包括视频，语音，即时通信，在线游戏和虚拟现实等多种多媒体元素在内的交互式用户会话。2000年11月，SIP被正式批准成为3GPP信号协议之一，并成为IMS体系结构的一个永久单元。SIP与H.323一样，是用于VoIP最主要的信令协议之一。&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211144604_Zdxh2x_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;一般来说，要么使用实体话机，要么在系统上安装基于sip的客户端程序。实体话机硬件成本高，基于sip的客户端往往兼容性差，无法跨平台，易被杀毒软件查杀。&lt;/p&gt;
&lt;p&gt;而&lt;code&gt;WebRTC&lt;/code&gt;或许是更好的解决方案，只要一个浏览器就可以实时语音视频通话，这是很不错的解决方案。WebSocket可以用来传递sip信令，而WebRTC用来实时传输语音视频流。&lt;/p&gt;
&lt;h1 id=&#34;2-前端webrtc实现方案&#34;&gt;2. 前端WebRTC实现方案&lt;/h1&gt;
&lt;p&gt;其实我们不需要去自己处理WebRTC的相关方法，或者去处理视频或者媒体流。市面上已经有不错的模块可供选择。&lt;/p&gt;
&lt;h2 id=&#34;21-jssiphttpjssipnet&#34;&gt;2.1 &lt;a href=&#34;http://jssip.net/&#34;&gt;jsSIP&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;jsSIP是JavaScript SIP 库&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211144616_7c5Pf0_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;功能特点如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以在浏览器或者Nodejs中运行&lt;/li&gt;
&lt;li&gt;使用WebSocket传递SIP协议&lt;/li&gt;
&lt;li&gt;视频音频实时消息使用WebRTC&lt;/li&gt;
&lt;li&gt;非常轻量&lt;/li&gt;
&lt;li&gt;100%纯JavaScript&lt;/li&gt;
&lt;li&gt;使用简单并且具有强大的Api&lt;/li&gt;
&lt;li&gt;服务端支持 OverSIP, Kamailio, Asterisk, OfficeSIP，reSIProcate，Frafos ABC SBC，TekSIP&lt;/li&gt;
&lt;li&gt;是RFC 7118 and OverSIP的作者写的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是使用JsSIP打电话的例子，非常简单吧&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// Create our JsSIP instance and run it:

var socket = new JsSIP.WebSocketInterface(&amp;#39;wss://sip.myhost.com&amp;#39;);
var configuration = {
  sockets  : [ socket ],
  uri      : &amp;#39;sip:alice@example.com&amp;#39;,
  password : &amp;#39;superpassword&amp;#39;
};

var ua = new JsSIP.UA(configuration);

ua.start();

// Register callbacks to desired call events
var eventHandlers = {
  &amp;#39;progress&amp;#39;: function(e) {
    console.log(&amp;#39;call is in progress&amp;#39;);
  },
  &amp;#39;failed&amp;#39;: function(e) {
    console.log(&amp;#39;call failed with cause: &amp;#39;+ e.data.cause);
  },
  &amp;#39;ended&amp;#39;: function(e) {
    console.log(&amp;#39;call ended with cause: &amp;#39;+ e.data.cause);
  },
  &amp;#39;confirmed&amp;#39;: function(e) {
    console.log(&amp;#39;call confirmed&amp;#39;);
  }
};

var options = {
  &amp;#39;eventHandlers&amp;#39;    : eventHandlers,
  &amp;#39;mediaConstraints&amp;#39; : { &amp;#39;audio&amp;#39;: true, &amp;#39;video&amp;#39;: true }
};

var session = ua.call(&amp;#39;sip:bob@example.com&amp;#39;, options);
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;22-sipjshttpssipjscom&#34;&gt;2.2 &lt;a href=&#34;https://sipjs.com/&#34;&gt;SIP.js&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;sip.js项目实际是fork自jsSIP的，这里主要介绍它的服务端支持情况。其他接口自己自行查阅&lt;/p&gt;</description>
    </item>
    <item>
      <title>不常用却很有妙用的事件及方法</title>
      <link>https://wdd.js.org/posts/2018/02/useful-browser-events/</link>
      <pubDate>Sun, 11 Feb 2018 14:34:17 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/useful-browser-events/</guid>
      <description>&lt;h1 id=&#34;1-visibilitychange事件httpsdevelopermozillaorgzh-cndocswebeventsvisibilitychange&#34;&gt;1 &lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/Events/visibilitychange&#34;&gt;visibilitychange事件&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;触发条件：&lt;code&gt;浏览器标签页被隐藏或显示的时候会触发visibilitychange事件.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用场景：&lt;code&gt;当标签页显示或者隐藏时，触发一些业务逻辑&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;document.addEventListener(&amp;#34;visibilitychange&amp;#34;, function() {
  console.log( document.visibilityState );
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-storage事件httpsdevelopermozillaorgen-usdocswebeventsstorage&#34;&gt;2 &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Events/storage&#34;&gt;storage事件&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;触发条件：&lt;code&gt;使用localStorage or sessionStorage存储或者修改某个本地存储时&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用场景：&lt;code&gt;标签页间通信&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// AB页面同源
// 在A 页面
window.addEventListener(&amp;#39;storage&amp;#39;, (e) =&amp;gt; {console.log(e)})

// 在B 页面，向120打个电话
localStorage.setItem(&amp;#39;makeCall&amp;#39;,&amp;#39;120&amp;#39;)

// 然后可以在A页面间有输出, 可以看出A页面 收到了B页面的通知
...key: &amp;#34;makeCall&amp;#34;, oldValue: &amp;#34;119&amp;#34;, newValue: &amp;#34;120&amp;#34;, ...
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-beforeunload事件httpsdevelopermozillaorgen-usdocswebeventsbeforeunload&#34;&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&#34;&gt;3 beforeunload事件&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;触发条件：&lt;code&gt;当页面的资源将要卸载(及刷新或者关闭标签页前). 当页面依然可见，并且该事件可以被取消只时&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用场景：&lt;code&gt;关闭或者刷新页面时弹窗确认&lt;/code&gt;，&lt;code&gt;关闭页面时向后端发送报告等&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;window.addEventListener(&amp;#34;beforeunload&amp;#34;, function (e) {
  var confirmationMessage = &amp;#34;\o/&amp;#34;;

  e.returnValue = confirmationMessage;     // Gecko, Trident, Chrome 34+
  return confirmationMessage;              // Gecko, WebKit, Chrome &amp;lt;34
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;4-navigatorsendbeaconhttpsdevelopermozillaorgzh-cndocswebapinavigatorsendbeacon&#34;&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/API/Navigator/sendBeacon&#34;&gt;4 navigator.sendBeacon&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;这个方法主要用于满足 统计和诊断代码 的需要，这些代码通常尝试在卸载（unload）文档之前向web服务器发送数据。过早的发送数据可能导致错过收集数据的机会。然而， 对于开发者来说保证在文档卸载期间发送数据一直是一个困难。因为用户代理通常会忽略在卸载事件处理器中产生的异步 XMLHttpRequest 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>mac vscode 更新失败 Permission denied解决办法</title>
      <link>https://wdd.js.org/posts/2018/02/mac-vscode-update-permission-denied/</link>
      <pubDate>Sun, 11 Feb 2018 14:20:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/mac-vscode-update-permission-denied/</guid>
      <description>&lt;h1 id=&#34;0-现象&#34;&gt;0. 现象&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Could not create temporary directory: Permission denied&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-问题起因&#34;&gt;1. 问题起因&lt;/h1&gt;
&lt;p&gt;在 &lt;code&gt;/Users/username/Library/Caches/&lt;/code&gt;目录下，有以下两个文件， 可以看到，他们两个的用户是不一样的，一个是&lt;code&gt;root&lt;/code&gt;一个&lt;code&gt;username&lt;/code&gt;, 一般来说，我是以&lt;code&gt;username&lt;/code&gt;来使用我的mac的。就是因为这两个文件的用户不一样，导致了更新失败。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;drwxr-xr-x   6 username  staff   204B Jan 17 20:33 com.microsoft.VSCode
drwxr--r--   2 root    staff    68B Dec 17 13:51 com.microsoft.VSCode.ShipIt
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-解决方法&#34;&gt;2. 解决方法&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;注意&lt;/code&gt;： 先把vscode 完全关闭&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 1. 这一步是需要输入密码的
sudo chown $USER ~/Library/Caches/com.microsoft.VSCode.ShipIt/

// 2. 这一步是不需要输入密码的, 如果不进行第一步，第二步会报错
sudo chown $USER ~/Library/Caches/com.microsoft.VSCode.ShipIt/*

// 3. 更新xattr
xattr -dr com.apple.quarantine /Applications/Visual\ Studio\ Code.app
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-打开vscode&#34;&gt;3. 打开vscode&lt;/h1&gt;
&lt;p&gt;Code &amp;gt; Check for Updates, 点击之后，你会发现&lt;code&gt;Check for Updates&lt;/code&gt;已经变成灰色了，那么你需要稍等片刻，马上就可以更新，之后会跳出提示，让你重启vscode, 然后重启一下vscode, 就ok了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>IE11 0x2ee4 bug 以及类似问题解决方法</title>
      <link>https://wdd.js.org/posts/2018/02/ie11-0x2ee4-bug/</link>
      <pubDate>Sun, 11 Feb 2018 14:12:19 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/ie11-0x2ee4-bug/</guid>
      <description>&lt;p&gt;&lt;code&gt;一千个IE浏览器访问同一个页面，可能报一千种错误&lt;/code&gt;。前端激进派对IE恨得牙痒痒，但是无论你爱，或者不爱，IE就在那里，不来不去。&lt;/p&gt;
&lt;p&gt;一些银行，以及政府部门，往往都是指定必须使用IE浏览器。所以，一些仅在IE浏览器上出现的问题。总结起来问题的原因很简单：&lt;code&gt;IE的配置不正确&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;下面就将一个我曾经遇到的问题: &lt;code&gt;IE11 0x2ee4&lt;/code&gt;， 以及其他的问题的解决方案&lt;/p&gt;
&lt;h1 id=&#34;1-ie11-script7002-xmlhttprequest-网络错误-0x2ee4&#34;&gt;1. IE11 SCRIPT7002: XMLHttpRequest: 网络错误 0x2ee4&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;背景介绍：在一个HTTPS域向另外一个HTTPS域发送跨域POTST请求时&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;这个问题在浏览器的输出内容如下，怪异的是，并不是所有IE11都会报这个错误。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SCRIPT7002: XMLHttpRequest: 网络错误 0x2ee4, 由于出现错误 00002ee4 而导致此项操作无法完成
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;stackoverflow上有个答案，它的思路是：&lt;code&gt;在post请求发送之前，先进行一次get操作&lt;/code&gt; 这个方式我试过，是可行的。但是深层次的原因我不是很明白。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141321_kcU1Mh_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;然而真相总有大白的一天，其实深层次的原因是，IE11的配置。&lt;/p&gt;
&lt;p&gt;去掉检查证书吊销的的检查，解决0x2ee4的问题&lt;/p&gt;
&lt;p&gt;&lt;code&gt;解决方法&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;去掉check for server certificate revocation*， 也有可能你那边是中文翻译的：叫检查服务器证书是否已吊销&lt;/li&gt;
&lt;li&gt;去掉检查发型商证书是否已吊销&lt;/li&gt;
&lt;li&gt;点击确定&lt;/li&gt;
&lt;li&gt;重启计算机&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141332_EzU6Hs_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-其他常规设置&#34;&gt;2 其他常规设置&lt;/h1&gt;
&lt;h2 id=&#34;21-去掉兼容模式-使用edge文档模式&#34;&gt;2.1 去掉兼容模式， 使用Edge文档模式&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141344_ctLchE_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;下图中红色框里的按钮也要取消勾选
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141353_182pMj_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;22-有些使用activex还是需要检查是否启用的&#34;&gt;2.2 有些使用activeX，还是需要检查是否启用的&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141403_eM2ajd_Screenshot.jpeg&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141414_8gyYUu_Screenshot.jpeg&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141427_CeMrwH_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;23-允许跨域&#34;&gt;2.3 允许跨域&lt;/h2&gt;
&lt;p&gt;如果你的接口跨域了，还要检查浏览器是否允许跨域，否则浏览器可能默认就禁止跨域的&lt;/p&gt;
&lt;p&gt;设置方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;internet选项&lt;/li&gt;
&lt;li&gt;安全&lt;/li&gt;
&lt;li&gt;自定义级别&lt;/li&gt;
&lt;li&gt;&lt;code&gt;启用通过跨域访问数据源&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;启用跨域浏览窗口和框架&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;确定&lt;/li&gt;
&lt;li&gt;然后&lt;code&gt;重启电脑&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180211141443_fV3amH_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180322150920_oVhst9_Jietu20180322-150855.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vue&#43;ElementUI 手把手教你做一个audio组件</title>
      <link>https://wdd.js.org/posts/2018/02/vue-elementui-audio-component/</link>
      <pubDate>Fri, 09 Feb 2018 13:44:13 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/vue-elementui-audio-component/</guid>
      <description>&lt;h1 id=&#34;1-简介&#34;&gt;1. 简介&lt;/h1&gt;
&lt;h2 id=&#34;11-相关技术&#34;&gt;1.1. 相关技术&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cn.vuejs.org/&#34;&gt;Vue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vuejs/vue-cli&#34;&gt;Vue-cli&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://element-cn.eleme.io/#/zh-CN&#34;&gt;ElementUI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yarnpkg.com/lang/zh-hans/&#34;&gt;yarn&lt;/a&gt; (之前我用npm, 并使用cnpm的源，但是用了yarn之后，我发现它比cnpm的速度还快，功能更好，我就毫不犹豫选择yarn了)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000009769804&#34;&gt;Audio相关API和事件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;12-从本教程你会学到什么&#34;&gt;1.2. 从本教程你会学到什么？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Vue单文件组件开发知识&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Element UI基本用法&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Audio原生API及Audio相关事件&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;音频播放器的基本原理&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;音频的播放暂停控制&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;更新音频显示时间&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;音频进度条控制与跳转&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;音频音量控制&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;音频播放速度控制&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;音频静音控制&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;音频下载控制&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;个性化配置与排他性播放&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;一点点ES6语法&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-学前准备&#34;&gt;2. 学前准备&lt;/h1&gt;
&lt;p&gt;基本上不需要什么准备，但是如果你能先看一下Aduio相关API和事件将会更好&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wdd.js.org/audio-heart-detail.html&#34;&gt;Audio: 如果你愿意一层一层剥开我的心&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/Using_HTML5_audio_and_video&#34;&gt;使用 HTML5 音频和视频&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-在线demonhttpswangduanduangithubioelement-audio&#34;&gt;3. &lt;a href=&#34;https://wangduanduan.github.io/element-audio/&#34;&gt;在线demon&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;没有在线demo的教程都是耍流氓&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wangduanduan.github.io/element-audio/&#34;&gt;查看在线demon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wangduanduan/element-audio&#34;&gt;项目地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209134536_j9HvMg_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-开始编码&#34;&gt;4. 开始编码&lt;/h1&gt;
&lt;h1 id=&#34;5-项目初始化&#34;&gt;5. 项目初始化&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  test vue init webpack element-audio

  A newer version of vue-cli is available.

  latest:    2.9.2
  installed: 2.9.1

? Project name element-audio
? Project description A Vue.js project
? Author wangdd &amp;lt;wangdd@xxxxxx.com&amp;gt;
? Vue build standalone
? Install vue-router? No
? Use ESLint to lint your code? No
? Set up unit tests No
? Setup e2e tests with Nightwatch? No
? Should we run `npm install` for you after the project has been created? (recommended) npm

➜  test cd element-audio 
➜  element-audio npm run dev
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;浏览器打开 &lt;code&gt;http://localhost:8080/&lt;/code&gt;, 看到如下界面，说明项目初始化成功&lt;/p&gt;</description>
    </item>
    <item>
      <title>你不知道的JSON.stringify()妙用</title>
      <link>https://wdd.js.org/posts/2018/02/json-stringify-powerful/</link>
      <pubDate>Fri, 09 Feb 2018 13:27:15 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/json-stringify-powerful/</guid>
      <description>&lt;h1 id=&#34;1-语法&#34;&gt;1. 语法&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;JSON.stringify(value[, replacer[, space]])
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一般用法：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var user = {name: &amp;#39;andy&amp;#39;, isDead: false, age: 11, addr: &amp;#39;shanghai&amp;#39;};

JSON.stringify(user);

&amp;#34;{&amp;#34;name&amp;#34;:&amp;#34;andy&amp;#34;,&amp;#34;isDead&amp;#34;:false,&amp;#34;age&amp;#34;:11,&amp;#34;addr&amp;#34;:&amp;#34;shanghai&amp;#34;}&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-扩展用法&#34;&gt;2. 扩展用法&lt;/h1&gt;
&lt;h2 id=&#34;21-replacer&#34;&gt;2.1. replacer&lt;/h2&gt;
&lt;p&gt;replacer可以是&lt;code&gt;函数&lt;/code&gt;或者是&lt;code&gt;数组&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;功能1: 改变属性值&lt;/code&gt;
将isDead属性的值翻译成0或1，0对应false,1对应true&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var user = {name: &amp;#39;andy&amp;#39;, isDead: false, age: 11, addr: &amp;#39;shanghai&amp;#39;};

JSON.stringify(user, function(key, value){
    if(key === &amp;#39;isDead&amp;#39;){
        return value === true ? 1 : 0;
    }
    return value;
});

&amp;#34;{&amp;#34;name&amp;#34;:&amp;#34;andy&amp;#34;,&amp;#34;isDead&amp;#34;:0,&amp;#34;age&amp;#34;:11,&amp;#34;addr&amp;#34;:&amp;#34;shanghai&amp;#34;}&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;功能2：删除某个属性&lt;/code&gt;
将isDead属性删除，如果replacer的返回值是&lt;code&gt;undefined&lt;/code&gt;,那么该属性会被删除。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var user = {name: &amp;#39;andy&amp;#39;, isDead: false, age: 11, addr: &amp;#39;shanghai&amp;#39;};

JSON.stringify(user, function(key, value){
    if(key === &amp;#39;isDead&amp;#39;){
        return undefined;
    }
    return value;
});

&amp;#34;{&amp;#34;name&amp;#34;:&amp;#34;andy&amp;#34;,&amp;#34;age&amp;#34;:11,&amp;#34;addr&amp;#34;:&amp;#34;shanghai&amp;#34;}&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;功能3: 通过数组过滤某些属性&lt;/code&gt;
只需要name属性和addr属性，其他不要。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ECharts 轮流高亮中国地图各个省份</title>
      <link>https://wdd.js.org/posts/2018/02/echarts-highlight-china-map/</link>
      <pubDate>Fri, 09 Feb 2018 13:16:53 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/echarts-highlight-china-map/</guid>
      <description>&lt;h1 id=&#34;1-小栗子&#34;&gt;1. 小栗子&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209131759_k10o0Z_bVVWEB.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;最早我是想通过&lt;code&gt;dispatchAction&lt;/code&gt;方法去改变选中的省份，但是没有起作用，如果你知道这个方法怎么实现，麻烦你可以告诉我。
我实现的方法是另外一种。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dispatchAction({
    type: &amp;#39;geoSelect&amp;#39;,
    // 可选，系列 index，可以是一个数组指定多个系列
    seriesIndex?: number|Array,
    // 可选，系列名称，可以是一个数组指定多个系列
    seriesName?: string|Array,
    // 数据的 index，如果不指定也可以通过 name 属性根据名称指定数据
    dataIndex?: number,
    // 可选，数据名称，在有 dataIndex 的时候忽略
    name?: string
})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;后来我改变了一个方法。这个方法的核心思路是定时获取图标的配置，然后更新配置，最后在设置配置。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var myChart = echarts.init(document.getElementById(&amp;#39;china-map&amp;#39;));

var COLORS = [&amp;#34;#070093&amp;#34;, &amp;#34;#1c3fbf&amp;#34;, &amp;#34;#1482e5&amp;#34;, &amp;#34;#70b4eb&amp;#34;, &amp;#34;#b4e0f3&amp;#34;, &amp;#34;#ffffff&amp;#34;];

// 指定图表的配置项和数据
var option = {
    tooltip: {
        trigger: &amp;#39;item&amp;#39;,
        formatter: &amp;#39;{b}&amp;#39;
    },
    series: [
        {
            name: &amp;#39;中国&amp;#39;,
            type: &amp;#39;map&amp;#39;,
            mapType: &amp;#39;china&amp;#39;,
            selectedMode : &amp;#39;single&amp;#39;,
            label: {
                normal: {
                    show: true
                },
                emphasis: {
                    show: true
                }
            },
            data:[
                // 默认高亮安徽省
                {name:&amp;#39;安徽&amp;#39;, selected:true}
            ],
            itemStyle: {
                normal: {
                    areaColor: &amp;#39;rgba(255,255,255,0.5)&amp;#39;,
                    color: &amp;#39;#000000&amp;#39;,
                    shadowBlur: 200,
                    shadowColor: &amp;#39;rgba(0, 0, 0, 0.5)&amp;#39;
                },
                emphasis:{
                    areaColor: &amp;#39;#3be2fb&amp;#39;,
                    color: &amp;#39;#000000&amp;#39;,
                    shadowBlur: 200,
                    shadowColor: &amp;#39;rgba(0, 0, 0, 0.5)&amp;#39;
                }
            }
        }
    ]
};

// 使用刚指定的配置项和数据显示图表。
myChart.setOption(option);

myChart.on(&amp;#39;click&amp;#39;, function(params) {
    console.log(params);
});

setInterval(function(){
    var op = myChart.getOption();
    var data = op.series[0].data;

    var length = data.length;

    data.some(function(item, index){
        if(item.selected){
            item.selected = false;
            var next = (index + 1)%length;
            data[next].selected = true;
            return true;
        }
    });

    myChart.setOption(op);

}, 3000);
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-后续补充&#34;&gt;2. 后续补充&lt;/h1&gt;
&lt;p&gt;我从这里发现：https://github.com/ecomfe/echarts/issues/3282，选中地图的写法是这样的，而试了一下果然可以。主要是type要是&lt;code&gt;mapSelect&lt;/code&gt;,而不是&lt;code&gt;geoSelect&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>一行命令搭建简易静态文件http服务器</title>
      <link>https://wdd.js.org/posts/2018/02/one-command-create-static-file-server/</link>
      <pubDate>Fri, 09 Feb 2018 13:01:14 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/one-command-create-static-file-server/</guid>
      <description>&lt;p&gt;简易服务器：在命令执行的所在路径启动一个http服务器，然后你可以通过浏览器访问该路径下的所有文件。&lt;/p&gt;
&lt;p&gt;在局域网内传文件，或者自己测试使用都是非常方便的。&lt;/p&gt;
&lt;h1 id=&#34;1-基于python&#34;&gt;1. 基于python&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209130207_yzmvQO_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;11-基于python2&#34;&gt;1.1. 基于Python2&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python -m SimpleHTTPServer port&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; python -m SimpleHTTPServer 8099
Serving HTTP on 0.0.0.0 port 8099 ...
127.0.0.1 - - [24/Oct/2017 11:07:56] &amp;#34;GET / HTTP/1.1&amp;#34; 200 -
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;12-基于python3&#34;&gt;1.2. 基于python3&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python3 -m http.server port&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; python3 -m http.server 8099
Serving HTTP on 0.0.0.0 port 8099 (http://0.0.0.0:8099/) ...
127.0.0.1 - - [24/Oct/2017 11:05:06] &amp;#34;GET / HTTP/1.1&amp;#34; 200 -
127.0.0.1 - - [24/Oct/2017 11:05:06] code 404, message File not found
127.0.0.1 - - [24/Oct/2017 11:05:06] &amp;#34;GET /favicon.ico HTTP/1.1&amp;#34; 404 -
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-基于nodejs&#34;&gt;2. 基于nodejs&lt;/h1&gt;
&lt;p&gt;首先你要安装nodejs
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209130231_76jUWj_Screenshot.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>120行代码实现 浏览器WebRTC视频聊天</title>
      <link>https://wdd.js.org/posts/2018/02/webrtc-tutorial-simple-video-chat/</link>
      <pubDate>Fri, 09 Feb 2018 12:56:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/webrtc-tutorial-simple-video-chat/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本例子是参考&lt;a href=&#34;https://www.scaledrone.com/blog/posts/webrtc-tutorial-simple-video-chat&#34;&gt;webrtc-tutorial-simple-video-chat&lt;/a&gt;做的。
这个教程应该主要是去宣传ScaleDrone的sdk, 他们的服务是收费的，但是免费的也可以用，就是有些次数限制。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wangduanduan/webrtc&#34;&gt;本栗子的地址&lt;/a&gt;
&lt;a href=&#34;https://wangduanduan.github.io/webrtc/&#34;&gt;本栗子的pages地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;因为使用的是ScaleDrone的js sdk, 后期很可能服务不稳定之类的&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-准备&#34;&gt;1. 准备&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;使用最新版谷歌浏览器（62版）&lt;/li&gt;
&lt;li&gt;视频聊天中 一个是windows, 一个是mac&lt;/li&gt;
&lt;li&gt;stun服务器使用谷歌的，trun使用&lt;a href=&#34;https://www.scaledrone.com/&#34;&gt;ScaleDrone&lt;/a&gt;的sdk，这样我就不用管服务端了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-先上效果图&#34;&gt;2. 先上效果图&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209125722_GO0Ee0_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-再上在线例子点击此处httpswangduanduangithubiowebrtcdemoschat-with-your-friendhtml&#34;&gt;3. 再上在线例子&lt;a href=&#34;https://wangduanduan.github.io/webrtc/demos/chat-with-your-friend.html&#34;&gt;点击此处&lt;/a&gt;&lt;/h1&gt;
&lt;h1 id=&#34;4-源码分析&#34;&gt;4. 源码分析&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 产生随机数
if (!location.hash) {
    location.hash = Math.floor(Math.random() * 0xFFFFFF).toString(16);
}
// 获取房间号
var roomHash = location.hash.substring(1);

// 放置你自己的频道id, 这是我注册了ScaleDrone 官网后，创建的channel
// 你也可以自己创建
var drone = new ScaleDrone(&amp;#39;87fYv4ncOoa0Cjne&amp;#39;);
// 房间名必须以 &amp;#39;observable-&amp;#39;开头
var roomName = &amp;#39;observable-&amp;#39; + roomHash;
var configuration = {
    iceServers: [{
        urls: &amp;#39;stun:stun.l.google.com:19302&amp;#39; // 使用谷歌的stun服务
    }]
};

var room;
var pc;
function onSuccess() {}

function onError(error) {
    console.error(error);
}

drone.on(&amp;#39;open&amp;#39;, function(error){
    if (error) { return console.error(error);}

    room = drone.subscribe(roomName);
    room.on(&amp;#39;open&amp;#39;, function(error){
        if (error) {onError(error);}
    });

    // 已经链接到房间后，就会收到一个 members 数组，代表房间里的成员
    // 这时候信令服务已经就绪
    room.on(&amp;#39;members&amp;#39;, function(members){
        console.log(&amp;#39;MEMBERS&amp;#39;, members);

        // 如果你是第二个链接到房间的人，就会创建offer
        var isOfferer = members.length === 2;
        startWebRTC(isOfferer);
    });
});

// 通过Scaledrone发送信令消息
function sendMessage(message) {
    drone.publish({
        room: roomName,
        message
    });
}

function startWebRTC(isOfferer) {
    pc = new RTCPeerConnection(configuration);

    // 当本地ICE Agent需要通过信号服务器发送信息到其他端时
    // 会触发icecandidate事件回调
    pc.onicecandidate = function(event){
        if (event.candidate) {
            sendMessage({ &amp;#39;candidate&amp;#39;: event.candidate });
        }
    };

    // 如果用户是第二个进入的人，就在negotiationneeded 事件后创建sdp
    if (isOfferer) {
        // onnegotiationneeded 在要求sesssion协商时发生
        pc.onnegotiationneeded = function() {
            // 创建本地sdp描述 SDP (Session Description Protocol) session描述协议
            pc.createOffer().then(localDescCreated).catch(onError);
        };
    }

    // 当远程数据流到达时，将数据流装载到video中
    pc.onaddstream = function(event){
        remoteVideo.srcObject = event.stream;
    };

    // 获取本地媒体流
    navigator.mediaDevices.getUserMedia({
        audio: true,
        video: true,
    }).then( function(stream) {
        // 将本地捕获的视频流装载到本地video中
        localVideo.srcObject = stream;

        // 将本地流加入RTCPeerConnection 实例中 发送到其他端
        pc.addStream(stream);
    }, onError);

    // 从Scaledrone监听信令数据
    room.on(&amp;#39;data&amp;#39;, function(message, client){
        // 消息是我自己发送的，则不处理
        if (client.id === drone.clientId) {
            return;
        }

        if (message.sdp) {
            // 设置远程sdp, 在offer 或者 answer后
            pc.setRemoteDescription(new RTCSessionDescription(message.sdp), function(){
                // 当收到offer 后就接听
                if (pc.remoteDescription.type === &amp;#39;offer&amp;#39;) {
                    pc.createAnswer().then(localDescCreated).catch(onError);
                }
            }, onError);
        }
        else if (message.candidate) {
            // 增加新的 ICE canidatet 到本地的链接中
            pc.addIceCandidate(
                new RTCIceCandidate(message.candidate), onSuccess, onError
            );
        }
    });
}

function localDescCreated(desc) {
    pc.setLocalDescription(desc, function(){
        sendMessage({ &amp;#39;sdp&amp;#39;: pc.localDescription });
    },onError);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;5-webrtc简介&#34;&gt;5. WebRTC简介&lt;/h1&gt;
&lt;h2 id=&#34;51-介绍&#34;&gt;5.1. 介绍&lt;/h2&gt;
&lt;p&gt;WebRTC 是一个开源项目，用于Web浏览器之间进行实时音频视频通讯，数据传递。
WebRTC有几个JavaScript APIS。 点击链接去查看demo。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何写好技术文档?</title>
      <link>https://wdd.js.org/posts/2018/02/how-to-write-a-technical-document/</link>
      <pubDate>Fri, 09 Feb 2018 12:52:57 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/how-to-write-a-technical-document/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文来自于公司内部的一个分享。
在文档方面，对内的一些接口文档主要是用swagger来写的。虽然可以在线测试，比较方便。但是也存在着一些更新不及时，swgger文档无法导出成文件的问题。
在对外提供的文档方面：我主要负责做一个浏览器端的一个js sdk。文档还算可以&lt;a href=&#34;https://github.com/wangduanduan/wellclient&#34;&gt;github地址&lt;/a&gt;，所以想把一些写文档的心得分享给大家。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;1-衡量好文档的唯一标准是什么&#34;&gt;1. 衡量好文档的唯一标准是什么？&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209125351_QEkv8l_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;Martin(Bob大叔)曾在《代码整洁之道》一书打趣地说：当你的代码在做 Code Review 时，审查者要是愤怒地吼道：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;“What the fuck is this shit?”
“Dude, What the fuck！”
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;等言辞激烈的词语时，那说明你写的代码是 Bad Code，如果审查者只是漫不经心的吐出几个&lt;/p&gt;
&lt;p&gt;&lt;code&gt;“What the fuck?”，&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180209125409_sQvHfi_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;那说明你写的是 Good Code。衡量代码质量的唯一标准就&lt;code&gt;是每分钟骂出“WTF” 的频率&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;衡量文档的标准也是如此。&lt;/p&gt;
&lt;h1 id=&#34;2-好文档的特点&#34;&gt;2. 好文档的特点&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;简洁&lt;/code&gt;：一句话可以说完的事情，就不要分两句话来说。并不是文档越厚越好，太厚的文档大多没人看。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;准确&lt;/code&gt;: 字段类型，默认值，备注，是否必填等属性说明。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;逻辑性&lt;/code&gt;: 文档如何划分？ 利于查看。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;demo胜千言&lt;/code&gt;: 好的demo胜过各种字段说明，可以复制下来直接使用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;读者心&lt;/code&gt;: 从读者的角度考虑, 方法尽量简洁。可以传递一个参数搞定的事情，绝对不要让用户去传两个参数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;及时更新&lt;/code&gt;: 不更新的文档比bug更严重。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;向后兼容&lt;/code&gt;: 不要随意废弃已有的接口或者某个字段，除非你考虑到这样做的后果。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;建立文档词汇表&lt;/code&gt;：每个概念只有一个名字，不要随意起名字，名不正则言不顺。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;格式统一&lt;/code&gt;：例如时间格式。我曾见过2017-09-12 09:32:23, 或2017.09.12 09:32:23或2017.09.12 09:32:23。变量名user_name, userName。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;使用专业词语&lt;/code&gt;：不要过于口语化&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-总结-写出好文档要有以下四点&#34;&gt;3. 总结: 写出好文档要有以下四点&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;逻辑性&lt;/code&gt;：便于查找&lt;/li&gt;
&lt;li&gt;&lt;code&gt;专业性&lt;/code&gt;: 值得信赖，质量保证&lt;/li&gt;
&lt;li&gt;&lt;code&gt;责任心&lt;/code&gt;：及时更新，准确性，向后兼容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;读者心&lt;/code&gt;：你了解的东西，别人可能并不清楚。从读者的角度去考虑，他们需要什么，而不是一味去强调你能提供什么。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;4-写文档的工具&#34;&gt;4. 写文档的工具&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;markdown: 方便快捷，可以导出各种格式的文件&lt;/li&gt;
&lt;li&gt;swagger: 功能强大，需要部署，不方便传递文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5-markdown-工具推荐&#34;&gt;5. markdown 工具推荐&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://leanote.com/&#34;&gt;蚂蚁笔记&lt;/a&gt; 这是我正使用的。
&lt;ul&gt;
&lt;li&gt;全平台（mac windows ios）有客户端，和浏览器端&lt;/li&gt;
&lt;li&gt;笔记可以直接公布为博客&lt;/li&gt;
&lt;li&gt;支持独立域名&lt;/li&gt;
&lt;li&gt;标签很好用&lt;/li&gt;
&lt;li&gt;支持思维导图&lt;/li&gt;
&lt;li&gt;支持历史记录&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zybuluo.com/mdeditor#411452&#34;&gt;cmd-markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;有道云笔记&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6-文档之外&#34;&gt;6. 文档之外&lt;/h1&gt;
&lt;p&gt;公司有个同事，我曾问他使用什么搜索一些技术文档，他说用百度。作为一个翻墙老司机，我惊诧的问他：你为什么不用谷歌去搜索。他说他不会翻墙。我只能呵呵一笑。&lt;/p&gt;</description>
    </item>
    <item>
      <title>哑代理 - TCP链接高Recv-Q，内存泄露的罪魁祸首</title>
      <link>https://wdd.js.org/posts/2018/02/tcp-high-recv-q-or-send-q-reasons/</link>
      <pubDate>Thu, 08 Feb 2018 21:58:31 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/tcp-high-recv-q-or-send-q-reasons/</guid>
      <description>&lt;h1 id=&#34;1-问题现象&#34;&gt;1. 问题现象&lt;/h1&gt;
&lt;p&gt;使用&lt;code&gt;netstat -ntp&lt;/code&gt;命令时发现，Recv-Q 1692012 异常偏高（正常情况下，该值应该是0），导致应用占用过多的内存。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tcp 1692012 0 172.17.72.4:48444 10.254.149.149:58080 ESTABLISHED 27/node
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;问题原因：&lt;code&gt;代理的转发时，没有删除逐跳首部&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-什么是hop-by-hop-逐跳首部&#34;&gt;2. 什么是Hop-by-hop 逐跳首部？&lt;/h1&gt;
&lt;p&gt;http首部可以分为两种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;端到端首部 End-to-end: 端到端首部代理在转发时必须携带的&lt;/li&gt;
&lt;li&gt;逐跳首部 Hop-by-hop: 逐跳首部只对单次转发有效，代理在转发时，必须删除这些首部&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逐跳首部有以下几个, &lt;code&gt;这些首部在代理进行转发前必须删除&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Connetion&lt;/li&gt;
&lt;li&gt;Keep-Alive&lt;/li&gt;
&lt;li&gt;Proxy-Authenticate&lt;/li&gt;
&lt;li&gt;Proxy-Authortization&lt;/li&gt;
&lt;li&gt;Trailer&lt;/li&gt;
&lt;li&gt;TE&lt;/li&gt;
&lt;li&gt;Transfer-Encodeing&lt;/li&gt;
&lt;li&gt;Upgrade&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-什么是哑代理&#34;&gt;3. 什么是哑代理？&lt;/h1&gt;
&lt;p&gt;很多老的或简单的代理都是盲中继(blind relay),它们只是将字节从一个连接转发到另一个连接中去,不对Connection首部进行特殊的处理。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180222111857_Wi3Sye_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;(1)在图4-15a中 Web客户端向代理发送了一条报文,其中包含了Connection:Keep-Alive首部,如果可能的话请求建立一条keep-alive连接。客户端等待响应,以确定对方是否认可它对keep-alive信道的请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(2)  哑代理收到了这条HTTP请求,但它并不理解 Connection首部(只是将其作为一个扩展首部对待)。代理不知道keep-alive是什么意思,因此只是沿着转发链路将报文一字不漏地发送给服务器(图4-15b)。但Connection首部是个逐跳首部,只适用于单条传输链路,不应该沿着传输链路向下传输。接下来,就要发生一些很糟糕的事情了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(3)  在图4-15b中,经过中继的HTTP请求抵达了Web服务器。当Web服务器收到经过代理转发的Connection: Keep-Alive首部时,会误以为代理(对服务器来说,这个代理看起来就和所有其他客户端一样)希望进行keep-alive对话!对Web服务器来说这没什么问题——它同意进行keep-alive对话,并在图4-15c中回送了一个Connection: Keep-Alive响应首部。所以,此时W eb服务器认为它在与代理进行keep-alive对话,会遵循keep-alive的规则。但代理却对keep-alive一无所知。不妙。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(4)  在图4-15d中,哑代理将Web服务器的响应报文回送给客户端,并将来自Web服务器的Connection: Keep-Alive首部一起传送过去。客户端看到这个首部,就会认为代理同意进行keep-alive对话。所以,此时客户端和服务器都认为它们在进行keep-alive对话,但与它们进行对话的代理却对keep-alive一无所知。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(5)  由于代理对keep-alive一无所知,所以会将收到的所有数据都回送给客户端,然后等待源端服务器关闭连接。但源端服务器会认为代理已经显式地请求它将连接保持在打开状态了,所以不会去关闭连接。这样,代理就会挂在那里等待连接的关闭。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(6)  客户端在图4-15d中收到了回送的响应报文时,会立即转向下一条请求,在keep-alive连接上向代理发送另一条请求(参见图4-15e)。而代理并不认为同一条连接上会有其他请求到来,请求被忽略,浏览器就在这里转圈,不会有任何进展了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(7)  这种错误的通信方式会使浏览器一直处于挂起状态,直到客户端或服务器将连接超时,并将其关闭为止。 &amp;ndash;《HTTP权威指南》&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是HTTP权威指南中，关于HTTP哑代理的描述。这里这里说了哑代理会造成的一个问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这种错误的通信方式会使浏览器一直处于挂起状态,直到客户端或服务器将连接超时,并将其关闭为止。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实际上，我认为哑代理还是造成以下问题的原因&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TCP链接高Recv-Q&lt;/li&gt;
&lt;li&gt;tcp链接不断开，导致服务器内存过高，内存泄露&lt;/li&gt;
&lt;li&gt;节点iowait高&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在我们自己的代理的代码中，我有发现，在代理进行转发时，只删除了headers.host, 并没有删除headers.Connection等逐跳首部的字段&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;delete req.headers.host

var option = {
  url: url,
  headers: req.headers
}

var proxy = request(option)
req.pipe(proxy)
proxy.pipe(res)
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;4-解决方案&#34;&gt;4. 解决方案&lt;/h1&gt;
&lt;p&gt;解决方案有两个， 我推荐使用第二个方案，具体方法参考&lt;a href=&#34;https://wdd.js.org/express-proxy-middleware-demo.html&#34;&gt;Express 代理中间件的写法&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>定时器学习：利用定时器分解耗时任务案例</title>
      <link>https://wdd.js.org/posts/2018/02/settimeout-to-splice-big-work/</link>
      <pubDate>Thu, 08 Feb 2018 14:09:54 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/settimeout-to-splice-big-work/</guid>
      <description>&lt;p&gt;对于执行时间过长的脚本，有的浏览器会弹出警告，说页面无响应。有的浏览器会直接终止脚本。总而言之，浏览器不希望某一个代码块长时间处于运行状态，因为js是单线程的。一个代码块长时间运行，将会导致其他任何任务都必须等待。从用户体验上来说，很有可能发生页面渲染卡顿或者点击事件无响应的状态。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果一段脚本的运行时间超过5秒，有些浏览器（比如Firefox和Opera）将弹出一个对话框警告用户该脚本“无法响应”。而其他浏览器，比如iPhone上的浏览器，将默认终止运行时间超过5秒钟的脚本。&amp;ndash;《JavaScript忍者秘籍》&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;JavaScript忍者秘籍里有个很好的比喻：页面上发生的各种事情就好像一群人在讨论事情，如果有个人一直在说个不停，其他人肯定不乐意。我们希望有个裁判，定时的切换其他人来说话。&lt;/p&gt;
&lt;p&gt;Js利用定时器来分解任务，关键点有两个。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;按什么维度去分解任务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;任务的现场保存与现场恢复&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;1-例子&#34;&gt;1. 例子&lt;/h1&gt;
&lt;p&gt;要求：动态创建一个表格，一共10000行，每行10个单元格&lt;/p&gt;
&lt;h2 id=&#34;11-一次性创建&#34;&gt;1.1. 一次性创建&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
	&amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt;
	&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;table&amp;gt;
	&amp;lt;tbody&amp;gt;&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;

&amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt;
	var tbody = document.getElementsByTagName(&amp;#39;tbody&amp;#39;)[0];

	var allLines = 10000;
	// 每次渲染的行数

	console.time(&amp;#39;wd&amp;#39;);
	for(var i=0; i&amp;lt;allLines; i++){
		var tr = document.createElement(&amp;#39;tr&amp;#39;);

		for(var j=0; j&amp;lt;10; j++){
			var td = document.createElement(&amp;#39;td&amp;#39;);

			td.appendChild(document.createTextNode(i+&amp;#39;,&amp;#39;+j));
			tr.appendChild(td);
		}

		tbody.appendChild(tr);
	}
	console.timeEnd(&amp;#39;wd&amp;#39;);

&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;总共耗时180ms, 浏览器已经给出警告！[Violation] &#39;setTimeout&#39; handler took 53ms&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208141029_DSFYi3_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;12-分批次动态创建&#34;&gt;1.2. 分批次动态创建&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
	&amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt;
	&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;table&amp;gt;
	&amp;lt;tbody&amp;gt;&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;

&amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt;
	var tbody = document.getElementsByTagName(&amp;#39;tbody&amp;#39;)[0];

	var allLines = 10000;
	// 每次渲染的行数
	var everyTimeCreateLines = 80;
	// 当前行
	var currentLine = 0;

	setTimeout(function renderTable(){
		console.time(&amp;#39;wd&amp;#39;);
		for(var i=currentLine; i&amp;lt;currentLine+everyTimeCreateLines &amp;amp;&amp;amp; i&amp;lt;allLines; i++){
			var tr = document.createElement(&amp;#39;tr&amp;#39;);

			for(var j=0; j&amp;lt;10; j++){
				var td = document.createElement(&amp;#39;td&amp;#39;);

				td.appendChild(document.createTextNode(i+&amp;#39;,&amp;#39;+j));
				tr.appendChild(td);
			}

			tbody.appendChild(tr);
		}
		console.timeEnd(&amp;#39;wd&amp;#39;);

		currentLine = i;

		if(currentLine &amp;lt; allLines){
			setTimeout(renderTable,0);
		}
	},0);

&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;这次异步按批次创建，没有耗时的警告。因为控制了每次代码在50ms内运行。实际上每80行耗时约10ms左右。这就不会引起页面卡顿等问题。&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于JavaScropt函数式编程，我多么希望能早点看到这本书</title>
      <link>https://wdd.js.org/posts/2018/02/js-functional-programming/</link>
      <pubDate>Thu, 08 Feb 2018 14:06:22 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/js-functional-programming/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;我父亲以前跟我说过，有些事物在你得到之前是无足轻重的，得到之后就不可或缺了。微波炉是这样，智能手机是这样，互联网也是这样——老人们在没有互联网的时候过得也很充实。对我来说，函数的柯里化（curry）也是这样。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208140707_POIKmq_Screenshot.jpeg&#34;&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208140717_25soGz_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我继续看了这本书的中文版。有些醍醐灌顶的感觉。 随之在github搜了一下。
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208140730_aTXsaN_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;我想，即使付费，我也愿意看。&lt;/p&gt;
&lt;p&gt;中文版地址：https://www.gitbook.com/book/llh911001/mostly-adequate-guide-chinese/details
github原文地址：https://github.com/MostlyAdequate/mostly-adequate-guide&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208140744_5kvV4A_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-后记&#34;&gt;1. 后记&lt;/h1&gt;
&lt;p&gt;其实我是想学点函数柯里化的东西，然后用谷歌搜索了一下。第一个结果就是这本书。&lt;code&gt;非常感谢谷歌搜索，如果我用百度，可能就没有缘分遇到这本书了。&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>终于找到你！如何将前端console.log的日志保存成文件?</title>
      <link>https://wdd.js.org/posts/2018/02/save-console-log-as-file/</link>
      <pubDate>Thu, 08 Feb 2018 13:56:40 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/save-console-log-as-file/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本篇文章来自一个需求，前端websocket会收到各种消息，但是调试的时候，我希望把websoekt推送过来的消息都保存到一个文件里，如果出问题的时候，我可以把这些消息的日志文件提交给后端开发区分析错误。但是在浏览器里，js一般是不能写文件的。鼠标另存为的方法也是不太好，因为会保存所有的console.log的输出。于是，终于找到这个debugout.js。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;debugout.js的原理是将所有日志序列化后，保存到一个变量里。当然这个变量不会无限大，因为默认的最大日志限制是2500行，这个是可配置的。另外，debugout.js也支持在localStorage里存储日志的。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208135709_Z3SQQV_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-debugoutjshttpsgithubcominorganikdebugoutjs&#34;&gt;1. &lt;a href=&#34;https://github.com/inorganik/debugout.js&#34;&gt;debugout.js&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;一般来说，可以使用打开console面板，然后右键save，是可以将console.log输出的信息另存为log文件的。但是这就把所有的日志都包含进来了，如何只保存我想要的日志呢？&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;（调试输出）从您的日志中生成可以搜索，时间戳，下载等的文本文件。 参见下面的一些例子。&lt;/p&gt;
&lt;p&gt;Debugout的log（）接受任何类型的对象，包括函数。 Debugout不是一个猴子补丁，而是一个单独的记录类，你使用而不是控制台。&lt;/p&gt;
&lt;p&gt;调试的一些亮点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在运行时或任何时间获取整个日志或尾部&lt;/li&gt;
&lt;li&gt;搜索并切片日志&lt;/li&gt;
&lt;li&gt;更好地了解可选时间戳的使用模式&lt;/li&gt;
&lt;li&gt;在一个地方切换实时日志记录（console.log）&lt;/li&gt;
&lt;li&gt;可选地将输出存储在window.localStorage中，并在每个会话中持续添加到同一个日志&lt;/li&gt;
&lt;li&gt;可选地，将日志上限为X个最新行以限制内存消耗&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下图是使用downloadLog方法下载的日志文件。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208135722_EwunDY_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;官方提供的demo示例，欢迎试玩。http://inorganik.github.io/debugout.js/&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208135732_Ltowzp_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-使用&#34;&gt;2. 使用&lt;/h1&gt;
&lt;p&gt;在脚本顶部的全局命名空间中创建一个新的调试对象，并使用debugout的日志方法替换所有控制台日志方法：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var bugout = new debugout();

// instead of console.log(&amp;#39;some object or string&amp;#39;)
bugout.log(&amp;#39;some object or string&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-api&#34;&gt;3. API&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;log() -像console.log(), 但是会自动存储&lt;/li&gt;
&lt;li&gt;getLog() - 返回所有日志&lt;/li&gt;
&lt;li&gt;tail(numLines) - 返回尾部执行行日志，默认100行&lt;/li&gt;
&lt;li&gt;search(string) - 搜索日志&lt;/li&gt;
&lt;li&gt;getSlice(start, numLines) - 日志切割&lt;/li&gt;
&lt;li&gt;downloadLog() - 下载日志&lt;/li&gt;
&lt;li&gt;clear() - 清空日志&lt;/li&gt;
&lt;li&gt;determineType() - 一个更细粒度的typeof为您提供方便&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-可选配置&#34;&gt;4. 可选配置&lt;/h1&gt;
&lt;p&gt;···
// log in real time (forwards to console.log)
self.realTimeLoggingOn = true;
// insert a timestamp in front of each log
self.useTimestamps = false;
// store the output using window.localStorage() and continuously add to the same log each session
self.useLocalStorage = false;
// set to false after you&amp;rsquo;re done debugging to avoid the log eating up memory
self.recordLogs = true;
// to avoid the log eating up potentially endless memory
self.autoTrim = true;
// if autoTrim is true, this many most recent lines are saved
self.maxLines = 2500;
// how many lines tail() will retrieve
self.tailNumLines = 100;
// filename of log downloaded with downloadLog()
self.logFilename = &amp;rsquo;log.txt&amp;rsquo;;
// max recursion depth for logged objects
self.maxDepth = 25;
···&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何浏览器里调试iframe里层的代码？</title>
      <link>https://wdd.js.org/posts/2018/02/debug-code-in-iframe/</link>
      <pubDate>Thu, 08 Feb 2018 13:53:48 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/debug-code-in-iframe/</guid>
      <description>&lt;p&gt;之前一直非常痛苦，在iframe外层根本获取不了里面的信息，后来使用了postMessage用传递消息来实现，但是用起来还是非常不方便。&lt;/p&gt;
&lt;p&gt;其实浏览器本身是可以选择不同的iframe的执行环境的。例如有个变量是在iframe里面定义的，你只需要切换到这个iframe的执行环境，你就可以随意操作这个环境的任何变量了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;这个小技巧，对于调试非常有用，但是我直到今天才发现。&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-chrome&#34;&gt;1. Chrome&lt;/h1&gt;
&lt;p&gt;这个小箭头可以让你选择不同的iframe的执行环境，可以切换到你的iframe环境里。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208135509_koFmKH_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-ie&#34;&gt;2. IE&lt;/h1&gt;
&lt;p&gt;如图所示是ie11的dev tool点击下来箭头，也可以选择不同的iframe执行环境。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208135527_niIzO1_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-其他浏览器&#34;&gt;3. 其他浏览器&lt;/h1&gt;
&lt;p&gt;其他浏览器可以自行摸索一下。。。（G_H）&lt;/p&gt;</description>
    </item>
    <item>
      <title>Audio 如果你愿意一层一层剥开我的心</title>
      <link>https://wdd.js.org/posts/2018/02/audio-heart-detail/</link>
      <pubDate>Thu, 08 Feb 2018 09:44:01 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/audio-heart-detail/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;我觉得DOM就好像是元素周期表里的元素，JS就好像是实验器材，通过各种化学反应，产生各种魔术。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208094439_zGRL80_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-audio&#34;&gt;1. Audio&lt;/h1&gt;
&lt;p&gt;通过打开谷歌浏览器的dev tools -&amp;gt; Settings -&amp;gt; Elements -&amp;gt; Show user agent shadow DOM, 你可以看到其实Audio标签也是由常用的 input标签和div等标签合成的。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208094451_tBBQUM_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-基本用法&#34;&gt;2. 基本用法&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1 &amp;lt;audio src=&amp;#34;http://65.ierge.cn/12/186/372266.mp3&amp;#34;&amp;gt;
Your browser does not support the audio element.
&amp;lt;/audio&amp;gt;

&amp;lt;br&amp;gt;

2 &amp;lt;audio src=&amp;#34;http://65.ierge.cn/12/186/372266.mp3&amp;#34; controls=&amp;#34;controls&amp;#34;&amp;gt;
Your browser does not support the audio element.
&amp;lt;/audio&amp;gt;

&amp;lt;br&amp;gt;

// controlsList属性目前只支持 chrome 58+
3 &amp;lt;audio src=&amp;#34;http://65.ierge.cn/12/186/372266.mp3&amp;#34; controls=&amp;#34;controls&amp;#34; controlsList=&amp;#34;nodownload&amp;#34;&amp;gt; 
Your browser does not support the audio element.
&amp;lt;/audio&amp;gt;

&amp;lt;br&amp;gt;

4 &amp;lt;audio controls=&amp;#34;controls&amp;#34;&amp;gt;
&amp;lt;source src=&amp;#34;http://65.ierge.cn/12/186/372266.mp3&amp;#34; type=&amp;#39;audio/mp3&amp;#39; /&amp;gt;
&amp;lt;/audio&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你可以看出他们在Chrome里表现的差异&lt;/p&gt;</description>
    </item>
    <item>
      <title>可能被遗漏的https与http的知识点</title>
      <link>https://wdd.js.org/posts/2018/02/you-dont-know-https-and-http/</link>
      <pubDate>Thu, 08 Feb 2018 09:10:59 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/you-dont-know-https-and-http/</guid>
      <description>&lt;h1 id=&#34;1-https域向http域发送请求会被浏览器直接拒绝http向https则不会&#34;&gt;1. HTTPS域向HTTP域发送请求会被浏览器直接拒绝，HTTP向HTTPS则不会&lt;/h1&gt;
&lt;p&gt;例如在github pages页面，这是一个https页面，如果在这个页面向http发送请求，那么会直接被浏览器拒绝，并在控制台输出下面的报错信息。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jquery-1.11.3.min.js:5 Mixed Content: The page at &amp;#39;https://wangduanduan.github.io/ddddddd/&amp;#39; was loaded over HTTPS, but requested an insecure XMLHttpRequest endpoint &amp;#39;http://cccccc/log/conf?token=welljoint&amp;#39;. This request has been blocked; the content must be served over HTTPS.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你在做第三方集成的系统，如果他们是在浏览器中直接调用你提供的接口，&lt;code&gt;那么最好你使用https协议，这样无论对方是https还是http都可以访问&lt;/code&gt;。（相信我，这个很重要，我曾经经历过上线后遇到这个问题，然后连夜申请证书，把http升级到https的痛苦经历）&lt;/p&gt;
&lt;h1 id=&#34;2-https的默认端口是443而不是443&#34;&gt;2. HTTPS的默认端口是443，而不是443&lt;/h1&gt;
&lt;p&gt;如果443端口已经被其他服务占用了，那么使用其他任何没有被占用的端口都可以用作HTTPS服务，只不过在请求的时候需要加上端口号罢了。&lt;/p&gt;
&lt;h1 id=&#34;3-如何快速隐藏一个dom元素&#34;&gt;3. 如何快速隐藏一个DOM元素&lt;/h1&gt;
&lt;p&gt;选中一个元素，然后按&lt;code&gt;h&lt;/code&gt;,这时候就会在选中的DOM元素上加上&lt;code&gt;__web-inspector-hide-shortcut__&lt;/code&gt;类，这个类会让元素隐藏。谷歌和火狐上都可以，IE上没有试过行不行。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180208091217_HDF1vL_Screenshot.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>直接在Chrome DevTools调试Node.js</title>
      <link>https://wdd.js.org/posts/2018/02/debug-nodejs-in-chrome-devtool/</link>
      <pubDate>Wed, 07 Feb 2018 14:15:43 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/debug-nodejs-in-chrome-devtool/</guid>
      <description>&lt;p&gt;英文好的，直接看原文&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.hospodarets.com/nodejs-debugging-in-chrome-devtools&#34;&gt;https://blog.hospodarets.com/nodejs-debugging-in-chrome-devtools&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;1-要求&#34;&gt;1. 要求&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Node.js 6.3+&lt;/li&gt;
&lt;li&gt;Chrome 55+&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-操作步骤&#34;&gt;2. 操作步骤&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;1 打开连接 &lt;code&gt;chrome://flags/#enable-devtools-experiments&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;2 开启&lt;code&gt;开发者工具实验性功能&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;3 重启浏览器&lt;/li&gt;
&lt;li&gt;4 打开 DevTools Setting -&amp;gt; Experiments tab&lt;/li&gt;
&lt;li&gt;5 按6次shift后，隐藏的功能会出现，勾选&amp;quot;Node debugging&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180207141627_9HT0nS_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180207141636_hIfIyG_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-运行程序&#34;&gt;3. 运行程序&lt;/h1&gt;
&lt;p&gt;必须要有 &lt;code&gt;--inspect&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; node --inspect www
Debugger listening on port 9229.
Warning: This is an experimental feature and could change at any time.
To start debugging, open the following URL in Chrome:
    chrome-devtools://devtools/remote/serve_file/@60cd6e859b9f557d2312f5bf532f6aec5f284980/inspector.html?experiments=true&amp;amp;v8only=true&amp;amp;ws=localhost:9229/78a884f4-8c2e-459e-93f7-e1cbe87cf5cf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将这个地址粘贴到谷歌浏览器：&lt;code&gt;chrome-devtools://devtools/remote/serve_file/@60cd6e859b9f557d2312f5bf532f6aec5f284980/inspector.html?experiments=true&amp;amp;v8only=true&amp;amp;ws=localhost:9229/78a884f4-8c2e-459e-93f7-e1cbe87cf5cf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;程序后端输出的日志也回输出到谷歌浏览器的console里面，同时也可以在Sources里进行断点调试了。
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180207141649_ArMyV7_Screenshot.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>【译】13简单的优秀编码规则（从我15年的经验）</title>
      <link>https://wdd.js.org/posts/2018/02/few-simple-rules-for-good-coding-my-15-years-experience/</link>
      <pubDate>Wed, 07 Feb 2018 14:03:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/few-simple-rules-for-good-coding-my-15-years-experience/</guid>
      <description>&lt;p&gt;原文地址：https://hackernoon.com/few-simple-rules-for-good-coding-my-15-years-experience-96cb29d4acd9#.ddzpjb80c&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180207140343_0UaL3X_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;嗨，我的工作作为一个程序员超过15年，并使用许多不同的语言，范例，框架和其他狗屎。我想和大家分享我写好代码的规则。&lt;/p&gt;
&lt;h1 id=&#34;1-优化vs可读性-去他妈的优化&#34;&gt;1. 优化VS可读性 去他妈的优化&lt;/h1&gt;
&lt;p&gt;始终编​​写易于阅读且对开发人员可理解的代码。因为在硬可读代码上花费的时间和资源将远远高于从优化中获得的。
如果你需要进行优化，那么使它像DI的独立模块，具有100％的测试覆盖率，并且不会被触及至少一年。&lt;/p&gt;
&lt;h1 id=&#34;2-架构第一&#34;&gt;2. 架构第一&lt;/h1&gt;
&lt;p&gt;我看到很多人说“我们需要快速做事，我们没有时间做架构”。其中约99％的人因为这样的想法而遇到了大问题。
编写代码而不考虑其架构是没有用的，就像没有实现它们的计划一样，梦想你的愿望。
在编写代码的第一行之前，你应该明白它将要做什么，它将如何使用，模块，服务如何相互工作，它将有什么结构，如何进行测试和调试，以及如何更新。&lt;/p&gt;
&lt;h1 id=&#34;3-测试覆盖率&#34;&gt;3. 测试覆盖率&lt;/h1&gt;
&lt;p&gt;测试是好事，但他们并不总是负担得起，对项目有意义。&lt;/p&gt;
&lt;p&gt;当你需要测试：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当你编写模块时，微服务将不会被触及至少一个月。&lt;/li&gt;
&lt;li&gt;当你编写开源代码。&lt;/li&gt;
&lt;li&gt;当你编写涉及金融渠道的核心代码或代码。&lt;/li&gt;
&lt;li&gt;当您有代码更新的同时更新测试的资源。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当你不需要测试时：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当你是一个创业。&lt;/li&gt;
&lt;li&gt;当你有小团队和代码更改是快速。&lt;/li&gt;
&lt;li&gt;当你编写的脚本，可以简单地通过他们的输出手动测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;记住，&lt;code&gt;带有严格测试的代码可能比没有测试的代码更有害&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&#34;4-保持简单极度简单&#34;&gt;4. 保持简单，极度简单&lt;/h1&gt;
&lt;p&gt;不要编写复杂的代码。更多更简单，那么更少的错误它可能有和更少的时间来调试它们。代码应该做的只是它需要没有非常多的抽象和其他OOP shit（尤其是涉及java开发人员）+ 20％的东西可能需要在将来以简单的方式更新它。&lt;/p&gt;
&lt;h1 id=&#34;5-注释&#34;&gt;5. 注释&lt;/h1&gt;
&lt;p&gt;出现注释说明你的代码不够好。好的代码应该是可以理解的，没有一行注释。但是如何为新开发人员节省时间？ - 编写简单的内联文档描述什么和如何方法工作。这将节省很多时间来理解，甚至更多 - 它将给人们更多的机会来提出更好的实施这种方法。并且它将是全球代码文档的良好开端。&lt;/p&gt;
&lt;h1 id=&#34;6-硬耦合vs较小耦合&#34;&gt;6. 硬耦合VS较小耦合&lt;/h1&gt;
&lt;p&gt;始终尝试使用微服务架构。单片软件可以比微服务软件运行得更快，但只能在一个服务器的上下文中运行。
微服务使您可以不仅在许多服务器上，而且有时甚至在一台机器上（我的意思是过程分发）高效地分发您的软件。&lt;/p&gt;
&lt;h1 id=&#34;7-代码审查&#34;&gt;7. 代码审查&lt;/h1&gt;
&lt;p&gt;代码审查可以是好的，也以是坏的。
您可以组织代码审查，只有当您有开发人员了解95％的代码，谁可以监控所有更新，而不浪费很多时间。在其他情况下，这将是只是耗时，每个人都会讨厌这个。&lt;/p&gt;
&lt;p&gt;在这部分有很多问题，所以更深入地描述这一点。&lt;/p&gt;
&lt;p&gt;许多人认为代码审查是一个很好的方式教新手，或者工作在不同部分的代码的队友。但是代码审查的主要目标是保持代码质量，而不是教学。让我们想象你的团队制作代码用于控制核反应堆或太空火箭发动机的冷却系统。你在非常硬的逻辑中犯了巨大的错误，然后你给这个代码审查新的家伙。你怎么认为会发生意外的风险？ - 我的练习率超过70％。&lt;/p&gt;
&lt;p&gt;良好的团队是每个人都有自己的角色，负责确切的工作。如果有人想要理解另一段代码，那么他去一个负责任去问他。你不可能知道一切，更好的优秀的理解小块代码而不是理解所有。&lt;/p&gt;
&lt;h1 id=&#34;8-重构没啥用&#34;&gt;8. 重构没啥用&lt;/h1&gt;
&lt;p&gt;在我的职业生涯中，我听到很多次“不要担心，我们以后会重构它”。在未来，这会导致大的技术债务或从头开始删除所有的代码和写作。&lt;/p&gt;
&lt;p&gt;所以，不要得到一个债务，除非你有钱从头开发你的软件几次。&lt;/p&gt;
&lt;h1 id=&#34;9-当你累了或在一个坏的心情不要写代码&#34;&gt;9. 当你累了或在一个坏的心情不要写代码。&lt;/h1&gt;
&lt;p&gt;当开发人员厌倦时，他们正在制造2到5倍或者更多的bug。所以工作更多是非常糟糕的做法。这就是为什么越来越多的国家思考6小时工作日，其中一些已经有了。精神工作不同于使用你的二头肌。&lt;/p&gt;
&lt;h1 id=&#34;10-不要一次写全部---使开发迭代&#34;&gt;10. 不要一次写全部 - 使开发迭代&lt;/h1&gt;
&lt;p&gt;在编写代码分析和预测之前，您的客户/客户真正需要什么，然后选择您可以在短期内以高质量开发的MVF（最有价值的功能）。使用这样的迭代来部署质量更新，而不是腰部时间和资源对不合理的愿望和牺牲与质量。&lt;/p&gt;
&lt;h1 id=&#34;11-自动化vs手动&#34;&gt;11. 自动化VS手动&lt;/h1&gt;
&lt;p&gt;自动化是长期的100％成功。所以如果你有资源自动化的东西，现在应该做。你可能认为“只需要5分钟，为什么我应该自动化？但让我计算这个。例如，它是5个开发人员的日常任务。 5分钟* 5天* 21天* 12个月= 6 300分钟= 105小时= 13.125天〜5250 $。
如果你有40 000名员工，这将需要多少费用？&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript 高级技巧</title>
      <link>https://wdd.js.org/posts/2018/02/js-high-skills/</link>
      <pubDate>Wed, 07 Feb 2018 10:14:56 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/js-high-skills/</guid>
      <description>&lt;h2 id=&#34;01-安全类型检测&#34;&gt;0.1. 安全类型检测&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;javascript内置类型检测并不可靠&lt;/li&gt;
&lt;li&gt;safari某些版本（&amp;lt;4）typeof正则表达式返回为function&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建议使用Object.prototype.toString.call()方法检测数据类型&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
    function isArray(value){
        return Object.prototype.toString.call(value) === &amp;#34;[object Array]&amp;#34;;
    }
    
    function isFunction(value){
        return Object.prototype.toString.call(value) === &amp;#34;[object Function]&amp;#34;;
    }
    
    function isRegExp(value){
        return Object.prototype.toString.call(value) === &amp;#34;[object RegExp]&amp;#34;;
    }
    
    function isNativeJSON(){
        return window.JSON &amp;amp;&amp;amp; Object.prototype.toString.call(JSON) === &amp;#34;[object JSON]&amp;#34;;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;对于ie中一COM对象形式实现的任何函数，isFunction都返回false，因为他们并非原生的javascript函数。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在web开发中，能够区分原生与非原生的对象非常重要。只有这样才能确切知道某个对象是否有哪些功能&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以上所有的正确性的前提是：Object.prototype.toString没有被修改过&lt;/p&gt;
&lt;h2 id=&#34;02-作用域安全的构造函数&#34;&gt;0.2. 作用域安全的构造函数&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;function Person(name){
    this.name = name;
}

//使用new来创建一个对象
var one = new Person(&amp;#39;wdd&amp;#39;);

//直接调用构造函数
Person();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由于this是运行时分配的，如果你使用new来操作，this指向的就是one。如果直接调用构造函数，那么this会指向全局对象window,然后你的代码就会覆盖window的原生name。如果有其他地方使用过window.name, 那么你的函数将会埋下一个深藏的bug。&lt;/p&gt;
&lt;p&gt;==那么，如何才能创建一个作用域安全的构造函数？==
方法1&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;function Person(name){
    if(this instanceof Person){
        this.name = name;
    }
    else{
        return new Person(name);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;1-惰性载入函数&#34;&gt;1. 惰性载入函数&lt;/h1&gt;
&lt;p&gt;假设有一个方法X，在A类浏览器里叫A,在b类浏览器里叫B,有些浏览器并没有这个方法,你想实现一个跨浏览器的方法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>突然觉得自己好像没学过JS</title>
      <link>https://wdd.js.org/posts/2018/02/i-realy-dont-know-js/</link>
      <pubDate>Wed, 07 Feb 2018 10:09:42 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/i-realy-dont-know-js/</guid>
      <description>&lt;h2 id=&#34;01-先看题mean的值是什么&#34;&gt;0.1. 先看题：mean的值是什么？&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var scores = [10,11,12];
var total = 0;

for(var score in scores){
  total += score;
}

var mean = total/scores.length;
console.log(mean);
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;02-是11&#34;&gt;0.2. 是11？&lt;/h2&gt;
&lt;p&gt;恭喜你：答错了！&lt;/p&gt;
&lt;h2 id=&#34;03-是1&#34;&gt;0.3. 是1？&lt;/h2&gt;
&lt;p&gt;恭喜你：答错了！&lt;/p&gt;
&lt;h2 id=&#34;04-正确答案-4&#34;&gt;0.4. 正确答案： 4&lt;/h2&gt;
&lt;p&gt;解释： &lt;code&gt;for in 循环循环的值永远是key, key是一个字符串&lt;/code&gt;。所以total的值是：&amp;lsquo;0012&amp;rsquo;。它是一个字符串，字符串&#39;0012&amp;rsquo;/3,0012会被转换成12，然后除以3，结果是4。&lt;/p&gt;
&lt;h2 id=&#34;05-后记&#34;&gt;0.5. 后记&lt;/h2&gt;
&lt;p&gt;这个示例是来自《编写高质量JavaScript的68个方法》的第49条：&lt;code&gt;数组迭代要优先使用for循环而不是for in循环&lt;/code&gt;。
既然已经发布，就可能有好事者拿出去当面试题。这个题目很有可能坑一堆人。其中包括我。&lt;/p&gt;
&lt;p&gt;这里涉及到许多js的基础知识.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;for in 循环是循环对象的索引属性，key是一个字符串。&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;数值类型和字符串相加，会自动转换为字符串&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;字符串除以数值类型，会先把字符串转为数值，最终结果为数值&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;正确方法&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var scores = [10,11,12];
var total = 0;

for(var i=0, n=scores.length; i &amp;lt; n; i++){
  total += scores[i];
}

var mean = total/scores.length;
console.log(mean);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样写有几个好处。&lt;/p&gt;</description>
    </item>
    <item>
      <title>发起Ajax请求当页面onunload</title>
      <link>https://wdd.js.org/posts/2018/02/send-ajax-when-page-unload/</link>
      <pubDate>Wed, 07 Feb 2018 09:18:54 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/02/send-ajax-when-page-unload/</guid>
      <description>&lt;h2 id=&#34;01-同步ajax&#34;&gt;0.1. 同步Ajax&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这种需求主要用于当浏览器关闭，或者刷新时，向后端发起Ajax请求。&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;window.onunload = function(){
    $.ajax({url:&amp;#34;http://localhost:8888/test.php?&amp;#34;, async:false});
};
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用&lt;code&gt;async：false&lt;/code&gt;参数使请求同步（默认是异步的）。&lt;/p&gt;
&lt;p&gt;同步请求锁定浏览器，直到完成。 如果请求是异步的，页面只是继续卸载。 它足够快，以至于该请求甚至没有时间触发。服务端很可能收不到请求。&lt;/p&gt;
&lt;h2 id=&#34;02-navigatorsendbeacon&#34;&gt;0.2. navigator.sendBeacon&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;优点&lt;/code&gt;：简洁、异步、非阻塞
&lt;code&gt;缺点&lt;/code&gt;：这是实验性的技术，并非所有浏览器都支持。其中IE和safari不支持该技术。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;window.addEventListener(&amp;#39;unload&amp;#39;, logData, false);

function logData() {
  navigator.sendBeacon(&amp;#34;/log&amp;#34;, analyticsData);
}
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;参考：http://stackoverflow.com/questions/1821625/ajax-request-with-jquery-on-page-unload
参考：https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>git合并上游仓库即同步fork后的仓库</title>
      <link>https://wdd.js.org/posts/2018/01/fork-sync-learn/</link>
      <pubDate>Wed, 31 Jan 2018 17:16:44 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/fork-sync-learn/</guid>
      <description>&lt;h1 id=&#34;1-前提说明&#34;&gt;1. 前提说明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;仓库A: &lt;a href=&#34;http://gitlab.tt.cc:30000/fe/omp.git&#34;&gt;http://gitlab.tt.cc:30000/fe/omp.git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;仓库B: 仓库Bfork自仓库A, 仓库A的地址是：http://gitlab.tt.cc:30000/wangdd/omp.git&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;某一时刻，仓库A更新了。仓库B需要同步上游分支的更新。&lt;/p&gt;
&lt;h1 id=&#34;2-本地操作&#34;&gt;2. 本地操作&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 1 查看远程分支
➜  omp git:(master) git remote -v
origin	http://gitlab.tt.cc:30000/wangdd/omp.git (fetch)
origin	http://gitlab.tt.cc:30000/wangdd/omp.git (push)

// 2 添加一个远程同步的上游仓库
➜  omp git:(master) git remote add upstream http://gitlab.tt.cc:30000/fe/omp.git
➜  omp git:(master) git remote -v
origin	http://gitlab.tt.cc:30000/wangdd/omp.git (fetch)
origin	http://gitlab.tt.cc:30000/wangdd/omp.git (push)
upstream	http://gitlab.tt.cc:30000/fe/omp.git (fetch)
upstream	http://gitlab.tt.cc:30000/fe/omp.git (push)

// 3 拉去上游分支到本地，并且会被存储在一个新分支upstream/master
➜  omp git:(master) git fetch upstream
remote: Counting objects: 4, done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 4 (delta 2), reused 0 (delta 0)
Unpacking objects: 100% (4/4), done.
From http://gitlab.tt.cc:30000/fe/omp
 * [new branch]      master     -&amp;gt; upstream/master

// 4 将upstream/master分支合并到master分支，由于我已经在master分支，此处就不在切换到master分支
➜  omp git:(master) git merge upstream/master
Updating 29c098c..6413803
Fast-forward
 README.md | 1 +
 1 file changed, 1 insertion(+)

// 5 查看一下，此次合并，本地有哪些更新
➜  omp git:(master) git log -p

// 6 然后将更新推送到仓库B
➜  omp git:(master) git push
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-总结&#34;&gt;3. 总结&lt;/h1&gt;
&lt;p&gt;通过上述操作，仓库B就同步了仓库A的代码。整体的逻辑就是将&lt;code&gt;上游分支拉去到本地，然后合并到本地分支上&lt;/code&gt;。就这么简单。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何写好接口文档？</title>
      <link>https://wdd.js.org/posts/2018/01/how-to-write-better-api-docs/</link>
      <pubDate>Mon, 29 Jan 2018 22:01:55 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/how-to-write-better-api-docs/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://p394yuy0c.bkt.clouddn.com/20180128223141_GeUnII_Jietu20180128-223059.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-http携带信息的方式&#34;&gt;1. HTTP携带信息的方式&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;url&lt;/li&gt;
&lt;li&gt;headers&lt;/li&gt;
&lt;li&gt;body: 包括请求体，响应体&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-分离通用信息&#34;&gt;2. 分离通用信息&lt;/h1&gt;
&lt;p&gt;一般来说，headers里的信息都是通用的，可以提前说明，作为默认参数&lt;/p&gt;
&lt;h1 id=&#34;3-路径中的参数表达式&#34;&gt;3. 路径中的参数表达式&lt;/h1&gt;
&lt;p&gt;URL中参数表达式使用&lt;code&gt;{}&lt;/code&gt;的形式，参数包裹在大括号之中&lt;code&gt;{paramName}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/api/user/{userId}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/api/user/{userType}?age={age}&amp;amp;gender={gender}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-数据模型定义&#34;&gt;4. 数据模型定义&lt;/h1&gt;
&lt;p&gt;数据模型定义包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;路径与查询字符串参数模型&lt;/li&gt;
&lt;li&gt;请求体参数模型&lt;/li&gt;
&lt;li&gt;响应体参数模型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据模型的最小数据集：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;名称&lt;/li&gt;
&lt;li&gt;是否必须&lt;/li&gt;
&lt;li&gt;说明&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;“最小数据集”（MDS）是指通过收集最少的数据，较好地掌握一个研究对象所具有的特点或一件事情、一份工作所处的状态，其核心是针对被观察的对象建立起一套精简实用的数据指标。最小数据集的概念起源于美国的医疗领域。最小数据集的产生源于信息交换的需要，就好比上下级质量技术监督部门之间、企业与质量技术监督部门之间、质量技术监督部门与社会公众之间都存在着信息交换的需求。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;一些文档里可能会加入字段的类型，但是我认为这是没必要的。以为HTTP传输的数据往往都需要序列化，大部分数据类型都是字符串。一些特殊的类型，例如枚举类型的字符串，可以在说明里描述。&lt;/p&gt;
&lt;p&gt;另外：&lt;code&gt;数据模型非常建议使用表格来表现&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;举个栗子🌰：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名称&lt;/th&gt;
          &lt;th&gt;是否必须&lt;/th&gt;
          &lt;th&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;userType&lt;/td&gt;
          &lt;td&gt;是&lt;/td&gt;
          &lt;td&gt;用户类型。&lt;code&gt;commom&lt;/code&gt;表示普通用户，&lt;code&gt;vip&lt;/code&gt;表示vip用户&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;age&lt;/td&gt;
          &lt;td&gt;否&lt;/td&gt;
          &lt;td&gt;用户年龄&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;gender&lt;/td&gt;
          &lt;td&gt;否&lt;/td&gt;
          &lt;td&gt;用户性别。&lt;code&gt;1&lt;/code&gt;表示男，&lt;code&gt;0&lt;/code&gt;表示女&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;5-请求示例&#34;&gt;5. 请求示例&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// general 
POST http://www.testapi.com/api/user

// request payload
{
	&amp;#34;name&amp;#34;: &amp;#34;qianxun&amp;#34;,
	&amp;#34;age&amp;#34;: 14,
	&amp;#34;like&amp;#34;: [&amp;#34;music&amp;#34;, &amp;#34;reading&amp;#34;],
	&amp;#34;userType&amp;#34;: &amp;#34;vip&amp;#34;
}

// response
{
	&amp;#34;id&amp;#34;: &amp;#34;asdkfjalsdkf&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;6-异常处理&#34;&gt;6. 异常处理&lt;/h1&gt;
&lt;p&gt;异常处理最小数据集&lt;/p&gt;</description>
    </item>
    <item>
      <title>win7 ie11 开发者工具打开后一片空白</title>
      <link>https://wdd.js.org/posts/2018/01/ie11-without-devtool/</link>
      <pubDate>Mon, 29 Jan 2018 21:43:12 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/ie11-without-devtool/</guid>
      <description>&lt;p&gt;解决方法安装Windows7补丁：KB3008923；
下载地址：
&lt;a href=&#34;http://www.microsoft.com/en-us/download/details.aspx?id=45134&#34;&gt;http://www.microsoft.com/en-us/download/details.aspx?id=45134&lt;/a&gt; （32位）
&lt;a href=&#34;http://www.microsoft.com/zh-CN/download/details.aspx?id=45154&#34;&gt;http://www.microsoft.com/zh-CN/download/details.aspx?id=45154&lt;/a&gt; （64位）&lt;/p&gt;</description>
    </item>
    <item>
      <title>CSTA 呼叫模型简介</title>
      <link>https://wdd.js.org/posts/2018/01/csta-call-model-overview/</link>
      <pubDate>Mon, 29 Jan 2018 21:35:24 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/csta-call-model-overview/</guid>
      <description>&lt;h1 id=&#34;1-内容概要&#34;&gt;1. 内容概要&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CSTA协议与标准概述&lt;/li&gt;
&lt;li&gt;CSTA OpenScape 语音架构概述&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-csta协议标准&#34;&gt;2. CSTA协议标准&lt;/h1&gt;
&lt;h2 id=&#34;21-什么是csta-&#34;&gt;2.1. 什么是CSTA ?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CSTA：电脑支持通讯程序(Computer Supported TelecommunicationsApplications)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基本的呼叫模型在1992建立，后来随着行业发展，呼叫模型也被加强和扩展，例如新的协议等等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CSTA是一个应用层接口，用来监控呼叫，设备和网络&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CSTA创建了一个通讯程序的抽象层:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSTA并不依赖任何底层的信令协议
&lt;ul&gt;
&lt;li&gt;E.g.H.323,SIP,Analog,T1,ISDN,etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSTA并不要求用户必须使用某些设备
&lt;ul&gt;
&lt;li&gt;E.g.intelligentendpoints,low-function/stimulusdevices,SIPSignalingmodels-3PCC vs. Peer/Peer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;适用不同的操作模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第三方呼叫控制&lt;/li&gt;
&lt;li&gt;一方呼叫控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CSTA的设计目标是为了提高各种CSTA实现之间的移植性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;规范化呼叫模型和行为&lt;/li&gt;
&lt;li&gt;完成服务、事件定义&lt;/li&gt;
&lt;li&gt;规范化标准&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-csta-标准的进化史&#34;&gt;3. CSTA 标准的进化史&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;阶段1 (发布于 June ’92)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;40 特性, 66 页 (服务定义)&lt;/li&gt;
&lt;li&gt;专注于呼叫控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;阶段2 (发布于 Dec. ’94)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;77 特性, 145 页 (服务定义)&lt;/li&gt;
&lt;li&gt;I/O &amp;amp; 语音单元服务, 更多呼叫控制服务&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;阶段3 - CSTA Phase II Features &amp;amp; versit CTI Technology&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发布于 Dec. ‘98&lt;/li&gt;
&lt;li&gt;136 特性, 650 页 (服务定义)&lt;/li&gt;
&lt;li&gt;作为ISO 标准发布于 July 2000&lt;/li&gt;
&lt;li&gt;发布 CSTA XML (ECMA-323) June 2004&lt;/li&gt;
&lt;li&gt;发布 “Using CSTA with Voice Browsers” (TR/85) Dec. 02&lt;/li&gt;
&lt;li&gt;发布 CSTA WSDL (ECMA-348) June 2004&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;June 2004: 发布对象模型 TR/88&lt;/p&gt;</description>
    </item>
    <item>
      <title>组织在召唤：如何免费获取一个js.org的二级域名</title>
      <link>https://wdd.js.org/posts/2018/01/how-to-get-jsorg-sub-domain/</link>
      <pubDate>Mon, 29 Jan 2018 18:08:03 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/how-to-get-jsorg-sub-domain/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;之前我是使用wangduanduan.github.io作为我的博客地址，后来觉得麻烦，有把博客关了。最近有想去折腾折腾。
先看效果：&lt;a href=&#34;https://wdd.js.org&#34;&gt;wdd.js.org&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;如果你不了解js.org可以看看我的这篇文章:&lt;a href=&#34;https://segmentfault.com/a/1190000008342301&#34;&gt;一个值得所有前端开发者关注的网站js.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129182103_Avcxhn_Jietu20180129-182047.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-前提&#34;&gt;1. 前提&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;已经有了github pages的一个博客，并且博客中有内容，没有内容会审核不通过的。我第一次申请域名，就是因为内容太少而审核不通过。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-想好自己要什么域名&#34;&gt;2. 想好自己要什么域名？&lt;/h1&gt;
&lt;p&gt;比如你想要一个：wdd.js.org的域名，你先在浏览器里访问这个地址，看看有没有人用过，如果已经有人用过，那么你就只能想点其他的域名了。&lt;/p&gt;
&lt;h1 id=&#34;3-fork-jsorg的项目添加自己的域名&#34;&gt;3. fork js.org的项目，添加自己的域名&lt;/h1&gt;
&lt;p&gt;1 fork &lt;a href=&#34;https://github.com/js-org/dns.js.org&#34;&gt;https://github.com/js-org/dns.js.org&lt;/a&gt;
2 修改你fork后的仓库中的&lt;code&gt;cnames_active.js&lt;/code&gt;文件，加上自己的一条域名，最好要按照字母顺序&lt;/p&gt;
&lt;p&gt;如下图所示，我在第1100行加入。注意，不要在该行后加任何注释。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;wdd&amp;#34;: &amp;#34;wangduanduan.github.io&amp;#34;,
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129182555_tx71OV_Jietu20180129-182542.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3 commit&lt;/p&gt;
&lt;h1 id=&#34;4-加入cname文件&#34;&gt;4. 加入CNAME文件&lt;/h1&gt;
&lt;p&gt;我是用hexo和next主题作为博客的模板。其中我在&lt;code&gt;gh-pages&lt;/code&gt;分支写博客，然后部署到&lt;code&gt;master&lt;/code&gt;分支。&lt;/p&gt;
&lt;p&gt;我在我的&lt;code&gt;gh-pages&lt;/code&gt;分支的&lt;code&gt;source&lt;/code&gt;目录下加入CNAME文件, 内容只有一行&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wdd.js.org
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129183216_aPl2ld_Jietu20180129-183209.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;将博客再次部署好，&lt;code&gt;如果CNAME生效的话，你已经无法从原来的地址访问：wangduanduan.github.io， 这个博客了。&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-向jsorg项目发起pull-request&#34;&gt;5. 向js.org项目发起pull-request&lt;/h1&gt;
&lt;p&gt;找到你fork后的项目，点击 &lt;code&gt;new pull request&lt;/code&gt;, 向原来的项目发起请求。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129190011_xvkHec_Jietu20180129-185938.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后你可以在&lt;code&gt;js-org/dns.js.org&lt;/code&gt;项目的pull requests看到你的请求，当这个请求被合并时，你就拥有了js.org的二级域名。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129190308_0cZZwM_Jietu20180129-190255.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129190454_9BnL7F_Jietu20180129-190449.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>不常用却很有妙用的事件及方法</title>
      <link>https://wdd.js.org/posts/2018/01/browser-events/</link>
      <pubDate>Mon, 29 Jan 2018 14:15:25 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/browser-events/</guid>
      <description>&lt;h1 id=&#34;1-visibilitychange事件httpsdevelopermozillaorgzh-cndocswebeventsvisibilitychange&#34;&gt;1. &lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/Events/visibilitychange&#34;&gt;visibilitychange事件&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;触发条件：&lt;code&gt;浏览器标签页被隐藏或显示的时候会触发visibilitychange事件.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用场景：&lt;code&gt;当标签页显示或者隐藏时，触发一些业务逻辑&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;document.addEventListener(&amp;#34;visibilitychange&amp;#34;, function() {
  console.log( document.visibilityState );
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2-storage事件httpsdevelopermozillaorgen-usdocswebeventsstorage&#34;&gt;2. &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Events/storage&#34;&gt;storage事件&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;触发条件：&lt;code&gt;使用localStorage or sessionStorage存储或者修改某个本地存储时&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用场景：&lt;code&gt;标签页间通信&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// AB页面同源
// 在A 页面
window.addEventListener(&amp;#39;storage&amp;#39;, (e) =&amp;gt; {console.log(e)})

// 在B 页面，向120打个电话
localStorage.setItem(&amp;#39;makeCall&amp;#39;,&amp;#39;120&amp;#39;)

// 然后可以在A页面间有输出, 可以看出A页面 收到了B页面的通知
...key: &amp;#34;makeCall&amp;#34;, oldValue: &amp;#34;119&amp;#34;, newValue: &amp;#34;120&amp;#34;, ...
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-beforeunload事件httpsdevelopermozillaorgen-usdocswebeventsbeforeunload&#34;&gt;3. &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&#34;&gt;beforeunload事件&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;触发条件：&lt;code&gt;当页面的资源将要卸载(及刷新或者关闭标签页前). 当页面依然可见，并且该事件可以被取消只时&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用场景：&lt;code&gt;关闭或者刷新页面时弹窗确认&lt;/code&gt;，&lt;code&gt;关闭页面时向后端发送报告等&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;window.addEventListener(&amp;#34;beforeunload&amp;#34;, function (e) {
  var confirmationMessage = &amp;#34;\o/&amp;#34;;

  e.returnValue = confirmationMessage;     // Gecko, Trident, Chrome 34+
  return confirmationMessage;              // Gecko, WebKit, Chrome &amp;lt;34
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;4-navigatorsendbeaconhttpsdevelopermozillaorgzh-cndocswebapinavigatorsendbeacon&#34;&gt;4. &lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/API/Navigator/sendBeacon&#34;&gt;navigator.sendBeacon&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;这个方法主要用于满足 统计和诊断代码 的需要，这些代码通常尝试在卸载（unload）文档之前向web服务器发送数据。过早的发送数据可能导致错过收集数据的机会。然而， 对于开发者来说保证在文档卸载期间发送数据一直是一个困难。因为用户代理通常会忽略在卸载事件处理器中产生的异步 XMLHttpRequest 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>油猴子脚本 - 我的地盘我做主</title>
      <link>https://wdd.js.org/posts/2018/01/tampermonkey/</link>
      <pubDate>Mon, 29 Jan 2018 13:58:37 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/tampermonkey/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;当你用浏览器访问某个网页时，你可曾想过，你看到的这个网页，实际上是属于你自己的。&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;打个比喻：&lt;code&gt;访问某个网站就好像是网购了一筐鸡蛋，鸡蛋虽然是养鸡场生产的，但是这个蛋我怎么吃，你养鸡场管不着&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;当然了，对于很多人来说，鸡蛋没有别的吃法，鸡蛋只能煮着吃。&lt;/p&gt;
&lt;p&gt;你可以看如下的页面：当你在某搜索引擎上搜索&lt;code&gt;前端开发&lt;/code&gt;时&lt;/p&gt;
&lt;p&gt;大多数人看到的页面是这样的, &lt;code&gt;满屏的广告，满屏的推广，满屏的排名，满屏的中间地址跳转，满屏的流量劫持, 还有莆田系&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129135930_Btkbuq_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是有些人的页面却是这样的：&lt;code&gt;清晰，自然，链接直达，清水出芙蓉，天然去雕饰&lt;/code&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129135945_rkPKMY_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;这就是&lt;code&gt;油猴子脚本干的事情&lt;/code&gt;， 当然，它能干的事情，远不止如此。&lt;code&gt;它是齐天大圣孙悟空，有七十二变。&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-什么是油猴子脚本&#34;&gt;1. 什么是油猴子脚本？&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Greasemonkey，简称GM，中文俗称为“油猴”，是Firefox的一个附加组件。它让用户安装一些脚本使大部分HTML为主的网页于用户端直接改变得更方便易用。随着Greasemonkey脚本常驻于浏览器，每次随着目的网页打开而自动做修改，使得运行脚本的用户印象深刻地享受其固定便利性。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Greasemonkey可替网页加入些新功能（例如在亚马逊书店嵌入商品比价功能）、修正网页错误、组合来自不同网页的数据、或者数繁不及备载的其他功能。写的好的Greasemonkey脚本甚至可让其输出与被修改的页面集成得天衣无缝，像是原本网页里的一部分。 来自&lt;a href=&#34;https://zh.wikipedia.org/wiki/Greasemonkey&#34;&gt;维基百科&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;2-如何安装油猴子插件&#34;&gt;2. 如何安装油猴子插件？&lt;/h1&gt;
&lt;p&gt;在google商店搜索&lt;code&gt;Tampermonkey&lt;/code&gt;, 安装量最高的就是它。&lt;/p&gt;
&lt;h1 id=&#34;3-如何写油猴子脚本&#34;&gt;3. 如何写油猴子脚本？&lt;/h1&gt;
&lt;p&gt;油猴子脚本有个新建脚本页面，在此页面可以创建脚本。具体教程可以参考。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jixunmoe.github.io/gmDevBook/#/doc/intro/about&#34;&gt;中文 GreaseMonkey 用户脚本开发手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.leanote.com/post/mynote/%E6%B2%B9%E7%8C%B4%E5%AD%90&#34;&gt;GreaseMonkey（油猴子）脚本开发&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://e.sebug.net/paper/books/greasemonkey/&#34;&gt;深入浅出 Greasemonkey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://commons.oreilly.com/wiki/index.php/Greasemonkey_Hacks/Getting_Started&#34;&gt;Greasemonkey Hacks/Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129140004_amXldp_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-如何使用他人的脚本&#34;&gt;4. 如何使用他人的脚本？&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://greasyfork.org/zh-CN&#34;&gt;greasyfork网站&lt;/a&gt;提供很多脚本，它仿佛是代码界的github, 可以在该网站搜到很多有意思的脚本。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129140017_AapqKj_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-有哪些好用的脚本&#34;&gt;5. 有哪些好用的脚本？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/question/22210090&#34;&gt;有哪些超神的油猴脚本?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;或者你可以在greasyfork网站查看一些下载量排行&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>追本溯源：substr与substring历史漫话</title>
      <link>https://wdd.js.org/posts/2018/01/substr-and-substring-history/</link>
      <pubDate>Mon, 29 Jan 2018 13:46:31 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/substr-and-substring-history/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;引子： 很多时候，当我要字符串截取时，我会想到substr和substring的方法，但是具体要怎么传参数时，我总是记不住。哪个应该传个字符串长度，哪个又应该传个开始和结尾的下标，如果我不去查查这两个函数，我始终不敢去使用它们。所以我总是觉得，这个两个方法名起的真是蹩脚。然而事实是这样的吗？&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;看来是时候扒一扒这两个方法的历史了。&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-基因追本溯源&#34;&gt;1. 基因追本溯源&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129134826_f2U0eJ_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;在编程语言的历史长河中，曾经出现过很多编程语言。然而大浪淘沙，铅华洗尽之后，很多早已折戟沉沙，有些却依旧光彩夺目。那么stubstr与substring的DNA究竟来自何处？&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129134917_jJiHDy_Screenshot.jpeg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1950与1960年代&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1954 - FORTRAN&lt;/li&gt;
&lt;li&gt;1958 - LISP&lt;/li&gt;
&lt;li&gt;1959 - COBOL&lt;/li&gt;
&lt;li&gt;1964 - BASIC&lt;/li&gt;
&lt;li&gt;1970 - Pascal&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;1967-1978：确立了基础范式&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1972 - &lt;code&gt;C语言&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;1975 - Scheme&lt;/li&gt;
&lt;li&gt;1978 - SQL (起先只是一种查询语言，扩充之后也具备了程序结构)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;1980年代：增强、模块、性能&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1983 - &lt;code&gt;C++ (就像有类别的C)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;1988 - Tcl&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;1990年代：互联网时代&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1991 - &lt;code&gt;Python&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;1991 - Visual Basic&lt;/li&gt;
&lt;li&gt;1993 - &lt;code&gt;Ruby&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;1995 - &lt;code&gt;Java&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;1995 - Delphi (Object Pascal)&lt;/li&gt;
&lt;li&gt;1995 - &lt;code&gt;JavaScript&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;1995 - &lt;code&gt;PHP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;2009 - &lt;code&gt;Go&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;2014 - &lt;code&gt;Swift (编程语言)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;11-在c中首次出现substr&#34;&gt;1.1. 在C++中首次出现substr()&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://wdd.js.org/img/images/20180129135004_rX3T5Y_Screenshot.jpeg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>熟练使用使用jQuery Promise (Deferred)</title>
      <link>https://wdd.js.org/posts/2018/01/jquery-deferred/</link>
      <pubDate>Mon, 29 Jan 2018 13:43:23 +0800</pubDate>
      <guid>https://wdd.js.org/posts/2018/01/jquery-deferred/</guid>
      <description>&lt;h1 id=&#34;1-情景再现&#34;&gt;1. 情景再现&lt;/h1&gt;
&lt;p&gt;以前用nodejs写后端程序时，遇到&lt;code&gt;Promise&lt;/code&gt;这个概念，这个东西好呀！不用谢一层一层回调，直接用类似于jQuery的连缀方式。后来遇到&lt;code&gt;bluebird&lt;/code&gt;这个库，它就是Promise库中很有名的。我希望可以把Promise用在前端的&lt;code&gt;ajax&lt;/code&gt;请求上，但是我不想又引入bluebird。后来发现，jquery本身就具有类似于Promise的东西。于是我就jquery的Promise写一些异步请求。&lt;/p&gt;
&lt;h1 id=&#34;2-不堪回首&#34;&gt;2. 不堪回首&lt;/h1&gt;
&lt;p&gt;看看一看我以前写异步请求的方式&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 函数定义
function sendRequest(req,successCallback,errorCallback){
    $.ajax({
        ...
        ...
        success:function(res){
            successCallback(res);
        },
        error:function(res){
            errorCallback(res);
        }
    });
}

// 函数调用,这个函数的匿名函数写的时候很容易出错，而且有时候难以理解
sendRequest(req,function(res){
    //请求成功
    ...
},function(res){
    //请求失败
    ...
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;3-面朝大海&#34;&gt;3. 面朝大海&lt;/h1&gt;
&lt;p&gt;下面是我希望的异步调用方式&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sendRequest(req)
.done(function(res){
    //请求成功
    ...
})
.fail(function(req){
    //请求失败
    ...
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;4-废话少说放码过来&#34;&gt;4. 废话少说，放‘码’过来&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;talk is cheap, show me the code&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 最底层的发送异步请求，做成Promise的形式

App.addMethod(&amp;#39;_sendRequest&amp;#39;,function(path,method,payload){
    var dfd = $.Deferred();
    $.ajax({
        url:path,
        type:method || &amp;#34;get&amp;#34;,
        headers:{
            sessionId:session.id || &amp;#39;&amp;#39;
        },
        data:JSON.stringify(payload),
        dataType:&amp;#34;json&amp;#34;,
        contentType : &amp;#39;application/json; charset=UTF-8&amp;#39;,
        success:function(data){
            dfd.resolve(data);
        },
        error:function(data){
            dfd.reject(data);
        }
    });
    return dfd.promise();
});

//根据callId查询录音文件，不仅仅是异步请求可以做成Promise形式，任何函数都可以做成Promise形式
App.addMethod(&amp;#39;_getRecordingsByCallId&amp;#39;,function(callId){
    var dfd = $.Deferred(),
        path = &amp;#39;/api/tenantcalls/&amp;#39;+callId+&amp;#39;/recordings&amp;#39;;

    App._sendRequest(path)
    .done(function(res){dfd.resolve(res);})
    .fail(function(res){dfd.reject(res);});

    return dfd.promise();
});

// 获取录音
App.addMethod(&amp;#39;getCallDetailRecordings&amp;#39;,function(callId){
    App._getRecordingsByCallId(callId)
    .done(function(res){
        // 获取结果后渲染数据
        App.renderRecording(res);
    })
    .fail(function(res){
        App.error(res);
    });
});
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;5-注意事项&#34;&gt;5. 注意事项&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;jQuery的Promise主要是用了jQquery的$.Derferred()方法，一些老版本的jquery并不支持此方法。&lt;/li&gt;
&lt;li&gt;jQuery版本必须大于等于1.5，推荐使用1.11.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6-参考文献&#34;&gt;6. 参考文献&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://api.jquery.com/&#34;&gt;jquery官方api文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/JQuery&#34;&gt;jquery维基百科文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;7-最后&#34;&gt;7. 最后&lt;/h1&gt;
&lt;p&gt;以上文章仅供参考，不包完全正确。欢迎评论，3q。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
